module Hanger (module Hanger) where

import Control.Comonad.Trans.Cofree (CofreeT (..))
import Data.Functor.Identity (Identity (..))

import Data.InternedText

import Kore.Internal.InternalInt
import Kore.Internal.Pattern
import Kore.Internal.Predicate
import Kore.Internal.Substitution
import Kore.Internal.Symbol (ApplicationSorts (..), Symbol (..))
import Kore.Internal.TermLike qualified as T
import Kore.Internal.TermLike.TermLike hiding (AndF, BottomF, ExistsF, FloorF, ForallF, IffF, ImpliesF, InF, NotF, OrF, TopF)

import Kore.Attribute.Pattern.ConstructorLike
import Kore.Attribute.Pattern.Created
import Kore.Attribute.Pattern.Defined
import Kore.Attribute.Pattern.FreeVariables qualified as FreeVars
import Kore.Attribute.Pattern.Function
import Kore.Attribute.Pattern.Functional
import Kore.Attribute.Pattern.Simplified
import Kore.Attribute.PredicatePattern (FreeVariableInfo (..), PredicatePattern (..))
import Kore.Attribute.Smthook (SExpr (Atom))
import Kore.Attribute.Source
import Kore.Attribute.SourceLocation
import Kore.Attribute.Symbol hiding (Function, Functional, Symbol, isFunction, isFunctional)
import Kore.Attribute.Symbol qualified as A

import Kore.Sort
import Kore.Syntax hiding (AndF, BottomF, ExistsF, FloorF, ForallF, IffF, ImpliesF, InF, MuF, NotF, NuF, OrF, Pattern, TopF, VariableF)

import Data.Map (fromList)
import Data.Text (Text)
import Prelude.Kore

hanger
    , original
    , noTerm
    , noPredicate
    , shrunkPredicate ::
        Pattern VariableName
hanger = shrunkPredicate

-- | passes (as expected)
noPredicate = original{predicate = makeTruePredicate}

-- | hangs
noTerm = original{term = topTerm "subOthersort"}

topTerm :: Text -> TermLike VariableName
topTerm sortName =
    T.mkTop $
        SortActualSort
            ( SortActual
                { sortActualName = InternedId{getInternedId = internText sortName, internedIdLocation = AstLocationTest}
                , sortActualSorts = []
                }
            )

-- | extracted from the original, taking parts of the top level
shrunkPredicate =
    noTerm{predicate = Predicate{getPredicate = part21}}

-- no auto-formatting below this point (disturbs the diff while
-- disassembling the terms)
{- ORMOLU_DISABLE -}

{- | parts of original predicate

Structure:
  Implies
   - part1
   - part2 =
     Iff
      - part21 =
        In
         - part211 =
           Exists
            Or
             - part2111 =  <-- hangs
               Not
                If
                 - part21111 <-- needed to hang
                 - part21112 <-- also needed to hang
             - part2112
         - part212
      - part22

-}
part1 -- Implies1
    , part2 -- Implies2
    , part21 -- Iff1 = In(part211, part212)
    , part22 -- Iff2
      :: Cofree (PredicateF VariableName) (PredicatePattern VariableName)

part211
    , part2111
    , part21111
    , part21112
    , part2112
    , part212
      :: TermLike VariableName

part1 = -- first part of "implies", passes
                       CofreeT
                        ( Identity
                           ( PredicatePattern
                              { freeVariables = FreeVars.unsafe []
                              , simplified = NotSimplified {- WAS: Simplified (SimplifiedData {sType = Partly, condition = Any})-}
                              }
                              :< ForallF
                               ( Forall
                                  { forallSort = ()
                                  , forallVariable =
                                     Variable
                                      { variableName =
                                         ElementVariableName
                                          { unElementVariableName =
                                             VariableName
                                              { base = InternedId{getInternedId = internText "N2w", internedIdLocation = AstLocationTest}
                                              , counter = Nothing
                                              }
                                          }
                                      , variableSort =
                                         SortActualSort
                                          ( SortActual
                                             { sortActualName = InternedId{getInternedId = internText "otherSort", internedIdLocation = AstLocationTest}
                                             , sortActualSorts = []
                                             }
                                          )
                                      }
                                  , forallChild =
                                     CofreeT
                                      ( Identity
                                         ( PredicatePattern
                                            { freeVariables = FreeVars.unsafe []
                                            , simplified = NotSimplified {- WAS: Simplified (SimplifiedData {sType = Fully, condition = Any})-}
                                            }
                                            :< TopF (Top{topSort = ()})
                                         )
                                      )
                                  }
                               )
                           )
                        )

-- second part of 'implies', hangs
part2 =
   CofreeT
    (Identity
     ( PredicatePattern
        { freeVariables = FreeVars.unsafe []
        , simplified = NotSimplified
        }
        :< IffF
          ( Iff
              { iffSort = ()
              , iffFirst = part21
              , iffSecond = part22
              }
          )
     )
    )

part21 = -- Implies (Iff (*, _)), hangs
    CofreeT
    ( Identity
        ( PredicatePattern
            { freeVariables = FreeVars.unsafe []
            , simplified = NotSimplified
            }
            :< InF
              ( In
                { inOperandSort = ()
                , inResultSort = ()
                , inContainedChild = part211 -- <-- hangs
                , inContainingChild = topTerm "mapSort" -- part212 <-- passes
                }
              )
        )
    )

part211 =
--                                                 , inContainedChild =
                                                   TermLike
                                                    { getTermLike =
                                                       TermAttributes
                                                        { termSort =
                                                           SortActualSort
                                                            ( SortActual
                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                               , sortActualSorts = []
                                                               }
                                                            )
                                                        , termFreeVariables = FreeVars.unsafe []
                                                        , termFunctional = Functional{isFunctional = False}
                                                        , termFunction = Function{isFunction = False}
                                                        , termDefined = Defined{isDefined = False}
                                                        , termCreated = Created{getCreated = Nothing}
                                                        , termSimplified = NotSimplified
                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                        }
                                                        :< T.ExistsF
                                                         ( Exists
                                                            { existsSort =
                                                               SortActualSort
                                                                ( SortActual
                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                   , sortActualSorts = []
                                                                   }
                                                                )
                                                            , existsVariable =
                                                               Variable
                                                                { variableName =
                                                                   ElementVariableName
                                                                    { unElementVariableName =
                                                                       VariableName
                                                                        { base = InternedId{getInternedId = internText "Ksvn", internedIdLocation = AstLocationTest}
                                                                        , counter = Nothing
                                                                        }
                                                                    }
                                                                , variableSort =
                                                                   SortActualSort
                                                                    ( SortActual
                                                                       { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                       , sortActualSorts = []
                                                                       }
                                                                    )
                                                                }
                                                            , existsChild =
                                                               TermLike
                                                                { getTermLike =
                                                                   TermAttributes
                                                                    { termSort =
                                                                       SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                    , termFunctional = Functional{isFunctional = False}
                                                                    , termFunction = Function{isFunction = False}
                                                                    , termDefined = Defined{isDefined = False}
                                                                    , termCreated = Created{getCreated = Nothing}
                                                                    , termSimplified = NotSimplified
                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                    }
                                                                    :< T.OrF
                                                                     ( Or
                                                                        { orSort =
                                                                           SortActualSort
                                                                            ( SortActual
                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                               , sortActualSorts = []
                                                                               }
                                                                            )
                                                                        , orFirst = part2111 -- <-- hangs
                                                                        , orSecond = topTerm "mapSort" -- part2112 -- <-- passes
                                                                        }
                                                                     )
                                                                }
                                                            }
                                                         )
                                                    }

part2111 =
--                                                                        , orFirst =
                                                                           TermLike
                                                                            { getTermLike =
                                                                               TermAttributes
                                                                                { termSort =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                , termFunction = Function{isFunction = False}
                                                                                , termDefined = Defined{isDefined = False}
                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                , termSimplified = NotSimplified
                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                }
                                                                                :< T.NotF
                                                                                 ( Not
                                                                                    { notSort =
                                                                                       SortActualSort
                                                                                        ( SortActual
                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                           , sortActualSorts = []
                                                                                           }
                                                                                        )
                                                                                    , notChild =
                                                                                       TermLike
                                                                                        { getTermLike =
                                                                                           TermAttributes
                                                                                            { termSort =
                                                                                               SortActualSort
                                                                                                ( SortActual
                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                   , sortActualSorts = []
                                                                                                   }
                                                                                                )
                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                            , termFunction = Function{isFunction = False}
                                                                                            , termDefined = Defined{isDefined = False}
                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                            , termSimplified = NotSimplified
                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                            }
                                                                                            :< T.IffF
                                                                                             ( Iff
                                                                                                { iffSort =
                                                                                                   SortActualSort
                                                                                                    ( SortActual
                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                       , sortActualSorts = []
                                                                                                       }
                                                                                                    )
                                                                                                , iffFirst = part21111 -- both terms needed to make it get stuck
                                                                                                , iffSecond = part21112
                                                                                                }
                                                                                             )
                                                                                        }
                                                                                    }
                                                                                 )
                                                                            }

part21111 =
 --                                                                                                , iffFirst =
 TermLike
  { getTermLike =
     TermAttributes
      { termSort =
         SortActualSort
          ( SortActual
             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
             , sortActualSorts = []
             }
          )
      , termFreeVariables = FreeVars.unsafe []
      , termFunctional = Functional{isFunctional = False}
      , termFunction = Function{isFunction = False}
      , termDefined = Defined{isDefined = False}
      , termCreated = Created{getCreated = Nothing}
      , termSimplified = NotSimplified
      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
      }
      :< T.ImpliesF
       ( Implies
          { impliesSort =
             SortActualSort
              ( SortActual
                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                 , sortActualSorts = []
                 }
              )
          , impliesFirst =
             TermLike
              { getTermLike =
                 TermAttributes
                  { termSort =
                     SortActualSort
                      ( SortActual
                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                         , sortActualSorts = []
                         }
                      )
                  , termFreeVariables = FreeVars.unsafe []
                  , termFunctional = Functional{isFunctional = False}
                  , termFunction = Function{isFunction = False}
                  , termDefined = Defined{isDefined = False}
                  , termCreated = Created{getCreated = Nothing}
                  , termSimplified = NotSimplified
                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                  }
                  :< T.ImpliesF
                   ( Implies
                      { impliesSort =
                         SortActualSort
                          ( SortActual
                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                             , sortActualSorts = []
                             }
                          )
                      , impliesFirst =
                         TermLike
                          { getTermLike =
                             TermAttributes
                              { termSort =
                                 SortActualSort
                                  ( SortActual
                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                     , sortActualSorts = []
                                     }
                                  )
                              , termFreeVariables = FreeVars.unsafe []
                              , termFunctional = Functional{isFunctional = False}
                              , termFunction = Function{isFunction = False}
                              , termDefined = Defined{isDefined = False}
                              , termCreated = Created{getCreated = Nothing}
                              , termSimplified = NotSimplified
                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                              }
                              :< T.ExistsF
                               ( Exists
                                  { existsSort =
                                     SortActualSort
                                      ( SortActual
                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                         , sortActualSorts = []
                                         }
                                      )
                                  , existsVariable =
                                     Variable
                                      { variableName =
                                         ElementVariableName
                                          { unElementVariableName =
                                             VariableName
                                              { base = InternedId{getInternedId = internText "XBOA", internedIdLocation = AstLocationTest}
                                              , counter = Nothing
                                              }
                                          }
                                      , variableSort =
                                         SortActualSort
                                          ( SortActual
                                             { sortActualName = InternedId{getInternedId = internText "#String", internedIdLocation = AstLocationImplicit}
                                             , sortActualSorts = []
                                             }
                                          )
                                      }
                                  , existsChild =
                                     TermLike
                                      { getTermLike =
                                         TermAttributes
                                          { termSort =
                                             SortActualSort
                                              ( SortActual
                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                 , sortActualSorts = []
                                                 }
                                              )
                                          , termFreeVariables = FreeVars.unsafe []
                                          , termFunctional = Functional{isFunctional = False}
                                          , termFunction = Function{isFunction = False}
                                          , termDefined = Defined{isDefined = True}
                                          , termCreated = Created{getCreated = Nothing}
                                          , termSimplified = NotSimplified
                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                          }
                                          :< T.OrF
                                           ( Or
                                              { orSort =
                                                 SortActualSort
                                                  ( SortActual
                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                     , sortActualSorts = []
                                                     }
                                                  )
                                              , orFirst =
                                                 TermLike
                                                  { getTermLike =
                                                     TermAttributes
                                                      { termSort =
                                                         SortActualSort
                                                          ( SortActual
                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                             , sortActualSorts = []
                                                             }
                                                          )
                                                      , termFreeVariables = FreeVars.unsafe []
                                                      , termFunctional = Functional{isFunctional = False}
                                                      , termFunction = Function{isFunction = False}
                                                      , termDefined = Defined{isDefined = True}
                                                      , termCreated = Created{getCreated = Nothing}
                                                      , termSimplified = NotSimplified
                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                      }
                                                      :< T.OrF
                                                       ( Or
                                                          { orSort =
                                                             SortActualSort
                                                              ( SortActual
                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                 , sortActualSorts = []
                                                                 }
                                                              )
                                                          , orFirst =
                                                             TermLike
                                                              { getTermLike =
                                                                 TermAttributes
                                                                  { termSort =
                                                                     SortActualSort
                                                                      ( SortActual
                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                         , sortActualSorts = []
                                                                         }
                                                                      )
                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                  , termFunctional = Functional{isFunctional = False}
                                                                  , termFunction = Function{isFunction = False}
                                                                  , termDefined = Defined{isDefined = True}
                                                                  , termCreated = Created{getCreated = Nothing}
                                                                  , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                  }
                                                                  :< T.TopF
                                                                   ( Top
                                                                      { topSort =
                                                                         SortActualSort
                                                                          ( SortActual
                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                             , sortActualSorts = []
                                                                             }
                                                                          )
                                                                      }
                                                                   )
                                                              }
                                                          , orSecond =
                                                             TermLike
                                                              { getTermLike =
                                                                 TermAttributes
                                                                  { termSort =
                                                                     SortActualSort
                                                                      ( SortActual
                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                         , sortActualSorts = []
                                                                         }
                                                                      )
                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                  , termFunctional = Functional{isFunctional = False}
                                                                  , termFunction = Function{isFunction = False}
                                                                  , termDefined = Defined{isDefined = False}
                                                                  , termCreated = Created{getCreated = Nothing}
                                                                  , termSimplified = NotSimplified
                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                  }
                                                                  :< T.ForallF
                                                                   ( Forall
                                                                      { forallSort =
                                                                         SortActualSort
                                                                          ( SortActual
                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                             , sortActualSorts = []
                                                                             }
                                                                          )
                                                                      , forallVariable =
                                                                         Variable
                                                                          { variableName =
                                                                             ElementVariableName
                                                                              { unElementVariableName =
                                                                                 VariableName
                                                                                  { base = InternedId{getInternedId = internText "kdq", internedIdLocation = AstLocationTest}
                                                                                  , counter = Nothing
                                                                                  }
                                                                              }
                                                                          , variableSort =
                                                                             SortActualSort
                                                                              ( SortActual
                                                                                 { sortActualName = InternedId{getInternedId = internText "#String", internedIdLocation = AstLocationImplicit}
                                                                                 , sortActualSorts = []
                                                                                 }
                                                                              )
                                                                          }
                                                                      , forallChild =
                                                                         TermLike
                                                                          { getTermLike =
                                                                             TermAttributes
                                                                              { termSort =
                                                                                 SortActualSort
                                                                                  ( SortActual
                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                     , sortActualSorts = []
                                                                                     }
                                                                                  )
                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                              , termFunctional = Functional{isFunctional = True}
                                                                              , termFunction = Function{isFunction = True}
                                                                              , termDefined = Defined{isDefined = True}
                                                                              , termCreated = Created{getCreated = Nothing}
                                                                              , termSimplified = NotSimplified
                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                              }
                                                                              :< ApplySymbolF
                                                                               ( Application
                                                                                  { applicationSymbolOrAlias =
                                                                                     Symbol
                                                                                      { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                      , symbolParams = []
                                                                                      , symbolSorts =
                                                                                         ApplicationSorts
                                                                                          { applicationSortsOperands = []
                                                                                          , applicationSortsResult =
                                                                                             SortActualSort
                                                                                              ( SortActual
                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                 , sortActualSorts = []
                                                                                                 }
                                                                                              )
                                                                                          }
                                                                                      , symbolAttributes =
                                                                                         A.Symbol
                                                                                          { function = A.Function{isDeclaredFunction = False}
                                                                                          , functional = A.Functional{isDeclaredFunctional = True}
                                                                                          , constructor = Constructor{isConstructor = False}
                                                                                          , injective = Injective{isDeclaredInjective = False}
                                                                                          , sortInjection = SortInjection{isSortInjection = False}
                                                                                          , anywhere = Anywhere{isAnywhere = False}
                                                                                          , hook = Hook{getHook = Just "MAP.unit"}
                                                                                          , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                          , smthook = Smthook{getSmthook = Nothing}
                                                                                          , memo = Memo{isMemo = False}
                                                                                          , klabel = Klabel{getKlabel = Nothing}
                                                                                          , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                          , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                          , sourceLocation =
                                                                                             SourceLocation
                                                                                              { location = Location{start = Nothing, end = Nothing}
                                                                                              , source = Source{unSource = Nothing}
                                                                                              }
                                                                                          }
                                                                                      }
                                                                                  , applicationChildren = []
                                                                                  }
                                                                               )
                                                                          }
                                                                      }
                                                                   )
                                                              }
                                                          }
                                                       )
                                                  }
                                              , orSecond =
                                                 TermLike
                                                  { getTermLike =
                                                     TermAttributes
                                                      { termSort =
                                                         SortActualSort
                                                          ( SortActual
                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                             , sortActualSorts = []
                                                             }
                                                          )
                                                      , termFreeVariables = FreeVars.unsafe []
                                                      , termFunctional = Functional{isFunctional = False}
                                                      , termFunction = Function{isFunction = False}
                                                      , termDefined = Defined{isDefined = True}
                                                      , termCreated = Created{getCreated = Nothing}
                                                      , termSimplified = Simplified (SimplifiedData{sType = Partly, condition = Any})
                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                      }
                                                      :< ApplySymbolF
                                                       ( Application
                                                          { applicationSymbolOrAlias =
                                                             Symbol
                                                              { symbolConstructor = InternedId{getInternedId = internText "elementMap", internedIdLocation = AstLocationTest}
                                                              , symbolParams = []
                                                              , symbolSorts =
                                                                 ApplicationSorts
                                                                  { applicationSortsOperands =
                                                                     [ SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                     , SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                     ]
                                                                  , applicationSortsResult =
                                                                     SortActualSort
                                                                      ( SortActual
                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                         , sortActualSorts = []
                                                                         }
                                                                      )
                                                                  }
                                                              , symbolAttributes =
                                                                 A.Symbol
                                                                  { function = A.Function{isDeclaredFunction = False}
                                                                  , functional = A.Functional{isDeclaredFunctional = True}
                                                                  , constructor = Constructor{isConstructor = False}
                                                                  , injective = Injective{isDeclaredInjective = False}
                                                                  , sortInjection = SortInjection{isSortInjection = False}
                                                                  , anywhere = Anywhere{isAnywhere = False}
                                                                  , hook = Hook{getHook = Just "MAP.element"}
                                                                  , smtlib = Smtlib{getSmtlib = Nothing}
                                                                  , smthook = Smthook{getSmthook = Nothing}
                                                                  , memo = Memo{isMemo = False}
                                                                  , klabel = Klabel{getKlabel = Nothing}
                                                                  , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                  , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                  , sourceLocation =
                                                                     SourceLocation
                                                                      { location = Location{start = Nothing, end = Nothing}
                                                                      , source = Source{unSource = Nothing}
                                                                      }
                                                                  }
                                                              }
                                                          , applicationChildren =
                                                             [ TermLike
                                                                { getTermLike =
                                                                   TermAttributes
                                                                    { termSort =
                                                                       SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                    , termFunctional = Functional{isFunctional = True}
                                                                    , termFunction = Function{isFunction = True}
                                                                    , termDefined = Defined{isDefined = True}
                                                                    , termCreated = Created{getCreated = Nothing}
                                                                    , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                    }
                                                                    :< ApplySymbolF
                                                                     ( Application
                                                                        { applicationSymbolOrAlias =
                                                                           Symbol
                                                                            { symbolConstructor = InternedId{getInternedId = internText "d", internedIdLocation = AstLocationTest}
                                                                            , symbolParams = []
                                                                            , symbolSorts =
                                                                               ApplicationSorts
                                                                                { applicationSortsOperands = []
                                                                                , applicationSortsResult =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                }
                                                                            , symbolAttributes =
                                                                               A.Symbol
                                                                                { function = A.Function{isDeclaredFunction = False}
                                                                                , functional = A.Functional{isDeclaredFunctional = True}
                                                                                , constructor = Constructor{isConstructor = True}
                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                , hook = Hook{getHook = Nothing}
                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                , memo = Memo{isMemo = False}
                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                , sourceLocation =
                                                                                   SourceLocation
                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                    , source = Source{unSource = Nothing}
                                                                                    }
                                                                                }
                                                                            }
                                                                        , applicationChildren = []
                                                                        }
                                                                     )
                                                                }
                                                             , TermLike
                                                                { getTermLike =
                                                                   TermAttributes
                                                                    { termSort =
                                                                       SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                    , termFunctional = Functional{isFunctional = False}
                                                                    , termFunction = Function{isFunction = False}
                                                                    , termDefined = Defined{isDefined = True}
                                                                    , termCreated = Created{getCreated = Nothing}
                                                                    , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                    }
                                                                    :< ApplySymbolF
                                                                     ( Application
                                                                        { applicationSymbolOrAlias =
                                                                           Symbol
                                                                            { symbolConstructor = InternedId{getInternedId = internText "constr20", internedIdLocation = AstLocationTest}
                                                                            , symbolParams = []
                                                                            , symbolSorts =
                                                                               ApplicationSorts
                                                                                { applicationSortsOperands =
                                                                                   [ SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                   , SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                   ]
                                                                                , applicationSortsResult =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                }
                                                                            , symbolAttributes =
                                                                               A.Symbol
                                                                                { function = A.Function{isDeclaredFunction = False}
                                                                                , functional = A.Functional{isDeclaredFunctional = False}
                                                                                , constructor = Constructor{isConstructor = True}
                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                , hook = Hook{getHook = Nothing}
                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                , memo = Memo{isMemo = False}
                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                , sourceLocation =
                                                                                   SourceLocation
                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                    , source = Source{unSource = Nothing}
                                                                                    }
                                                                                }
                                                                            }
                                                                        , applicationChildren =
                                                                           [ TermLike
                                                                              { getTermLike =
                                                                                 TermAttributes
                                                                                  { termSort =
                                                                                     SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                  , termFunction = Function{isFunction = True}
                                                                                  , termDefined = Defined{isDefined = True}
                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                  , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                  }
                                                                                  :< ApplySymbolF
                                                                                   ( Application
                                                                                      { applicationSymbolOrAlias =
                                                                                         Symbol
                                                                                          { symbolConstructor = InternedId{getInternedId = internText "c", internedIdLocation = AstLocationTest}
                                                                                          , symbolParams = []
                                                                                          , symbolSorts =
                                                                                             ApplicationSorts
                                                                                              { applicationSortsOperands = []
                                                                                              , applicationSortsResult =
                                                                                                 SortActualSort
                                                                                                  ( SortActual
                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                     , sortActualSorts = []
                                                                                                     }
                                                                                                  )
                                                                                              }
                                                                                          , symbolAttributes =
                                                                                             A.Symbol
                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                              , constructor = Constructor{isConstructor = True}
                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                              , hook = Hook{getHook = Nothing}
                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                              , memo = Memo{isMemo = False}
                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                              , sourceLocation =
                                                                                                 SourceLocation
                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                  , source = Source{unSource = Nothing}
                                                                                                  }
                                                                                              }
                                                                                          }
                                                                                      , applicationChildren = []
                                                                                      }
                                                                                   )
                                                                              }
                                                                           , TermLike
                                                                              { getTermLike =
                                                                                 TermAttributes
                                                                                  { termSort =
                                                                                     SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                  , termFunction = Function{isFunction = True}
                                                                                  , termDefined = Defined{isDefined = True}
                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                  , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                  }
                                                                                  :< ApplySymbolF
                                                                                   ( Application
                                                                                      { applicationSymbolOrAlias =
                                                                                         Symbol
                                                                                          { symbolConstructor = InternedId{getInternedId = internText "c", internedIdLocation = AstLocationTest}
                                                                                          , symbolParams = []
                                                                                          , symbolSorts =
                                                                                             ApplicationSorts
                                                                                              { applicationSortsOperands = []
                                                                                              , applicationSortsResult =
                                                                                                 SortActualSort
                                                                                                  ( SortActual
                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                     , sortActualSorts = []
                                                                                                     }
                                                                                                  )
                                                                                              }
                                                                                          , symbolAttributes =
                                                                                             A.Symbol
                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                              , constructor = Constructor{isConstructor = True}
                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                              , hook = Hook{getHook = Nothing}
                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                              , memo = Memo{isMemo = False}
                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                              , sourceLocation =
                                                                                                 SourceLocation
                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                  , source = Source{unSource = Nothing}
                                                                                                  }
                                                                                              }
                                                                                          }
                                                                                      , applicationChildren = []
                                                                                      }
                                                                                   )
                                                                              }
                                                                           ]
                                                                        }
                                                                     )
                                                                }
                                                             ]
                                                          }
                                                       )
                                                  }
                                              }
                                           )
                                      }
                                  }
                               )
                          }
                      , impliesSecond =
                         TermLike
                          { getTermLike =
                             TermAttributes
                              { termSort =
                                 SortActualSort
                                  ( SortActual
                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                     , sortActualSorts = []
                                     }
                                  )
                              , termFreeVariables = FreeVars.unsafe []
                              , termFunctional = Functional{isFunctional = False}
                              , termFunction = Function{isFunction = False}
                              , termDefined = Defined{isDefined = False}
                              , termCreated = Created{getCreated = Nothing}
                              , termSimplified = NotSimplified
                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                              }
                              :< NuF
                               ( Nu
                                  { nuVariable =
                                     Variable
                                      { variableName =
                                         SetVariableName
                                          { unSetVariableName =
                                             VariableName
                                              { base = InternedId{getInternedId = internText "bJUM", internedIdLocation = AstLocationTest}
                                              , counter = Nothing
                                              }
                                          }
                                      , variableSort =
                                         SortActualSort
                                          ( SortActual
                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                             , sortActualSorts = []
                                             }
                                          )
                                      }
                                  , nuChild =
                                     TermLike
                                      { getTermLike =
                                         TermAttributes
                                          { termSort =
                                             SortActualSort
                                              ( SortActual
                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                 , sortActualSorts = []
                                                 }
                                              )
                                          , termFreeVariables = FreeVars.unsafe []
                                          , termFunctional = Functional{isFunctional = False}
                                          , termFunction = Function{isFunction = False}
                                          , termDefined = Defined{isDefined = False}
                                          , termCreated = Created{getCreated = Nothing}
                                          , termSimplified = NotSimplified
                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                          }
                                          :< NuF
                                           ( Nu
                                              { nuVariable =
                                                 Variable
                                                  { variableName =
                                                     SetVariableName
                                                      { unSetVariableName =
                                                         VariableName
                                                          { base = InternedId{getInternedId = internText "c", internedIdLocation = AstLocationTest}
                                                          , counter = Nothing
                                                          }
                                                      }
                                                  , variableSort =
                                                     SortActualSort
                                                      ( SortActual
                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                         , sortActualSorts = []
                                                         }
                                                      )
                                                  }
                                              , nuChild =
                                                 TermLike
                                                  { getTermLike =
                                                     TermAttributes
                                                      { termSort =
                                                         SortActualSort
                                                          ( SortActual
                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                             , sortActualSorts = []
                                                             }
                                                          )
                                                      , termFreeVariables = FreeVars.unsafe []
                                                      , termFunctional = Functional{isFunctional = True}
                                                      , termFunction = Function{isFunction = True}
                                                      , termDefined = Defined{isDefined = True}
                                                      , termCreated = Created{getCreated = Nothing}
                                                      , termSimplified = NotSimplified
                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                      }
                                                      :< ApplySymbolF
                                                       ( Application
                                                          { applicationSymbolOrAlias =
                                                             Symbol
                                                              { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                              , symbolParams = []
                                                              , symbolSorts =
                                                                 ApplicationSorts
                                                                  { applicationSortsOperands = []
                                                                  , applicationSortsResult =
                                                                     SortActualSort
                                                                      ( SortActual
                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                         , sortActualSorts = []
                                                                         }
                                                                      )
                                                                  }
                                                              , symbolAttributes =
                                                                 A.Symbol
                                                                  { function = A.Function{isDeclaredFunction = False}
                                                                  , functional = A.Functional{isDeclaredFunctional = True}
                                                                  , constructor = Constructor{isConstructor = False}
                                                                  , injective = Injective{isDeclaredInjective = False}
                                                                  , sortInjection = SortInjection{isSortInjection = False}
                                                                  , anywhere = Anywhere{isAnywhere = False}
                                                                  , hook = Hook{getHook = Just "MAP.unit"}
                                                                  , smtlib = Smtlib{getSmtlib = Nothing}
                                                                  , smthook = Smthook{getSmthook = Nothing}
                                                                  , memo = Memo{isMemo = False}
                                                                  , klabel = Klabel{getKlabel = Nothing}
                                                                  , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                  , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                  , sourceLocation =
                                                                     SourceLocation
                                                                      { location = Location{start = Nothing, end = Nothing}
                                                                      , source = Source{unSource = Nothing}
                                                                      }
                                                                  }
                                                              }
                                                          , applicationChildren = []
                                                          }
                                                       )
                                                  }
                                              }
                                           )
                                      }
                                  }
                               )
                          }
                      }
                   )
              }
          , impliesSecond =
             TermLike
              { getTermLike =
                 TermAttributes
                  { termSort =
                     SortActualSort
                      ( SortActual
                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                         , sortActualSorts = []
                         }
                      )
                  , termFreeVariables = FreeVars.unsafe []
                  , termFunctional = Functional{isFunctional = False}
                  , termFunction = Function{isFunction = False}
                  , termDefined = Defined{isDefined = False}
                  , termCreated = Created{getCreated = Nothing}
                  , termSimplified = NotSimplified
                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                  }
                  :< T.IffF
                   ( Iff
                      { iffSort =
                         SortActualSort
                          ( SortActual
                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                             , sortActualSorts = []
                             }
                          )
                      , iffFirst =
                         TermLike
                          { getTermLike =
                             TermAttributes
                              { termSort =
                                 SortActualSort
                                  ( SortActual
                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                     , sortActualSorts = []
                                     }
                                  )
                              , termFreeVariables = FreeVars.unsafe []
                              , termFunctional = Functional{isFunctional = False}
                              , termFunction = Function{isFunction = False}
                              , termDefined = Defined{isDefined = True}
                              , termCreated = Created{getCreated = Nothing}
                              , termSimplified = NotSimplified
                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                              }
                              :< T.OrF
                               ( Or
                                  { orSort =
                                     SortActualSort
                                      ( SortActual
                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                         , sortActualSorts = []
                                         }
                                      )
                                  , orFirst =
                                     TermLike
                                      { getTermLike =
                                         TermAttributes
                                          { termSort =
                                             SortActualSort
                                              ( SortActual
                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                 , sortActualSorts = []
                                                 }
                                              )
                                          , termFreeVariables = FreeVars.unsafe []
                                          , termFunctional = Functional{isFunctional = False}
                                          , termFunction = Function{isFunction = False}
                                          , termDefined = Defined{isDefined = True}
                                          , termCreated = Created{getCreated = Nothing}
                                          , termSimplified = Simplified (SimplifiedData{sType = Partly, condition = Any})
                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                          }
                                          :< ApplySymbolF
                                           ( Application
                                              { applicationSymbolOrAlias =
                                                 Symbol
                                                  { symbolConstructor = InternedId{getInternedId = internText "elementMap", internedIdLocation = AstLocationTest}
                                                  , symbolParams = []
                                                  , symbolSorts =
                                                     ApplicationSorts
                                                      { applicationSortsOperands =
                                                         [ SortActualSort
                                                            ( SortActual
                                                               { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                               , sortActualSorts = []
                                                               }
                                                            )
                                                         , SortActualSort
                                                            ( SortActual
                                                               { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                               , sortActualSorts = []
                                                               }
                                                            )
                                                         ]
                                                      , applicationSortsResult =
                                                         SortActualSort
                                                          ( SortActual
                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                             , sortActualSorts = []
                                                             }
                                                          )
                                                      }
                                                  , symbolAttributes =
                                                     A.Symbol
                                                      { function = A.Function{isDeclaredFunction = False}
                                                      , functional = A.Functional{isDeclaredFunctional = True}
                                                      , constructor = Constructor{isConstructor = False}
                                                      , injective = Injective{isDeclaredInjective = False}
                                                      , sortInjection = SortInjection{isSortInjection = False}
                                                      , anywhere = Anywhere{isAnywhere = False}
                                                      , hook = Hook{getHook = Just "MAP.element"}
                                                      , smtlib = Smtlib{getSmtlib = Nothing}
                                                      , smthook = Smthook{getSmthook = Nothing}
                                                      , memo = Memo{isMemo = False}
                                                      , klabel = Klabel{getKlabel = Nothing}
                                                      , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                      , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                      , sourceLocation =
                                                         SourceLocation
                                                          { location = Location{start = Nothing, end = Nothing}
                                                          , source = Source{unSource = Nothing}
                                                          }
                                                      }
                                                  }
                                              , applicationChildren =
                                                 [ TermLike
                                                    { getTermLike =
                                                       TermAttributes
                                                        { termSort =
                                                           SortActualSort
                                                            ( SortActual
                                                               { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                               , sortActualSorts = []
                                                               }
                                                            )
                                                        , termFreeVariables = FreeVars.unsafe []
                                                        , termFunctional = Functional{isFunctional = False}
                                                        , termFunction = Function{isFunction = False}
                                                        , termDefined = Defined{isDefined = True}
                                                        , termCreated = Created{getCreated = Nothing}
                                                        , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                        }
                                                        :< ApplySymbolF
                                                         ( Application
                                                            { applicationSymbolOrAlias =
                                                               Symbol
                                                                { symbolConstructor = InternedId{getInternedId = internText "constr00", internedIdLocation = AstLocationTest}
                                                                , symbolParams = []
                                                                , symbolSorts =
                                                                   ApplicationSorts
                                                                    { applicationSortsOperands = []
                                                                    , applicationSortsResult =
                                                                       SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                    }
                                                                , symbolAttributes =
                                                                   A.Symbol
                                                                    { function = A.Function{isDeclaredFunction = False}
                                                                    , functional = A.Functional{isDeclaredFunctional = False}
                                                                    , constructor = Constructor{isConstructor = True}
                                                                    , injective = Injective{isDeclaredInjective = False}
                                                                    , sortInjection = SortInjection{isSortInjection = False}
                                                                    , anywhere = Anywhere{isAnywhere = False}
                                                                    , hook = Hook{getHook = Nothing}
                                                                    , smtlib = Smtlib{getSmtlib = Nothing}
                                                                    , smthook = Smthook{getSmthook = Nothing}
                                                                    , memo = Memo{isMemo = False}
                                                                    , klabel = Klabel{getKlabel = Nothing}
                                                                    , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                    , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                    , sourceLocation =
                                                                       SourceLocation
                                                                        { location = Location{start = Nothing, end = Nothing}
                                                                        , source = Source{unSource = Nothing}
                                                                        }
                                                                    }
                                                                }
                                                            , applicationChildren = []
                                                            }
                                                         )
                                                    }
                                                 , TermLike
                                                    { getTermLike =
                                                       TermAttributes
                                                        { termSort =
                                                           SortActualSort
                                                            ( SortActual
                                                               { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                               , sortActualSorts = []
                                                               }
                                                            )
                                                        , termFreeVariables = FreeVars.unsafe []
                                                        , termFunctional = Functional{isFunctional = False}
                                                        , termFunction = Function{isFunction = False}
                                                        , termDefined = Defined{isDefined = True}
                                                        , termCreated = Created{getCreated = Nothing}
                                                        , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                        }
                                                        :< ApplySymbolF
                                                         ( Application
                                                            { applicationSymbolOrAlias =
                                                               Symbol
                                                                { symbolConstructor = InternedId{getInternedId = internText "functionalConstr10", internedIdLocation = AstLocationTest}
                                                                , symbolParams = []
                                                                , symbolSorts =
                                                                   ApplicationSorts
                                                                    { applicationSortsOperands =
                                                                       [ SortActualSort
                                                                          ( SortActual
                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                             , sortActualSorts = []
                                                                             }
                                                                          )
                                                                       ]
                                                                    , applicationSortsResult =
                                                                       SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                    }
                                                                , symbolAttributes =
                                                                   A.Symbol
                                                                    { function = A.Function{isDeclaredFunction = False}
                                                                    , functional = A.Functional{isDeclaredFunctional = True}
                                                                    , constructor = Constructor{isConstructor = True}
                                                                    , injective = Injective{isDeclaredInjective = False}
                                                                    , sortInjection = SortInjection{isSortInjection = False}
                                                                    , anywhere = Anywhere{isAnywhere = False}
                                                                    , hook = Hook{getHook = Nothing}
                                                                    , smtlib = Smtlib{getSmtlib = Nothing}
                                                                    , smthook = Smthook{getSmthook = Nothing}
                                                                    , memo = Memo{isMemo = False}
                                                                    , klabel = Klabel{getKlabel = Nothing}
                                                                    , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                    , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                    , sourceLocation =
                                                                       SourceLocation
                                                                        { location = Location{start = Nothing, end = Nothing}
                                                                        , source = Source{unSource = Nothing}
                                                                        }
                                                                    }
                                                                }
                                                            , applicationChildren =
                                                               [ TermLike
                                                                  { getTermLike =
                                                                     TermAttributes
                                                                      { termSort =
                                                                         SortActualSort
                                                                          ( SortActual
                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                             , sortActualSorts = []
                                                                             }
                                                                          )
                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                      , termFunctional = Functional{isFunctional = False}
                                                                      , termFunction = Function{isFunction = False}
                                                                      , termDefined = Defined{isDefined = True}
                                                                      , termCreated = Created{getCreated = Nothing}
                                                                      , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                      }
                                                                      :< ApplySymbolF
                                                                       ( Application
                                                                          { applicationSymbolOrAlias =
                                                                             Symbol
                                                                              { symbolConstructor = InternedId{getInternedId = internText "constr10", internedIdLocation = AstLocationTest}
                                                                              , symbolParams = []
                                                                              , symbolSorts =
                                                                                 ApplicationSorts
                                                                                  { applicationSortsOperands =
                                                                                     [ SortActualSort
                                                                                        ( SortActual
                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                           , sortActualSorts = []
                                                                                           }
                                                                                        )
                                                                                     ]
                                                                                  , applicationSortsResult =
                                                                                     SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                  }
                                                                              , symbolAttributes =
                                                                                 A.Symbol
                                                                                  { function = A.Function{isDeclaredFunction = False}
                                                                                  , functional = A.Functional{isDeclaredFunctional = False}
                                                                                  , constructor = Constructor{isConstructor = True}
                                                                                  , injective = Injective{isDeclaredInjective = False}
                                                                                  , sortInjection = SortInjection{isSortInjection = False}
                                                                                  , anywhere = Anywhere{isAnywhere = False}
                                                                                  , hook = Hook{getHook = Nothing}
                                                                                  , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                  , smthook = Smthook{getSmthook = Nothing}
                                                                                  , memo = Memo{isMemo = False}
                                                                                  , klabel = Klabel{getKlabel = Nothing}
                                                                                  , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                  , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                  , sourceLocation =
                                                                                     SourceLocation
                                                                                      { location = Location{start = Nothing, end = Nothing}
                                                                                      , source = Source{unSource = Nothing}
                                                                                      }
                                                                                  }
                                                                              }
                                                                          , applicationChildren =
                                                                             [ TermLike
                                                                                { getTermLike =
                                                                                   TermAttributes
                                                                                    { termSort =
                                                                                       SortActualSort
                                                                                        ( SortActual
                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                           , sortActualSorts = []
                                                                                           }
                                                                                        )
                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                    , termFunction = Function{isFunction = False}
                                                                                    , termDefined = Defined{isDefined = True}
                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                    , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                    }
                                                                                    :< ApplySymbolF
                                                                                     ( Application
                                                                                        { applicationSymbolOrAlias =
                                                                                           Symbol
                                                                                            { symbolConstructor = InternedId{getInternedId = internText "constr00", internedIdLocation = AstLocationTest}
                                                                                            , symbolParams = []
                                                                                            , symbolSorts =
                                                                                               ApplicationSorts
                                                                                                { applicationSortsOperands = []
                                                                                                , applicationSortsResult =
                                                                                                   SortActualSort
                                                                                                    ( SortActual
                                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                       , sortActualSorts = []
                                                                                                       }
                                                                                                    )
                                                                                                }
                                                                                            , symbolAttributes =
                                                                                               A.Symbol
                                                                                                { function = A.Function{isDeclaredFunction = False}
                                                                                                , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                , constructor = Constructor{isConstructor = True}
                                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                                , hook = Hook{getHook = Nothing}
                                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                                , memo = Memo{isMemo = False}
                                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                , sourceLocation =
                                                                                                   SourceLocation
                                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                                    , source = Source{unSource = Nothing}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        , applicationChildren = []
                                                                                        }
                                                                                     )
                                                                                }
                                                                             ]
                                                                          }
                                                                       )
                                                                  }
                                                               ]
                                                            }
                                                         )
                                                    }
                                                 ]
                                              }
                                           )
                                      }
                                  , orSecond =
                                     TermLike
                                      { getTermLike =
                                         TermAttributes
                                          { termSort =
                                             SortActualSort
                                              ( SortActual
                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                 , sortActualSorts = []
                                                 }
                                              )
                                          , termFreeVariables = FreeVars.unsafe []
                                          , termFunctional = Functional{isFunctional = False}
                                          , termFunction = Function{isFunction = False}
                                          , termDefined = Defined{isDefined = False}
                                          , termCreated = Created{getCreated = Nothing}
                                          , termSimplified = NotSimplified
                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                          }
                                          :< T.AndF
                                           ( And
                                              { andSort =
                                                 SortActualSort
                                                  ( SortActual
                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                     , sortActualSorts = []
                                                     }
                                                  )
                                              , andFirst =
                                                 TermLike
                                                  { getTermLike =
                                                     TermAttributes
                                                      { termSort =
                                                         SortActualSort
                                                          ( SortActual
                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                             , sortActualSorts = []
                                                             }
                                                          )
                                                      , termFreeVariables = FreeVars.unsafe []
                                                      , termFunctional = Functional{isFunctional = False}
                                                      , termFunction = Function{isFunction = False}
                                                      , termDefined = Defined{isDefined = False}
                                                      , termCreated = Created{getCreated = Nothing}
                                                      , termSimplified = Simplified (SimplifiedData{sType = Partly, condition = Any})
                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                      }
                                                      :< T.ExistsF
                                                       ( Exists
                                                          { existsSort =
                                                             SortActualSort
                                                              ( SortActual
                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                 , sortActualSorts = []
                                                                 }
                                                              )
                                                          , existsVariable =
                                                             Variable
                                                              { variableName =
                                                                 ElementVariableName
                                                                  { unElementVariableName =
                                                                     VariableName
                                                                      { base = InternedId{getInternedId = internText "m8", internedIdLocation = AstLocationTest}
                                                                      , counter = Nothing
                                                                      }
                                                                  }
                                                              , variableSort =
                                                                 SortActualSort
                                                                  ( SortActual
                                                                     { sortActualName = InternedId{getInternedId = internText "setSort", internedIdLocation = AstLocationTest}
                                                                     , sortActualSorts = []
                                                                     }
                                                                  )
                                                              }
                                                          , existsChild =
                                                             TermLike
                                                              { getTermLike =
                                                                 TermAttributes
                                                                  { termSort =
                                                                     SortActualSort
                                                                      ( SortActual
                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                         , sortActualSorts = []
                                                                         }
                                                                      )
                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                  , termFunctional = Functional{isFunctional = True}
                                                                  , termFunction = Function{isFunction = True}
                                                                  , termDefined = Defined{isDefined = True}
                                                                  , termCreated = Created{getCreated = Nothing}
                                                                  , termSimplified = Simplified (SimplifiedData{sType = Partly, condition = Any})
                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                  }
                                                                  :< ApplySymbolF
                                                                   ( Application
                                                                      { applicationSymbolOrAlias =
                                                                         Symbol
                                                                          { symbolConstructor = InternedId{getInternedId = internText "elementMap", internedIdLocation = AstLocationTest}
                                                                          , symbolParams = []
                                                                          , symbolSorts =
                                                                             ApplicationSorts
                                                                              { applicationSortsOperands =
                                                                                 [ SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                 , SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                 ]
                                                                              , applicationSortsResult =
                                                                                 SortActualSort
                                                                                  ( SortActual
                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                     , sortActualSorts = []
                                                                                     }
                                                                                  )
                                                                              }
                                                                          , symbolAttributes =
                                                                             A.Symbol
                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                              , constructor = Constructor{isConstructor = False}
                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                              , hook = Hook{getHook = Just "MAP.element"}
                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                              , memo = Memo{isMemo = False}
                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                              , sourceLocation =
                                                                                 SourceLocation
                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                  , source = Source{unSource = Nothing}
                                                                                  }
                                                                              }
                                                                          }
                                                                      , applicationChildren =
                                                                         [ TermLike
                                                                            { getTermLike =
                                                                               TermAttributes
                                                                                { termSort =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                , termFunctional = Functional{isFunctional = True}
                                                                                , termFunction = Function{isFunction = True}
                                                                                , termDefined = Defined{isDefined = True}
                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                }
                                                                                :< ApplySymbolF
                                                                                 ( Application
                                                                                    { applicationSymbolOrAlias =
                                                                                       Symbol
                                                                                        { symbolConstructor = InternedId{getInternedId = internText "c", internedIdLocation = AstLocationTest}
                                                                                        , symbolParams = []
                                                                                        , symbolSorts =
                                                                                           ApplicationSorts
                                                                                            { applicationSortsOperands = []
                                                                                            , applicationSortsResult =
                                                                                               SortActualSort
                                                                                                ( SortActual
                                                                                                   { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                   , sortActualSorts = []
                                                                                                   }
                                                                                                )
                                                                                            }
                                                                                        , symbolAttributes =
                                                                                           A.Symbol
                                                                                            { function = A.Function{isDeclaredFunction = False}
                                                                                            , functional = A.Functional{isDeclaredFunctional = True}
                                                                                            , constructor = Constructor{isConstructor = True}
                                                                                            , injective = Injective{isDeclaredInjective = False}
                                                                                            , sortInjection = SortInjection{isSortInjection = False}
                                                                                            , anywhere = Anywhere{isAnywhere = False}
                                                                                            , hook = Hook{getHook = Nothing}
                                                                                            , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                            , smthook = Smthook{getSmthook = Nothing}
                                                                                            , memo = Memo{isMemo = False}
                                                                                            , klabel = Klabel{getKlabel = Nothing}
                                                                                            , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                            , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                            , sourceLocation =
                                                                                               SourceLocation
                                                                                                { location = Location{start = Nothing, end = Nothing}
                                                                                                , source = Source{unSource = Nothing}
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    , applicationChildren = []
                                                                                    }
                                                                                 )
                                                                            }
                                                                         , TermLike
                                                                            { getTermLike =
                                                                               TermAttributes
                                                                                { termSort =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                , termFunctional = Functional{isFunctional = True}
                                                                                , termFunction = Function{isFunction = True}
                                                                                , termDefined = Defined{isDefined = True}
                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                }
                                                                                :< ApplySymbolF
                                                                                 ( Application
                                                                                    { applicationSymbolOrAlias =
                                                                                       Symbol
                                                                                        { symbolConstructor = InternedId{getInternedId = internText "d", internedIdLocation = AstLocationTest}
                                                                                        , symbolParams = []
                                                                                        , symbolSorts =
                                                                                           ApplicationSorts
                                                                                            { applicationSortsOperands = []
                                                                                            , applicationSortsResult =
                                                                                               SortActualSort
                                                                                                ( SortActual
                                                                                                   { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                   , sortActualSorts = []
                                                                                                   }
                                                                                                )
                                                                                            }
                                                                                        , symbolAttributes =
                                                                                           A.Symbol
                                                                                            { function = A.Function{isDeclaredFunction = False}
                                                                                            , functional = A.Functional{isDeclaredFunctional = True}
                                                                                            , constructor = Constructor{isConstructor = True}
                                                                                            , injective = Injective{isDeclaredInjective = False}
                                                                                            , sortInjection = SortInjection{isSortInjection = False}
                                                                                            , anywhere = Anywhere{isAnywhere = False}
                                                                                            , hook = Hook{getHook = Nothing}
                                                                                            , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                            , smthook = Smthook{getSmthook = Nothing}
                                                                                            , memo = Memo{isMemo = False}
                                                                                            , klabel = Klabel{getKlabel = Nothing}
                                                                                            , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                            , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                            , sourceLocation =
                                                                                               SourceLocation
                                                                                                { location = Location{start = Nothing, end = Nothing}
                                                                                                , source = Source{unSource = Nothing}
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    , applicationChildren = []
                                                                                    }
                                                                                 )
                                                                            }
                                                                         ]
                                                                      }
                                                                   )
                                                              }
                                                          }
                                                       )
                                                  }
                                              , andSecond =
                                                 TermLike
                                                  { getTermLike =
                                                     TermAttributes
                                                      { termSort =
                                                         SortActualSort
                                                          ( SortActual
                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                             , sortActualSorts = []
                                                             }
                                                          )
                                                      , termFreeVariables = FreeVars.unsafe []
                                                      , termFunctional = Functional{isFunctional = False}
                                                      , termFunction = Function{isFunction = False}
                                                      , termDefined = Defined{isDefined = False}
                                                      , termCreated = Created{getCreated = Nothing}
                                                      , termSimplified = NotSimplified
                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                      }
                                                      :< ApplySymbolF
                                                       ( Application
                                                          { applicationSymbolOrAlias =
                                                             Symbol
                                                              { symbolConstructor = InternedId{getInternedId = internText "concatMap", internedIdLocation = AstLocationTest}
                                                              , symbolParams = []
                                                              , symbolSorts =
                                                                 ApplicationSorts
                                                                  { applicationSortsOperands =
                                                                     [ SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                     , SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                     ]
                                                                  , applicationSortsResult =
                                                                     SortActualSort
                                                                      ( SortActual
                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                         , sortActualSorts = []
                                                                         }
                                                                      )
                                                                  }
                                                              , symbolAttributes =
                                                                 A.Symbol
                                                                  { function = A.Function{isDeclaredFunction = True}
                                                                  , functional = A.Functional{isDeclaredFunctional = False}
                                                                  , constructor = Constructor{isConstructor = False}
                                                                  , injective = Injective{isDeclaredInjective = False}
                                                                  , sortInjection = SortInjection{isSortInjection = False}
                                                                  , anywhere = Anywhere{isAnywhere = False}
                                                                  , hook = Hook{getHook = Just "MAP.concat"}
                                                                  , smtlib = Smtlib{getSmtlib = Nothing}
                                                                  , smthook = Smthook{getSmthook = Nothing}
                                                                  , memo = Memo{isMemo = False}
                                                                  , klabel = Klabel{getKlabel = Nothing}
                                                                  , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                  , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                  , sourceLocation =
                                                                     SourceLocation
                                                                      { location = Location{start = Nothing, end = Nothing}
                                                                      , source = Source{unSource = Nothing}
                                                                      }
                                                                  }
                                                              }
                                                          , applicationChildren =
                                                             [ TermLike
                                                                { getTermLike =
                                                                   TermAttributes
                                                                    { termSort =
                                                                       SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                    , termFunctional = Functional{isFunctional = False}
                                                                    , termFunction = Function{isFunction = False}
                                                                    , termDefined = Defined{isDefined = False}
                                                                    , termCreated = Created{getCreated = Nothing}
                                                                    , termSimplified = NotSimplified
                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                    }
                                                                    :< T.NotF
                                                                     ( Not
                                                                        { notSort =
                                                                           SortActualSort
                                                                            ( SortActual
                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                               , sortActualSorts = []
                                                                               }
                                                                            )
                                                                        , notChild =
                                                                           TermLike
                                                                            { getTermLike =
                                                                               TermAttributes
                                                                                { termSort =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                , termFunctional = Functional{isFunctional = True}
                                                                                , termFunction = Function{isFunction = True}
                                                                                , termDefined = Defined{isDefined = True}
                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                , termSimplified = NotSimplified
                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                }
                                                                                :< ApplySymbolF
                                                                                 ( Application
                                                                                    { applicationSymbolOrAlias =
                                                                                       Symbol
                                                                                        { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                        , symbolParams = []
                                                                                        , symbolSorts =
                                                                                           ApplicationSorts
                                                                                            { applicationSortsOperands = []
                                                                                            , applicationSortsResult =
                                                                                               SortActualSort
                                                                                                ( SortActual
                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                   , sortActualSorts = []
                                                                                                   }
                                                                                                )
                                                                                            }
                                                                                        , symbolAttributes =
                                                                                           A.Symbol
                                                                                            { function = A.Function{isDeclaredFunction = False}
                                                                                            , functional = A.Functional{isDeclaredFunctional = True}
                                                                                            , constructor = Constructor{isConstructor = False}
                                                                                            , injective = Injective{isDeclaredInjective = False}
                                                                                            , sortInjection = SortInjection{isSortInjection = False}
                                                                                            , anywhere = Anywhere{isAnywhere = False}
                                                                                            , hook = Hook{getHook = Just "MAP.unit"}
                                                                                            , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                            , smthook = Smthook{getSmthook = Nothing}
                                                                                            , memo = Memo{isMemo = False}
                                                                                            , klabel = Klabel{getKlabel = Nothing}
                                                                                            , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                            , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                            , sourceLocation =
                                                                                               SourceLocation
                                                                                                { location = Location{start = Nothing, end = Nothing}
                                                                                                , source = Source{unSource = Nothing}
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    , applicationChildren = []
                                                                                    }
                                                                                 )
                                                                            }
                                                                        }
                                                                     )
                                                                }
                                                             , TermLike
                                                                { getTermLike =
                                                                   TermAttributes
                                                                    { termSort =
                                                                       SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                    , termFunctional = Functional{isFunctional = False}
                                                                    , termFunction = Function{isFunction = False}
                                                                    , termDefined = Defined{isDefined = True}
                                                                    , termCreated = Created{getCreated = Nothing}
                                                                    , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                    }
                                                                    :< T.TopF
                                                                     ( Top
                                                                        { topSort =
                                                                           SortActualSort
                                                                            ( SortActual
                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                               , sortActualSorts = []
                                                                               }
                                                                            )
                                                                        }
                                                                     )
                                                                }
                                                             ]
                                                          }
                                                       )
                                                  }
                                              }
                                           )
                                      }
                                  }
                               )
                          }
                      , iffSecond =
                         TermLike
                          { getTermLike =
                             TermAttributes
                              { termSort =
                                 SortActualSort
                                  ( SortActual
                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                     , sortActualSorts = []
                                     }
                                  )
                              , termFreeVariables = FreeVars.unsafe []
                              , termFunctional = Functional{isFunctional = False}
                              , termFunction = Function{isFunction = False}
                              , termDefined = Defined{isDefined = False}
                              , termCreated = Created{getCreated = Nothing}
                              , termSimplified = NotSimplified
                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                              }
                              :< T.ImpliesF
                               ( Implies
                                  { impliesSort =
                                     SortActualSort
                                      ( SortActual
                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                         , sortActualSorts = []
                                         }
                                      )
                                  , impliesFirst =
                                     TermLike
                                      { getTermLike =
                                         TermAttributes
                                          { termSort =
                                             SortActualSort
                                              ( SortActual
                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                 , sortActualSorts = []
                                                 }
                                              )
                                          , termFreeVariables = FreeVars.unsafe []
                                          , termFunctional = Functional{isFunctional = False}
                                          , termFunction = Function{isFunction = False}
                                          , termDefined = Defined{isDefined = False}
                                          , termCreated = Created{getCreated = Nothing}
                                          , termSimplified = NotSimplified
                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                          }
                                          :< T.IffF
                                           ( Iff
                                              { iffSort =
                                                 SortActualSort
                                                  ( SortActual
                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                     , sortActualSorts = []
                                                     }
                                                  )
                                              , iffFirst =
                                                 TermLike
                                                  { getTermLike =
                                                     TermAttributes
                                                      { termSort =
                                                         SortActualSort
                                                          ( SortActual
                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                             , sortActualSorts = []
                                                             }
                                                          )
                                                      , termFreeVariables = FreeVars.unsafe []
                                                      , termFunctional = Functional{isFunctional = True}
                                                      , termFunction = Function{isFunction = True}
                                                      , termDefined = Defined{isDefined = True}
                                                      , termCreated = Created{getCreated = Nothing}
                                                      , termSimplified = NotSimplified
                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                      }
                                                      :< ApplySymbolF
                                                       ( Application
                                                          { applicationSymbolOrAlias =
                                                             Symbol
                                                              { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                              , symbolParams = []
                                                              , symbolSorts =
                                                                 ApplicationSorts
                                                                  { applicationSortsOperands = []
                                                                  , applicationSortsResult =
                                                                     SortActualSort
                                                                      ( SortActual
                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                         , sortActualSorts = []
                                                                         }
                                                                      )
                                                                  }
                                                              , symbolAttributes =
                                                                 A.Symbol
                                                                  { function = A.Function{isDeclaredFunction = False}
                                                                  , functional = A.Functional{isDeclaredFunctional = True}
                                                                  , constructor = Constructor{isConstructor = False}
                                                                  , injective = Injective{isDeclaredInjective = False}
                                                                  , sortInjection = SortInjection{isSortInjection = False}
                                                                  , anywhere = Anywhere{isAnywhere = False}
                                                                  , hook = Hook{getHook = Just "MAP.unit"}
                                                                  , smtlib = Smtlib{getSmtlib = Nothing}
                                                                  , smthook = Smthook{getSmthook = Nothing}
                                                                  , memo = Memo{isMemo = False}
                                                                  , klabel = Klabel{getKlabel = Nothing}
                                                                  , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                  , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                  , sourceLocation =
                                                                     SourceLocation
                                                                      { location = Location{start = Nothing, end = Nothing}
                                                                      , source = Source{unSource = Nothing}
                                                                      }
                                                                  }
                                                              }
                                                          , applicationChildren = []
                                                          }
                                                       )
                                                  }
                                              , iffSecond =
                                                 TermLike
                                                  { getTermLike =
                                                     TermAttributes
                                                      { termSort =
                                                         SortActualSort
                                                          ( SortActual
                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                             , sortActualSorts = []
                                                             }
                                                          )
                                                      , termFreeVariables = FreeVars.unsafe []
                                                      , termFunctional = Functional{isFunctional = False}
                                                      , termFunction = Function{isFunction = False}
                                                      , termDefined = Defined{isDefined = False}
                                                      , termCreated = Created{getCreated = Nothing}
                                                      , termSimplified = Simplified (SimplifiedData{sType = Partly, condition = Any})
                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                      }
                                                      :< MuF
                                                       ( Mu
                                                          { muVariable =
                                                             Variable
                                                              { variableName =
                                                                 SetVariableName
                                                                  { unSetVariableName =
                                                                     VariableName
                                                                      { base = InternedId{getInternedId = internText "T", internedIdLocation = AstLocationTest}
                                                                      , counter = Nothing
                                                                      }
                                                                  }
                                                              , variableSort =
                                                                 SortActualSort
                                                                  ( SortActual
                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                     , sortActualSorts = []
                                                                     }
                                                                  )
                                                              }
                                                          , muChild =
                                                             TermLike
                                                              { getTermLike =
                                                                 TermAttributes
                                                                  { termSort =
                                                                     SortActualSort
                                                                      ( SortActual
                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                         , sortActualSorts = []
                                                                         }
                                                                      )
                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                  , termFunctional = Functional{isFunctional = False}
                                                                  , termFunction = Function{isFunction = True}
                                                                  , termDefined = Defined{isDefined = False}
                                                                  , termCreated = Created{getCreated = Nothing}
                                                                  , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                  }
                                                                  :< T.BottomF
                                                                   ( Bottom
                                                                      { bottomSort =
                                                                         SortActualSort
                                                                          ( SortActual
                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                             , sortActualSorts = []
                                                                             }
                                                                          )
                                                                      }
                                                                   )
                                                              }
                                                          }
                                                       )
                                                  }
                                              }
                                           )
                                      }
                                  , impliesSecond =
                                     TermLike
                                      { getTermLike =
                                         TermAttributes
                                          { termSort =
                                             SortActualSort
                                              ( SortActual
                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                 , sortActualSorts = []
                                                 }
                                              )
                                          , termFreeVariables = FreeVars.unsafe []
                                          , termFunctional = Functional{isFunctional = False}
                                          , termFunction = Function{isFunction = False}
                                          , termDefined = Defined{isDefined = True}
                                          , termCreated = Created{getCreated = Nothing}
                                          , termSimplified = NotSimplified
                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                          }
                                          :< T.OrF
                                           ( Or
                                              { orSort =
                                                 SortActualSort
                                                  ( SortActual
                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                     , sortActualSorts = []
                                                     }
                                                  )
                                              , orFirst =
                                                 TermLike
                                                  { getTermLike =
                                                     TermAttributes
                                                      { termSort =
                                                         SortActualSort
                                                          ( SortActual
                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                             , sortActualSorts = []
                                                             }
                                                          )
                                                      , termFreeVariables = FreeVars.unsafe []
                                                      , termFunctional = Functional{isFunctional = True}
                                                      , termFunction = Function{isFunction = True}
                                                      , termDefined = Defined{isDefined = True}
                                                      , termCreated = Created{getCreated = Nothing}
                                                      , termSimplified = NotSimplified
                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                      }
                                                      :< ApplySymbolF
                                                       ( Application
                                                          { applicationSymbolOrAlias =
                                                             Symbol
                                                              { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                              , symbolParams = []
                                                              , symbolSorts =
                                                                 ApplicationSorts
                                                                  { applicationSortsOperands = []
                                                                  , applicationSortsResult =
                                                                     SortActualSort
                                                                      ( SortActual
                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                         , sortActualSorts = []
                                                                         }
                                                                      )
                                                                  }
                                                              , symbolAttributes =
                                                                 A.Symbol
                                                                  { function = A.Function{isDeclaredFunction = False}
                                                                  , functional = A.Functional{isDeclaredFunctional = True}
                                                                  , constructor = Constructor{isConstructor = False}
                                                                  , injective = Injective{isDeclaredInjective = False}
                                                                  , sortInjection = SortInjection{isSortInjection = False}
                                                                  , anywhere = Anywhere{isAnywhere = False}
                                                                  , hook = Hook{getHook = Just "MAP.unit"}
                                                                  , smtlib = Smtlib{getSmtlib = Nothing}
                                                                  , smthook = Smthook{getSmthook = Nothing}
                                                                  , memo = Memo{isMemo = False}
                                                                  , klabel = Klabel{getKlabel = Nothing}
                                                                  , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                  , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                  , sourceLocation =
                                                                     SourceLocation
                                                                      { location = Location{start = Nothing, end = Nothing}
                                                                      , source = Source{unSource = Nothing}
                                                                      }
                                                                  }
                                                              }
                                                          , applicationChildren = []
                                                          }
                                                       )
                                                  }
                                              , orSecond =
                                                 TermLike
                                                  { getTermLike =
                                                     TermAttributes
                                                      { termSort =
                                                         SortActualSort
                                                          ( SortActual
                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                             , sortActualSorts = []
                                                             }
                                                          )
                                                      , termFreeVariables = FreeVars.unsafe []
                                                      , termFunctional = Functional{isFunctional = False}
                                                      , termFunction = Function{isFunction = False}
                                                      , termDefined = Defined{isDefined = False}
                                                      , termCreated = Created{getCreated = Nothing}
                                                      , termSimplified = Simplified (SimplifiedData{sType = Partly, condition = Any})
                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                      }
                                                      :< T.AndF
                                                       ( And
                                                          { andSort =
                                                             SortActualSort
                                                              ( SortActual
                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                 , sortActualSorts = []
                                                                 }
                                                              )
                                                          , andFirst =
                                                             TermLike
                                                              { getTermLike =
                                                                 TermAttributes
                                                                  { termSort =
                                                                     SortActualSort
                                                                      ( SortActual
                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                         , sortActualSorts = []
                                                                         }
                                                                      )
                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                  , termFunctional = Functional{isFunctional = False}
                                                                  , termFunction = Function{isFunction = False}
                                                                  , termDefined = Defined{isDefined = False}
                                                                  , termCreated = Created{getCreated = Nothing}
                                                                  , termSimplified = Simplified (SimplifiedData{sType = Partly, condition = Any})
                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                  }
                                                                  :< T.NotF
                                                                   ( Not
                                                                      { notSort =
                                                                         SortActualSort
                                                                          ( SortActual
                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                             , sortActualSorts = []
                                                                             }
                                                                          )
                                                                      , notChild =
                                                                         TermLike
                                                                          { getTermLike =
                                                                             TermAttributes
                                                                              { termSort =
                                                                                 SortActualSort
                                                                                  ( SortActual
                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                     , sortActualSorts = []
                                                                                     }
                                                                                  )
                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                              , termFunctional = Functional{isFunctional = False}
                                                                              , termFunction = Function{isFunction = True}
                                                                              , termDefined = Defined{isDefined = False}
                                                                              , termCreated = Created{getCreated = Nothing}
                                                                              , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                              }
                                                                              :< T.BottomF
                                                                               ( Bottom
                                                                                  { bottomSort =
                                                                                     SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                  }
                                                                               )
                                                                          }
                                                                      }
                                                                   )
                                                              }
                                                          , andSecond =
                                                             TermLike
                                                              { getTermLike =
                                                                 TermAttributes
                                                                  { termSort =
                                                                     SortActualSort
                                                                      ( SortActual
                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                         , sortActualSorts = []
                                                                         }
                                                                      )
                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                  , termFunctional = Functional{isFunctional = False}
                                                                  , termFunction = Function{isFunction = False}
                                                                  , termDefined = Defined{isDefined = True}
                                                                  , termCreated = Created{getCreated = Nothing}
                                                                  , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                  }
                                                                  :< T.TopF
                                                                   ( Top
                                                                      { topSort =
                                                                         SortActualSort
                                                                          ( SortActual
                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                             , sortActualSorts = []
                                                                             }
                                                                          )
                                                                      }
                                                                   )
                                                              }
                                                          }
                                                       )
                                                  }
                                              }
                                           )
                                      }
                                  }
                               )
                          }
                      }
                   )
              }
          }
       )
  }

part21112 =
 --                                                                                                , iffSecond =
 TermLike
  { getTermLike =
     TermAttributes
      { termSort =
         SortActualSort
          ( SortActual
             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
             , sortActualSorts = []
             }
          )
      , termFreeVariables = FreeVars.unsafe []
      , termFunctional = Functional{isFunctional = False}
      , termFunction = Function{isFunction = False}
      , termDefined = Defined{isDefined = False}
      , termCreated = Created{getCreated = Nothing}
      , termSimplified = NotSimplified
      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
      }
      :< NuF
       ( Nu
          { nuVariable =
             Variable
              { variableName =
                 SetVariableName
                  { unSetVariableName =
                     VariableName
                      { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                      , counter = Nothing
                      }
                  }
              , variableSort =
                 SortActualSort
                  ( SortActual
                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                     , sortActualSorts = []
                     }
                  )
              }
          , nuChild =
             TermLike
              { getTermLike =
                 TermAttributes
                  { termSort =
                     SortActualSort
                      ( SortActual
                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                         , sortActualSorts = []
                         }
                      )
                  , termFreeVariables =
                     FreeVars.unsafe
                      [
                        ( SomeVariableNameSet
                           ( SetVariableName
                              { unSetVariableName =
                                 VariableName
                                  { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                  , counter = Nothing
                                  }
                              }
                           )
                        , FreeVariableInfo
                           { sort =
                              SortActualSort
                               ( SortActual
                                  { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                  , sortActualSorts = []
                                  }
                               )
                           , count = 2
                           }
                        )
                      ]
                  , termFunctional = Functional{isFunctional = False}
                  , termFunction = Function{isFunction = False}
                  , termDefined = Defined{isDefined = False}
                  , termCreated = Created{getCreated = Nothing}
                  , termSimplified = NotSimplified
                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                  }
                  :< ApplySymbolF
                   ( Application
                      { applicationSymbolOrAlias =
                         Symbol
                          { symbolConstructor = InternedId{getInternedId = internText "concatMap", internedIdLocation = AstLocationTest}
                          , symbolParams = []
                          , symbolSorts =
                             ApplicationSorts
                              { applicationSortsOperands =
                                 [ SortActualSort
                                    ( SortActual
                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                       , sortActualSorts = []
                                       }
                                    )
                                 , SortActualSort
                                    ( SortActual
                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                       , sortActualSorts = []
                                       }
                                    )
                                 ]
                              , applicationSortsResult =
                                 SortActualSort
                                  ( SortActual
                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                     , sortActualSorts = []
                                     }
                                  )
                              }
                          , symbolAttributes =
                             A.Symbol
                              { function = A.Function{isDeclaredFunction = True}
                              , functional = A.Functional{isDeclaredFunctional = False}
                              , constructor = Constructor{isConstructor = False}
                              , injective = Injective{isDeclaredInjective = False}
                              , sortInjection = SortInjection{isSortInjection = False}
                              , anywhere = Anywhere{isAnywhere = False}
                              , hook = Hook{getHook = Just "MAP.concat"}
                              , smtlib = Smtlib{getSmtlib = Nothing}
                              , smthook = Smthook{getSmthook = Nothing}
                              , memo = Memo{isMemo = False}
                              , klabel = Klabel{getKlabel = Nothing}
                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                              , sourceLocation =
                                 SourceLocation
                                  { location = Location{start = Nothing, end = Nothing}
                                  , source = Source{unSource = Nothing}
                                  }
                              }
                          }
                      , applicationChildren =
                         [ TermLike
                            { getTermLike =
                               TermAttributes
                                { termSort =
                                   SortActualSort
                                    ( SortActual
                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                       , sortActualSorts = []
                                       }
                                    )
                                , termFreeVariables =
                                   FreeVars.unsafe
                                    [
                                      ( SomeVariableNameSet
                                         ( SetVariableName
                                            { unSetVariableName =
                                               VariableName
                                                { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                , counter = Nothing
                                                }
                                            }
                                         )
                                      , FreeVariableInfo
                                         { sort =
                                            SortActualSort
                                             ( SortActual
                                                { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                , sortActualSorts = []
                                                }
                                             )
                                         , count = 1
                                         }
                                      )
                                    ]
                                , termFunctional = Functional{isFunctional = False}
                                , termFunction = Function{isFunction = False}
                                , termDefined = Defined{isDefined = False}
                                , termCreated = Created{getCreated = Nothing}
                                , termSimplified = NotSimplified
                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                }
                                :< T.NuF
                                 ( Nu
                                    { nuVariable =
                                       Variable
                                        { variableName =
                                           SetVariableName
                                            { unSetVariableName =
                                               VariableName
                                                { base = InternedId{getInternedId = internText "EhE", internedIdLocation = AstLocationTest}
                                                , counter = Nothing
                                                }
                                            }
                                        , variableSort =
                                           SortActualSort
                                            ( SortActual
                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                               , sortActualSorts = []
                                               }
                                            )
                                        }
                                    , nuChild =
                                       TermLike
                                        { getTermLike =
                                           TermAttributes
                                            { termSort =
                                               SortActualSort
                                                ( SortActual
                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                   , sortActualSorts = []
                                                   }
                                                )
                                            , termFreeVariables =
                                               FreeVars.unsafe
                                                [
                                                  ( SomeVariableNameSet
                                                     ( SetVariableName
                                                        { unSetVariableName =
                                                           VariableName
                                                            { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                            , counter = Nothing
                                                            }
                                                        }
                                                     )
                                                  , FreeVariableInfo
                                                     { sort =
                                                        SortActualSort
                                                         ( SortActual
                                                            { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                            , sortActualSorts = []
                                                            }
                                                         )
                                                     , count = 1
                                                     }
                                                  )
                                                ]
                                            , termFunctional = Functional{isFunctional = False}
                                            , termFunction = Function{isFunction = False}
                                            , termDefined = Defined{isDefined = False}
                                            , termCreated = Created{getCreated = Nothing}
                                            , termSimplified = NotSimplified
                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                            }
                                            :< T.OrF
                                             ( Or
                                                { orSort =
                                                   SortActualSort
                                                    ( SortActual
                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                       , sortActualSorts = []
                                                       }
                                                    )
                                                , orFirst =
                                                   TermLike
                                                    { getTermLike =
                                                       TermAttributes
                                                        { termSort =
                                                           SortActualSort
                                                            ( SortActual
                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                               , sortActualSorts = []
                                                               }
                                                            )
                                                        , termFreeVariables =
                                                           FreeVars.unsafe
                                                            [
                                                              ( SomeVariableNameSet
                                                                 ( SetVariableName
                                                                    { unSetVariableName =
                                                                       VariableName
                                                                        { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                        , counter = Nothing
                                                                        }
                                                                    }
                                                                 )
                                                              , FreeVariableInfo
                                                                 { sort =
                                                                    SortActualSort
                                                                     ( SortActual
                                                                        { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                        , sortActualSorts = []
                                                                        }
                                                                     )
                                                                 , count = 1
                                                                 }
                                                              )
                                                            ]
                                                        , termFunctional = Functional{isFunctional = False}
                                                        , termFunction = Function{isFunction = False}
                                                        , termDefined = Defined{isDefined = False}
                                                        , termCreated = Created{getCreated = Nothing}
                                                        , termSimplified = NotSimplified
                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                        }
                                                        :< T.IffF
                                                         ( Iff
                                                            { iffSort =
                                                               SortActualSort
                                                                ( SortActual
                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                   , sortActualSorts = []
                                                                   }
                                                                )
                                                            , iffFirst =
                                                               TermLike
                                                                { getTermLike =
                                                                   TermAttributes
                                                                    { termSort =
                                                                       SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                    , termFreeVariables =
                                                                       FreeVars.unsafe
                                                                        [
                                                                          ( SomeVariableNameSet
                                                                             ( SetVariableName
                                                                                { unSetVariableName =
                                                                                   VariableName
                                                                                    { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                    , counter = Nothing
                                                                                    }
                                                                                }
                                                                             )
                                                                          , FreeVariableInfo
                                                                             { sort =
                                                                                SortActualSort
                                                                                 ( SortActual
                                                                                    { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                    , sortActualSorts = []
                                                                                    }
                                                                                 )
                                                                             , count = 1
                                                                             }
                                                                          )
                                                                        ]
                                                                    , termFunctional = Functional{isFunctional = False}
                                                                    , termFunction = Function{isFunction = False}
                                                                    , termDefined = Defined{isDefined = False}
                                                                    , termCreated = Created{getCreated = Nothing}
                                                                    , termSimplified = Simplified (SimplifiedData{sType = Partly, condition = Any})
                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                    }
                                                                    :< T.AndF
                                                                     ( And
                                                                        { andSort =
                                                                           SortActualSort
                                                                            ( SortActual
                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                               , sortActualSorts = []
                                                                               }
                                                                            )
                                                                        , andFirst =
                                                                           TermLike
                                                                            { getTermLike =
                                                                               TermAttributes
                                                                                { termSort =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                , termFunction = Function{isFunction = True}
                                                                                , termDefined = Defined{isDefined = False}
                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                }
                                                                                :< T.BottomF
                                                                                 ( Bottom
                                                                                    { bottomSort =
                                                                                       SortActualSort
                                                                                        ( SortActual
                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                           , sortActualSorts = []
                                                                                           }
                                                                                        )
                                                                                    }
                                                                                 )
                                                                            }
                                                                        , andSecond =
                                                                           TermLike
                                                                            { getTermLike =
                                                                               TermAttributes
                                                                                { termSort =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                , termFreeVariables =
                                                                                   FreeVars.unsafe
                                                                                    [
                                                                                      ( SomeVariableNameSet
                                                                                         ( SetVariableName
                                                                                            { unSetVariableName =
                                                                                               VariableName
                                                                                                { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                , counter = Nothing
                                                                                                }
                                                                                            }
                                                                                         )
                                                                                      , FreeVariableInfo
                                                                                         { sort =
                                                                                            SortActualSort
                                                                                             ( SortActual
                                                                                                { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                , sortActualSorts = []
                                                                                                }
                                                                                             )
                                                                                         , count = 1
                                                                                         }
                                                                                      )
                                                                                    ]
                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                , termFunction = Function{isFunction = False}
                                                                                , termDefined = Defined{isDefined = False}
                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                }
                                                                                :< VariableF
                                                                                 ( Const
                                                                                    ( Variable
                                                                                       { variableName =
                                                                                          SomeVariableNameSet
                                                                                           ( SetVariableName
                                                                                              { unSetVariableName =
                                                                                                 VariableName
                                                                                                  { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                  , counter = Nothing
                                                                                                  }
                                                                                              }
                                                                                           )
                                                                                       , variableSort =
                                                                                          SortActualSort
                                                                                           ( SortActual
                                                                                              { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                              , sortActualSorts = []
                                                                                              }
                                                                                           )
                                                                                       }
                                                                                    )
                                                                                 )
                                                                            }
                                                                        }
                                                                     )
                                                                }
                                                            , iffSecond =
                                                               TermLike
                                                                { getTermLike =
                                                                   TermAttributes
                                                                    { termSort =
                                                                       SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                    , termFunctional = Functional{isFunctional = False}
                                                                    , termFunction = Function{isFunction = True}
                                                                    , termDefined = Defined{isDefined = False}
                                                                    , termCreated = Created{getCreated = Nothing}
                                                                    , termSimplified = NotSimplified
                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                    }
                                                                    :< ApplySymbolF
                                                                     ( Application
                                                                        { applicationSymbolOrAlias =
                                                                           Symbol
                                                                            { symbolConstructor = InternedId{getInternedId = internText "opaqueMap", internedIdLocation = AstLocationTest}
                                                                            , symbolParams = []
                                                                            , symbolSorts =
                                                                               ApplicationSorts
                                                                                { applicationSortsOperands =
                                                                                   [ SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                   ]
                                                                                , applicationSortsResult =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                }
                                                                            , symbolAttributes =
                                                                               A.Symbol
                                                                                { function = A.Function{isDeclaredFunction = True}
                                                                                , functional = A.Functional{isDeclaredFunctional = False}
                                                                                , constructor = Constructor{isConstructor = False}
                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                , hook = Hook{getHook = Nothing}
                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                , memo = Memo{isMemo = False}
                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                , sourceLocation =
                                                                                   SourceLocation
                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                    , source = Source{unSource = Nothing}
                                                                                    }
                                                                                }
                                                                            }
                                                                        , applicationChildren =
                                                                           [ TermLike
                                                                              { getTermLike =
                                                                                 TermAttributes
                                                                                  { termSort =
                                                                                     SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                  , termFunction = Function{isFunction = True}
                                                                                  , termDefined = Defined{isDefined = False}
                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                  , termSimplified = NotSimplified
                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                  }
                                                                                  :< ApplySymbolF
                                                                                   ( Application
                                                                                      { applicationSymbolOrAlias =
                                                                                         Symbol
                                                                                          { symbolConstructor = InternedId{getInternedId = internText "cf", internedIdLocation = AstLocationTest}
                                                                                          , symbolParams = []
                                                                                          , symbolSorts =
                                                                                             ApplicationSorts
                                                                                              { applicationSortsOperands = []
                                                                                              , applicationSortsResult =
                                                                                                 SortActualSort
                                                                                                  ( SortActual
                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                     , sortActualSorts = []
                                                                                                     }
                                                                                                  )
                                                                                              }
                                                                                          , symbolAttributes =
                                                                                             A.Symbol
                                                                                              { function = A.Function{isDeclaredFunction = True}
                                                                                              , functional = A.Functional{isDeclaredFunctional = False}
                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                              , hook = Hook{getHook = Nothing}
                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                              , memo = Memo{isMemo = False}
                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                              , sourceLocation =
                                                                                                 SourceLocation
                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                  , source = Source{unSource = Nothing}
                                                                                                  }
                                                                                              }
                                                                                          }
                                                                                      , applicationChildren = []
                                                                                      }
                                                                                   )
                                                                              }
                                                                           ]
                                                                        }
                                                                     )
                                                                }
                                                            }
                                                         )
                                                    }
                                                , orSecond =
                                                   TermLike
                                                    { getTermLike =
                                                       TermAttributes
                                                        { termSort =
                                                           SortActualSort
                                                            ( SortActual
                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                               , sortActualSorts = []
                                                               }
                                                            )
                                                        , termFreeVariables = FreeVars.unsafe []
                                                        , termFunctional = Functional{isFunctional = False}
                                                        , termFunction = Function{isFunction = False}
                                                        , termDefined = Defined{isDefined = False}
                                                        , termCreated = Created{getCreated = Nothing}
                                                        , termSimplified = NotSimplified
                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                        }
                                                        :< T.OrF
                                                         ( Or
                                                            { orSort =
                                                               SortActualSort
                                                                ( SortActual
                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                   , sortActualSorts = []
                                                                   }
                                                                )
                                                            , orFirst =
                                                               TermLike
                                                                { getTermLike =
                                                                   TermAttributes
                                                                    { termSort =
                                                                       SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                    , termFunctional = Functional{isFunctional = False}
                                                                    , termFunction = Function{isFunction = True}
                                                                    , termDefined = Defined{isDefined = False}
                                                                    , termCreated = Created{getCreated = Nothing}
                                                                    , termSimplified = Simplified (SimplifiedData{sType = Partly, condition = Any})
                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                    }
                                                                    :< ApplySymbolF
                                                                     ( Application
                                                                        { applicationSymbolOrAlias =
                                                                           Symbol
                                                                            { symbolConstructor = InternedId{getInternedId = internText "opaqueMap", internedIdLocation = AstLocationTest}
                                                                            , symbolParams = []
                                                                            , symbolSorts =
                                                                               ApplicationSorts
                                                                                { applicationSortsOperands =
                                                                                   [ SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                   ]
                                                                                , applicationSortsResult =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                }
                                                                            , symbolAttributes =
                                                                               A.Symbol
                                                                                { function = A.Function{isDeclaredFunction = True}
                                                                                , functional = A.Functional{isDeclaredFunctional = False}
                                                                                , constructor = Constructor{isConstructor = False}
                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                , hook = Hook{getHook = Nothing}
                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                , memo = Memo{isMemo = False}
                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                , sourceLocation =
                                                                                   SourceLocation
                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                    , source = Source{unSource = Nothing}
                                                                                    }
                                                                                }
                                                                            }
                                                                        , applicationChildren =
                                                                           [ TermLike
                                                                              { getTermLike =
                                                                                 TermAttributes
                                                                                  { termSort =
                                                                                     SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                  , termFunction = Function{isFunction = True}
                                                                                  , termDefined = Defined{isDefined = True}
                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                  , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                  }
                                                                                  :< ApplySymbolF
                                                                                   ( Application
                                                                                      { applicationSymbolOrAlias =
                                                                                         Symbol
                                                                                          { symbolConstructor = InternedId{getInternedId = internText "a", internedIdLocation = AstLocationTest}
                                                                                          , symbolParams = []
                                                                                          , symbolSorts =
                                                                                             ApplicationSorts
                                                                                              { applicationSortsOperands = []
                                                                                              , applicationSortsResult =
                                                                                                 SortActualSort
                                                                                                  ( SortActual
                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                     , sortActualSorts = []
                                                                                                     }
                                                                                                  )
                                                                                              }
                                                                                          , symbolAttributes =
                                                                                             A.Symbol
                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                              , constructor = Constructor{isConstructor = True}
                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                              , hook = Hook{getHook = Nothing}
                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                              , memo = Memo{isMemo = False}
                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                              , sourceLocation =
                                                                                                 SourceLocation
                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                  , source = Source{unSource = Nothing}
                                                                                                  }
                                                                                              }
                                                                                          }
                                                                                      , applicationChildren = []
                                                                                      }
                                                                                   )
                                                                              }
                                                                           ]
                                                                        }
                                                                     )
                                                                }
                                                            , orSecond =
                                                               TermLike
                                                                { getTermLike =
                                                                   TermAttributes
                                                                    { termSort =
                                                                       SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                    , termFunctional = Functional{isFunctional = False}
                                                                    , termFunction = Function{isFunction = False}
                                                                    , termDefined = Defined{isDefined = False}
                                                                    , termCreated = Created{getCreated = Nothing}
                                                                    , termSimplified = NotSimplified
                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                    }
                                                                    :< T.IffF
                                                                     ( Iff
                                                                        { iffSort =
                                                                           SortActualSort
                                                                            ( SortActual
                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                               , sortActualSorts = []
                                                                               }
                                                                            )
                                                                        , iffFirst =
                                                                           TermLike
                                                                            { getTermLike =
                                                                               TermAttributes
                                                                                { termSort =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                , termFunctional = Functional{isFunctional = True}
                                                                                , termFunction = Function{isFunction = True}
                                                                                , termDefined = Defined{isDefined = True}
                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                , termSimplified = NotSimplified
                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                }
                                                                                :< ApplySymbolF
                                                                                 ( Application
                                                                                    { applicationSymbolOrAlias =
                                                                                       Symbol
                                                                                        { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                        , symbolParams = []
                                                                                        , symbolSorts =
                                                                                           ApplicationSorts
                                                                                            { applicationSortsOperands = []
                                                                                            , applicationSortsResult =
                                                                                               SortActualSort
                                                                                                ( SortActual
                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                   , sortActualSorts = []
                                                                                                   }
                                                                                                )
                                                                                            }
                                                                                        , symbolAttributes =
                                                                                           A.Symbol
                                                                                            { function = A.Function{isDeclaredFunction = False}
                                                                                            , functional = A.Functional{isDeclaredFunctional = True}
                                                                                            , constructor = Constructor{isConstructor = False}
                                                                                            , injective = Injective{isDeclaredInjective = False}
                                                                                            , sortInjection = SortInjection{isSortInjection = False}
                                                                                            , anywhere = Anywhere{isAnywhere = False}
                                                                                            , hook = Hook{getHook = Just "MAP.unit"}
                                                                                            , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                            , smthook = Smthook{getSmthook = Nothing}
                                                                                            , memo = Memo{isMemo = False}
                                                                                            , klabel = Klabel{getKlabel = Nothing}
                                                                                            , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                            , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                            , sourceLocation =
                                                                                               SourceLocation
                                                                                                { location = Location{start = Nothing, end = Nothing}
                                                                                                , source = Source{unSource = Nothing}
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    , applicationChildren = []
                                                                                    }
                                                                                 )
                                                                            }
                                                                        , iffSecond =
                                                                           TermLike
                                                                            { getTermLike =
                                                                               TermAttributes
                                                                                { termSort =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                , termFunctional = Functional{isFunctional = True}
                                                                                , termFunction = Function{isFunction = True}
                                                                                , termDefined = Defined{isDefined = True}
                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                , termSimplified = NotSimplified
                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                }
                                                                                :< ApplySymbolF
                                                                                 ( Application
                                                                                    { applicationSymbolOrAlias =
                                                                                       Symbol
                                                                                        { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                        , symbolParams = []
                                                                                        , symbolSorts =
                                                                                           ApplicationSorts
                                                                                            { applicationSortsOperands = []
                                                                                            , applicationSortsResult =
                                                                                               SortActualSort
                                                                                                ( SortActual
                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                   , sortActualSorts = []
                                                                                                   }
                                                                                                )
                                                                                            }
                                                                                        , symbolAttributes =
                                                                                           A.Symbol
                                                                                            { function = A.Function{isDeclaredFunction = False}
                                                                                            , functional = A.Functional{isDeclaredFunctional = True}
                                                                                            , constructor = Constructor{isConstructor = False}
                                                                                            , injective = Injective{isDeclaredInjective = False}
                                                                                            , sortInjection = SortInjection{isSortInjection = False}
                                                                                            , anywhere = Anywhere{isAnywhere = False}
                                                                                            , hook = Hook{getHook = Just "MAP.unit"}
                                                                                            , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                            , smthook = Smthook{getSmthook = Nothing}
                                                                                            , memo = Memo{isMemo = False}
                                                                                            , klabel = Klabel{getKlabel = Nothing}
                                                                                            , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                            , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                            , sourceLocation =
                                                                                               SourceLocation
                                                                                                { location = Location{start = Nothing, end = Nothing}
                                                                                                , source = Source{unSource = Nothing}
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    , applicationChildren = []
                                                                                    }
                                                                                 )
                                                                            }
                                                                        }
                                                                     )
                                                                }
                                                            }
                                                         )
                                                    }
                                                }
                                             )
                                        }
                                    }
                                 )
                            }
                         , TermLike
                            { getTermLike =
                               TermAttributes
                                { termSort =
                                   SortActualSort
                                    ( SortActual
                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                       , sortActualSorts = []
                                       }
                                    )
                                , termFreeVariables =
                                   FreeVars.unsafe
                                    [
                                      ( SomeVariableNameSet
                                         ( SetVariableName
                                            { unSetVariableName =
                                               VariableName
                                                { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                , counter = Nothing
                                                }
                                            }
                                         )
                                      , FreeVariableInfo
                                         { sort =
                                            SortActualSort
                                             ( SortActual
                                                { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                , sortActualSorts = []
                                                }
                                             )
                                         , count = 1
                                         }
                                      )
                                    ]
                                , termFunctional = Functional{isFunctional = False}
                                , termFunction = Function{isFunction = False}
                                , termDefined = Defined{isDefined = False}
                                , termCreated = Created{getCreated = Nothing}
                                , termSimplified = NotSimplified
                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                }
                                :< T.OrF
                                 ( Or
                                    { orSort =
                                       SortActualSort
                                        ( SortActual
                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                           , sortActualSorts = []
                                           }
                                        )
                                    , orFirst =
                                       TermLike
                                        { getTermLike =
                                           TermAttributes
                                            { termSort =
                                               SortActualSort
                                                ( SortActual
                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                   , sortActualSorts = []
                                                   }
                                                )
                                            , termFreeVariables =
                                               FreeVars.unsafe
                                                [
                                                  ( SomeVariableNameSet
                                                     ( SetVariableName
                                                        { unSetVariableName =
                                                           VariableName
                                                            { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                            , counter = Nothing
                                                            }
                                                        }
                                                     )
                                                  , FreeVariableInfo
                                                     { sort =
                                                        SortActualSort
                                                         ( SortActual
                                                            { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                            , sortActualSorts = []
                                                            }
                                                         )
                                                     , count = 1
                                                     }
                                                  )
                                                ]
                                            , termFunctional = Functional{isFunctional = False}
                                            , termFunction = Function{isFunction = False}
                                            , termDefined = Defined{isDefined = False}
                                            , termCreated = Created{getCreated = Nothing}
                                            , termSimplified = NotSimplified
                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                            }
                                            :< ApplySymbolF
                                             ( Application
                                                { applicationSymbolOrAlias =
                                                   Symbol
                                                    { symbolConstructor = InternedId{getInternedId = internText "concatMap", internedIdLocation = AstLocationTest}
                                                    , symbolParams = []
                                                    , symbolSorts =
                                                       ApplicationSorts
                                                        { applicationSortsOperands =
                                                           [ SortActualSort
                                                              ( SortActual
                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                 , sortActualSorts = []
                                                                 }
                                                              )
                                                           , SortActualSort
                                                              ( SortActual
                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                 , sortActualSorts = []
                                                                 }
                                                              )
                                                           ]
                                                        , applicationSortsResult =
                                                           SortActualSort
                                                            ( SortActual
                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                               , sortActualSorts = []
                                                               }
                                                            )
                                                        }
                                                    , symbolAttributes =
                                                       A.Symbol
                                                        { function = A.Function{isDeclaredFunction = True}
                                                        , functional = A.Functional{isDeclaredFunctional = False}
                                                        , constructor = Constructor{isConstructor = False}
                                                        , injective = Injective{isDeclaredInjective = False}
                                                        , sortInjection = SortInjection{isSortInjection = False}
                                                        , anywhere = Anywhere{isAnywhere = False}
                                                        , hook = Hook{getHook = Just "MAP.concat"}
                                                        , smtlib = Smtlib{getSmtlib = Nothing}
                                                        , smthook = Smthook{getSmthook = Nothing}
                                                        , memo = Memo{isMemo = False}
                                                        , klabel = Klabel{getKlabel = Nothing}
                                                        , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                        , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                        , sourceLocation =
                                                           SourceLocation
                                                            { location = Location{start = Nothing, end = Nothing}
                                                            , source = Source{unSource = Nothing}
                                                            }
                                                        }
                                                    }
                                                , applicationChildren =
                                                   [ TermLike
                                                      { getTermLike =
                                                         TermAttributes
                                                          { termSort =
                                                             SortActualSort
                                                              ( SortActual
                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                 , sortActualSorts = []
                                                                 }
                                                              )
                                                          , termFreeVariables =
                                                             FreeVars.unsafe
                                                              [
                                                                ( SomeVariableNameSet
                                                                   ( SetVariableName
                                                                      { unSetVariableName =
                                                                         VariableName
                                                                          { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                          , counter = Nothing
                                                                          }
                                                                      }
                                                                   )
                                                                , FreeVariableInfo
                                                                   { sort =
                                                                      SortActualSort
                                                                       ( SortActual
                                                                          { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                          , sortActualSorts = []
                                                                          }
                                                                       )
                                                                   , count = 1
                                                                   }
                                                                )
                                                              ]
                                                          , termFunctional = Functional{isFunctional = False}
                                                          , termFunction = Function{isFunction = False}
                                                          , termDefined = Defined{isDefined = False}
                                                          , termCreated = Created{getCreated = Nothing}
                                                          , termSimplified = NotSimplified
                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                          }
                                                          :< T.IffF
                                                           ( Iff
                                                              { iffSort =
                                                                 SortActualSort
                                                                  ( SortActual
                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                     , sortActualSorts = []
                                                                     }
                                                                  )
                                                              , iffFirst =
                                                                 TermLike
                                                                  { getTermLike =
                                                                     TermAttributes
                                                                      { termSort =
                                                                         SortActualSort
                                                                          ( SortActual
                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                             , sortActualSorts = []
                                                                             }
                                                                          )
                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                      , termFunctional = Functional{isFunctional = False}
                                                                      , termFunction = Function{isFunction = False}
                                                                      , termDefined = Defined{isDefined = True}
                                                                      , termCreated = Created{getCreated = Nothing}
                                                                      , termSimplified = NotSimplified
                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                      }
                                                                      :< T.OrF
                                                                       ( Or
                                                                          { orSort =
                                                                             SortActualSort
                                                                              ( SortActual
                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                 , sortActualSorts = []
                                                                                 }
                                                                              )
                                                                          , orFirst =
                                                                             TermLike
                                                                              { getTermLike =
                                                                                 TermAttributes
                                                                                  { termSort =
                                                                                     SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                  , termFunction = Function{isFunction = True}
                                                                                  , termDefined = Defined{isDefined = True}
                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                  , termSimplified = NotSimplified
                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                  }
                                                                                  :< ApplySymbolF
                                                                                   ( Application
                                                                                      { applicationSymbolOrAlias =
                                                                                         Symbol
                                                                                          { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                          , symbolParams = []
                                                                                          , symbolSorts =
                                                                                             ApplicationSorts
                                                                                              { applicationSortsOperands = []
                                                                                              , applicationSortsResult =
                                                                                                 SortActualSort
                                                                                                  ( SortActual
                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                     , sortActualSorts = []
                                                                                                     }
                                                                                                  )
                                                                                              }
                                                                                          , symbolAttributes =
                                                                                             A.Symbol
                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                              , hook = Hook{getHook = Just "MAP.unit"}
                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                              , memo = Memo{isMemo = False}
                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                              , sourceLocation =
                                                                                                 SourceLocation
                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                  , source = Source{unSource = Nothing}
                                                                                                  }
                                                                                              }
                                                                                          }
                                                                                      , applicationChildren = []
                                                                                      }
                                                                                   )
                                                                              }
                                                                          , orSecond =
                                                                             TermLike
                                                                              { getTermLike =
                                                                                 TermAttributes
                                                                                  { termSort =
                                                                                     SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                  , termFunction = Function{isFunction = False}
                                                                                  , termDefined = Defined{isDefined = True}
                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                  , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                  }
                                                                                  :< T.TopF
                                                                                   ( Top
                                                                                      { topSort =
                                                                                         SortActualSort
                                                                                          ( SortActual
                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                             , sortActualSorts = []
                                                                                             }
                                                                                          )
                                                                                      }
                                                                                   )
                                                                              }
                                                                          }
                                                                       )
                                                                  }
                                                              , iffSecond =
                                                                 TermLike
                                                                  { getTermLike =
                                                                     TermAttributes
                                                                      { termSort =
                                                                         SortActualSort
                                                                          ( SortActual
                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                             , sortActualSorts = []
                                                                             }
                                                                          )
                                                                      , termFreeVariables =
                                                                         FreeVars.unsafe
                                                                          [
                                                                            ( SomeVariableNameSet
                                                                               ( SetVariableName
                                                                                  { unSetVariableName =
                                                                                     VariableName
                                                                                      { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                      , counter = Nothing
                                                                                      }
                                                                                  }
                                                                               )
                                                                            , FreeVariableInfo
                                                                               { sort =
                                                                                  SortActualSort
                                                                                   ( SortActual
                                                                                      { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                      , sortActualSorts = []
                                                                                      }
                                                                                   )
                                                                               , count = 1
                                                                               }
                                                                            )
                                                                          ]
                                                                      , termFunctional = Functional{isFunctional = False}
                                                                      , termFunction = Function{isFunction = False}
                                                                      , termDefined = Defined{isDefined = False}
                                                                      , termCreated = Created{getCreated = Nothing}
                                                                      , termSimplified = Simplified (SimplifiedData{sType = Partly, condition = Any})
                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                      }
                                                                      :< T.NotF
                                                                       ( Not
                                                                          { notSort =
                                                                             SortActualSort
                                                                              ( SortActual
                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                 , sortActualSorts = []
                                                                                 }
                                                                              )
                                                                          , notChild =
                                                                             TermLike
                                                                              { getTermLike =
                                                                                 TermAttributes
                                                                                  { termSort =
                                                                                     SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                  , termFreeVariables =
                                                                                     FreeVars.unsafe
                                                                                      [
                                                                                        ( SomeVariableNameSet
                                                                                           ( SetVariableName
                                                                                              { unSetVariableName =
                                                                                                 VariableName
                                                                                                  { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                  , counter = Nothing
                                                                                                  }
                                                                                              }
                                                                                           )
                                                                                        , FreeVariableInfo
                                                                                           { sort =
                                                                                              SortActualSort
                                                                                               ( SortActual
                                                                                                  { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                  , sortActualSorts = []
                                                                                                  }
                                                                                               )
                                                                                           , count = 1
                                                                                           }
                                                                                        )
                                                                                      ]
                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                  , termFunction = Function{isFunction = False}
                                                                                  , termDefined = Defined{isDefined = False}
                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                  , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                  }
                                                                                  :< VariableF
                                                                                   ( Const
                                                                                      ( Variable
                                                                                         { variableName =
                                                                                            SomeVariableNameSet
                                                                                             ( SetVariableName
                                                                                                { unSetVariableName =
                                                                                                   VariableName
                                                                                                    { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                    , counter = Nothing
                                                                                                    }
                                                                                                }
                                                                                             )
                                                                                         , variableSort =
                                                                                            SortActualSort
                                                                                             ( SortActual
                                                                                                { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                , sortActualSorts = []
                                                                                                }
                                                                                             )
                                                                                         }
                                                                                      )
                                                                                   )
                                                                              }
                                                                          }
                                                                       )
                                                                  }
                                                              }
                                                           )
                                                      }
                                                   , TermLike
                                                      { getTermLike =
                                                         TermAttributes
                                                          { termSort =
                                                             SortActualSort
                                                              ( SortActual
                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                 , sortActualSorts = []
                                                                 }
                                                              )
                                                          , termFreeVariables = FreeVars.unsafe []
                                                          , termFunctional = Functional{isFunctional = False}
                                                          , termFunction = Function{isFunction = False}
                                                          , termDefined = Defined{isDefined = False}
                                                          , termCreated = Created{getCreated = Nothing}
                                                          , termSimplified = Simplified (SimplifiedData{sType = Partly, condition = Any})
                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                          }
                                                          :< MuF
                                                           ( Mu
                                                              { muVariable =
                                                                 Variable
                                                                  { variableName =
                                                                     SetVariableName
                                                                      { unSetVariableName =
                                                                         VariableName
                                                                          { base = InternedId{getInternedId = internText "QAPt", internedIdLocation = AstLocationTest}
                                                                          , counter = Nothing
                                                                          }
                                                                      }
                                                                  , variableSort =
                                                                     SortActualSort
                                                                      ( SortActual
                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                         , sortActualSorts = []
                                                                         }
                                                                      )
                                                                  }
                                                              , muChild =
                                                                 TermLike
                                                                  { getTermLike =
                                                                     TermAttributes
                                                                      { termSort =
                                                                         SortActualSort
                                                                          ( SortActual
                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                             , sortActualSorts = []
                                                                             }
                                                                          )
                                                                      , termFreeVariables =
                                                                         FreeVars.unsafe
                                                                          [
                                                                            ( SomeVariableNameSet
                                                                               ( SetVariableName
                                                                                  { unSetVariableName =
                                                                                     VariableName
                                                                                      { base = InternedId{getInternedId = internText "QAPt", internedIdLocation = AstLocationTest}
                                                                                      , counter = Nothing
                                                                                      }
                                                                                  }
                                                                               )
                                                                            , FreeVariableInfo
                                                                               { sort =
                                                                                  SortActualSort
                                                                                   ( SortActual
                                                                                      { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                      , sortActualSorts = []
                                                                                      }
                                                                                   )
                                                                               , count = 1
                                                                               }
                                                                            )
                                                                          ]
                                                                      , termFunctional = Functional{isFunctional = False}
                                                                      , termFunction = Function{isFunction = False}
                                                                      , termDefined = Defined{isDefined = False}
                                                                      , termCreated = Created{getCreated = Nothing}
                                                                      , termSimplified = Simplified (SimplifiedData{sType = Fully, condition = Any})
                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                      }
                                                                      :< VariableF
                                                                       ( Const
                                                                          ( Variable
                                                                             { variableName =
                                                                                SomeVariableNameSet
                                                                                 ( SetVariableName
                                                                                    { unSetVariableName =
                                                                                       VariableName
                                                                                        { base = InternedId{getInternedId = internText "QAPt", internedIdLocation = AstLocationTest}
                                                                                        , counter = Nothing
                                                                                        }
                                                                                    }
                                                                                 )
                                                                             , variableSort =
                                                                                SortActualSort
                                                                                 ( SortActual
                                                                                    { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                    , sortActualSorts = []
                                                                                    }
                                                                                 )
                                                                             }
                                                                          )
                                                                       )
                                                                  }
                                                              }
                                                           )
                                                      }
                                                   ]
                                                }
                                             )
                                        }
                                    , orSecond =
                                       TermLike
                                        { getTermLike =
                                           TermAttributes
                                            { termSort =
                                               SortActualSort
                                                ( SortActual
                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                   , sortActualSorts = []
                                                   }
                                                )
                                            , termFreeVariables = FreeVars.unsafe []
                                            , termFunctional = Functional{isFunctional = False}
                                            , termFunction = Function{isFunction = False}
                                            , termDefined = Defined{isDefined = False}
                                            , termCreated = Created{getCreated = Nothing}
                                            , termSimplified = NotSimplified
                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                            }
                                            :< ApplySymbolF
                                             ( Application
                                                { applicationSymbolOrAlias =
                                                   Symbol
                                                    { symbolConstructor = InternedId{getInternedId = internText "concatMap", internedIdLocation = AstLocationTest}
                                                    , symbolParams = []
                                                    , symbolSorts =
                                                       ApplicationSorts
                                                        { applicationSortsOperands =
                                                           [ SortActualSort
                                                              ( SortActual
                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                 , sortActualSorts = []
                                                                 }
                                                              )
                                                           , SortActualSort
                                                              ( SortActual
                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                 , sortActualSorts = []
                                                                 }
                                                              )
                                                           ]
                                                        , applicationSortsResult =
                                                           SortActualSort
                                                            ( SortActual
                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                               , sortActualSorts = []
                                                               }
                                                            )
                                                        }
                                                    , symbolAttributes =
                                                       A.Symbol
                                                        { function = A.Function{isDeclaredFunction = True}
                                                        , functional = A.Functional{isDeclaredFunctional = False}
                                                        , constructor = Constructor{isConstructor = False}
                                                        , injective = Injective{isDeclaredInjective = False}
                                                        , sortInjection = SortInjection{isSortInjection = False}
                                                        , anywhere = Anywhere{isAnywhere = False}
                                                        , hook = Hook{getHook = Just "MAP.concat"}
                                                        , smtlib = Smtlib{getSmtlib = Nothing}
                                                        , smthook = Smthook{getSmthook = Nothing}
                                                        , memo = Memo{isMemo = False}
                                                        , klabel = Klabel{getKlabel = Nothing}
                                                        , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                        , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                        , sourceLocation =
                                                           SourceLocation
                                                            { location = Location{start = Nothing, end = Nothing}
                                                            , source = Source{unSource = Nothing}
                                                            }
                                                        }
                                                    }
                                                , applicationChildren =
                                                   [ TermLike
                                                      { getTermLike =
                                                         TermAttributes
                                                          { termSort =
                                                             SortActualSort
                                                              ( SortActual
                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                 , sortActualSorts = []
                                                                 }
                                                              )
                                                          , termFreeVariables = FreeVars.unsafe []
                                                          , termFunctional = Functional{isFunctional = True}
                                                          , termFunction = Function{isFunction = True}
                                                          , termDefined = Defined{isDefined = True}
                                                          , termCreated = Created{getCreated = Nothing}
                                                          , termSimplified = NotSimplified
                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                          }
                                                          :< ApplySymbolF
                                                           ( Application
                                                              { applicationSymbolOrAlias =
                                                                 Symbol
                                                                  { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                  , symbolParams = []
                                                                  , symbolSorts =
                                                                     ApplicationSorts
                                                                      { applicationSortsOperands = []
                                                                      , applicationSortsResult =
                                                                         SortActualSort
                                                                          ( SortActual
                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                             , sortActualSorts = []
                                                                             }
                                                                          )
                                                                      }
                                                                  , symbolAttributes =
                                                                     A.Symbol
                                                                      { function = A.Function{isDeclaredFunction = False}
                                                                      , functional = A.Functional{isDeclaredFunctional = True}
                                                                      , constructor = Constructor{isConstructor = False}
                                                                      , injective = Injective{isDeclaredInjective = False}
                                                                      , sortInjection = SortInjection{isSortInjection = False}
                                                                      , anywhere = Anywhere{isAnywhere = False}
                                                                      , hook = Hook{getHook = Just "MAP.unit"}
                                                                      , smtlib = Smtlib{getSmtlib = Nothing}
                                                                      , smthook = Smthook{getSmthook = Nothing}
                                                                      , memo = Memo{isMemo = False}
                                                                      , klabel = Klabel{getKlabel = Nothing}
                                                                      , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                      , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                      , sourceLocation =
                                                                         SourceLocation
                                                                          { location = Location{start = Nothing, end = Nothing}
                                                                          , source = Source{unSource = Nothing}
                                                                          }
                                                                      }
                                                                  }
                                                              , applicationChildren = []
                                                              }
                                                           )
                                                      }
                                                   , TermLike
                                                      { getTermLike =
                                                         TermAttributes
                                                          { termSort =
                                                             SortActualSort
                                                              ( SortActual
                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                 , sortActualSorts = []
                                                                 }
                                                              )
                                                          , termFreeVariables = FreeVars.unsafe []
                                                          , termFunctional = Functional{isFunctional = False}
                                                          , termFunction = Function{isFunction = False}
                                                          , termDefined = Defined{isDefined = False}
                                                          , termCreated = Created{getCreated = Nothing}
                                                          , termSimplified = NotSimplified
                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                          }
                                                          :< T.NotF
                                                           ( Not
                                                              { notSort =
                                                                 SortActualSort
                                                                  ( SortActual
                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                     , sortActualSorts = []
                                                                     }
                                                                  )
                                                              , notChild =
                                                                 TermLike
                                                                  { getTermLike =
                                                                     TermAttributes
                                                                      { termSort =
                                                                         SortActualSort
                                                                          ( SortActual
                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                             , sortActualSorts = []
                                                                             }
                                                                          )
                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                      , termFunctional = Functional{isFunctional = False}
                                                                      , termFunction = Function{isFunction = True}
                                                                      , termDefined = Defined{isDefined = False}
                                                                      , termCreated = Created{getCreated = Nothing}
                                                                      , termSimplified = NotSimplified
                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                      }
                                                                      :< ApplySymbolF
                                                                       ( Application
                                                                          { applicationSymbolOrAlias =
                                                                             Symbol
                                                                              { symbolConstructor = InternedId{getInternedId = internText "opaqueMap", internedIdLocation = AstLocationTest}
                                                                              , symbolParams = []
                                                                              , symbolSorts =
                                                                                 ApplicationSorts
                                                                                  { applicationSortsOperands =
                                                                                     [ SortActualSort
                                                                                        ( SortActual
                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                           , sortActualSorts = []
                                                                                           }
                                                                                        )
                                                                                     ]
                                                                                  , applicationSortsResult =
                                                                                     SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                  }
                                                                              , symbolAttributes =
                                                                                 A.Symbol
                                                                                  { function = A.Function{isDeclaredFunction = True}
                                                                                  , functional = A.Functional{isDeclaredFunctional = False}
                                                                                  , constructor = Constructor{isConstructor = False}
                                                                                  , injective = Injective{isDeclaredInjective = False}
                                                                                  , sortInjection = SortInjection{isSortInjection = False}
                                                                                  , anywhere = Anywhere{isAnywhere = False}
                                                                                  , hook = Hook{getHook = Nothing}
                                                                                  , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                  , smthook = Smthook{getSmthook = Nothing}
                                                                                  , memo = Memo{isMemo = False}
                                                                                  , klabel = Klabel{getKlabel = Nothing}
                                                                                  , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                  , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                  , sourceLocation =
                                                                                     SourceLocation
                                                                                      { location = Location{start = Nothing, end = Nothing}
                                                                                      , source = Source{unSource = Nothing}
                                                                                      }
                                                                                  }
                                                                              }
                                                                          , applicationChildren =
                                                                             [ TermLike
                                                                                { getTermLike =
                                                                                   TermAttributes
                                                                                    { termSort =
                                                                                       SortActualSort
                                                                                        ( SortActual
                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                           , sortActualSorts = []
                                                                                           }
                                                                                        )
                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                    , termFunctional = Functional{isFunctional = True}
                                                                                    , termFunction = Function{isFunction = True}
                                                                                    , termDefined = Defined{isDefined = True}
                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                    , termSimplified = NotSimplified
                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                    }
                                                                                    :< ApplySymbolF
                                                                                     ( Application
                                                                                        { applicationSymbolOrAlias =
                                                                                           Symbol
                                                                                            { symbolConstructor = InternedId{getInternedId = internText "functional00", internedIdLocation = AstLocationTest}
                                                                                            , symbolParams = []
                                                                                            , symbolSorts =
                                                                                               ApplicationSorts
                                                                                                { applicationSortsOperands = []
                                                                                                , applicationSortsResult =
                                                                                                   SortActualSort
                                                                                                    ( SortActual
                                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                       , sortActualSorts = []
                                                                                                       }
                                                                                                    )
                                                                                                }
                                                                                            , symbolAttributes =
                                                                                               A.Symbol
                                                                                                { function = A.Function{isDeclaredFunction = False}
                                                                                                , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                , constructor = Constructor{isConstructor = False}
                                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                                , hook = Hook{getHook = Nothing}
                                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                                , memo = Memo{isMemo = False}
                                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                , sourceLocation =
                                                                                                   SourceLocation
                                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                                    , source = Source{unSource = Nothing}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        , applicationChildren = []
                                                                                        }
                                                                                     )
                                                                                }
                                                                             ]
                                                                          }
                                                                       )
                                                                  }
                                                              }
                                                           )
                                                      }
                                                   ]
                                                }
                                             )
                                        }
                                    }
                                 )
                            }
                         ]
                      }
                   )
              }
          }
       )
  }

part2112 =
--                                                                        , orSecond =
                                                                           TermLike
                                                                            { getTermLike =
                                                                               TermAttributes
                                                                                { termSort =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                , termFunction = Function{isFunction = False}
                                                                                , termDefined = Defined{isDefined = False}
                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                , termSimplified = NotSimplified
                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                }
                                                                                :< T.ImpliesF
                                                                                 ( Implies
                                                                                    { impliesSort =
                                                                                       SortActualSort
                                                                                        ( SortActual
                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                           , sortActualSorts = []
                                                                                           }
                                                                                        )
                                                                                    , impliesFirst =
                                                                                       TermLike
                                                                                        { getTermLike =
                                                                                           TermAttributes
                                                                                            { termSort =
                                                                                               SortActualSort
                                                                                                ( SortActual
                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                   , sortActualSorts = []
                                                                                                   }
                                                                                                )
                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                            , termFunction = Function{isFunction = False}
                                                                                            , termDefined = Defined{isDefined = False}
                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                            , termSimplified = NotSimplified
                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                            }
                                                                                            :< T.MuF
                                                                                             ( Mu
                                                                                                { muVariable =
                                                                                                   Variable
                                                                                                    { variableName =
                                                                                                       SetVariableName
                                                                                                        { unSetVariableName =
                                                                                                           VariableName
                                                                                                            { base = InternedId{getInternedId = internText "In", internedIdLocation = AstLocationTest}
                                                                                                            , counter = Nothing
                                                                                                            }
                                                                                                        }
                                                                                                    , variableSort =
                                                                                                       SortActualSort
                                                                                                        ( SortActual
                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                           , sortActualSorts = []
                                                                                                           }
                                                                                                        )
                                                                                                    }
                                                                                                , muChild =
                                                                                                   TermLike
                                                                                                    { getTermLike =
                                                                                                       TermAttributes
                                                                                                        { termSort =
                                                                                                           SortActualSort
                                                                                                            ( SortActual
                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                               , sortActualSorts = []
                                                                                                               }
                                                                                                            )
                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                        , termSimplified = NotSimplified
                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                        }
                                                                                                        :< T.NuF
                                                                                                         ( Nu
                                                                                                            { nuVariable =
                                                                                                               Variable
                                                                                                                { variableName =
                                                                                                                   SetVariableName
                                                                                                                    { unSetVariableName =
                                                                                                                       VariableName
                                                                                                                        { base = InternedId{getInternedId = internText "ec", internedIdLocation = AstLocationTest}
                                                                                                                        , counter = Nothing
                                                                                                                        }
                                                                                                                    }
                                                                                                                , variableSort =
                                                                                                                   SortActualSort
                                                                                                                    ( SortActual
                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                       , sortActualSorts = []
                                                                                                                       }
                                                                                                                    )
                                                                                                                }
                                                                                                            , nuChild =
                                                                                                               TermLike
                                                                                                                { getTermLike =
                                                                                                                   TermAttributes
                                                                                                                    { termSort =
                                                                                                                       SortActualSort
                                                                                                                        ( SortActual
                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                           , sortActualSorts = []
                                                                                                                           }
                                                                                                                        )
                                                                                                                    , termFreeVariables =
                                                                                                                       FreeVars.unsafe
                                                                                                                        [
                                                                                                                          ( SomeVariableNameSet
                                                                                                                             ( SetVariableName
                                                                                                                                { unSetVariableName =
                                                                                                                                   VariableName
                                                                                                                                    { base = InternedId{getInternedId = internText "ec", internedIdLocation = AstLocationTest}
                                                                                                                                    , counter = Nothing
                                                                                                                                    }
                                                                                                                                }
                                                                                                                             )
                                                                                                                          , FreeVariableInfo
                                                                                                                             { sort =
                                                                                                                                SortActualSort
                                                                                                                                 ( SortActual
                                                                                                                                    { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                    , sortActualSorts = []
                                                                                                                                    }
                                                                                                                                 )
                                                                                                                             , count = 1
                                                                                                                             }
                                                                                                                          )
                                                                                                                        ]
                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                    , termDefined = Defined{isDefined = False}
                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                    , termSimplified = NotSimplified
                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                    }
                                                                                                                    :< ApplySymbolF
                                                                                                                     ( Application
                                                                                                                        { applicationSymbolOrAlias =
                                                                                                                           Symbol
                                                                                                                            { symbolConstructor = InternedId{getInternedId = internText "concatMap", internedIdLocation = AstLocationTest}
                                                                                                                            , symbolParams = []
                                                                                                                            , symbolSorts =
                                                                                                                               ApplicationSorts
                                                                                                                                { applicationSortsOperands =
                                                                                                                                   [ SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                   , SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                   ]
                                                                                                                                , applicationSortsResult =
                                                                                                                                   SortActualSort
                                                                                                                                    ( SortActual
                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                       , sortActualSorts = []
                                                                                                                                       }
                                                                                                                                    )
                                                                                                                                }
                                                                                                                            , symbolAttributes =
                                                                                                                               A.Symbol
                                                                                                                                { function = A.Function{isDeclaredFunction = True}
                                                                                                                                , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                , constructor = Constructor{isConstructor = False}
                                                                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                , hook = Hook{getHook = Just "MAP.concat"}
                                                                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                , memo = Memo{isMemo = False}
                                                                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                , sourceLocation =
                                                                                                                                   SourceLocation
                                                                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                                                                    , source = Source{unSource = Nothing}
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        , applicationChildren =
                                                                                                                           [ TermLike
                                                                                                                              { getTermLike =
                                                                                                                                 TermAttributes
                                                                                                                                  { termSort =
                                                                                                                                     SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                  , termFreeVariables =
                                                                                                                                     FreeVars.unsafe
                                                                                                                                      [
                                                                                                                                        ( SomeVariableNameSet
                                                                                                                                           ( SetVariableName
                                                                                                                                              { unSetVariableName =
                                                                                                                                                 VariableName
                                                                                                                                                  { base = InternedId{getInternedId = internText "ec", internedIdLocation = AstLocationTest}
                                                                                                                                                  , counter = Nothing
                                                                                                                                                  }
                                                                                                                                              }
                                                                                                                                           )
                                                                                                                                        , FreeVariableInfo
                                                                                                                                           { sort =
                                                                                                                                              SortActualSort
                                                                                                                                               ( SortActual
                                                                                                                                                  { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                  , sortActualSorts = []
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                           , count = 1
                                                                                                                                           }
                                                                                                                                        )
                                                                                                                                      ]
                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                  }
                                                                                                                                  :< T.ForallF
                                                                                                                                   ( Forall
                                                                                                                                      { forallSort =
                                                                                                                                         SortActualSort
                                                                                                                                          ( SortActual
                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                             , sortActualSorts = []
                                                                                                                                             }
                                                                                                                                          )
                                                                                                                                      , forallVariable =
                                                                                                                                         Variable
                                                                                                                                          { variableName =
                                                                                                                                             ElementVariableName
                                                                                                                                              { unElementVariableName =
                                                                                                                                                 VariableName
                                                                                                                                                  { base = InternedId{getInternedId = internText "W", internedIdLocation = AstLocationTest}
                                                                                                                                                  , counter = Nothing
                                                                                                                                                  }
                                                                                                                                              }
                                                                                                                                          , variableSort =
                                                                                                                                             SortActualSort
                                                                                                                                              ( SortActual
                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "#String", internedIdLocation = AstLocationImplicit}
                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                 }
                                                                                                                                              )
                                                                                                                                          }
                                                                                                                                      , forallChild =
                                                                                                                                         TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables =
                                                                                                                                                 FreeVars.unsafe
                                                                                                                                                  [
                                                                                                                                                    ( SomeVariableNameSet
                                                                                                                                                       ( SetVariableName
                                                                                                                                                          { unSetVariableName =
                                                                                                                                                             VariableName
                                                                                                                                                              { base = InternedId{getInternedId = internText "ec", internedIdLocation = AstLocationTest}
                                                                                                                                                              , counter = Nothing
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                       )
                                                                                                                                                    , FreeVariableInfo
                                                                                                                                                       { sort =
                                                                                                                                                          SortActualSort
                                                                                                                                                           ( SortActual
                                                                                                                                                              { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                              , sortActualSorts = []
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                       , count = 1
                                                                                                                                                       }
                                                                                                                                                    )
                                                                                                                                                  ]
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = NotSimplified
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< T.IffF
                                                                                                                                               ( Iff
                                                                                                                                                  { iffSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , iffFirst =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables =
                                                                                                                                                             FreeVars.unsafe
                                                                                                                                                              [
                                                                                                                                                                ( SomeVariableNameSet
                                                                                                                                                                   ( SetVariableName
                                                                                                                                                                      { unSetVariableName =
                                                                                                                                                                         VariableName
                                                                                                                                                                          { base = InternedId{getInternedId = internText "ec", internedIdLocation = AstLocationTest}
                                                                                                                                                                          , counter = Nothing
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                   )
                                                                                                                                                                , FreeVariableInfo
                                                                                                                                                                   { sort =
                                                                                                                                                                      SortActualSort
                                                                                                                                                                       ( SortActual
                                                                                                                                                                          { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                          , sortActualSorts = []
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                   , count = 1
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                              ]
                                                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = NotSimplified
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                          }
                                                                                                                                                          :< T.ImpliesF
                                                                                                                                                           ( Implies
                                                                                                                                                              { impliesSort =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              , impliesFirst =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables =
                                                                                                                                                                         FreeVars.unsafe
                                                                                                                                                                          [
                                                                                                                                                                            ( SomeVariableNameSet
                                                                                                                                                                               ( SetVariableName
                                                                                                                                                                                  { unSetVariableName =
                                                                                                                                                                                     VariableName
                                                                                                                                                                                      { base = InternedId{getInternedId = internText "ec", internedIdLocation = AstLocationTest}
                                                                                                                                                                                      , counter = Nothing
                                                                                                                                                                                      }
                                                                                                                                                                                  }
                                                                                                                                                                               )
                                                                                                                                                                            , FreeVariableInfo
                                                                                                                                                                               { sort =
                                                                                                                                                                                  SortActualSort
                                                                                                                                                                                   ( SortActual
                                                                                                                                                                                      { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                      , sortActualSorts = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                               , count = 1
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                          ]
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.IffF
                                                                                                                                                                       ( Iff
                                                                                                                                                                          { iffSort =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          , iffFirst =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables =
                                                                                                                                                                                     FreeVars.unsafe
                                                                                                                                                                                      [
                                                                                                                                                                                        ( SomeVariableNameSet
                                                                                                                                                                                           ( SetVariableName
                                                                                                                                                                                              { unSetVariableName =
                                                                                                                                                                                                 VariableName
                                                                                                                                                                                                  { base = InternedId{getInternedId = internText "ec", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                  , counter = Nothing
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                           )
                                                                                                                                                                                        , FreeVariableInfo
                                                                                                                                                                                           { sort =
                                                                                                                                                                                              SortActualSort
                                                                                                                                                                                               ( SortActual
                                                                                                                                                                                                  { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                  , sortActualSorts = []
                                                                                                                                                                                                  }
                                                                                                                                                                                               )
                                                                                                                                                                                           , count = 1
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                      ]
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< VariableF
                                                                                                                                                                                   ( Const
                                                                                                                                                                                      ( Variable
                                                                                                                                                                                         { variableName =
                                                                                                                                                                                            SomeVariableNameSet
                                                                                                                                                                                             ( SetVariableName
                                                                                                                                                                                                { unSetVariableName =
                                                                                                                                                                                                   VariableName
                                                                                                                                                                                                    { base = InternedId{getInternedId = internText "ec", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                    , counter = Nothing
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                             )
                                                                                                                                                                                         , variableSort =
                                                                                                                                                                                            SortActualSort
                                                                                                                                                                                             ( SortActual
                                                                                                                                                                                                { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                , sortActualSorts = []
                                                                                                                                                                                                }
                                                                                                                                                                                             )
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          , iffSecond =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< T.BottomF
                                                                                                                                                                                   ( Bottom
                                                                                                                                                                                      { bottomSort =
                                                                                                                                                                                         SortActualSort
                                                                                                                                                                                          ( SortActual
                                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                                             }
                                                                                                                                                                                          )
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              , impliesSecond =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = NotSimplified
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.ImpliesF
                                                                                                                                                                       ( Implies
                                                                                                                                                                          { impliesSort =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          , impliesFirst =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                                                   ( Application
                                                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                                                         Symbol
                                                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                                          , symbolParams = []
                                                                                                                                                                                          , symbolSorts =
                                                                                                                                                                                             ApplicationSorts
                                                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                                     }
                                                                                                                                                                                                  )
                                                                                                                                                                                              }
                                                                                                                                                                                          , symbolAttributes =
                                                                                                                                                                                             A.Symbol
                                                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                              , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                              , sourceLocation =
                                                                                                                                                                                                 SourceLocation
                                                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          }
                                                                                                                                                                                      , applicationChildren = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          , impliesSecond =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< T.TopF
                                                                                                                                                                                   ( Top
                                                                                                                                                                                      { topSort =
                                                                                                                                                                                         SortActualSort
                                                                                                                                                                                          ( SortActual
                                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                                             }
                                                                                                                                                                                          )
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  , iffSecond =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = True}
                                                                                                                                                          , termFunction = Function{isFunction = True}
                                                                                                                                                          , termDefined = Defined{isDefined = True}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                          }
                                                                                                                                                          :< ApplySymbolF
                                                                                                                                                           ( Application
                                                                                                                                                              { applicationSymbolOrAlias =
                                                                                                                                                                 Symbol
                                                                                                                                                                  { symbolConstructor = InternedId{getInternedId = internText "elementMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                  , symbolParams = []
                                                                                                                                                                  , symbolSorts =
                                                                                                                                                                     ApplicationSorts
                                                                                                                                                                      { applicationSortsOperands =
                                                                                                                                                                         [ SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                         , SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                         ]
                                                                                                                                                                      , applicationSortsResult =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      }
                                                                                                                                                                  , symbolAttributes =
                                                                                                                                                                     A.Symbol
                                                                                                                                                                      { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                      , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                      , constructor = Constructor{isConstructor = False}
                                                                                                                                                                      , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                      , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                      , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                      , hook = Hook{getHook = Just "MAP.element"}
                                                                                                                                                                      , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                      , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                      , memo = Memo{isMemo = False}
                                                                                                                                                                      , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                      , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                      , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                      , sourceLocation =
                                                                                                                                                                         SourceLocation
                                                                                                                                                                          { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                          , source = Source{unSource = Nothing}
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  }
                                                                                                                                                              , applicationChildren =
                                                                                                                                                                 [ TermLike
                                                                                                                                                                    { getTermLike =
                                                                                                                                                                       TermAttributes
                                                                                                                                                                        { termSort =
                                                                                                                                                                           SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                        , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                        , termFunction = Function{isFunction = True}
                                                                                                                                                                        , termDefined = Defined{isDefined = True}
                                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                        , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                                        }
                                                                                                                                                                        :< ApplySymbolF
                                                                                                                                                                         ( Application
                                                                                                                                                                            { applicationSymbolOrAlias =
                                                                                                                                                                               Symbol
                                                                                                                                                                                { symbolConstructor = InternedId{getInternedId = internText "c", internedIdLocation = AstLocationTest}
                                                                                                                                                                                , symbolParams = []
                                                                                                                                                                                , symbolSorts =
                                                                                                                                                                                   ApplicationSorts
                                                                                                                                                                                    { applicationSortsOperands = []
                                                                                                                                                                                    , applicationSortsResult =
                                                                                                                                                                                       SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                    }
                                                                                                                                                                                , symbolAttributes =
                                                                                                                                                                                   A.Symbol
                                                                                                                                                                                    { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                    , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                    , constructor = Constructor{isConstructor = True}
                                                                                                                                                                                    , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                    , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                    , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                    , hook = Hook{getHook = Nothing}
                                                                                                                                                                                    , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                    , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                    , memo = Memo{isMemo = False}
                                                                                                                                                                                    , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                    , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                    , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                    , sourceLocation =
                                                                                                                                                                                       SourceLocation
                                                                                                                                                                                        { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                        , source = Source{unSource = Nothing}
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            , applicationChildren = []
                                                                                                                                                                            }
                                                                                                                                                                         )
                                                                                                                                                                    }
                                                                                                                                                                 , TermLike
                                                                                                                                                                    { getTermLike =
                                                                                                                                                                       TermAttributes
                                                                                                                                                                        { termSort =
                                                                                                                                                                           SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                        , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                        , termFunction = Function{isFunction = True}
                                                                                                                                                                        , termDefined = Defined{isDefined = True}
                                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                        , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                                        }
                                                                                                                                                                        :< ApplySymbolF
                                                                                                                                                                         ( Application
                                                                                                                                                                            { applicationSymbolOrAlias =
                                                                                                                                                                               Symbol
                                                                                                                                                                                { symbolConstructor = InternedId{getInternedId = internText "e", internedIdLocation = AstLocationTest}
                                                                                                                                                                                , symbolParams = []
                                                                                                                                                                                , symbolSorts =
                                                                                                                                                                                   ApplicationSorts
                                                                                                                                                                                    { applicationSortsOperands = []
                                                                                                                                                                                    , applicationSortsResult =
                                                                                                                                                                                       SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                    }
                                                                                                                                                                                , symbolAttributes =
                                                                                                                                                                                   A.Symbol
                                                                                                                                                                                    { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                    , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                    , constructor = Constructor{isConstructor = True}
                                                                                                                                                                                    , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                    , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                    , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                    , hook = Hook{getHook = Nothing}
                                                                                                                                                                                    , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                    , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                    , memo = Memo{isMemo = False}
                                                                                                                                                                                    , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                    , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                    , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                    , sourceLocation =
                                                                                                                                                                                       SourceLocation
                                                                                                                                                                                        { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                        , source = Source{unSource = Nothing}
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            , applicationChildren = []
                                                                                                                                                                            }
                                                                                                                                                                         )
                                                                                                                                                                    }
                                                                                                                                                                 ]
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                      }
                                                                                                                                   )
                                                                                                                              }
                                                                                                                           , TermLike
                                                                                                                              { getTermLike =
                                                                                                                                 TermAttributes
                                                                                                                                  { termSort =
                                                                                                                                     SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                  }
                                                                                                                                  :< T.OrF
                                                                                                                                   ( Or
                                                                                                                                      { orSort =
                                                                                                                                         SortActualSort
                                                                                                                                          ( SortActual
                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                             , sortActualSorts = []
                                                                                                                                             }
                                                                                                                                          )
                                                                                                                                      , orFirst =
                                                                                                                                         TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = NotSimplified
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< T.ExistsF
                                                                                                                                               ( Exists
                                                                                                                                                  { existsSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , existsVariable =
                                                                                                                                                     Variable
                                                                                                                                                      { variableName =
                                                                                                                                                         ElementVariableName
                                                                                                                                                          { unElementVariableName =
                                                                                                                                                             VariableName
                                                                                                                                                              { base = InternedId{getInternedId = internText "s", internedIdLocation = AstLocationTest}
                                                                                                                                                              , counter = Nothing
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                      , variableSort =
                                                                                                                                                         SortActualSort
                                                                                                                                                          ( SortActual
                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                             }
                                                                                                                                                          )
                                                                                                                                                      }
                                                                                                                                                  , existsChild =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = NotSimplified
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                          }
                                                                                                                                                          :< T.ForallF
                                                                                                                                                           ( Forall
                                                                                                                                                              { forallSort =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              , forallVariable =
                                                                                                                                                                 Variable
                                                                                                                                                                  { variableName =
                                                                                                                                                                     ElementVariableName
                                                                                                                                                                      { unElementVariableName =
                                                                                                                                                                         VariableName
                                                                                                                                                                          { base = InternedId{getInternedId = internText "Tw", internedIdLocation = AstLocationTest}
                                                                                                                                                                          , counter = Nothing
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  , variableSort =
                                                                                                                                                                     SortActualSort
                                                                                                                                                                      ( SortActual
                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                         }
                                                                                                                                                                      )
                                                                                                                                                                  }
                                                                                                                                                              , forallChild =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = NotSimplified
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.MuF
                                                                                                                                                                       ( Mu
                                                                                                                                                                          { muVariable =
                                                                                                                                                                             Variable
                                                                                                                                                                              { variableName =
                                                                                                                                                                                 SetVariableName
                                                                                                                                                                                  { unSetVariableName =
                                                                                                                                                                                     VariableName
                                                                                                                                                                                      { base = InternedId{getInternedId = internText "Zh", internedIdLocation = AstLocationTest}
                                                                                                                                                                                      , counter = Nothing
                                                                                                                                                                                      }
                                                                                                                                                                                  }
                                                                                                                                                                              , variableSort =
                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                     }
                                                                                                                                                                                  )
                                                                                                                                                                              }
                                                                                                                                                                          , muChild =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                                                   ( Application
                                                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                                                         Symbol
                                                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                                          , symbolParams = []
                                                                                                                                                                                          , symbolSorts =
                                                                                                                                                                                             ApplicationSorts
                                                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                                     }
                                                                                                                                                                                                  )
                                                                                                                                                                                              }
                                                                                                                                                                                          , symbolAttributes =
                                                                                                                                                                                             A.Symbol
                                                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                              , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                              , sourceLocation =
                                                                                                                                                                                                 SourceLocation
                                                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          }
                                                                                                                                                                                      , applicationChildren = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                      , orSecond =
                                                                                                                                         TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = NotSimplified
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< T.ExistsF
                                                                                                                                               ( Exists
                                                                                                                                                  { existsSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , existsVariable =
                                                                                                                                                     Variable
                                                                                                                                                      { variableName =
                                                                                                                                                         ElementVariableName
                                                                                                                                                          { unElementVariableName =
                                                                                                                                                             VariableName
                                                                                                                                                              { base = InternedId{getInternedId = internText "v", internedIdLocation = AstLocationTest}
                                                                                                                                                              , counter = Nothing
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                      , variableSort =
                                                                                                                                                         SortActualSort
                                                                                                                                                          ( SortActual
                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "stringSort", internedIdLocation = AstLocationTest}
                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                             }
                                                                                                                                                          )
                                                                                                                                                      }
                                                                                                                                                  , existsChild =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = NotSimplified
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                          }
                                                                                                                                                          :< T.ForallF
                                                                                                                                                           ( Forall
                                                                                                                                                              { forallSort =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              , forallVariable =
                                                                                                                                                                 Variable
                                                                                                                                                                  { variableName =
                                                                                                                                                                     ElementVariableName
                                                                                                                                                                      { unElementVariableName =
                                                                                                                                                                         VariableName
                                                                                                                                                                          { base = InternedId{getInternedId = internText "F", internedIdLocation = AstLocationTest}
                                                                                                                                                                          , counter = Nothing
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  , variableSort =
                                                                                                                                                                     SortActualSort
                                                                                                                                                                      ( SortActual
                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "otherTopSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                         }
                                                                                                                                                                      )
                                                                                                                                                                  }
                                                                                                                                                              , forallChild =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = NotSimplified
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.IffF
                                                                                                                                                                       ( Iff
                                                                                                                                                                          { iffSort =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          , iffFirst =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                                                   ( Application
                                                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                                                         Symbol
                                                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                                          , symbolParams = []
                                                                                                                                                                                          , symbolSorts =
                                                                                                                                                                                             ApplicationSorts
                                                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                                     }
                                                                                                                                                                                                  )
                                                                                                                                                                                              }
                                                                                                                                                                                          , symbolAttributes =
                                                                                                                                                                                             A.Symbol
                                                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                              , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                              , sourceLocation =
                                                                                                                                                                                                 SourceLocation
                                                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          }
                                                                                                                                                                                      , applicationChildren = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          , iffSecond =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                                                   ( Application
                                                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                                                         Symbol
                                                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                                          , symbolParams = []
                                                                                                                                                                                          , symbolSorts =
                                                                                                                                                                                             ApplicationSorts
                                                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                                     }
                                                                                                                                                                                                  )
                                                                                                                                                                                              }
                                                                                                                                                                                          , symbolAttributes =
                                                                                                                                                                                             A.Symbol
                                                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                              , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                              , sourceLocation =
                                                                                                                                                                                                 SourceLocation
                                                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          }
                                                                                                                                                                                      , applicationChildren = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                      }
                                                                                                                                   )
                                                                                                                              }
                                                                                                                           ]
                                                                                                                        }
                                                                                                                     )
                                                                                                                }
                                                                                                            }
                                                                                                         )
                                                                                                    }
                                                                                                }
                                                                                             )
                                                                                        }
                                                                                    , impliesSecond =
                                                                                       TermLike
                                                                                        { getTermLike =
                                                                                           TermAttributes
                                                                                            { termSort =
                                                                                               SortActualSort
                                                                                                ( SortActual
                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                   , sortActualSorts = []
                                                                                                   }
                                                                                                )
                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                            , termFunction = Function{isFunction = False}
                                                                                            , termDefined = Defined{isDefined = False}
                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                            , termSimplified = NotSimplified
                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                            }
                                                                                            :< T.AndF
                                                                                             ( And
                                                                                                { andSort =
                                                                                                   SortActualSort
                                                                                                    ( SortActual
                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                       , sortActualSorts = []
                                                                                                       }
                                                                                                    )
                                                                                                , andFirst =
                                                                                                   TermLike
                                                                                                    { getTermLike =
                                                                                                       TermAttributes
                                                                                                        { termSort =
                                                                                                           SortActualSort
                                                                                                            ( SortActual
                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                               , sortActualSorts = []
                                                                                                               }
                                                                                                            )
                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                        , termSimplified = NotSimplified
                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                        }
                                                                                                        :< T.AndF
                                                                                                         ( And
                                                                                                            { andSort =
                                                                                                               SortActualSort
                                                                                                                ( SortActual
                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                   , sortActualSorts = []
                                                                                                                   }
                                                                                                                )
                                                                                                            , andFirst =
                                                                                                               TermLike
                                                                                                                { getTermLike =
                                                                                                                   TermAttributes
                                                                                                                    { termSort =
                                                                                                                       SortActualSort
                                                                                                                        ( SortActual
                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                           , sortActualSorts = []
                                                                                                                           }
                                                                                                                        )
                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                    , termDefined = Defined{isDefined = True}
                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                    , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                    }
                                                                                                                    :< T.TopF
                                                                                                                     ( Top
                                                                                                                        { topSort =
                                                                                                                           SortActualSort
                                                                                                                            ( SortActual
                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                               , sortActualSorts = []
                                                                                                                               }
                                                                                                                            )
                                                                                                                        }
                                                                                                                     )
                                                                                                                }
                                                                                                            , andSecond =
                                                                                                               TermLike
                                                                                                                { getTermLike =
                                                                                                                   TermAttributes
                                                                                                                    { termSort =
                                                                                                                       SortActualSort
                                                                                                                        ( SortActual
                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                           , sortActualSorts = []
                                                                                                                           }
                                                                                                                        )
                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                    , termDefined = Defined{isDefined = False}
                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                    , termSimplified = NotSimplified
                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                    }
                                                                                                                    :< T.ForallF
                                                                                                                     ( Forall
                                                                                                                        { forallSort =
                                                                                                                           SortActualSort
                                                                                                                            ( SortActual
                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                               , sortActualSorts = []
                                                                                                                               }
                                                                                                                            )
                                                                                                                        , forallVariable =
                                                                                                                           Variable
                                                                                                                            { variableName =
                                                                                                                               ElementVariableName
                                                                                                                                { unElementVariableName =
                                                                                                                                   VariableName
                                                                                                                                    { base = InternedId{getInternedId = internText "K-fi", internedIdLocation = AstLocationTest}
                                                                                                                                    , counter = Nothing
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            , variableSort =
                                                                                                                               SortActualSort
                                                                                                                                ( SortActual
                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                   , sortActualSorts = []
                                                                                                                                   }
                                                                                                                                )
                                                                                                                            }
                                                                                                                        , forallChild =
                                                                                                                           TermLike
                                                                                                                            { getTermLike =
                                                                                                                               TermAttributes
                                                                                                                                { termSort =
                                                                                                                                   SortActualSort
                                                                                                                                    ( SortActual
                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                       , sortActualSorts = []
                                                                                                                                       }
                                                                                                                                    )
                                                                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                                                                , termFunction = Function{isFunction = False}
                                                                                                                                , termDefined = Defined{isDefined = False}
                                                                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                                                                , termSimplified = NotSimplified
                                                                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                }
                                                                                                                                :< T.IffF
                                                                                                                                 ( Iff
                                                                                                                                    { iffSort =
                                                                                                                                       SortActualSort
                                                                                                                                        ( SortActual
                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                           , sortActualSorts = []
                                                                                                                                           }
                                                                                                                                        )
                                                                                                                                    , iffFirst =
                                                                                                                                       TermLike
                                                                                                                                        { getTermLike =
                                                                                                                                           TermAttributes
                                                                                                                                            { termSort =
                                                                                                                                               SortActualSort
                                                                                                                                                ( SortActual
                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                   }
                                                                                                                                                )
                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                            , termFunction = Function{isFunction = False}
                                                                                                                                            , termDefined = Defined{isDefined = False}
                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                            , termSimplified = NotSimplified
                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                            }
                                                                                                                                            :< T.MuF
                                                                                                                                             ( Mu
                                                                                                                                                { muVariable =
                                                                                                                                                   Variable
                                                                                                                                                    { variableName =
                                                                                                                                                       SetVariableName
                                                                                                                                                        { unSetVariableName =
                                                                                                                                                           VariableName
                                                                                                                                                            { base = InternedId{getInternedId = internText "y85", internedIdLocation = AstLocationTest}
                                                                                                                                                            , counter = Nothing
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    , variableSort =
                                                                                                                                                       SortActualSort
                                                                                                                                                        ( SortActual
                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                           }
                                                                                                                                                        )
                                                                                                                                                    }
                                                                                                                                                , muChild =
                                                                                                                                                   TermLike
                                                                                                                                                    { getTermLike =
                                                                                                                                                       TermAttributes
                                                                                                                                                        { termSort =
                                                                                                                                                           SortActualSort
                                                                                                                                                            ( SortActual
                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                               }
                                                                                                                                                            )
                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                        , termSimplified = NotSimplified
                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                        }
                                                                                                                                                        :< ApplySymbolF
                                                                                                                                                         ( Application
                                                                                                                                                            { applicationSymbolOrAlias =
                                                                                                                                                               Symbol
                                                                                                                                                                { symbolConstructor = InternedId{getInternedId = internText "opaqueMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                , symbolParams = []
                                                                                                                                                                , symbolSorts =
                                                                                                                                                                   ApplicationSorts
                                                                                                                                                                    { applicationSortsOperands =
                                                                                                                                                                       [ SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                       ]
                                                                                                                                                                    , applicationSortsResult =
                                                                                                                                                                       SortActualSort
                                                                                                                                                                        ( SortActual
                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                           }
                                                                                                                                                                        )
                                                                                                                                                                    }
                                                                                                                                                                , symbolAttributes =
                                                                                                                                                                   A.Symbol
                                                                                                                                                                    { function = A.Function{isDeclaredFunction = True}
                                                                                                                                                                    , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                                    , constructor = Constructor{isConstructor = False}
                                                                                                                                                                    , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                    , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                    , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                    , hook = Hook{getHook = Nothing}
                                                                                                                                                                    , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                    , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                    , memo = Memo{isMemo = False}
                                                                                                                                                                    , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                    , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                    , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                    , sourceLocation =
                                                                                                                                                                       SourceLocation
                                                                                                                                                                        { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                        , source = Source{unSource = Nothing}
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            , applicationChildren =
                                                                                                                                                               [ TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = NotSimplified
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< ApplySymbolF
                                                                                                                                                                       ( Application
                                                                                                                                                                          { applicationSymbolOrAlias =
                                                                                                                                                                             Symbol
                                                                                                                                                                              { symbolConstructor = InternedId{getInternedId = internText "plain00", internedIdLocation = AstLocationTest}
                                                                                                                                                                              , symbolParams = []
                                                                                                                                                                              , symbolSorts =
                                                                                                                                                                                 ApplicationSorts
                                                                                                                                                                                  { applicationSortsOperands = []
                                                                                                                                                                                  , applicationSortsResult =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  }
                                                                                                                                                                              , symbolAttributes =
                                                                                                                                                                                 A.Symbol
                                                                                                                                                                                  { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                  , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                                                  , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                  , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                  , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                  , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                  , hook = Hook{getHook = Nothing}
                                                                                                                                                                                  , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                  , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                  , memo = Memo{isMemo = False}
                                                                                                                                                                                  , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                  , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                  , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                  , sourceLocation =
                                                                                                                                                                                     SourceLocation
                                                                                                                                                                                      { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                      , source = Source{unSource = Nothing}
                                                                                                                                                                                      }
                                                                                                                                                                                  }
                                                                                                                                                                              }
                                                                                                                                                                          , applicationChildren = []
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                               ]
                                                                                                                                                            }
                                                                                                                                                         )
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                             )
                                                                                                                                        }
                                                                                                                                    , iffSecond =
                                                                                                                                       TermLike
                                                                                                                                        { getTermLike =
                                                                                                                                           TermAttributes
                                                                                                                                            { termSort =
                                                                                                                                               SortActualSort
                                                                                                                                                ( SortActual
                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                   }
                                                                                                                                                )
                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                            , termFunction = Function{isFunction = True}
                                                                                                                                            , termDefined = Defined{isDefined = False}
                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                            , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                            }
                                                                                                                                            :< ApplySymbolF
                                                                                                                                             ( Application
                                                                                                                                                { applicationSymbolOrAlias =
                                                                                                                                                   Symbol
                                                                                                                                                    { symbolConstructor = InternedId{getInternedId = internText "opaqueMap", internedIdLocation = AstLocationTest}
                                                                                                                                                    , symbolParams = []
                                                                                                                                                    , symbolSorts =
                                                                                                                                                       ApplicationSorts
                                                                                                                                                        { applicationSortsOperands =
                                                                                                                                                           [ SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                           ]
                                                                                                                                                        , applicationSortsResult =
                                                                                                                                                           SortActualSort
                                                                                                                                                            ( SortActual
                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                               }
                                                                                                                                                            )
                                                                                                                                                        }
                                                                                                                                                    , symbolAttributes =
                                                                                                                                                       A.Symbol
                                                                                                                                                        { function = A.Function{isDeclaredFunction = True}
                                                                                                                                                        , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                        , constructor = Constructor{isConstructor = False}
                                                                                                                                                        , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                        , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                        , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                        , hook = Hook{getHook = Nothing}
                                                                                                                                                        , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                        , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                        , memo = Memo{isMemo = False}
                                                                                                                                                        , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                        , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                        , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                        , sourceLocation =
                                                                                                                                                           SourceLocation
                                                                                                                                                            { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                            , source = Source{unSource = Nothing}
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                , applicationChildren =
                                                                                                                                                   [ TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = True}
                                                                                                                                                          , termFunction = Function{isFunction = True}
                                                                                                                                                          , termDefined = Defined{isDefined = True}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                          }
                                                                                                                                                          :< ApplySymbolF
                                                                                                                                                           ( Application
                                                                                                                                                              { applicationSymbolOrAlias =
                                                                                                                                                                 Symbol
                                                                                                                                                                  { symbolConstructor = InternedId{getInternedId = internText "c", internedIdLocation = AstLocationTest}
                                                                                                                                                                  , symbolParams = []
                                                                                                                                                                  , symbolSorts =
                                                                                                                                                                     ApplicationSorts
                                                                                                                                                                      { applicationSortsOperands = []
                                                                                                                                                                      , applicationSortsResult =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      }
                                                                                                                                                                  , symbolAttributes =
                                                                                                                                                                     A.Symbol
                                                                                                                                                                      { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                      , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                      , constructor = Constructor{isConstructor = True}
                                                                                                                                                                      , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                      , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                      , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                      , hook = Hook{getHook = Nothing}
                                                                                                                                                                      , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                      , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                      , memo = Memo{isMemo = False}
                                                                                                                                                                      , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                      , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                      , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                      , sourceLocation =
                                                                                                                                                                         SourceLocation
                                                                                                                                                                          { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                          , source = Source{unSource = Nothing}
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  }
                                                                                                                                                              , applicationChildren = []
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                   ]
                                                                                                                                                }
                                                                                                                                             )
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                 )
                                                                                                                            }
                                                                                                                        }
                                                                                                                     )
                                                                                                                }
                                                                                                            }
                                                                                                         )
                                                                                                    }
                                                                                                , andSecond =
                                                                                                   TermLike
                                                                                                    { getTermLike =
                                                                                                       TermAttributes
                                                                                                        { termSort =
                                                                                                           SortActualSort
                                                                                                            ( SortActual
                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                               , sortActualSorts = []
                                                                                                               }
                                                                                                            )
                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                        , termSimplified = NotSimplified
                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                        }
                                                                                                        :< T.AndF
                                                                                                         ( And
                                                                                                            { andSort =
                                                                                                               SortActualSort
                                                                                                                ( SortActual
                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                   , sortActualSorts = []
                                                                                                                   }
                                                                                                                )
                                                                                                            , andFirst =
                                                                                                               TermLike
                                                                                                                { getTermLike =
                                                                                                                   TermAttributes
                                                                                                                    { termSort =
                                                                                                                       SortActualSort
                                                                                                                        ( SortActual
                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                           , sortActualSorts = []
                                                                                                                           }
                                                                                                                        )
                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                    , termDefined = Defined{isDefined = False}
                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                    , termSimplified = NotSimplified
                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                    }
                                                                                                                    :< T.ImpliesF
                                                                                                                     ( Implies
                                                                                                                        { impliesSort =
                                                                                                                           SortActualSort
                                                                                                                            ( SortActual
                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                               , sortActualSorts = []
                                                                                                                               }
                                                                                                                            )
                                                                                                                        , impliesFirst =
                                                                                                                           TermLike
                                                                                                                            { getTermLike =
                                                                                                                               TermAttributes
                                                                                                                                { termSort =
                                                                                                                                   SortActualSort
                                                                                                                                    ( SortActual
                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                       , sortActualSorts = []
                                                                                                                                       }
                                                                                                                                    )
                                                                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                                                                , termFunction = Function{isFunction = True}
                                                                                                                                , termDefined = Defined{isDefined = False}
                                                                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                                                                , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                }
                                                                                                                                :< T.BottomF
                                                                                                                                 ( Bottom
                                                                                                                                    { bottomSort =
                                                                                                                                       SortActualSort
                                                                                                                                        ( SortActual
                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                           , sortActualSorts = []
                                                                                                                                           }
                                                                                                                                        )
                                                                                                                                    }
                                                                                                                                 )
                                                                                                                            }
                                                                                                                        , impliesSecond =
                                                                                                                           TermLike
                                                                                                                            { getTermLike =
                                                                                                                               TermAttributes
                                                                                                                                { termSort =
                                                                                                                                   SortActualSort
                                                                                                                                    ( SortActual
                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                       , sortActualSorts = []
                                                                                                                                       }
                                                                                                                                    )
                                                                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                                                                , termFunction = Function{isFunction = False}
                                                                                                                                , termDefined = Defined{isDefined = False}
                                                                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                                                                , termSimplified = NotSimplified
                                                                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                }
                                                                                                                                :< ApplySymbolF
                                                                                                                                 ( Application
                                                                                                                                    { applicationSymbolOrAlias =
                                                                                                                                       Symbol
                                                                                                                                        { symbolConstructor = InternedId{getInternedId = internText "concatMap", internedIdLocation = AstLocationTest}
                                                                                                                                        , symbolParams = []
                                                                                                                                        , symbolSorts =
                                                                                                                                           ApplicationSorts
                                                                                                                                            { applicationSortsOperands =
                                                                                                                                               [ SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                               , SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                               ]
                                                                                                                                            , applicationSortsResult =
                                                                                                                                               SortActualSort
                                                                                                                                                ( SortActual
                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                   }
                                                                                                                                                )
                                                                                                                                            }
                                                                                                                                        , symbolAttributes =
                                                                                                                                           A.Symbol
                                                                                                                                            { function = A.Function{isDeclaredFunction = True}
                                                                                                                                            , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                            , constructor = Constructor{isConstructor = False}
                                                                                                                                            , injective = Injective{isDeclaredInjective = False}
                                                                                                                                            , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                            , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                            , hook = Hook{getHook = Just "MAP.concat"}
                                                                                                                                            , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                            , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                            , memo = Memo{isMemo = False}
                                                                                                                                            , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                            , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                            , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                            , sourceLocation =
                                                                                                                                               SourceLocation
                                                                                                                                                { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                , source = Source{unSource = Nothing}
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    , applicationChildren =
                                                                                                                                       [ TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< T.NotF
                                                                                                                                               ( Not
                                                                                                                                                  { notSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , notChild =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                          }
                                                                                                                                                          :< T.ExistsF
                                                                                                                                                           ( Exists
                                                                                                                                                              { existsSort =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              , existsVariable =
                                                                                                                                                                 Variable
                                                                                                                                                                  { variableName =
                                                                                                                                                                     ElementVariableName
                                                                                                                                                                      { unElementVariableName =
                                                                                                                                                                         VariableName
                                                                                                                                                                          { base = InternedId{getInternedId = internText "gN1E", internedIdLocation = AstLocationTest}
                                                                                                                                                                          , counter = Nothing
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  , variableSort =
                                                                                                                                                                     SortActualSort
                                                                                                                                                                      ( SortActual
                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "boolSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                         }
                                                                                                                                                                      )
                                                                                                                                                                  }
                                                                                                                                                              , existsChild =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.NuF
                                                                                                                                                                       ( Nu
                                                                                                                                                                          { nuVariable =
                                                                                                                                                                             Variable
                                                                                                                                                                              { variableName =
                                                                                                                                                                                 SetVariableName
                                                                                                                                                                                  { unSetVariableName =
                                                                                                                                                                                     VariableName
                                                                                                                                                                                      { base = InternedId{getInternedId = internText "RQd", internedIdLocation = AstLocationTest}
                                                                                                                                                                                      , counter = Nothing
                                                                                                                                                                                      }
                                                                                                                                                                                  }
                                                                                                                                                                              , variableSort =
                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                     }
                                                                                                                                                                                  )
                                                                                                                                                                              }
                                                                                                                                                                          , nuChild =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables =
                                                                                                                                                                                     FreeVars.unsafe
                                                                                                                                                                                      [
                                                                                                                                                                                        ( SomeVariableNameSet
                                                                                                                                                                                           ( SetVariableName
                                                                                                                                                                                              { unSetVariableName =
                                                                                                                                                                                                 VariableName
                                                                                                                                                                                                  { base = InternedId{getInternedId = internText "RQd", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                  , counter = Nothing
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                           )
                                                                                                                                                                                        , FreeVariableInfo
                                                                                                                                                                                           { sort =
                                                                                                                                                                                              SortActualSort
                                                                                                                                                                                               ( SortActual
                                                                                                                                                                                                  { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                  , sortActualSorts = []
                                                                                                                                                                                                  }
                                                                                                                                                                                               )
                                                                                                                                                                                           , count = 1
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                      ]
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< VariableF
                                                                                                                                                                                   ( Const
                                                                                                                                                                                      ( Variable
                                                                                                                                                                                         { variableName =
                                                                                                                                                                                            SomeVariableNameSet
                                                                                                                                                                                             ( SetVariableName
                                                                                                                                                                                                { unSetVariableName =
                                                                                                                                                                                                   VariableName
                                                                                                                                                                                                    { base = InternedId{getInternedId = internText "RQd", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                    , counter = Nothing
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                             )
                                                                                                                                                                                         , variableSort =
                                                                                                                                                                                            SortActualSort
                                                                                                                                                                                             ( SortActual
                                                                                                                                                                                                { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                , sortActualSorts = []
                                                                                                                                                                                                }
                                                                                                                                                                                             )
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                       , TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = NotSimplified
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< T.OrF
                                                                                                                                               ( Or
                                                                                                                                                  { orSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , orFirst =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = NotSimplified
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                          }
                                                                                                                                                          :< MuF
                                                                                                                                                           ( Mu
                                                                                                                                                              { muVariable =
                                                                                                                                                                 Variable
                                                                                                                                                                  { variableName =
                                                                                                                                                                     SetVariableName
                                                                                                                                                                      { unSetVariableName =
                                                                                                                                                                         VariableName
                                                                                                                                                                          { base = InternedId{getInternedId = internText "JM", internedIdLocation = AstLocationTest}
                                                                                                                                                                          , counter = Nothing
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  , variableSort =
                                                                                                                                                                     SortActualSort
                                                                                                                                                                      ( SortActual
                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                         }
                                                                                                                                                                      )
                                                                                                                                                                  }
                                                                                                                                                              , muChild =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = NotSimplified
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.ExistsF
                                                                                                                                                                       ( Exists
                                                                                                                                                                          { existsSort =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          , existsVariable =
                                                                                                                                                                             Variable
                                                                                                                                                                              { variableName =
                                                                                                                                                                                 ElementVariableName
                                                                                                                                                                                  { unElementVariableName =
                                                                                                                                                                                     VariableName
                                                                                                                                                                                      { base = InternedId{getInternedId = internText "kQm", internedIdLocation = AstLocationTest}
                                                                                                                                                                                      , counter = Nothing
                                                                                                                                                                                      }
                                                                                                                                                                                  }
                                                                                                                                                                              , variableSort =
                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "otherSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                     }
                                                                                                                                                                                  )
                                                                                                                                                                              }
                                                                                                                                                                          , existsChild =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                                                   ( Application
                                                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                                                         Symbol
                                                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                                          , symbolParams = []
                                                                                                                                                                                          , symbolSorts =
                                                                                                                                                                                             ApplicationSorts
                                                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                                     }
                                                                                                                                                                                                  )
                                                                                                                                                                                              }
                                                                                                                                                                                          , symbolAttributes =
                                                                                                                                                                                             A.Symbol
                                                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                              , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                              , sourceLocation =
                                                                                                                                                                                                 SourceLocation
                                                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          }
                                                                                                                                                                                      , applicationChildren = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  , orSecond =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                          }
                                                                                                                                                          :< T.ForallF
                                                                                                                                                           ( Forall
                                                                                                                                                              { forallSort =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              , forallVariable =
                                                                                                                                                                 Variable
                                                                                                                                                                  { variableName =
                                                                                                                                                                     ElementVariableName
                                                                                                                                                                      { unElementVariableName =
                                                                                                                                                                         VariableName
                                                                                                                                                                          { base = InternedId{getInternedId = internText "PR2H", internedIdLocation = AstLocationTest}
                                                                                                                                                                          , counter = Nothing
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  , variableSort =
                                                                                                                                                                     SortActualSort
                                                                                                                                                                      ( SortActual
                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "#String", internedIdLocation = AstLocationImplicit}
                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                         }
                                                                                                                                                                      )
                                                                                                                                                                  }
                                                                                                                                                              , forallChild =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = True}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.TopF
                                                                                                                                                                       ( Top
                                                                                                                                                                          { topSort =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                       ]
                                                                                                                                    }
                                                                                                                                 )
                                                                                                                            }
                                                                                                                        }
                                                                                                                     )
                                                                                                                }
                                                                                                            , andSecond =
                                                                                                               TermLike
                                                                                                                { getTermLike =
                                                                                                                   TermAttributes
                                                                                                                    { termSort =
                                                                                                                       SortActualSort
                                                                                                                        ( SortActual
                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                           , sortActualSorts = []
                                                                                                                           }
                                                                                                                        )
                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                    , termFunctional = Functional{isFunctional = True}
                                                                                                                    , termFunction = Function{isFunction = True}
                                                                                                                    , termDefined = Defined{isDefined = True}
                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                    , termSimplified = NotSimplified
                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                    }
                                                                                                                    :< ApplySymbolF
                                                                                                                     ( Application
                                                                                                                        { applicationSymbolOrAlias =
                                                                                                                           Symbol
                                                                                                                            { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                            , symbolParams = []
                                                                                                                            , symbolSorts =
                                                                                                                               ApplicationSorts
                                                                                                                                { applicationSortsOperands = []
                                                                                                                                , applicationSortsResult =
                                                                                                                                   SortActualSort
                                                                                                                                    ( SortActual
                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                       , sortActualSorts = []
                                                                                                                                       }
                                                                                                                                    )
                                                                                                                                }
                                                                                                                            , symbolAttributes =
                                                                                                                               A.Symbol
                                                                                                                                { function = A.Function{isDeclaredFunction = False}
                                                                                                                                , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                , constructor = Constructor{isConstructor = False}
                                                                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                , memo = Memo{isMemo = False}
                                                                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                , sourceLocation =
                                                                                                                                   SourceLocation
                                                                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                                                                    , source = Source{unSource = Nothing}
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        , applicationChildren = []
                                                                                                                        }
                                                                                                                     )
                                                                                                                }
                                                                                                            }
                                                                                                         )
                                                                                                    }
                                                                                                }
                                                                                             )
                                                                                        }
                                                                                    }
                                                                                 )
                                                                            }

part212 =
--                                                 , inContainingChild =
                                                   TermLike
                                                    { getTermLike =
                                                       TermAttributes
                                                        { termSort =
                                                           SortActualSort
                                                            ( SortActual
                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                               , sortActualSorts = []
                                                               }
                                                            )
                                                        , termFreeVariables = FreeVars.unsafe []
                                                        , termFunctional = Functional{isFunctional = False}
                                                        , termFunction = Function{isFunction = False}
                                                        , termDefined = Defined{isDefined = False}
                                                        , termCreated = Created{getCreated = Nothing}
                                                        , termSimplified = NotSimplified
                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                        }
                                                        :< NuF
                                                         ( Nu
                                                            { nuVariable =
                                                               Variable
                                                                { variableName =
                                                                   SetVariableName
                                                                    { unSetVariableName =
                                                                       VariableName
                                                                        { base = InternedId{getInternedId = internText "fZr", internedIdLocation = AstLocationTest}
                                                                        , counter = Nothing
                                                                        }
                                                                    }
                                                                , variableSort =
                                                                   SortActualSort
                                                                    ( SortActual
                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                       , sortActualSorts = []
                                                                       }
                                                                    )
                                                                }
                                                            , nuChild =
                                                               TermLike
                                                                { getTermLike =
                                                                   TermAttributes
                                                                    { termSort =
                                                                       SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                    , termFunctional = Functional{isFunctional = True}
                                                                    , termFunction = Function{isFunction = True}
                                                                    , termDefined = Defined{isDefined = True}
                                                                    , termCreated = Created{getCreated = Nothing}
                                                                    , termSimplified = NotSimplified
                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                    }
                                                                    :< ApplySymbolF
                                                                     ( Application
                                                                        { applicationSymbolOrAlias =
                                                                           Symbol
                                                                            { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                            , symbolParams = []
                                                                            , symbolSorts =
                                                                               ApplicationSorts
                                                                                { applicationSortsOperands = []
                                                                                , applicationSortsResult =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                }
                                                                            , symbolAttributes =
                                                                               A.Symbol
                                                                                { function = A.Function{isDeclaredFunction = False}
                                                                                , functional = A.Functional{isDeclaredFunctional = True}
                                                                                , constructor = Constructor{isConstructor = False}
                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                , hook = Hook{getHook = Just "MAP.unit"}
                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                , memo = Memo{isMemo = False}
                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                , sourceLocation =
                                                                                   SourceLocation
                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                    , source = Source{unSource = Nothing}
                                                                                    }
                                                                                }
                                                                            }
                                                                        , applicationChildren = []
                                                                        }
                                                                     )
                                                                }
                                                            }
                                                         )
                                                    }

part22 =
                                     CofreeT
                                      ( Identity
                                         ( PredicatePattern
                                            { freeVariables = FreeVars.unsafe []
                                            , simplified = NotSimplified
                                            }
                                            :< AndF
                                             ( And
                                                { andSort = ()
                                                , andFirst =
                                                   CofreeT
                                                    ( Identity
                                                       ( PredicatePattern
                                                          { freeVariables = FreeVars.unsafe []
                                                          , simplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                          }
                                                          :< TopF (Top{topSort = ()})
                                                       )
                                                    )
                                                , andSecond =
                                                   CofreeT
                                                    ( Identity
                                                       ( PredicatePattern
                                                          { freeVariables = FreeVars.unsafe []
                                                          , simplified = NotSimplified
                                                          }
                                                          :< FloorF
                                                           ( Floor
                                                              { floorOperandSort = ()
                                                              , floorResultSort = ()
                                                              , floorChild =
                                                                 TermLike
                                                                  { getTermLike =
                                                                     TermAttributes
                                                                      { termSort =
                                                                         SortActualSort
                                                                          ( SortActual
                                                                             { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                             , sortActualSorts = []
                                                                             }
                                                                          )
                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                      , termFunctional = Functional{isFunctional = False}
                                                                      , termFunction = Function{isFunction = False}
                                                                      , termDefined = Defined{isDefined = False}
                                                                      , termCreated = Created{getCreated = Nothing}
                                                                      , termSimplified = NotSimplified
                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                      }
                                                                      :< T.ImpliesF
                                                                       ( Implies
                                                                          { impliesSort =
                                                                             SortActualSort
                                                                              ( SortActual
                                                                                 { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                 , sortActualSorts = []
                                                                                 }
                                                                              )
                                                                          , impliesFirst =
                                                                             TermLike
                                                                              { getTermLike =
                                                                                 TermAttributes
                                                                                  { termSort =
                                                                                     SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                  , termFunction = Function{isFunction = False}
                                                                                  , termDefined = Defined{isDefined = True}
                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                  }
                                                                                  :< T.TopF
                                                                                   ( Top
                                                                                      { topSort =
                                                                                         SortActualSort
                                                                                          ( SortActual
                                                                                             { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                             , sortActualSorts = []
                                                                                             }
                                                                                          )
                                                                                      }
                                                                                   )
                                                                              }
                                                                          , impliesSecond =
                                                                             TermLike
                                                                              { getTermLike =
                                                                                 TermAttributes
                                                                                  { termSort =
                                                                                     SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                  , termFunction = Function{isFunction = False}
                                                                                  , termDefined = Defined{isDefined = False}
                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                  , termSimplified = NotSimplified
                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                  }
                                                                                  :< T.AndF
                                                                                   ( And
                                                                                      { andSort =
                                                                                         SortActualSort
                                                                                          ( SortActual
                                                                                             { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                             , sortActualSorts = []
                                                                                             }
                                                                                          )
                                                                                      , andFirst =
                                                                                         TermLike
                                                                                          { getTermLike =
                                                                                             TermAttributes
                                                                                              { termSort =
                                                                                                 SortActualSort
                                                                                                  ( SortActual
                                                                                                     { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                     , sortActualSorts = []
                                                                                                     }
                                                                                                  )
                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                              , termFunction = Function{isFunction = False}
                                                                                              , termDefined = Defined{isDefined = False}
                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                              , termSimplified = NotSimplified
                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                              }
                                                                                              :< ApplySymbolF
                                                                                               ( Application
                                                                                                  { applicationSymbolOrAlias =
                                                                                                     Symbol
                                                                                                      { symbolConstructor = InternedId{getInternedId = internText "fTestInt", internedIdLocation = AstLocationTest}
                                                                                                      , symbolParams = []
                                                                                                      , symbolSorts =
                                                                                                         ApplicationSorts
                                                                                                          { applicationSortsOperands =
                                                                                                             [ SortActualSort
                                                                                                                ( SortActual
                                                                                                                   { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                   , sortActualSorts = []
                                                                                                                   }
                                                                                                                )
                                                                                                             ]
                                                                                                          , applicationSortsResult =
                                                                                                             SortActualSort
                                                                                                              ( SortActual
                                                                                                                 { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                 , sortActualSorts = []
                                                                                                                 }
                                                                                                              )
                                                                                                          }
                                                                                                      , symbolAttributes =
                                                                                                         A.Symbol
                                                                                                          { function = A.Function{isDeclaredFunction = True}
                                                                                                          , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                          , constructor = Constructor{isConstructor = False}
                                                                                                          , injective = Injective{isDeclaredInjective = False}
                                                                                                          , sortInjection = SortInjection{isSortInjection = False}
                                                                                                          , anywhere = Anywhere{isAnywhere = False}
                                                                                                          , hook = Hook{getHook = Nothing}
                                                                                                          , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                          , smthook = Smthook{getSmthook = Nothing}
                                                                                                          , memo = Memo{isMemo = False}
                                                                                                          , klabel = Klabel{getKlabel = Nothing}
                                                                                                          , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                          , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                          , sourceLocation =
                                                                                                             SourceLocation
                                                                                                              { location = Location{start = Nothing, end = Nothing}
                                                                                                              , source = Source{unSource = Nothing}
                                                                                                              }
                                                                                                          }
                                                                                                      }
                                                                                                  , applicationChildren =
                                                                                                     [ TermLike
                                                                                                        { getTermLike =
                                                                                                           TermAttributes
                                                                                                            { termSort =
                                                                                                               SortActualSort
                                                                                                                ( SortActual
                                                                                                                   { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                   , sortActualSorts = []
                                                                                                                   }
                                                                                                                )
                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                            , termFunction = Function{isFunction = False}
                                                                                                            , termDefined = Defined{isDefined = False}
                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                            , termSimplified = NotSimplified
                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                            }
                                                                                                            :< ApplySymbolF
                                                                                                             ( Application
                                                                                                                { applicationSymbolOrAlias =
                                                                                                                   Symbol
                                                                                                                    { symbolConstructor = InternedId{getInternedId = internText "sigma", internedIdLocation = AstLocationTest}
                                                                                                                    , symbolParams = []
                                                                                                                    , symbolSorts =
                                                                                                                       ApplicationSorts
                                                                                                                        { applicationSortsOperands =
                                                                                                                           [ SortActualSort
                                                                                                                              ( SortActual
                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                 , sortActualSorts = []
                                                                                                                                 }
                                                                                                                              )
                                                                                                                           , SortActualSort
                                                                                                                              ( SortActual
                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                 , sortActualSorts = []
                                                                                                                                 }
                                                                                                                              )
                                                                                                                           ]
                                                                                                                        , applicationSortsResult =
                                                                                                                           SortActualSort
                                                                                                                            ( SortActual
                                                                                                                               { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                               , sortActualSorts = []
                                                                                                                               }
                                                                                                                            )
                                                                                                                        }
                                                                                                                    , symbolAttributes =
                                                                                                                       A.Symbol
                                                                                                                        { function = A.Function{isDeclaredFunction = False}
                                                                                                                        , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                        , constructor = Constructor{isConstructor = True}
                                                                                                                        , injective = Injective{isDeclaredInjective = False}
                                                                                                                        , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                        , anywhere = Anywhere{isAnywhere = False}
                                                                                                                        , hook = Hook{getHook = Nothing}
                                                                                                                        , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                        , smthook = Smthook{getSmthook = Nothing}
                                                                                                                        , memo = Memo{isMemo = False}
                                                                                                                        , klabel = Klabel{getKlabel = Nothing}
                                                                                                                        , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                        , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                        , sourceLocation =
                                                                                                                           SourceLocation
                                                                                                                            { location = Location{start = Nothing, end = Nothing}
                                                                                                                            , source = Source{unSource = Nothing}
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                , applicationChildren =
                                                                                                                   [ TermLike
                                                                                                                      { getTermLike =
                                                                                                                         TermAttributes
                                                                                                                          { termSort =
                                                                                                                             SortActualSort
                                                                                                                              ( SortActual
                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                 , sortActualSorts = []
                                                                                                                                 }
                                                                                                                              )
                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                          , termSimplified = NotSimplified
                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                          }
                                                                                                                          :< MuF
                                                                                                                           ( Mu
                                                                                                                              { muVariable =
                                                                                                                                 Variable
                                                                                                                                  { variableName =
                                                                                                                                     SetVariableName
                                                                                                                                      { unSetVariableName =
                                                                                                                                         VariableName
                                                                                                                                          { base = InternedId{getInternedId = internText "G", internedIdLocation = AstLocationTest}
                                                                                                                                          , counter = Nothing
                                                                                                                                          }
                                                                                                                                      }
                                                                                                                                  , variableSort =
                                                                                                                                     SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                  }
                                                                                                                              , muChild =
                                                                                                                                 TermLike
                                                                                                                                  { getTermLike =
                                                                                                                                     TermAttributes
                                                                                                                                      { termSort =
                                                                                                                                         SortActualSort
                                                                                                                                          ( SortActual
                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                             , sortActualSorts = []
                                                                                                                                             }
                                                                                                                                          )
                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                      , termSimplified = NotSimplified
                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                      }
                                                                                                                                      :< T.ImpliesF
                                                                                                                                       ( Implies
                                                                                                                                          { impliesSort =
                                                                                                                                             SortActualSort
                                                                                                                                              ( SortActual
                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                 }
                                                                                                                                              )
                                                                                                                                          , impliesFirst =
                                                                                                                                             TermLike
                                                                                                                                              { getTermLike =
                                                                                                                                                 TermAttributes
                                                                                                                                                  { termSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                  }
                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                   ( Application
                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                         Symbol
                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "b", internedIdLocation = AstLocationTest}
                                                                                                                                                          , symbolParams = []
                                                                                                                                                          , symbolSorts =
                                                                                                                                                             ApplicationSorts
                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              }
                                                                                                                                                          , symbolAttributes =
                                                                                                                                                             A.Symbol
                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                              , constructor = Constructor{isConstructor = True}
                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                              , hook = Hook{getHook = Nothing}
                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                              , sourceLocation =
                                                                                                                                                                 SourceLocation
                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                      , applicationChildren = []
                                                                                                                                                      }
                                                                                                                                                   )
                                                                                                                                              }
                                                                                                                                          , impliesSecond =
                                                                                                                                             TermLike
                                                                                                                                              { getTermLike =
                                                                                                                                                 TermAttributes
                                                                                                                                                  { termSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                  }
                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                   ( Application
                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                         Symbol
                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "functionalConstr11", internedIdLocation = AstLocationTest}
                                                                                                                                                          , symbolParams = []
                                                                                                                                                          , symbolSorts =
                                                                                                                                                             ApplicationSorts
                                                                                                                                                              { applicationSortsOperands =
                                                                                                                                                                 [ SortActualSort
                                                                                                                                                                    ( SortActual
                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                       }
                                                                                                                                                                    )
                                                                                                                                                                 ]
                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              }
                                                                                                                                                          , symbolAttributes =
                                                                                                                                                             A.Symbol
                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                              , constructor = Constructor{isConstructor = True}
                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                              , hook = Hook{getHook = Nothing}
                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                              , sourceLocation =
                                                                                                                                                                 SourceLocation
                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                      , applicationChildren =
                                                                                                                                                         [ TermLike
                                                                                                                                                            { getTermLike =
                                                                                                                                                               TermAttributes
                                                                                                                                                                { termSort =
                                                                                                                                                                   SortActualSort
                                                                                                                                                                    ( SortActual
                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                       }
                                                                                                                                                                    )
                                                                                                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                , termFunction = Function{isFunction = True}
                                                                                                                                                                , termDefined = Defined{isDefined = True}
                                                                                                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                , termSimplified = NotSimplified
                                                                                                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                }
                                                                                                                                                                :< ApplySymbolF
                                                                                                                                                                 ( Application
                                                                                                                                                                    { applicationSymbolOrAlias =
                                                                                                                                                                       Symbol
                                                                                                                                                                        { symbolConstructor = InternedId{getInternedId = internText "functionalInjective00", internedIdLocation = AstLocationTest}
                                                                                                                                                                        , symbolParams = []
                                                                                                                                                                        , symbolSorts =
                                                                                                                                                                           ApplicationSorts
                                                                                                                                                                            { applicationSortsOperands = []
                                                                                                                                                                            , applicationSortsResult =
                                                                                                                                                                               SortActualSort
                                                                                                                                                                                ( SortActual
                                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                                   }
                                                                                                                                                                                )
                                                                                                                                                                            }
                                                                                                                                                                        , symbolAttributes =
                                                                                                                                                                           A.Symbol
                                                                                                                                                                            { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                            , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                            , constructor = Constructor{isConstructor = False}
                                                                                                                                                                            , injective = Injective{isDeclaredInjective = True}
                                                                                                                                                                            , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                            , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                            , hook = Hook{getHook = Nothing}
                                                                                                                                                                            , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                            , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                            , memo = Memo{isMemo = False}
                                                                                                                                                                            , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                            , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                            , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                            , sourceLocation =
                                                                                                                                                                               SourceLocation
                                                                                                                                                                                { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                , source = Source{unSource = Nothing}
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    , applicationChildren = []
                                                                                                                                                                    }
                                                                                                                                                                 )
                                                                                                                                                            }
                                                                                                                                                         ]
                                                                                                                                                      }
                                                                                                                                                   )
                                                                                                                                              }
                                                                                                                                          }
                                                                                                                                       )
                                                                                                                                  }
                                                                                                                              }
                                                                                                                           )
                                                                                                                      }
                                                                                                                   , TermLike
                                                                                                                      { getTermLike =
                                                                                                                         TermAttributes
                                                                                                                          { termSort =
                                                                                                                             SortActualSort
                                                                                                                              ( SortActual
                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                 , sortActualSorts = []
                                                                                                                                 }
                                                                                                                              )
                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                          , termDefined = Defined{isDefined = True}
                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                          , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                          }
                                                                                                                          :< T.TopF
                                                                                                                           ( Top
                                                                                                                              { topSort =
                                                                                                                                 SortActualSort
                                                                                                                                  ( SortActual
                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                     , sortActualSorts = []
                                                                                                                                     }
                                                                                                                                  )
                                                                                                                              }
                                                                                                                           )
                                                                                                                      }
                                                                                                                   ]
                                                                                                                }
                                                                                                             )
                                                                                                        }
                                                                                                     ]
                                                                                                  }
                                                                                               )
                                                                                          }
                                                                                      , andSecond =
                                                                                         TermLike
                                                                                          { getTermLike =
                                                                                             TermAttributes
                                                                                              { termSort =
                                                                                                 SortActualSort
                                                                                                  ( SortActual
                                                                                                     { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                     , sortActualSorts = []
                                                                                                     }
                                                                                                  )
                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                              , termFunction = Function{isFunction = False}
                                                                                              , termDefined = Defined{isDefined = False}
                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                              , termSimplified = NotSimplified
                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                              }
                                                                                              :< T.ImpliesF
                                                                                               ( Implies
                                                                                                  { impliesSort =
                                                                                                     SortActualSort
                                                                                                      ( SortActual
                                                                                                         { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                         , sortActualSorts = []
                                                                                                         }
                                                                                                      )
                                                                                                  , impliesFirst =
                                                                                                     TermLike
                                                                                                      { getTermLike =
                                                                                                         TermAttributes
                                                                                                          { termSort =
                                                                                                             SortActualSort
                                                                                                              ( SortActual
                                                                                                                 { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                 , sortActualSorts = []
                                                                                                                 }
                                                                                                              )
                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                          , termSimplified = NotSimplified
                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                          }
                                                                                                          :< T.AndF
                                                                                                           ( And
                                                                                                              { andSort =
                                                                                                                 SortActualSort
                                                                                                                  ( SortActual
                                                                                                                     { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                     , sortActualSorts = []
                                                                                                                     }
                                                                                                                  )
                                                                                                              , andFirst =
                                                                                                                 TermLike
                                                                                                                  { getTermLike =
                                                                                                                     TermAttributes
                                                                                                                      { termSort =
                                                                                                                         SortActualSort
                                                                                                                          ( SortActual
                                                                                                                             { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                             , sortActualSorts = []
                                                                                                                             }
                                                                                                                          )
                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                      , termFunctional = Functional{isFunctional = True}
                                                                                                                      , termFunction = Function{isFunction = True}
                                                                                                                      , termDefined = Defined{isDefined = True}
                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                      , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                      }
                                                                                                                      :< InternalIntF
                                                                                                                       ( Const
                                                                                                                          ( InternalInt
                                                                                                                             { internalIntSort =
                                                                                                                                SortActualSort
                                                                                                                                 ( SortActual
                                                                                                                                    { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                    , sortActualSorts = []
                                                                                                                                    }
                                                                                                                                 )
                                                                                                                             , internalIntValue = 776
                                                                                                                             }
                                                                                                                          )
                                                                                                                       )
                                                                                                                  }
                                                                                                              , andSecond =
                                                                                                                 TermLike
                                                                                                                  { getTermLike =
                                                                                                                     TermAttributes
                                                                                                                      { termSort =
                                                                                                                         SortActualSort
                                                                                                                          ( SortActual
                                                                                                                             { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                             , sortActualSorts = []
                                                                                                                             }
                                                                                                                          )
                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                      , termSimplified = NotSimplified
                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                      }
                                                                                                                      :< T.IffF
                                                                                                                       ( Iff
                                                                                                                          { iffSort =
                                                                                                                             SortActualSort
                                                                                                                              ( SortActual
                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                 , sortActualSorts = []
                                                                                                                                 }
                                                                                                                              )
                                                                                                                          , iffFirst =
                                                                                                                             TermLike
                                                                                                                              { getTermLike =
                                                                                                                                 TermAttributes
                                                                                                                                  { termSort =
                                                                                                                                     SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                  }
                                                                                                                                  :< ApplySymbolF
                                                                                                                                   ( Application
                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                         Symbol
                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "fTestInt", internedIdLocation = AstLocationTest}
                                                                                                                                          , symbolParams = []
                                                                                                                                          , symbolSorts =
                                                                                                                                             ApplicationSorts
                                                                                                                                              { applicationSortsOperands =
                                                                                                                                                 [ SortActualSort
                                                                                                                                                    ( SortActual
                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                       }
                                                                                                                                                    )
                                                                                                                                                 ]
                                                                                                                                              , applicationSortsResult =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              }
                                                                                                                                          , symbolAttributes =
                                                                                                                                             A.Symbol
                                                                                                                                              { function = A.Function{isDeclaredFunction = True}
                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                              , hook = Hook{getHook = Nothing}
                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                              , sourceLocation =
                                                                                                                                                 SourceLocation
                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                  }
                                                                                                                                              }
                                                                                                                                          }
                                                                                                                                      , applicationChildren =
                                                                                                                                         [ TermLike
                                                                                                                                            { getTermLike =
                                                                                                                                               TermAttributes
                                                                                                                                                { termSort =
                                                                                                                                                   SortActualSort
                                                                                                                                                    ( SortActual
                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                       }
                                                                                                                                                    )
                                                                                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                                                                                , termFunction = Function{isFunction = False}
                                                                                                                                                , termDefined = Defined{isDefined = False}
                                                                                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                                                                                , termSimplified = NotSimplified
                                                                                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                }
                                                                                                                                                :< ApplySymbolF
                                                                                                                                                 ( Application
                                                                                                                                                    { applicationSymbolOrAlias =
                                                                                                                                                       Symbol
                                                                                                                                                        { symbolConstructor = InternedId{getInternedId = internText "plain20", internedIdLocation = AstLocationTest}
                                                                                                                                                        , symbolParams = []
                                                                                                                                                        , symbolSorts =
                                                                                                                                                           ApplicationSorts
                                                                                                                                                            { applicationSortsOperands =
                                                                                                                                                               [ SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                               , SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                               ]
                                                                                                                                                            , applicationSortsResult =
                                                                                                                                                               SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                            }
                                                                                                                                                        , symbolAttributes =
                                                                                                                                                           A.Symbol
                                                                                                                                                            { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                            , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                            , constructor = Constructor{isConstructor = False}
                                                                                                                                                            , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                            , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                            , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                            , hook = Hook{getHook = Nothing}
                                                                                                                                                            , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                            , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                            , memo = Memo{isMemo = False}
                                                                                                                                                            , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                            , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                            , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                            , sourceLocation =
                                                                                                                                                               SourceLocation
                                                                                                                                                                { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                , source = Source{unSource = Nothing}
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    , applicationChildren =
                                                                                                                                                       [ TermLike
                                                                                                                                                          { getTermLike =
                                                                                                                                                             TermAttributes
                                                                                                                                                              { termSort =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                              , termFunctional = Functional{isFunctional = True}
                                                                                                                                                              , termFunction = Function{isFunction = True}
                                                                                                                                                              , termDefined = Defined{isDefined = True}
                                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                                              , termSimplified = NotSimplified
                                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                              }
                                                                                                                                                              :< ApplySymbolF
                                                                                                                                                               ( Application
                                                                                                                                                                  { applicationSymbolOrAlias =
                                                                                                                                                                     Symbol
                                                                                                                                                                      { symbolConstructor = InternedId{getInternedId = internText "anywhere", internedIdLocation = AstLocationTest}
                                                                                                                                                                      , symbolParams = []
                                                                                                                                                                      , symbolSorts =
                                                                                                                                                                         ApplicationSorts
                                                                                                                                                                          { applicationSortsOperands = []
                                                                                                                                                                          , applicationSortsResult =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          }
                                                                                                                                                                      , symbolAttributes =
                                                                                                                                                                         A.Symbol
                                                                                                                                                                          { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                          , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                          , constructor = Constructor{isConstructor = False}
                                                                                                                                                                          , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                          , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                          , anywhere = Anywhere{isAnywhere = True}
                                                                                                                                                                          , hook = Hook{getHook = Nothing}
                                                                                                                                                                          , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                          , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                          , memo = Memo{isMemo = False}
                                                                                                                                                                          , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                          , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                          , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                          , sourceLocation =
                                                                                                                                                                             SourceLocation
                                                                                                                                                                              { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                              , source = Source{unSource = Nothing}
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  , applicationChildren = []
                                                                                                                                                                  }
                                                                                                                                                               )
                                                                                                                                                          }
                                                                                                                                                       , TermLike
                                                                                                                                                          { getTermLike =
                                                                                                                                                             TermAttributes
                                                                                                                                                              { termSort =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                                              , termFunction = Function{isFunction = True}
                                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                                              , termSimplified = NotSimplified
                                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                              }
                                                                                                                                                              :< ApplySymbolF
                                                                                                                                                               ( Application
                                                                                                                                                                  { applicationSymbolOrAlias =
                                                                                                                                                                     Symbol
                                                                                                                                                                      { symbolConstructor = InternedId{getInternedId = internText "ch", internedIdLocation = AstLocationTest}
                                                                                                                                                                      , symbolParams = []
                                                                                                                                                                      , symbolSorts =
                                                                                                                                                                         ApplicationSorts
                                                                                                                                                                          { applicationSortsOperands = []
                                                                                                                                                                          , applicationSortsResult =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          }
                                                                                                                                                                      , symbolAttributes =
                                                                                                                                                                         A.Symbol
                                                                                                                                                                          { function = A.Function{isDeclaredFunction = True}
                                                                                                                                                                          , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                                          , constructor = Constructor{isConstructor = False}
                                                                                                                                                                          , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                          , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                          , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                          , hook = Hook{getHook = Nothing}
                                                                                                                                                                          , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                          , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                          , memo = Memo{isMemo = False}
                                                                                                                                                                          , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                          , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                          , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                          , sourceLocation =
                                                                                                                                                                             SourceLocation
                                                                                                                                                                              { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                              , source = Source{unSource = Nothing}
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  , applicationChildren = []
                                                                                                                                                                  }
                                                                                                                                                               )
                                                                                                                                                          }
                                                                                                                                                       ]
                                                                                                                                                    }
                                                                                                                                                 )
                                                                                                                                            }
                                                                                                                                         ]
                                                                                                                                      }
                                                                                                                                   )
                                                                                                                              }
                                                                                                                          , iffSecond =
                                                                                                                             TermLike
                                                                                                                              { getTermLike =
                                                                                                                                 TermAttributes
                                                                                                                                  { termSort =
                                                                                                                                     SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                  }
                                                                                                                                  :< T.IffF
                                                                                                                                   ( Iff
                                                                                                                                      { iffSort =
                                                                                                                                         SortActualSort
                                                                                                                                          ( SortActual
                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                             , sortActualSorts = []
                                                                                                                                             }
                                                                                                                                          )
                                                                                                                                      , iffFirst =
                                                                                                                                         TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< ApplySymbolF
                                                                                                                                               ( Application
                                                                                                                                                  { applicationSymbolOrAlias =
                                                                                                                                                     Symbol
                                                                                                                                                      { symbolConstructor = InternedId{getInternedId = internText "tdivIntId", internedIdLocation = AstLocationTest}
                                                                                                                                                      , symbolParams = []
                                                                                                                                                      , symbolSorts =
                                                                                                                                                         ApplicationSorts
                                                                                                                                                          { applicationSortsOperands =
                                                                                                                                                             [ SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                             , SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                             ]
                                                                                                                                                          , applicationSortsResult =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          }
                                                                                                                                                      , symbolAttributes =
                                                                                                                                                         A.Symbol
                                                                                                                                                          { function = A.Function{isDeclaredFunction = True}
                                                                                                                                                          , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                          , constructor = Constructor{isConstructor = False}
                                                                                                                                                          , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                          , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                          , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                          , hook = Hook{getHook = Just "INT.tdiv"}
                                                                                                                                                          , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                          , smthook = Smthook{getSmthook = Just (Atom "div")}
                                                                                                                                                          , memo = Memo{isMemo = False}
                                                                                                                                                          , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                          , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                          , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                          , sourceLocation =
                                                                                                                                                             SourceLocation
                                                                                                                                                              { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                              , source = Source{unSource = Nothing}
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                      }
                                                                                                                                                  , applicationChildren =
                                                                                                                                                     [ TermLike
                                                                                                                                                        { getTermLike =
                                                                                                                                                           TermAttributes
                                                                                                                                                            { termSort =
                                                                                                                                                               SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                                            , termFunction = Function{isFunction = True}
                                                                                                                                                            , termDefined = Defined{isDefined = False}
                                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                                            , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                            }
                                                                                                                                                            :< T.BottomF
                                                                                                                                                             ( Bottom
                                                                                                                                                                { bottomSort =
                                                                                                                                                                   SortActualSort
                                                                                                                                                                    ( SortActual
                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                       }
                                                                                                                                                                    )
                                                                                                                                                                }
                                                                                                                                                             )
                                                                                                                                                        }
                                                                                                                                                     , TermLike
                                                                                                                                                        { getTermLike =
                                                                                                                                                           TermAttributes
                                                                                                                                                            { termSort =
                                                                                                                                                               SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                                            , termFunction = Function{isFunction = False}
                                                                                                                                                            , termDefined = Defined{isDefined = True}
                                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                                            , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                            }
                                                                                                                                                            :< T.TopF
                                                                                                                                                             ( Top
                                                                                                                                                                { topSort =
                                                                                                                                                                   SortActualSort
                                                                                                                                                                    ( SortActual
                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                       }
                                                                                                                                                                    )
                                                                                                                                                                }
                                                                                                                                                             )
                                                                                                                                                        }
                                                                                                                                                     ]
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                      , iffSecond =
                                                                                                                                         TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< T.ForallF
                                                                                                                                               ( Forall
                                                                                                                                                  { forallSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , forallVariable =
                                                                                                                                                     Variable
                                                                                                                                                      { variableName =
                                                                                                                                                         ElementVariableName
                                                                                                                                                          { unElementVariableName =
                                                                                                                                                             VariableName
                                                                                                                                                              { base = InternedId{getInternedId = internText "wE", internedIdLocation = AstLocationTest}
                                                                                                                                                              , counter = Nothing
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                      , variableSort =
                                                                                                                                                         SortActualSort
                                                                                                                                                          ( SortActual
                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "otherTopSort", internedIdLocation = AstLocationTest}
                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                             }
                                                                                                                                                          )
                                                                                                                                                      }
                                                                                                                                                  , forallChild =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = True}
                                                                                                                                                          , termFunction = Function{isFunction = True}
                                                                                                                                                          , termDefined = Defined{isDefined = True}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                          }
                                                                                                                                                          :< InternalIntF
                                                                                                                                                           ( Const
                                                                                                                                                              ( InternalInt
                                                                                                                                                                 { internalIntSort =
                                                                                                                                                                    SortActualSort
                                                                                                                                                                     ( SortActual
                                                                                                                                                                        { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                        , sortActualSorts = []
                                                                                                                                                                        }
                                                                                                                                                                     )
                                                                                                                                                                 , internalIntValue = 1320
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                      }
                                                                                                                                   )
                                                                                                                              }
                                                                                                                          }
                                                                                                                       )
                                                                                                                  }
                                                                                                              }
                                                                                                           )
                                                                                                      }
                                                                                                  , impliesSecond =
                                                                                                     TermLike
                                                                                                      { getTermLike =
                                                                                                         TermAttributes
                                                                                                          { termSort =
                                                                                                             SortActualSort
                                                                                                              ( SortActual
                                                                                                                 { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                 , sortActualSorts = []
                                                                                                                 }
                                                                                                              )
                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                          , termDefined = Defined{isDefined = True}
                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                          , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                          }
                                                                                                          :< T.TopF
                                                                                                           ( Top
                                                                                                              { topSort =
                                                                                                                 SortActualSort
                                                                                                                  ( SortActual
                                                                                                                     { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                     , sortActualSorts = []
                                                                                                                     }
                                                                                                                  )
                                                                                                              }
                                                                                                           )
                                                                                                      }
                                                                                                  }
                                                                                               )
                                                                                          }
                                                                                      }
                                                                                   )
                                                                              }
                                                                          }
                                                                       )
                                                                  }
                                                              }
                                                           )
                                                       )
                                                    )
                                                }
                                             )
                                         )
                                      )

--------------------------------------------------
-- do not modify below this line
--------------------------------------------------
original =
 Conditional
  { term =
     TermLike
      { getTermLike =
         TermAttributes
          { termSort =
             SortActualSort
              ( SortActual
                 { sortActualName = InternedId{getInternedId = internText "subSort", internedIdLocation = AstLocationTest}
                 , sortActualSorts = []
                 }
              )
          , termFreeVariables = FreeVars.unsafe @VariableName []
          , termFunctional = Functional{isFunctional = False}
          , termFunction = Function{isFunction = False}
          , termDefined = Defined{isDefined = False}
          , termCreated = Created{getCreated = Nothing}
          , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
          }
          :< T.NotF
           ( Not
              { notSort =
                 SortActualSort
                  ( SortActual
                     { sortActualName = InternedId{getInternedId = internText "subSort", internedIdLocation = AstLocationTest}
                     , sortActualSorts = []
                     }
                  )
              , notChild =
                 TermLike
                  { getTermLike =
                     TermAttributes
                      { termSort =
                         SortActualSort
                          ( SortActual
                             { sortActualName = InternedId{getInternedId = internText "subSort", internedIdLocation = AstLocationTest}
                             , sortActualSorts = []
                             }
                          )
                      , termFreeVariables = FreeVars.unsafe []
                      , termFunctional = Functional{isFunctional = False}
                      , termFunction = Function{isFunction = False}
                      , termDefined = Defined{isDefined = False}
                      , termCreated = Created{getCreated = Nothing}
                      , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                      }
                      :< T.AndF
                       ( And
                          { andSort =
                             SortActualSort
                              ( SortActual
                                 { sortActualName = InternedId{getInternedId = internText "subSort", internedIdLocation = AstLocationTest}
                                 , sortActualSorts = []
                                 }
                              )
                          , andFirst =
                             TermLike
                              { getTermLike =
                                 TermAttributes
                                  { termSort =
                                     SortActualSort
                                      ( SortActual
                                         { sortActualName = InternedId{getInternedId = internText "subSort", internedIdLocation = AstLocationTest}
                                         , sortActualSorts = []
                                         }
                                      )
                                  , termFreeVariables = FreeVars.unsafe []
                                  , termFunctional = Functional{isFunctional = True}
                                  , termFunction = Function{isFunction = True}
                                  , termDefined = Defined{isDefined = True}
                                  , termCreated = Created{getCreated = Nothing}
                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                  , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                  }
                                  :< ApplySymbolF
                                   ( Application
                                      { applicationSymbolOrAlias =
                                         Symbol
                                          { symbolConstructor = InternedId{getInternedId = internText "aSubsort", internedIdLocation = AstLocationTest}
                                          , symbolParams = []
                                          , symbolSorts =
                                             ApplicationSorts
                                              { applicationSortsOperands = []
                                              , applicationSortsResult =
                                                 SortActualSort
                                                  ( SortActual
                                                     { sortActualName = InternedId{getInternedId = internText "subSort", internedIdLocation = AstLocationTest}
                                                     , sortActualSorts = []
                                                     }
                                                  )
                                              }
                                          , symbolAttributes =
                                             A.Symbol
                                              { function = A.Function{isDeclaredFunction = False}
                                              , functional = A.Functional{isDeclaredFunctional = True}
                                              , constructor = Constructor{isConstructor = True}
                                              , injective = Injective{isDeclaredInjective = False}
                                              , sortInjection = SortInjection{isSortInjection = False}
                                              , anywhere = Anywhere{isAnywhere = False}
                                              , hook = Hook{getHook = Nothing}
                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                              , smthook = Smthook{getSmthook = Nothing}
                                              , memo = Memo{isMemo = False}
                                              , klabel = Klabel{getKlabel = Nothing}
                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                              , sourceLocation =
                                                 SourceLocation
                                                  { location = Location{start = Nothing, end = Nothing}
                                                  , source = Source{unSource = Nothing}
                                                  }
                                              }
                                          }
                                      , applicationChildren = []
                                      }
                                   )
                              }
                          , andSecond =
                             TermLike
                              { getTermLike =
                                 TermAttributes
                                  { termSort =
                                     SortActualSort
                                      ( SortActual
                                         { sortActualName = InternedId{getInternedId = internText "subSort", internedIdLocation = AstLocationTest}
                                         , sortActualSorts = []
                                         }
                                      )
                                  , termFreeVariables = FreeVars.unsafe []
                                  , termFunctional = Functional{isFunctional = False}
                                  , termFunction = Function{isFunction = False}
                                  , termDefined = Defined{isDefined = True}
                                  , termCreated = Created{getCreated = Nothing}
                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                  }
                                  :< T.TopF
                                   ( Top
                                      { topSort =
                                         SortActualSort
                                          ( SortActual
                                             { sortActualName = InternedId{getInternedId = internText "subSort", internedIdLocation = AstLocationTest}
                                             , sortActualSorts = []
                                             }
                                          )
                                      }
                                   )
                              }
                          }
                       )
                  }
              }
           )
      }
  , predicate =
     Predicate
      { getPredicate =
         CofreeT
          ( Identity
             ( PredicatePattern
                { freeVariables = FreeVars.unsafe []
                , simplified = NotSimplified
                }
                :< ImpliesF
                 ( Implies
                    { impliesSort = ()
                    , impliesFirst =
                       CofreeT
                        ( Identity
                           ( PredicatePattern
                              { freeVariables = FreeVars.unsafe []
                              , simplified = NotSimplified {- WAS: Simplified (SimplifiedData {sType = Partly, condition = Any})-}
                              }
                              :< ForallF
                               ( Forall
                                  { forallSort = ()
                                  , forallVariable =
                                     Variable
                                      { variableName =
                                         ElementVariableName
                                          { unElementVariableName =
                                             VariableName
                                              { base = InternedId{getInternedId = internText "N2w", internedIdLocation = AstLocationTest}
                                              , counter = Nothing
                                              }
                                          }
                                      , variableSort =
                                         SortActualSort
                                          ( SortActual
                                             { sortActualName = InternedId{getInternedId = internText "otherSort", internedIdLocation = AstLocationTest}
                                             , sortActualSorts = []
                                             }
                                          )
                                      }
                                  , forallChild =
                                     CofreeT
                                      ( Identity
                                         ( PredicatePattern
                                            { freeVariables = FreeVars.unsafe []
                                            , simplified = NotSimplified {- WAS: Simplified (SimplifiedData {sType = Fully, condition = Any})-}
                                            }
                                            :< TopF (Top{topSort = ()})
                                         )
                                      )
                                  }
                               )
                           )
                        )
                    , impliesSecond =
                       CofreeT
                        ( Identity
                           ( PredicatePattern
                              { freeVariables = FreeVars.unsafe []
                              , simplified = NotSimplified
                              }
                              :< IffF
                               ( Iff
                                  { iffSort = ()
                                  , iffFirst =
                                     CofreeT
                                      ( Identity
                                         ( PredicatePattern
                                            { freeVariables = FreeVars.unsafe []
                                            , simplified = NotSimplified
                                            }
                                            :< InF
                                             ( In
                                                { inOperandSort = ()
                                                , inResultSort = ()
                                                , inContainedChild =
                                                   TermLike
                                                    { getTermLike =
                                                       TermAttributes
                                                        { termSort =
                                                           SortActualSort
                                                            ( SortActual
                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                               , sortActualSorts = []
                                                               }
                                                            )
                                                        , termFreeVariables = FreeVars.unsafe []
                                                        , termFunctional = Functional{isFunctional = False}
                                                        , termFunction = Function{isFunction = False}
                                                        , termDefined = Defined{isDefined = False}
                                                        , termCreated = Created{getCreated = Nothing}
                                                        , termSimplified = NotSimplified
                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                        }
                                                        :< T.ExistsF
                                                         ( Exists
                                                            { existsSort =
                                                               SortActualSort
                                                                ( SortActual
                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                   , sortActualSorts = []
                                                                   }
                                                                )
                                                            , existsVariable =
                                                               Variable
                                                                { variableName =
                                                                   ElementVariableName
                                                                    { unElementVariableName =
                                                                       VariableName
                                                                        { base = InternedId{getInternedId = internText "Ksvn", internedIdLocation = AstLocationTest}
                                                                        , counter = Nothing
                                                                        }
                                                                    }
                                                                , variableSort =
                                                                   SortActualSort
                                                                    ( SortActual
                                                                       { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                       , sortActualSorts = []
                                                                       }
                                                                    )
                                                                }
                                                            , existsChild =
                                                               TermLike
                                                                { getTermLike =
                                                                   TermAttributes
                                                                    { termSort =
                                                                       SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                    , termFunctional = Functional{isFunctional = False}
                                                                    , termFunction = Function{isFunction = False}
                                                                    , termDefined = Defined{isDefined = False}
                                                                    , termCreated = Created{getCreated = Nothing}
                                                                    , termSimplified = NotSimplified
                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                    }
                                                                    :< T.OrF
                                                                     ( Or
                                                                        { orSort =
                                                                           SortActualSort
                                                                            ( SortActual
                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                               , sortActualSorts = []
                                                                               }
                                                                            )
                                                                        , orFirst =
                                                                           TermLike
                                                                            { getTermLike =
                                                                               TermAttributes
                                                                                { termSort =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                , termFunction = Function{isFunction = False}
                                                                                , termDefined = Defined{isDefined = False}
                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                , termSimplified = NotSimplified
                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                }
                                                                                :< T.NotF
                                                                                 ( Not
                                                                                    { notSort =
                                                                                       SortActualSort
                                                                                        ( SortActual
                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                           , sortActualSorts = []
                                                                                           }
                                                                                        )
                                                                                    , notChild =
                                                                                       TermLike
                                                                                        { getTermLike =
                                                                                           TermAttributes
                                                                                            { termSort =
                                                                                               SortActualSort
                                                                                                ( SortActual
                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                   , sortActualSorts = []
                                                                                                   }
                                                                                                )
                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                            , termFunction = Function{isFunction = False}
                                                                                            , termDefined = Defined{isDefined = False}
                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                            , termSimplified = NotSimplified
                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                            }
                                                                                            :< T.IffF
                                                                                             ( Iff
                                                                                                { iffSort =
                                                                                                   SortActualSort
                                                                                                    ( SortActual
                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                       , sortActualSorts = []
                                                                                                       }
                                                                                                    )
                                                                                                , iffFirst =
                                                                                                   TermLike
                                                                                                    { getTermLike =
                                                                                                       TermAttributes
                                                                                                        { termSort =
                                                                                                           SortActualSort
                                                                                                            ( SortActual
                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                               , sortActualSorts = []
                                                                                                               }
                                                                                                            )
                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                        , termSimplified = NotSimplified
                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                        }
                                                                                                        :< T.ImpliesF
                                                                                                         ( Implies
                                                                                                            { impliesSort =
                                                                                                               SortActualSort
                                                                                                                ( SortActual
                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                   , sortActualSorts = []
                                                                                                                   }
                                                                                                                )
                                                                                                            , impliesFirst =
                                                                                                               TermLike
                                                                                                                { getTermLike =
                                                                                                                   TermAttributes
                                                                                                                    { termSort =
                                                                                                                       SortActualSort
                                                                                                                        ( SortActual
                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                           , sortActualSorts = []
                                                                                                                           }
                                                                                                                        )
                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                    , termDefined = Defined{isDefined = False}
                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                    , termSimplified = NotSimplified
                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                    }
                                                                                                                    :< T.ImpliesF
                                                                                                                     ( Implies
                                                                                                                        { impliesSort =
                                                                                                                           SortActualSort
                                                                                                                            ( SortActual
                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                               , sortActualSorts = []
                                                                                                                               }
                                                                                                                            )
                                                                                                                        , impliesFirst =
                                                                                                                           TermLike
                                                                                                                            { getTermLike =
                                                                                                                               TermAttributes
                                                                                                                                { termSort =
                                                                                                                                   SortActualSort
                                                                                                                                    ( SortActual
                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                       , sortActualSorts = []
                                                                                                                                       }
                                                                                                                                    )
                                                                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                                                                , termFunction = Function{isFunction = False}
                                                                                                                                , termDefined = Defined{isDefined = False}
                                                                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                                                                , termSimplified = NotSimplified
                                                                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                }
                                                                                                                                :< T.ExistsF
                                                                                                                                 ( Exists
                                                                                                                                    { existsSort =
                                                                                                                                       SortActualSort
                                                                                                                                        ( SortActual
                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                           , sortActualSorts = []
                                                                                                                                           }
                                                                                                                                        )
                                                                                                                                    , existsVariable =
                                                                                                                                       Variable
                                                                                                                                        { variableName =
                                                                                                                                           ElementVariableName
                                                                                                                                            { unElementVariableName =
                                                                                                                                               VariableName
                                                                                                                                                { base = InternedId{getInternedId = internText "XBOA", internedIdLocation = AstLocationTest}
                                                                                                                                                , counter = Nothing
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        , variableSort =
                                                                                                                                           SortActualSort
                                                                                                                                            ( SortActual
                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "#String", internedIdLocation = AstLocationImplicit}
                                                                                                                                               , sortActualSorts = []
                                                                                                                                               }
                                                                                                                                            )
                                                                                                                                        }
                                                                                                                                    , existsChild =
                                                                                                                                       TermLike
                                                                                                                                        { getTermLike =
                                                                                                                                           TermAttributes
                                                                                                                                            { termSort =
                                                                                                                                               SortActualSort
                                                                                                                                                ( SortActual
                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                   }
                                                                                                                                                )
                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                            , termFunction = Function{isFunction = False}
                                                                                                                                            , termDefined = Defined{isDefined = True}
                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                            , termSimplified = NotSimplified
                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                            }
                                                                                                                                            :< T.OrF
                                                                                                                                             ( Or
                                                                                                                                                { orSort =
                                                                                                                                                   SortActualSort
                                                                                                                                                    ( SortActual
                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                       }
                                                                                                                                                    )
                                                                                                                                                , orFirst =
                                                                                                                                                   TermLike
                                                                                                                                                    { getTermLike =
                                                                                                                                                       TermAttributes
                                                                                                                                                        { termSort =
                                                                                                                                                           SortActualSort
                                                                                                                                                            ( SortActual
                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                               }
                                                                                                                                                            )
                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                                                                        , termDefined = Defined{isDefined = True}
                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                        , termSimplified = NotSimplified
                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                        }
                                                                                                                                                        :< T.OrF
                                                                                                                                                         ( Or
                                                                                                                                                            { orSort =
                                                                                                                                                               SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                            , orFirst =
                                                                                                                                                               TermLike
                                                                                                                                                                { getTermLike =
                                                                                                                                                                   TermAttributes
                                                                                                                                                                    { termSort =
                                                                                                                                                                       SortActualSort
                                                                                                                                                                        ( SortActual
                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                           }
                                                                                                                                                                        )
                                                                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                                                                    , termDefined = Defined{isDefined = True}
                                                                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                    , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                    }
                                                                                                                                                                    :< T.TopF
                                                                                                                                                                     ( Top
                                                                                                                                                                        { topSort =
                                                                                                                                                                           SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                        }
                                                                                                                                                                     )
                                                                                                                                                                }
                                                                                                                                                            , orSecond =
                                                                                                                                                               TermLike
                                                                                                                                                                { getTermLike =
                                                                                                                                                                   TermAttributes
                                                                                                                                                                    { termSort =
                                                                                                                                                                       SortActualSort
                                                                                                                                                                        ( SortActual
                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                           }
                                                                                                                                                                        )
                                                                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                                                                    , termDefined = Defined{isDefined = False}
                                                                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                    , termSimplified = NotSimplified
                                                                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                    }
                                                                                                                                                                    :< T.ForallF
                                                                                                                                                                     ( Forall
                                                                                                                                                                        { forallSort =
                                                                                                                                                                           SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                        , forallVariable =
                                                                                                                                                                           Variable
                                                                                                                                                                            { variableName =
                                                                                                                                                                               ElementVariableName
                                                                                                                                                                                { unElementVariableName =
                                                                                                                                                                                   VariableName
                                                                                                                                                                                    { base = InternedId{getInternedId = internText "kdq", internedIdLocation = AstLocationTest}
                                                                                                                                                                                    , counter = Nothing
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            , variableSort =
                                                                                                                                                                               SortActualSort
                                                                                                                                                                                ( SortActual
                                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "#String", internedIdLocation = AstLocationImplicit}
                                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                                   }
                                                                                                                                                                                )
                                                                                                                                                                            }
                                                                                                                                                                        , forallChild =
                                                                                                                                                                           TermLike
                                                                                                                                                                            { getTermLike =
                                                                                                                                                                               TermAttributes
                                                                                                                                                                                { termSort =
                                                                                                                                                                                   SortActualSort
                                                                                                                                                                                    ( SortActual
                                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                                       }
                                                                                                                                                                                    )
                                                                                                                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                , termFunction = Function{isFunction = True}
                                                                                                                                                                                , termDefined = Defined{isDefined = True}
                                                                                                                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                , termSimplified = NotSimplified
                                                                                                                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                }
                                                                                                                                                                                :< ApplySymbolF
                                                                                                                                                                                 ( Application
                                                                                                                                                                                    { applicationSymbolOrAlias =
                                                                                                                                                                                       Symbol
                                                                                                                                                                                        { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                                        , symbolParams = []
                                                                                                                                                                                        , symbolSorts =
                                                                                                                                                                                           ApplicationSorts
                                                                                                                                                                                            { applicationSortsOperands = []
                                                                                                                                                                                            , applicationSortsResult =
                                                                                                                                                                                               SortActualSort
                                                                                                                                                                                                ( SortActual
                                                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                                                   }
                                                                                                                                                                                                )
                                                                                                                                                                                            }
                                                                                                                                                                                        , symbolAttributes =
                                                                                                                                                                                           A.Symbol
                                                                                                                                                                                            { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                            , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                            , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                            , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                            , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                            , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                            , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                                            , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                            , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                            , memo = Memo{isMemo = False}
                                                                                                                                                                                            , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                            , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                            , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                            , sourceLocation =
                                                                                                                                                                                               SourceLocation
                                                                                                                                                                                                { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                , source = Source{unSource = Nothing}
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    , applicationChildren = []
                                                                                                                                                                                    }
                                                                                                                                                                                 )
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                     )
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                         )
                                                                                                                                                    }
                                                                                                                                                , orSecond =
                                                                                                                                                   TermLike
                                                                                                                                                    { getTermLike =
                                                                                                                                                       TermAttributes
                                                                                                                                                        { termSort =
                                                                                                                                                           SortActualSort
                                                                                                                                                            ( SortActual
                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                               }
                                                                                                                                                            )
                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                                                                        , termDefined = Defined{isDefined = True}
                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                        , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                        }
                                                                                                                                                        :< ApplySymbolF
                                                                                                                                                         ( Application
                                                                                                                                                            { applicationSymbolOrAlias =
                                                                                                                                                               Symbol
                                                                                                                                                                { symbolConstructor = InternedId{getInternedId = internText "elementMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                , symbolParams = []
                                                                                                                                                                , symbolSorts =
                                                                                                                                                                   ApplicationSorts
                                                                                                                                                                    { applicationSortsOperands =
                                                                                                                                                                       [ SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                       , SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                       ]
                                                                                                                                                                    , applicationSortsResult =
                                                                                                                                                                       SortActualSort
                                                                                                                                                                        ( SortActual
                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                           }
                                                                                                                                                                        )
                                                                                                                                                                    }
                                                                                                                                                                , symbolAttributes =
                                                                                                                                                                   A.Symbol
                                                                                                                                                                    { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                    , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                    , constructor = Constructor{isConstructor = False}
                                                                                                                                                                    , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                    , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                    , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                    , hook = Hook{getHook = Just "MAP.element"}
                                                                                                                                                                    , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                    , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                    , memo = Memo{isMemo = False}
                                                                                                                                                                    , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                    , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                    , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                    , sourceLocation =
                                                                                                                                                                       SourceLocation
                                                                                                                                                                        { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                        , source = Source{unSource = Nothing}
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            , applicationChildren =
                                                                                                                                                               [ TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                      , termFunction = Function{isFunction = True}
                                                                                                                                                                      , termDefined = Defined{isDefined = True}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                                      }
                                                                                                                                                                      :< ApplySymbolF
                                                                                                                                                                       ( Application
                                                                                                                                                                          { applicationSymbolOrAlias =
                                                                                                                                                                             Symbol
                                                                                                                                                                              { symbolConstructor = InternedId{getInternedId = internText "d", internedIdLocation = AstLocationTest}
                                                                                                                                                                              , symbolParams = []
                                                                                                                                                                              , symbolSorts =
                                                                                                                                                                                 ApplicationSorts
                                                                                                                                                                                  { applicationSortsOperands = []
                                                                                                                                                                                  , applicationSortsResult =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  }
                                                                                                                                                                              , symbolAttributes =
                                                                                                                                                                                 A.Symbol
                                                                                                                                                                                  { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                  , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                  , constructor = Constructor{isConstructor = True}
                                                                                                                                                                                  , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                  , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                  , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                  , hook = Hook{getHook = Nothing}
                                                                                                                                                                                  , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                  , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                  , memo = Memo{isMemo = False}
                                                                                                                                                                                  , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                  , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                  , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                  , sourceLocation =
                                                                                                                                                                                     SourceLocation
                                                                                                                                                                                      { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                      , source = Source{unSource = Nothing}
                                                                                                                                                                                      }
                                                                                                                                                                                  }
                                                                                                                                                                              }
                                                                                                                                                                          , applicationChildren = []
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                               , TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = True}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                                      }
                                                                                                                                                                      :< ApplySymbolF
                                                                                                                                                                       ( Application
                                                                                                                                                                          { applicationSymbolOrAlias =
                                                                                                                                                                             Symbol
                                                                                                                                                                              { symbolConstructor = InternedId{getInternedId = internText "constr20", internedIdLocation = AstLocationTest}
                                                                                                                                                                              , symbolParams = []
                                                                                                                                                                              , symbolSorts =
                                                                                                                                                                                 ApplicationSorts
                                                                                                                                                                                  { applicationSortsOperands =
                                                                                                                                                                                     [ SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                     , SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                     ]
                                                                                                                                                                                  , applicationSortsResult =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  }
                                                                                                                                                                              , symbolAttributes =
                                                                                                                                                                                 A.Symbol
                                                                                                                                                                                  { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                  , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                                                  , constructor = Constructor{isConstructor = True}
                                                                                                                                                                                  , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                  , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                  , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                  , hook = Hook{getHook = Nothing}
                                                                                                                                                                                  , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                  , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                  , memo = Memo{isMemo = False}
                                                                                                                                                                                  , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                  , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                  , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                  , sourceLocation =
                                                                                                                                                                                     SourceLocation
                                                                                                                                                                                      { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                      , source = Source{unSource = Nothing}
                                                                                                                                                                                      }
                                                                                                                                                                                  }
                                                                                                                                                                              }
                                                                                                                                                                          , applicationChildren =
                                                                                                                                                                             [ TermLike
                                                                                                                                                                                { getTermLike =
                                                                                                                                                                                   TermAttributes
                                                                                                                                                                                    { termSort =
                                                                                                                                                                                       SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                    , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                    , termFunction = Function{isFunction = True}
                                                                                                                                                                                    , termDefined = Defined{isDefined = True}
                                                                                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                    , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                                                    }
                                                                                                                                                                                    :< ApplySymbolF
                                                                                                                                                                                     ( Application
                                                                                                                                                                                        { applicationSymbolOrAlias =
                                                                                                                                                                                           Symbol
                                                                                                                                                                                            { symbolConstructor = InternedId{getInternedId = internText "c", internedIdLocation = AstLocationTest}
                                                                                                                                                                                            , symbolParams = []
                                                                                                                                                                                            , symbolSorts =
                                                                                                                                                                                               ApplicationSorts
                                                                                                                                                                                                { applicationSortsOperands = []
                                                                                                                                                                                                , applicationSortsResult =
                                                                                                                                                                                                   SortActualSort
                                                                                                                                                                                                    ( SortActual
                                                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                                                       }
                                                                                                                                                                                                    )
                                                                                                                                                                                                }
                                                                                                                                                                                            , symbolAttributes =
                                                                                                                                                                                               A.Symbol
                                                                                                                                                                                                { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                                , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                                , constructor = Constructor{isConstructor = True}
                                                                                                                                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                                , hook = Hook{getHook = Nothing}
                                                                                                                                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                                , memo = Memo{isMemo = False}
                                                                                                                                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                                , sourceLocation =
                                                                                                                                                                                                   SourceLocation
                                                                                                                                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                    , source = Source{unSource = Nothing}
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        , applicationChildren = []
                                                                                                                                                                                        }
                                                                                                                                                                                     )
                                                                                                                                                                                }
                                                                                                                                                                             , TermLike
                                                                                                                                                                                { getTermLike =
                                                                                                                                                                                   TermAttributes
                                                                                                                                                                                    { termSort =
                                                                                                                                                                                       SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                    , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                    , termFunction = Function{isFunction = True}
                                                                                                                                                                                    , termDefined = Defined{isDefined = True}
                                                                                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                    , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                                                    }
                                                                                                                                                                                    :< ApplySymbolF
                                                                                                                                                                                     ( Application
                                                                                                                                                                                        { applicationSymbolOrAlias =
                                                                                                                                                                                           Symbol
                                                                                                                                                                                            { symbolConstructor = InternedId{getInternedId = internText "c", internedIdLocation = AstLocationTest}
                                                                                                                                                                                            , symbolParams = []
                                                                                                                                                                                            , symbolSorts =
                                                                                                                                                                                               ApplicationSorts
                                                                                                                                                                                                { applicationSortsOperands = []
                                                                                                                                                                                                , applicationSortsResult =
                                                                                                                                                                                                   SortActualSort
                                                                                                                                                                                                    ( SortActual
                                                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                                                       }
                                                                                                                                                                                                    )
                                                                                                                                                                                                }
                                                                                                                                                                                            , symbolAttributes =
                                                                                                                                                                                               A.Symbol
                                                                                                                                                                                                { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                                , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                                , constructor = Constructor{isConstructor = True}
                                                                                                                                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                                , hook = Hook{getHook = Nothing}
                                                                                                                                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                                , memo = Memo{isMemo = False}
                                                                                                                                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                                , sourceLocation =
                                                                                                                                                                                                   SourceLocation
                                                                                                                                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                    , source = Source{unSource = Nothing}
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        , applicationChildren = []
                                                                                                                                                                                        }
                                                                                                                                                                                     )
                                                                                                                                                                                }
                                                                                                                                                                             ]
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                               ]
                                                                                                                                                            }
                                                                                                                                                         )
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                             )
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                 )
                                                                                                                            }
                                                                                                                        , impliesSecond =
                                                                                                                           TermLike
                                                                                                                            { getTermLike =
                                                                                                                               TermAttributes
                                                                                                                                { termSort =
                                                                                                                                   SortActualSort
                                                                                                                                    ( SortActual
                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                       , sortActualSorts = []
                                                                                                                                       }
                                                                                                                                    )
                                                                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                                                                , termFunction = Function{isFunction = False}
                                                                                                                                , termDefined = Defined{isDefined = False}
                                                                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                                                                , termSimplified = NotSimplified
                                                                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                }
                                                                                                                                :< NuF
                                                                                                                                 ( Nu
                                                                                                                                    { nuVariable =
                                                                                                                                       Variable
                                                                                                                                        { variableName =
                                                                                                                                           SetVariableName
                                                                                                                                            { unSetVariableName =
                                                                                                                                               VariableName
                                                                                                                                                { base = InternedId{getInternedId = internText "bJUM", internedIdLocation = AstLocationTest}
                                                                                                                                                , counter = Nothing
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        , variableSort =
                                                                                                                                           SortActualSort
                                                                                                                                            ( SortActual
                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                               , sortActualSorts = []
                                                                                                                                               }
                                                                                                                                            )
                                                                                                                                        }
                                                                                                                                    , nuChild =
                                                                                                                                       TermLike
                                                                                                                                        { getTermLike =
                                                                                                                                           TermAttributes
                                                                                                                                            { termSort =
                                                                                                                                               SortActualSort
                                                                                                                                                ( SortActual
                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                   }
                                                                                                                                                )
                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                            , termFunction = Function{isFunction = False}
                                                                                                                                            , termDefined = Defined{isDefined = False}
                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                            , termSimplified = NotSimplified
                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                            }
                                                                                                                                            :< NuF
                                                                                                                                             ( Nu
                                                                                                                                                { nuVariable =
                                                                                                                                                   Variable
                                                                                                                                                    { variableName =
                                                                                                                                                       SetVariableName
                                                                                                                                                        { unSetVariableName =
                                                                                                                                                           VariableName
                                                                                                                                                            { base = InternedId{getInternedId = internText "c", internedIdLocation = AstLocationTest}
                                                                                                                                                            , counter = Nothing
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    , variableSort =
                                                                                                                                                       SortActualSort
                                                                                                                                                        ( SortActual
                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                           }
                                                                                                                                                        )
                                                                                                                                                    }
                                                                                                                                                , nuChild =
                                                                                                                                                   TermLike
                                                                                                                                                    { getTermLike =
                                                                                                                                                       TermAttributes
                                                                                                                                                        { termSort =
                                                                                                                                                           SortActualSort
                                                                                                                                                            ( SortActual
                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                               }
                                                                                                                                                            )
                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                        , termFunctional = Functional{isFunctional = True}
                                                                                                                                                        , termFunction = Function{isFunction = True}
                                                                                                                                                        , termDefined = Defined{isDefined = True}
                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                        , termSimplified = NotSimplified
                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                        }
                                                                                                                                                        :< ApplySymbolF
                                                                                                                                                         ( Application
                                                                                                                                                            { applicationSymbolOrAlias =
                                                                                                                                                               Symbol
                                                                                                                                                                { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                , symbolParams = []
                                                                                                                                                                , symbolSorts =
                                                                                                                                                                   ApplicationSorts
                                                                                                                                                                    { applicationSortsOperands = []
                                                                                                                                                                    , applicationSortsResult =
                                                                                                                                                                       SortActualSort
                                                                                                                                                                        ( SortActual
                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                           }
                                                                                                                                                                        )
                                                                                                                                                                    }
                                                                                                                                                                , symbolAttributes =
                                                                                                                                                                   A.Symbol
                                                                                                                                                                    { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                    , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                    , constructor = Constructor{isConstructor = False}
                                                                                                                                                                    , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                    , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                    , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                    , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                    , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                    , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                    , memo = Memo{isMemo = False}
                                                                                                                                                                    , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                    , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                    , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                    , sourceLocation =
                                                                                                                                                                       SourceLocation
                                                                                                                                                                        { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                        , source = Source{unSource = Nothing}
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            , applicationChildren = []
                                                                                                                                                            }
                                                                                                                                                         )
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                             )
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                 )
                                                                                                                            }
                                                                                                                        }
                                                                                                                     )
                                                                                                                }
                                                                                                            , impliesSecond =
                                                                                                               TermLike
                                                                                                                { getTermLike =
                                                                                                                   TermAttributes
                                                                                                                    { termSort =
                                                                                                                       SortActualSort
                                                                                                                        ( SortActual
                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                           , sortActualSorts = []
                                                                                                                           }
                                                                                                                        )
                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                    , termDefined = Defined{isDefined = False}
                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                    , termSimplified = NotSimplified
                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                    }
                                                                                                                    :< T.IffF
                                                                                                                     ( Iff
                                                                                                                        { iffSort =
                                                                                                                           SortActualSort
                                                                                                                            ( SortActual
                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                               , sortActualSorts = []
                                                                                                                               }
                                                                                                                            )
                                                                                                                        , iffFirst =
                                                                                                                           TermLike
                                                                                                                            { getTermLike =
                                                                                                                               TermAttributes
                                                                                                                                { termSort =
                                                                                                                                   SortActualSort
                                                                                                                                    ( SortActual
                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                       , sortActualSorts = []
                                                                                                                                       }
                                                                                                                                    )
                                                                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                                                                , termFunction = Function{isFunction = False}
                                                                                                                                , termDefined = Defined{isDefined = True}
                                                                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                                                                , termSimplified = NotSimplified
                                                                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                }
                                                                                                                                :< T.OrF
                                                                                                                                 ( Or
                                                                                                                                    { orSort =
                                                                                                                                       SortActualSort
                                                                                                                                        ( SortActual
                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                           , sortActualSorts = []
                                                                                                                                           }
                                                                                                                                        )
                                                                                                                                    , orFirst =
                                                                                                                                       TermLike
                                                                                                                                        { getTermLike =
                                                                                                                                           TermAttributes
                                                                                                                                            { termSort =
                                                                                                                                               SortActualSort
                                                                                                                                                ( SortActual
                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                   }
                                                                                                                                                )
                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                            , termFunction = Function{isFunction = False}
                                                                                                                                            , termDefined = Defined{isDefined = True}
                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                            , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                            }
                                                                                                                                            :< ApplySymbolF
                                                                                                                                             ( Application
                                                                                                                                                { applicationSymbolOrAlias =
                                                                                                                                                   Symbol
                                                                                                                                                    { symbolConstructor = InternedId{getInternedId = internText "elementMap", internedIdLocation = AstLocationTest}
                                                                                                                                                    , symbolParams = []
                                                                                                                                                    , symbolSorts =
                                                                                                                                                       ApplicationSorts
                                                                                                                                                        { applicationSortsOperands =
                                                                                                                                                           [ SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                           , SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                           ]
                                                                                                                                                        , applicationSortsResult =
                                                                                                                                                           SortActualSort
                                                                                                                                                            ( SortActual
                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                               }
                                                                                                                                                            )
                                                                                                                                                        }
                                                                                                                                                    , symbolAttributes =
                                                                                                                                                       A.Symbol
                                                                                                                                                        { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                        , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                        , constructor = Constructor{isConstructor = False}
                                                                                                                                                        , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                        , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                        , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                        , hook = Hook{getHook = Just "MAP.element"}
                                                                                                                                                        , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                        , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                        , memo = Memo{isMemo = False}
                                                                                                                                                        , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                        , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                        , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                        , sourceLocation =
                                                                                                                                                           SourceLocation
                                                                                                                                                            { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                            , source = Source{unSource = Nothing}
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                , applicationChildren =
                                                                                                                                                   [ TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                                                          , termDefined = Defined{isDefined = True}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                          }
                                                                                                                                                          :< ApplySymbolF
                                                                                                                                                           ( Application
                                                                                                                                                              { applicationSymbolOrAlias =
                                                                                                                                                                 Symbol
                                                                                                                                                                  { symbolConstructor = InternedId{getInternedId = internText "constr00", internedIdLocation = AstLocationTest}
                                                                                                                                                                  , symbolParams = []
                                                                                                                                                                  , symbolSorts =
                                                                                                                                                                     ApplicationSorts
                                                                                                                                                                      { applicationSortsOperands = []
                                                                                                                                                                      , applicationSortsResult =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      }
                                                                                                                                                                  , symbolAttributes =
                                                                                                                                                                     A.Symbol
                                                                                                                                                                      { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                      , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                                      , constructor = Constructor{isConstructor = True}
                                                                                                                                                                      , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                      , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                      , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                      , hook = Hook{getHook = Nothing}
                                                                                                                                                                      , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                      , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                      , memo = Memo{isMemo = False}
                                                                                                                                                                      , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                      , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                      , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                      , sourceLocation =
                                                                                                                                                                         SourceLocation
                                                                                                                                                                          { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                          , source = Source{unSource = Nothing}
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  }
                                                                                                                                                              , applicationChildren = []
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                   , TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                                                          , termDefined = Defined{isDefined = True}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                          }
                                                                                                                                                          :< ApplySymbolF
                                                                                                                                                           ( Application
                                                                                                                                                              { applicationSymbolOrAlias =
                                                                                                                                                                 Symbol
                                                                                                                                                                  { symbolConstructor = InternedId{getInternedId = internText "functionalConstr10", internedIdLocation = AstLocationTest}
                                                                                                                                                                  , symbolParams = []
                                                                                                                                                                  , symbolSorts =
                                                                                                                                                                     ApplicationSorts
                                                                                                                                                                      { applicationSortsOperands =
                                                                                                                                                                         [ SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                         ]
                                                                                                                                                                      , applicationSortsResult =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      }
                                                                                                                                                                  , symbolAttributes =
                                                                                                                                                                     A.Symbol
                                                                                                                                                                      { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                      , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                      , constructor = Constructor{isConstructor = True}
                                                                                                                                                                      , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                      , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                      , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                      , hook = Hook{getHook = Nothing}
                                                                                                                                                                      , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                      , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                      , memo = Memo{isMemo = False}
                                                                                                                                                                      , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                      , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                      , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                      , sourceLocation =
                                                                                                                                                                         SourceLocation
                                                                                                                                                                          { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                          , source = Source{unSource = Nothing}
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  }
                                                                                                                                                              , applicationChildren =
                                                                                                                                                                 [ TermLike
                                                                                                                                                                    { getTermLike =
                                                                                                                                                                       TermAttributes
                                                                                                                                                                        { termSort =
                                                                                                                                                                           SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                                                                                        , termDefined = Defined{isDefined = True}
                                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                        , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                                        }
                                                                                                                                                                        :< ApplySymbolF
                                                                                                                                                                         ( Application
                                                                                                                                                                            { applicationSymbolOrAlias =
                                                                                                                                                                               Symbol
                                                                                                                                                                                { symbolConstructor = InternedId{getInternedId = internText "constr10", internedIdLocation = AstLocationTest}
                                                                                                                                                                                , symbolParams = []
                                                                                                                                                                                , symbolSorts =
                                                                                                                                                                                   ApplicationSorts
                                                                                                                                                                                    { applicationSortsOperands =
                                                                                                                                                                                       [ SortActualSort
                                                                                                                                                                                          ( SortActual
                                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                                             }
                                                                                                                                                                                          )
                                                                                                                                                                                       ]
                                                                                                                                                                                    , applicationSortsResult =
                                                                                                                                                                                       SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                    }
                                                                                                                                                                                , symbolAttributes =
                                                                                                                                                                                   A.Symbol
                                                                                                                                                                                    { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                    , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                                                    , constructor = Constructor{isConstructor = True}
                                                                                                                                                                                    , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                    , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                    , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                    , hook = Hook{getHook = Nothing}
                                                                                                                                                                                    , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                    , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                    , memo = Memo{isMemo = False}
                                                                                                                                                                                    , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                    , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                    , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                    , sourceLocation =
                                                                                                                                                                                       SourceLocation
                                                                                                                                                                                        { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                        , source = Source{unSource = Nothing}
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            , applicationChildren =
                                                                                                                                                                               [ TermLike
                                                                                                                                                                                  { getTermLike =
                                                                                                                                                                                     TermAttributes
                                                                                                                                                                                      { termSort =
                                                                                                                                                                                         SortActualSort
                                                                                                                                                                                          ( SortActual
                                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                                             }
                                                                                                                                                                                          )
                                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                                      , termDefined = Defined{isDefined = True}
                                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                      , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                                                      }
                                                                                                                                                                                      :< ApplySymbolF
                                                                                                                                                                                       ( Application
                                                                                                                                                                                          { applicationSymbolOrAlias =
                                                                                                                                                                                             Symbol
                                                                                                                                                                                              { symbolConstructor = InternedId{getInternedId = internText "constr00", internedIdLocation = AstLocationTest}
                                                                                                                                                                                              , symbolParams = []
                                                                                                                                                                                              , symbolSorts =
                                                                                                                                                                                                 ApplicationSorts
                                                                                                                                                                                                  { applicationSortsOperands = []
                                                                                                                                                                                                  , applicationSortsResult =
                                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                                         }
                                                                                                                                                                                                      )
                                                                                                                                                                                                  }
                                                                                                                                                                                              , symbolAttributes =
                                                                                                                                                                                                 A.Symbol
                                                                                                                                                                                                  { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                                  , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                                                                  , constructor = Constructor{isConstructor = True}
                                                                                                                                                                                                  , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                                  , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                                  , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                                  , hook = Hook{getHook = Nothing}
                                                                                                                                                                                                  , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                                  , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                                  , memo = Memo{isMemo = False}
                                                                                                                                                                                                  , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                                  , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                                  , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                                  , sourceLocation =
                                                                                                                                                                                                     SourceLocation
                                                                                                                                                                                                      { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                      , source = Source{unSource = Nothing}
                                                                                                                                                                                                      }
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          , applicationChildren = []
                                                                                                                                                                                          }
                                                                                                                                                                                       )
                                                                                                                                                                                  }
                                                                                                                                                                               ]
                                                                                                                                                                            }
                                                                                                                                                                         )
                                                                                                                                                                    }
                                                                                                                                                                 ]
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                   ]
                                                                                                                                                }
                                                                                                                                             )
                                                                                                                                        }
                                                                                                                                    , orSecond =
                                                                                                                                       TermLike
                                                                                                                                        { getTermLike =
                                                                                                                                           TermAttributes
                                                                                                                                            { termSort =
                                                                                                                                               SortActualSort
                                                                                                                                                ( SortActual
                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                   }
                                                                                                                                                )
                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                            , termFunction = Function{isFunction = False}
                                                                                                                                            , termDefined = Defined{isDefined = False}
                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                            , termSimplified = NotSimplified
                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                            }
                                                                                                                                            :< T.AndF
                                                                                                                                             ( And
                                                                                                                                                { andSort =
                                                                                                                                                   SortActualSort
                                                                                                                                                    ( SortActual
                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                       }
                                                                                                                                                    )
                                                                                                                                                , andFirst =
                                                                                                                                                   TermLike
                                                                                                                                                    { getTermLike =
                                                                                                                                                       TermAttributes
                                                                                                                                                        { termSort =
                                                                                                                                                           SortActualSort
                                                                                                                                                            ( SortActual
                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                               }
                                                                                                                                                            )
                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                        , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                        }
                                                                                                                                                        :< T.ExistsF
                                                                                                                                                         ( Exists
                                                                                                                                                            { existsSort =
                                                                                                                                                               SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                            , existsVariable =
                                                                                                                                                               Variable
                                                                                                                                                                { variableName =
                                                                                                                                                                   ElementVariableName
                                                                                                                                                                    { unElementVariableName =
                                                                                                                                                                       VariableName
                                                                                                                                                                        { base = InternedId{getInternedId = internText "m8", internedIdLocation = AstLocationTest}
                                                                                                                                                                        , counter = Nothing
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                , variableSort =
                                                                                                                                                                   SortActualSort
                                                                                                                                                                    ( SortActual
                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "setSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                       }
                                                                                                                                                                    )
                                                                                                                                                                }
                                                                                                                                                            , existsChild =
                                                                                                                                                               TermLike
                                                                                                                                                                { getTermLike =
                                                                                                                                                                   TermAttributes
                                                                                                                                                                    { termSort =
                                                                                                                                                                       SortActualSort
                                                                                                                                                                        ( SortActual
                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                           }
                                                                                                                                                                        )
                                                                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                    , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                    , termFunction = Function{isFunction = True}
                                                                                                                                                                    , termDefined = Defined{isDefined = True}
                                                                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                    , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                    }
                                                                                                                                                                    :< ApplySymbolF
                                                                                                                                                                     ( Application
                                                                                                                                                                        { applicationSymbolOrAlias =
                                                                                                                                                                           Symbol
                                                                                                                                                                            { symbolConstructor = InternedId{getInternedId = internText "elementMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                            , symbolParams = []
                                                                                                                                                                            , symbolSorts =
                                                                                                                                                                               ApplicationSorts
                                                                                                                                                                                { applicationSortsOperands =
                                                                                                                                                                                   [ SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                   , SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                   ]
                                                                                                                                                                                , applicationSortsResult =
                                                                                                                                                                                   SortActualSort
                                                                                                                                                                                    ( SortActual
                                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                                       }
                                                                                                                                                                                    )
                                                                                                                                                                                }
                                                                                                                                                                            , symbolAttributes =
                                                                                                                                                                               A.Symbol
                                                                                                                                                                                { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                , hook = Hook{getHook = Just "MAP.element"}
                                                                                                                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                , memo = Memo{isMemo = False}
                                                                                                                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                , sourceLocation =
                                                                                                                                                                                   SourceLocation
                                                                                                                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                    , source = Source{unSource = Nothing}
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        , applicationChildren =
                                                                                                                                                                           [ TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                                                   ( Application
                                                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                                                         Symbol
                                                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "c", internedIdLocation = AstLocationTest}
                                                                                                                                                                                          , symbolParams = []
                                                                                                                                                                                          , symbolSorts =
                                                                                                                                                                                             ApplicationSorts
                                                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                                     }
                                                                                                                                                                                                  )
                                                                                                                                                                                              }
                                                                                                                                                                                          , symbolAttributes =
                                                                                                                                                                                             A.Symbol
                                                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                              , constructor = Constructor{isConstructor = True}
                                                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                              , hook = Hook{getHook = Nothing}
                                                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                              , sourceLocation =
                                                                                                                                                                                                 SourceLocation
                                                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          }
                                                                                                                                                                                      , applicationChildren = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                           , TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                                                   ( Application
                                                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                                                         Symbol
                                                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "d", internedIdLocation = AstLocationTest}
                                                                                                                                                                                          , symbolParams = []
                                                                                                                                                                                          , symbolSorts =
                                                                                                                                                                                             ApplicationSorts
                                                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                                     }
                                                                                                                                                                                                  )
                                                                                                                                                                                              }
                                                                                                                                                                                          , symbolAttributes =
                                                                                                                                                                                             A.Symbol
                                                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                              , constructor = Constructor{isConstructor = True}
                                                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                              , hook = Hook{getHook = Nothing}
                                                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                              , sourceLocation =
                                                                                                                                                                                                 SourceLocation
                                                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          }
                                                                                                                                                                                      , applicationChildren = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                           ]
                                                                                                                                                                        }
                                                                                                                                                                     )
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                         )
                                                                                                                                                    }
                                                                                                                                                , andSecond =
                                                                                                                                                   TermLike
                                                                                                                                                    { getTermLike =
                                                                                                                                                       TermAttributes
                                                                                                                                                        { termSort =
                                                                                                                                                           SortActualSort
                                                                                                                                                            ( SortActual
                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                               }
                                                                                                                                                            )
                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                        , termSimplified = NotSimplified
                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                        }
                                                                                                                                                        :< ApplySymbolF
                                                                                                                                                         ( Application
                                                                                                                                                            { applicationSymbolOrAlias =
                                                                                                                                                               Symbol
                                                                                                                                                                { symbolConstructor = InternedId{getInternedId = internText "concatMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                , symbolParams = []
                                                                                                                                                                , symbolSorts =
                                                                                                                                                                   ApplicationSorts
                                                                                                                                                                    { applicationSortsOperands =
                                                                                                                                                                       [ SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                       , SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                       ]
                                                                                                                                                                    , applicationSortsResult =
                                                                                                                                                                       SortActualSort
                                                                                                                                                                        ( SortActual
                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                           }
                                                                                                                                                                        )
                                                                                                                                                                    }
                                                                                                                                                                , symbolAttributes =
                                                                                                                                                                   A.Symbol
                                                                                                                                                                    { function = A.Function{isDeclaredFunction = True}
                                                                                                                                                                    , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                                    , constructor = Constructor{isConstructor = False}
                                                                                                                                                                    , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                    , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                    , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                    , hook = Hook{getHook = Just "MAP.concat"}
                                                                                                                                                                    , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                    , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                    , memo = Memo{isMemo = False}
                                                                                                                                                                    , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                    , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                    , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                    , sourceLocation =
                                                                                                                                                                       SourceLocation
                                                                                                                                                                        { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                        , source = Source{unSource = Nothing}
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            , applicationChildren =
                                                                                                                                                               [ TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = NotSimplified
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.NotF
                                                                                                                                                                       ( Not
                                                                                                                                                                          { notSort =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          , notChild =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                                                   ( Application
                                                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                                                         Symbol
                                                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                                          , symbolParams = []
                                                                                                                                                                                          , symbolSorts =
                                                                                                                                                                                             ApplicationSorts
                                                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                                     }
                                                                                                                                                                                                  )
                                                                                                                                                                                              }
                                                                                                                                                                                          , symbolAttributes =
                                                                                                                                                                                             A.Symbol
                                                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                              , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                              , sourceLocation =
                                                                                                                                                                                                 SourceLocation
                                                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          }
                                                                                                                                                                                      , applicationChildren = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                               , TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = True}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.TopF
                                                                                                                                                                       ( Top
                                                                                                                                                                          { topSort =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                               ]
                                                                                                                                                            }
                                                                                                                                                         )
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                             )
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                 )
                                                                                                                            }
                                                                                                                        , iffSecond =
                                                                                                                           TermLike
                                                                                                                            { getTermLike =
                                                                                                                               TermAttributes
                                                                                                                                { termSort =
                                                                                                                                   SortActualSort
                                                                                                                                    ( SortActual
                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                       , sortActualSorts = []
                                                                                                                                       }
                                                                                                                                    )
                                                                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                                                                , termFunction = Function{isFunction = False}
                                                                                                                                , termDefined = Defined{isDefined = False}
                                                                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                                                                , termSimplified = NotSimplified
                                                                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                }
                                                                                                                                :< T.ImpliesF
                                                                                                                                 ( Implies
                                                                                                                                    { impliesSort =
                                                                                                                                       SortActualSort
                                                                                                                                        ( SortActual
                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                           , sortActualSorts = []
                                                                                                                                           }
                                                                                                                                        )
                                                                                                                                    , impliesFirst =
                                                                                                                                       TermLike
                                                                                                                                        { getTermLike =
                                                                                                                                           TermAttributes
                                                                                                                                            { termSort =
                                                                                                                                               SortActualSort
                                                                                                                                                ( SortActual
                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                   }
                                                                                                                                                )
                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                            , termFunction = Function{isFunction = False}
                                                                                                                                            , termDefined = Defined{isDefined = False}
                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                            , termSimplified = NotSimplified
                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                            }
                                                                                                                                            :< T.IffF
                                                                                                                                             ( Iff
                                                                                                                                                { iffSort =
                                                                                                                                                   SortActualSort
                                                                                                                                                    ( SortActual
                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                       }
                                                                                                                                                    )
                                                                                                                                                , iffFirst =
                                                                                                                                                   TermLike
                                                                                                                                                    { getTermLike =
                                                                                                                                                       TermAttributes
                                                                                                                                                        { termSort =
                                                                                                                                                           SortActualSort
                                                                                                                                                            ( SortActual
                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                               }
                                                                                                                                                            )
                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                        , termFunctional = Functional{isFunctional = True}
                                                                                                                                                        , termFunction = Function{isFunction = True}
                                                                                                                                                        , termDefined = Defined{isDefined = True}
                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                        , termSimplified = NotSimplified
                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                        }
                                                                                                                                                        :< ApplySymbolF
                                                                                                                                                         ( Application
                                                                                                                                                            { applicationSymbolOrAlias =
                                                                                                                                                               Symbol
                                                                                                                                                                { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                , symbolParams = []
                                                                                                                                                                , symbolSorts =
                                                                                                                                                                   ApplicationSorts
                                                                                                                                                                    { applicationSortsOperands = []
                                                                                                                                                                    , applicationSortsResult =
                                                                                                                                                                       SortActualSort
                                                                                                                                                                        ( SortActual
                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                           }
                                                                                                                                                                        )
                                                                                                                                                                    }
                                                                                                                                                                , symbolAttributes =
                                                                                                                                                                   A.Symbol
                                                                                                                                                                    { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                    , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                    , constructor = Constructor{isConstructor = False}
                                                                                                                                                                    , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                    , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                    , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                    , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                    , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                    , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                    , memo = Memo{isMemo = False}
                                                                                                                                                                    , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                    , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                    , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                    , sourceLocation =
                                                                                                                                                                       SourceLocation
                                                                                                                                                                        { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                        , source = Source{unSource = Nothing}
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            , applicationChildren = []
                                                                                                                                                            }
                                                                                                                                                         )
                                                                                                                                                    }
                                                                                                                                                , iffSecond =
                                                                                                                                                   TermLike
                                                                                                                                                    { getTermLike =
                                                                                                                                                       TermAttributes
                                                                                                                                                        { termSort =
                                                                                                                                                           SortActualSort
                                                                                                                                                            ( SortActual
                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                               }
                                                                                                                                                            )
                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                        , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                        }
                                                                                                                                                        :< MuF
                                                                                                                                                         ( Mu
                                                                                                                                                            { muVariable =
                                                                                                                                                               Variable
                                                                                                                                                                { variableName =
                                                                                                                                                                   SetVariableName
                                                                                                                                                                    { unSetVariableName =
                                                                                                                                                                       VariableName
                                                                                                                                                                        { base = InternedId{getInternedId = internText "T", internedIdLocation = AstLocationTest}
                                                                                                                                                                        , counter = Nothing
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                , variableSort =
                                                                                                                                                                   SortActualSort
                                                                                                                                                                    ( SortActual
                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                       }
                                                                                                                                                                    )
                                                                                                                                                                }
                                                                                                                                                            , muChild =
                                                                                                                                                               TermLike
                                                                                                                                                                { getTermLike =
                                                                                                                                                                   TermAttributes
                                                                                                                                                                    { termSort =
                                                                                                                                                                       SortActualSort
                                                                                                                                                                        ( SortActual
                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                           }
                                                                                                                                                                        )
                                                                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                    , termFunction = Function{isFunction = True}
                                                                                                                                                                    , termDefined = Defined{isDefined = False}
                                                                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                    , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                    }
                                                                                                                                                                    :< T.BottomF
                                                                                                                                                                     ( Bottom
                                                                                                                                                                        { bottomSort =
                                                                                                                                                                           SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                        }
                                                                                                                                                                     )
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                         )
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                             )
                                                                                                                                        }
                                                                                                                                    , impliesSecond =
                                                                                                                                       TermLike
                                                                                                                                        { getTermLike =
                                                                                                                                           TermAttributes
                                                                                                                                            { termSort =
                                                                                                                                               SortActualSort
                                                                                                                                                ( SortActual
                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                   }
                                                                                                                                                )
                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                            , termFunction = Function{isFunction = False}
                                                                                                                                            , termDefined = Defined{isDefined = True}
                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                            , termSimplified = NotSimplified
                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                            }
                                                                                                                                            :< T.OrF
                                                                                                                                             ( Or
                                                                                                                                                { orSort =
                                                                                                                                                   SortActualSort
                                                                                                                                                    ( SortActual
                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                       }
                                                                                                                                                    )
                                                                                                                                                , orFirst =
                                                                                                                                                   TermLike
                                                                                                                                                    { getTermLike =
                                                                                                                                                       TermAttributes
                                                                                                                                                        { termSort =
                                                                                                                                                           SortActualSort
                                                                                                                                                            ( SortActual
                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                               }
                                                                                                                                                            )
                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                        , termFunctional = Functional{isFunctional = True}
                                                                                                                                                        , termFunction = Function{isFunction = True}
                                                                                                                                                        , termDefined = Defined{isDefined = True}
                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                        , termSimplified = NotSimplified
                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                        }
                                                                                                                                                        :< ApplySymbolF
                                                                                                                                                         ( Application
                                                                                                                                                            { applicationSymbolOrAlias =
                                                                                                                                                               Symbol
                                                                                                                                                                { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                , symbolParams = []
                                                                                                                                                                , symbolSorts =
                                                                                                                                                                   ApplicationSorts
                                                                                                                                                                    { applicationSortsOperands = []
                                                                                                                                                                    , applicationSortsResult =
                                                                                                                                                                       SortActualSort
                                                                                                                                                                        ( SortActual
                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                           }
                                                                                                                                                                        )
                                                                                                                                                                    }
                                                                                                                                                                , symbolAttributes =
                                                                                                                                                                   A.Symbol
                                                                                                                                                                    { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                    , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                    , constructor = Constructor{isConstructor = False}
                                                                                                                                                                    , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                    , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                    , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                    , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                    , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                    , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                    , memo = Memo{isMemo = False}
                                                                                                                                                                    , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                    , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                    , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                    , sourceLocation =
                                                                                                                                                                       SourceLocation
                                                                                                                                                                        { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                        , source = Source{unSource = Nothing}
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            , applicationChildren = []
                                                                                                                                                            }
                                                                                                                                                         )
                                                                                                                                                    }
                                                                                                                                                , orSecond =
                                                                                                                                                   TermLike
                                                                                                                                                    { getTermLike =
                                                                                                                                                       TermAttributes
                                                                                                                                                        { termSort =
                                                                                                                                                           SortActualSort
                                                                                                                                                            ( SortActual
                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                               }
                                                                                                                                                            )
                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                        , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                        }
                                                                                                                                                        :< T.AndF
                                                                                                                                                         ( And
                                                                                                                                                            { andSort =
                                                                                                                                                               SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                            , andFirst =
                                                                                                                                                               TermLike
                                                                                                                                                                { getTermLike =
                                                                                                                                                                   TermAttributes
                                                                                                                                                                    { termSort =
                                                                                                                                                                       SortActualSort
                                                                                                                                                                        ( SortActual
                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                           }
                                                                                                                                                                        )
                                                                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                                                                    , termDefined = Defined{isDefined = False}
                                                                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                    , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                    }
                                                                                                                                                                    :< T.NotF
                                                                                                                                                                     ( Not
                                                                                                                                                                        { notSort =
                                                                                                                                                                           SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                        , notChild =
                                                                                                                                                                           TermLike
                                                                                                                                                                            { getTermLike =
                                                                                                                                                                               TermAttributes
                                                                                                                                                                                { termSort =
                                                                                                                                                                                   SortActualSort
                                                                                                                                                                                    ( SortActual
                                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                                       }
                                                                                                                                                                                    )
                                                                                                                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                                , termFunction = Function{isFunction = True}
                                                                                                                                                                                , termDefined = Defined{isDefined = False}
                                                                                                                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                }
                                                                                                                                                                                :< T.BottomF
                                                                                                                                                                                 ( Bottom
                                                                                                                                                                                    { bottomSort =
                                                                                                                                                                                       SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                    }
                                                                                                                                                                                 )
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                     )
                                                                                                                                                                }
                                                                                                                                                            , andSecond =
                                                                                                                                                               TermLike
                                                                                                                                                                { getTermLike =
                                                                                                                                                                   TermAttributes
                                                                                                                                                                    { termSort =
                                                                                                                                                                       SortActualSort
                                                                                                                                                                        ( SortActual
                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                           }
                                                                                                                                                                        )
                                                                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                                                                    , termDefined = Defined{isDefined = True}
                                                                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                    , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                    }
                                                                                                                                                                    :< T.TopF
                                                                                                                                                                     ( Top
                                                                                                                                                                        { topSort =
                                                                                                                                                                           SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                        }
                                                                                                                                                                     )
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                         )
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                             )
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                 )
                                                                                                                            }
                                                                                                                        }
                                                                                                                     )
                                                                                                                }
                                                                                                            }
                                                                                                         )
                                                                                                    }
                                                                                                , iffSecond =
                                                                                                   TermLike
                                                                                                    { getTermLike =
                                                                                                       TermAttributes
                                                                                                        { termSort =
                                                                                                           SortActualSort
                                                                                                            ( SortActual
                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                               , sortActualSorts = []
                                                                                                               }
                                                                                                            )
                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                        , termSimplified = NotSimplified
                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                        }
                                                                                                        :< NuF
                                                                                                         ( Nu
                                                                                                            { nuVariable =
                                                                                                               Variable
                                                                                                                { variableName =
                                                                                                                   SetVariableName
                                                                                                                    { unSetVariableName =
                                                                                                                       VariableName
                                                                                                                        { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                                        , counter = Nothing
                                                                                                                        }
                                                                                                                    }
                                                                                                                , variableSort =
                                                                                                                   SortActualSort
                                                                                                                    ( SortActual
                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                       , sortActualSorts = []
                                                                                                                       }
                                                                                                                    )
                                                                                                                }
                                                                                                            , nuChild =
                                                                                                               TermLike
                                                                                                                { getTermLike =
                                                                                                                   TermAttributes
                                                                                                                    { termSort =
                                                                                                                       SortActualSort
                                                                                                                        ( SortActual
                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                           , sortActualSorts = []
                                                                                                                           }
                                                                                                                        )
                                                                                                                    , termFreeVariables =
                                                                                                                       FreeVars.unsafe
                                                                                                                        [
                                                                                                                          ( SomeVariableNameSet
                                                                                                                             ( SetVariableName
                                                                                                                                { unSetVariableName =
                                                                                                                                   VariableName
                                                                                                                                    { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                                                    , counter = Nothing
                                                                                                                                    }
                                                                                                                                }
                                                                                                                             )
                                                                                                                          , FreeVariableInfo
                                                                                                                             { sort =
                                                                                                                                SortActualSort
                                                                                                                                 ( SortActual
                                                                                                                                    { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                    , sortActualSorts = []
                                                                                                                                    }
                                                                                                                                 )
                                                                                                                             , count = 2
                                                                                                                             }
                                                                                                                          )
                                                                                                                        ]
                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                    , termDefined = Defined{isDefined = False}
                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                    , termSimplified = NotSimplified
                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                    }
                                                                                                                    :< ApplySymbolF
                                                                                                                     ( Application
                                                                                                                        { applicationSymbolOrAlias =
                                                                                                                           Symbol
                                                                                                                            { symbolConstructor = InternedId{getInternedId = internText "concatMap", internedIdLocation = AstLocationTest}
                                                                                                                            , symbolParams = []
                                                                                                                            , symbolSorts =
                                                                                                                               ApplicationSorts
                                                                                                                                { applicationSortsOperands =
                                                                                                                                   [ SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                   , SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                   ]
                                                                                                                                , applicationSortsResult =
                                                                                                                                   SortActualSort
                                                                                                                                    ( SortActual
                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                       , sortActualSorts = []
                                                                                                                                       }
                                                                                                                                    )
                                                                                                                                }
                                                                                                                            , symbolAttributes =
                                                                                                                               A.Symbol
                                                                                                                                { function = A.Function{isDeclaredFunction = True}
                                                                                                                                , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                , constructor = Constructor{isConstructor = False}
                                                                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                , hook = Hook{getHook = Just "MAP.concat"}
                                                                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                , memo = Memo{isMemo = False}
                                                                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                , sourceLocation =
                                                                                                                                   SourceLocation
                                                                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                                                                    , source = Source{unSource = Nothing}
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        , applicationChildren =
                                                                                                                           [ TermLike
                                                                                                                              { getTermLike =
                                                                                                                                 TermAttributes
                                                                                                                                  { termSort =
                                                                                                                                     SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                  , termFreeVariables =
                                                                                                                                     FreeVars.unsafe
                                                                                                                                      [
                                                                                                                                        ( SomeVariableNameSet
                                                                                                                                           ( SetVariableName
                                                                                                                                              { unSetVariableName =
                                                                                                                                                 VariableName
                                                                                                                                                  { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                                                                  , counter = Nothing
                                                                                                                                                  }
                                                                                                                                              }
                                                                                                                                           )
                                                                                                                                        , FreeVariableInfo
                                                                                                                                           { sort =
                                                                                                                                              SortActualSort
                                                                                                                                               ( SortActual
                                                                                                                                                  { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                  , sortActualSorts = []
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                           , count = 1
                                                                                                                                           }
                                                                                                                                        )
                                                                                                                                      ]
                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                  }
                                                                                                                                  :< T.NuF
                                                                                                                                   ( Nu
                                                                                                                                      { nuVariable =
                                                                                                                                         Variable
                                                                                                                                          { variableName =
                                                                                                                                             SetVariableName
                                                                                                                                              { unSetVariableName =
                                                                                                                                                 VariableName
                                                                                                                                                  { base = InternedId{getInternedId = internText "EhE", internedIdLocation = AstLocationTest}
                                                                                                                                                  , counter = Nothing
                                                                                                                                                  }
                                                                                                                                              }
                                                                                                                                          , variableSort =
                                                                                                                                             SortActualSort
                                                                                                                                              ( SortActual
                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                 }
                                                                                                                                              )
                                                                                                                                          }
                                                                                                                                      , nuChild =
                                                                                                                                         TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables =
                                                                                                                                                 FreeVars.unsafe
                                                                                                                                                  [
                                                                                                                                                    ( SomeVariableNameSet
                                                                                                                                                       ( SetVariableName
                                                                                                                                                          { unSetVariableName =
                                                                                                                                                             VariableName
                                                                                                                                                              { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                                                                              , counter = Nothing
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                       )
                                                                                                                                                    , FreeVariableInfo
                                                                                                                                                       { sort =
                                                                                                                                                          SortActualSort
                                                                                                                                                           ( SortActual
                                                                                                                                                              { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                              , sortActualSorts = []
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                       , count = 1
                                                                                                                                                       }
                                                                                                                                                    )
                                                                                                                                                  ]
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = NotSimplified
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< T.OrF
                                                                                                                                               ( Or
                                                                                                                                                  { orSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , orFirst =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables =
                                                                                                                                                             FreeVars.unsafe
                                                                                                                                                              [
                                                                                                                                                                ( SomeVariableNameSet
                                                                                                                                                                   ( SetVariableName
                                                                                                                                                                      { unSetVariableName =
                                                                                                                                                                         VariableName
                                                                                                                                                                          { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                                                                                          , counter = Nothing
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                   )
                                                                                                                                                                , FreeVariableInfo
                                                                                                                                                                   { sort =
                                                                                                                                                                      SortActualSort
                                                                                                                                                                       ( SortActual
                                                                                                                                                                          { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                          , sortActualSorts = []
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                   , count = 1
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                              ]
                                                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = NotSimplified
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                          }
                                                                                                                                                          :< T.IffF
                                                                                                                                                           ( Iff
                                                                                                                                                              { iffSort =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              , iffFirst =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables =
                                                                                                                                                                         FreeVars.unsafe
                                                                                                                                                                          [
                                                                                                                                                                            ( SomeVariableNameSet
                                                                                                                                                                               ( SetVariableName
                                                                                                                                                                                  { unSetVariableName =
                                                                                                                                                                                     VariableName
                                                                                                                                                                                      { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                                                                                                      , counter = Nothing
                                                                                                                                                                                      }
                                                                                                                                                                                  }
                                                                                                                                                                               )
                                                                                                                                                                            , FreeVariableInfo
                                                                                                                                                                               { sort =
                                                                                                                                                                                  SortActualSort
                                                                                                                                                                                   ( SortActual
                                                                                                                                                                                      { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                      , sortActualSorts = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                               , count = 1
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                          ]
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.AndF
                                                                                                                                                                       ( And
                                                                                                                                                                          { andSort =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          , andFirst =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< T.BottomF
                                                                                                                                                                                   ( Bottom
                                                                                                                                                                                      { bottomSort =
                                                                                                                                                                                         SortActualSort
                                                                                                                                                                                          ( SortActual
                                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                                             }
                                                                                                                                                                                          )
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          , andSecond =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables =
                                                                                                                                                                                     FreeVars.unsafe
                                                                                                                                                                                      [
                                                                                                                                                                                        ( SomeVariableNameSet
                                                                                                                                                                                           ( SetVariableName
                                                                                                                                                                                              { unSetVariableName =
                                                                                                                                                                                                 VariableName
                                                                                                                                                                                                  { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                  , counter = Nothing
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                           )
                                                                                                                                                                                        , FreeVariableInfo
                                                                                                                                                                                           { sort =
                                                                                                                                                                                              SortActualSort
                                                                                                                                                                                               ( SortActual
                                                                                                                                                                                                  { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                  , sortActualSorts = []
                                                                                                                                                                                                  }
                                                                                                                                                                                               )
                                                                                                                                                                                           , count = 1
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                      ]
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< VariableF
                                                                                                                                                                                   ( Const
                                                                                                                                                                                      ( Variable
                                                                                                                                                                                         { variableName =
                                                                                                                                                                                            SomeVariableNameSet
                                                                                                                                                                                             ( SetVariableName
                                                                                                                                                                                                { unSetVariableName =
                                                                                                                                                                                                   VariableName
                                                                                                                                                                                                    { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                    , counter = Nothing
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                             )
                                                                                                                                                                                         , variableSort =
                                                                                                                                                                                            SortActualSort
                                                                                                                                                                                             ( SortActual
                                                                                                                                                                                                { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                , sortActualSorts = []
                                                                                                                                                                                                }
                                                                                                                                                                                             )
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              , iffSecond =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = True}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = NotSimplified
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< ApplySymbolF
                                                                                                                                                                       ( Application
                                                                                                                                                                          { applicationSymbolOrAlias =
                                                                                                                                                                             Symbol
                                                                                                                                                                              { symbolConstructor = InternedId{getInternedId = internText "opaqueMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                              , symbolParams = []
                                                                                                                                                                              , symbolSorts =
                                                                                                                                                                                 ApplicationSorts
                                                                                                                                                                                  { applicationSortsOperands =
                                                                                                                                                                                     [ SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                     ]
                                                                                                                                                                                  , applicationSortsResult =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  }
                                                                                                                                                                              , symbolAttributes =
                                                                                                                                                                                 A.Symbol
                                                                                                                                                                                  { function = A.Function{isDeclaredFunction = True}
                                                                                                                                                                                  , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                                                  , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                  , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                  , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                  , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                  , hook = Hook{getHook = Nothing}
                                                                                                                                                                                  , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                  , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                  , memo = Memo{isMemo = False}
                                                                                                                                                                                  , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                  , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                  , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                  , sourceLocation =
                                                                                                                                                                                     SourceLocation
                                                                                                                                                                                      { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                      , source = Source{unSource = Nothing}
                                                                                                                                                                                      }
                                                                                                                                                                                  }
                                                                                                                                                                              }
                                                                                                                                                                          , applicationChildren =
                                                                                                                                                                             [ TermLike
                                                                                                                                                                                { getTermLike =
                                                                                                                                                                                   TermAttributes
                                                                                                                                                                                    { termSort =
                                                                                                                                                                                       SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                                    , termFunction = Function{isFunction = True}
                                                                                                                                                                                    , termDefined = Defined{isDefined = False}
                                                                                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                    , termSimplified = NotSimplified
                                                                                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                    }
                                                                                                                                                                                    :< ApplySymbolF
                                                                                                                                                                                     ( Application
                                                                                                                                                                                        { applicationSymbolOrAlias =
                                                                                                                                                                                           Symbol
                                                                                                                                                                                            { symbolConstructor = InternedId{getInternedId = internText "cf", internedIdLocation = AstLocationTest}
                                                                                                                                                                                            , symbolParams = []
                                                                                                                                                                                            , symbolSorts =
                                                                                                                                                                                               ApplicationSorts
                                                                                                                                                                                                { applicationSortsOperands = []
                                                                                                                                                                                                , applicationSortsResult =
                                                                                                                                                                                                   SortActualSort
                                                                                                                                                                                                    ( SortActual
                                                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                                                       }
                                                                                                                                                                                                    )
                                                                                                                                                                                                }
                                                                                                                                                                                            , symbolAttributes =
                                                                                                                                                                                               A.Symbol
                                                                                                                                                                                                { function = A.Function{isDeclaredFunction = True}
                                                                                                                                                                                                , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                                                                , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                                , hook = Hook{getHook = Nothing}
                                                                                                                                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                                , memo = Memo{isMemo = False}
                                                                                                                                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                                , sourceLocation =
                                                                                                                                                                                                   SourceLocation
                                                                                                                                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                    , source = Source{unSource = Nothing}
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        , applicationChildren = []
                                                                                                                                                                                        }
                                                                                                                                                                                     )
                                                                                                                                                                                }
                                                                                                                                                                             ]
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  , orSecond =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = NotSimplified
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                          }
                                                                                                                                                          :< T.OrF
                                                                                                                                                           ( Or
                                                                                                                                                              { orSort =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              , orFirst =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = True}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< ApplySymbolF
                                                                                                                                                                       ( Application
                                                                                                                                                                          { applicationSymbolOrAlias =
                                                                                                                                                                             Symbol
                                                                                                                                                                              { symbolConstructor = InternedId{getInternedId = internText "opaqueMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                              , symbolParams = []
                                                                                                                                                                              , symbolSorts =
                                                                                                                                                                                 ApplicationSorts
                                                                                                                                                                                  { applicationSortsOperands =
                                                                                                                                                                                     [ SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                     ]
                                                                                                                                                                                  , applicationSortsResult =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  }
                                                                                                                                                                              , symbolAttributes =
                                                                                                                                                                                 A.Symbol
                                                                                                                                                                                  { function = A.Function{isDeclaredFunction = True}
                                                                                                                                                                                  , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                                                  , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                  , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                  , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                  , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                  , hook = Hook{getHook = Nothing}
                                                                                                                                                                                  , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                  , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                  , memo = Memo{isMemo = False}
                                                                                                                                                                                  , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                  , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                  , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                  , sourceLocation =
                                                                                                                                                                                     SourceLocation
                                                                                                                                                                                      { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                      , source = Source{unSource = Nothing}
                                                                                                                                                                                      }
                                                                                                                                                                                  }
                                                                                                                                                                              }
                                                                                                                                                                          , applicationChildren =
                                                                                                                                                                             [ TermLike
                                                                                                                                                                                { getTermLike =
                                                                                                                                                                                   TermAttributes
                                                                                                                                                                                    { termSort =
                                                                                                                                                                                       SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                    , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                    , termFunction = Function{isFunction = True}
                                                                                                                                                                                    , termDefined = Defined{isDefined = True}
                                                                                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                    , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                                                    }
                                                                                                                                                                                    :< ApplySymbolF
                                                                                                                                                                                     ( Application
                                                                                                                                                                                        { applicationSymbolOrAlias =
                                                                                                                                                                                           Symbol
                                                                                                                                                                                            { symbolConstructor = InternedId{getInternedId = internText "a", internedIdLocation = AstLocationTest}
                                                                                                                                                                                            , symbolParams = []
                                                                                                                                                                                            , symbolSorts =
                                                                                                                                                                                               ApplicationSorts
                                                                                                                                                                                                { applicationSortsOperands = []
                                                                                                                                                                                                , applicationSortsResult =
                                                                                                                                                                                                   SortActualSort
                                                                                                                                                                                                    ( SortActual
                                                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                                                       }
                                                                                                                                                                                                    )
                                                                                                                                                                                                }
                                                                                                                                                                                            , symbolAttributes =
                                                                                                                                                                                               A.Symbol
                                                                                                                                                                                                { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                                , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                                , constructor = Constructor{isConstructor = True}
                                                                                                                                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                                , hook = Hook{getHook = Nothing}
                                                                                                                                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                                , memo = Memo{isMemo = False}
                                                                                                                                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                                , sourceLocation =
                                                                                                                                                                                                   SourceLocation
                                                                                                                                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                    , source = Source{unSource = Nothing}
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        , applicationChildren = []
                                                                                                                                                                                        }
                                                                                                                                                                                     )
                                                                                                                                                                                }
                                                                                                                                                                             ]
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              , orSecond =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = NotSimplified
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.IffF
                                                                                                                                                                       ( Iff
                                                                                                                                                                          { iffSort =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          , iffFirst =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                                                   ( Application
                                                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                                                         Symbol
                                                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                                          , symbolParams = []
                                                                                                                                                                                          , symbolSorts =
                                                                                                                                                                                             ApplicationSorts
                                                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                                     }
                                                                                                                                                                                                  )
                                                                                                                                                                                              }
                                                                                                                                                                                          , symbolAttributes =
                                                                                                                                                                                             A.Symbol
                                                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                              , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                              , sourceLocation =
                                                                                                                                                                                                 SourceLocation
                                                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          }
                                                                                                                                                                                      , applicationChildren = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          , iffSecond =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                                                   ( Application
                                                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                                                         Symbol
                                                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                                          , symbolParams = []
                                                                                                                                                                                          , symbolSorts =
                                                                                                                                                                                             ApplicationSorts
                                                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                                     }
                                                                                                                                                                                                  )
                                                                                                                                                                                              }
                                                                                                                                                                                          , symbolAttributes =
                                                                                                                                                                                             A.Symbol
                                                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                              , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                              , sourceLocation =
                                                                                                                                                                                                 SourceLocation
                                                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          }
                                                                                                                                                                                      , applicationChildren = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                      }
                                                                                                                                   )
                                                                                                                              }
                                                                                                                           , TermLike
                                                                                                                              { getTermLike =
                                                                                                                                 TermAttributes
                                                                                                                                  { termSort =
                                                                                                                                     SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                  , termFreeVariables =
                                                                                                                                     FreeVars.unsafe
                                                                                                                                      [
                                                                                                                                        ( SomeVariableNameSet
                                                                                                                                           ( SetVariableName
                                                                                                                                              { unSetVariableName =
                                                                                                                                                 VariableName
                                                                                                                                                  { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                                                                  , counter = Nothing
                                                                                                                                                  }
                                                                                                                                              }
                                                                                                                                           )
                                                                                                                                        , FreeVariableInfo
                                                                                                                                           { sort =
                                                                                                                                              SortActualSort
                                                                                                                                               ( SortActual
                                                                                                                                                  { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                  , sortActualSorts = []
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                           , count = 1
                                                                                                                                           }
                                                                                                                                        )
                                                                                                                                      ]
                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                  }
                                                                                                                                  :< T.OrF
                                                                                                                                   ( Or
                                                                                                                                      { orSort =
                                                                                                                                         SortActualSort
                                                                                                                                          ( SortActual
                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                             , sortActualSorts = []
                                                                                                                                             }
                                                                                                                                          )
                                                                                                                                      , orFirst =
                                                                                                                                         TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables =
                                                                                                                                                 FreeVars.unsafe
                                                                                                                                                  [
                                                                                                                                                    ( SomeVariableNameSet
                                                                                                                                                       ( SetVariableName
                                                                                                                                                          { unSetVariableName =
                                                                                                                                                             VariableName
                                                                                                                                                              { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                                                                              , counter = Nothing
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                       )
                                                                                                                                                    , FreeVariableInfo
                                                                                                                                                       { sort =
                                                                                                                                                          SortActualSort
                                                                                                                                                           ( SortActual
                                                                                                                                                              { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                              , sortActualSorts = []
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                       , count = 1
                                                                                                                                                       }
                                                                                                                                                    )
                                                                                                                                                  ]
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = NotSimplified
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< ApplySymbolF
                                                                                                                                               ( Application
                                                                                                                                                  { applicationSymbolOrAlias =
                                                                                                                                                     Symbol
                                                                                                                                                      { symbolConstructor = InternedId{getInternedId = internText "concatMap", internedIdLocation = AstLocationTest}
                                                                                                                                                      , symbolParams = []
                                                                                                                                                      , symbolSorts =
                                                                                                                                                         ApplicationSorts
                                                                                                                                                          { applicationSortsOperands =
                                                                                                                                                             [ SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                             , SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                             ]
                                                                                                                                                          , applicationSortsResult =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          }
                                                                                                                                                      , symbolAttributes =
                                                                                                                                                         A.Symbol
                                                                                                                                                          { function = A.Function{isDeclaredFunction = True}
                                                                                                                                                          , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                          , constructor = Constructor{isConstructor = False}
                                                                                                                                                          , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                          , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                          , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                          , hook = Hook{getHook = Just "MAP.concat"}
                                                                                                                                                          , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                          , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                          , memo = Memo{isMemo = False}
                                                                                                                                                          , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                          , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                          , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                          , sourceLocation =
                                                                                                                                                             SourceLocation
                                                                                                                                                              { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                              , source = Source{unSource = Nothing}
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                      }
                                                                                                                                                  , applicationChildren =
                                                                                                                                                     [ TermLike
                                                                                                                                                        { getTermLike =
                                                                                                                                                           TermAttributes
                                                                                                                                                            { termSort =
                                                                                                                                                               SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                            , termFreeVariables =
                                                                                                                                                               FreeVars.unsafe
                                                                                                                                                                [
                                                                                                                                                                  ( SomeVariableNameSet
                                                                                                                                                                     ( SetVariableName
                                                                                                                                                                        { unSetVariableName =
                                                                                                                                                                           VariableName
                                                                                                                                                                            { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                                                                                            , counter = Nothing
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                     )
                                                                                                                                                                  , FreeVariableInfo
                                                                                                                                                                     { sort =
                                                                                                                                                                        SortActualSort
                                                                                                                                                                         ( SortActual
                                                                                                                                                                            { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                            , sortActualSorts = []
                                                                                                                                                                            }
                                                                                                                                                                         )
                                                                                                                                                                     , count = 1
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                                ]
                                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                                            , termFunction = Function{isFunction = False}
                                                                                                                                                            , termDefined = Defined{isDefined = False}
                                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                                            , termSimplified = NotSimplified
                                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                            }
                                                                                                                                                            :< T.IffF
                                                                                                                                                             ( Iff
                                                                                                                                                                { iffSort =
                                                                                                                                                                   SortActualSort
                                                                                                                                                                    ( SortActual
                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                       }
                                                                                                                                                                    )
                                                                                                                                                                , iffFirst =
                                                                                                                                                                   TermLike
                                                                                                                                                                    { getTermLike =
                                                                                                                                                                       TermAttributes
                                                                                                                                                                        { termSort =
                                                                                                                                                                           SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                                                                                        , termDefined = Defined{isDefined = True}
                                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                        , termSimplified = NotSimplified
                                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                        }
                                                                                                                                                                        :< T.OrF
                                                                                                                                                                         ( Or
                                                                                                                                                                            { orSort =
                                                                                                                                                                               SortActualSort
                                                                                                                                                                                ( SortActual
                                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                                   }
                                                                                                                                                                                )
                                                                                                                                                                            , orFirst =
                                                                                                                                                                               TermLike
                                                                                                                                                                                { getTermLike =
                                                                                                                                                                                   TermAttributes
                                                                                                                                                                                    { termSort =
                                                                                                                                                                                       SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                    , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                    , termFunction = Function{isFunction = True}
                                                                                                                                                                                    , termDefined = Defined{isDefined = True}
                                                                                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                    , termSimplified = NotSimplified
                                                                                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                    }
                                                                                                                                                                                    :< ApplySymbolF
                                                                                                                                                                                     ( Application
                                                                                                                                                                                        { applicationSymbolOrAlias =
                                                                                                                                                                                           Symbol
                                                                                                                                                                                            { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                                            , symbolParams = []
                                                                                                                                                                                            , symbolSorts =
                                                                                                                                                                                               ApplicationSorts
                                                                                                                                                                                                { applicationSortsOperands = []
                                                                                                                                                                                                , applicationSortsResult =
                                                                                                                                                                                                   SortActualSort
                                                                                                                                                                                                    ( SortActual
                                                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                                                       }
                                                                                                                                                                                                    )
                                                                                                                                                                                                }
                                                                                                                                                                                            , symbolAttributes =
                                                                                                                                                                                               A.Symbol
                                                                                                                                                                                                { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                                , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                                , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                                , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                                , memo = Memo{isMemo = False}
                                                                                                                                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                                , sourceLocation =
                                                                                                                                                                                                   SourceLocation
                                                                                                                                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                    , source = Source{unSource = Nothing}
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        , applicationChildren = []
                                                                                                                                                                                        }
                                                                                                                                                                                     )
                                                                                                                                                                                }
                                                                                                                                                                            , orSecond =
                                                                                                                                                                               TermLike
                                                                                                                                                                                { getTermLike =
                                                                                                                                                                                   TermAttributes
                                                                                                                                                                                    { termSort =
                                                                                                                                                                                       SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                                                                                    , termDefined = Defined{isDefined = True}
                                                                                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                    , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                    }
                                                                                                                                                                                    :< T.TopF
                                                                                                                                                                                     ( Top
                                                                                                                                                                                        { topSort =
                                                                                                                                                                                           SortActualSort
                                                                                                                                                                                            ( SortActual
                                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                                               }
                                                                                                                                                                                            )
                                                                                                                                                                                        }
                                                                                                                                                                                     )
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                         )
                                                                                                                                                                    }
                                                                                                                                                                , iffSecond =
                                                                                                                                                                   TermLike
                                                                                                                                                                    { getTermLike =
                                                                                                                                                                       TermAttributes
                                                                                                                                                                        { termSort =
                                                                                                                                                                           SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                        , termFreeVariables =
                                                                                                                                                                           FreeVars.unsafe
                                                                                                                                                                            [
                                                                                                                                                                              ( SomeVariableNameSet
                                                                                                                                                                                 ( SetVariableName
                                                                                                                                                                                    { unSetVariableName =
                                                                                                                                                                                       VariableName
                                                                                                                                                                                        { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                                                                                                        , counter = Nothing
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                 )
                                                                                                                                                                              , FreeVariableInfo
                                                                                                                                                                                 { sort =
                                                                                                                                                                                    SortActualSort
                                                                                                                                                                                     ( SortActual
                                                                                                                                                                                        { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                        , sortActualSorts = []
                                                                                                                                                                                        }
                                                                                                                                                                                     )
                                                                                                                                                                                 , count = 1
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                            ]
                                                                                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                        , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                        }
                                                                                                                                                                        :< T.NotF
                                                                                                                                                                         ( Not
                                                                                                                                                                            { notSort =
                                                                                                                                                                               SortActualSort
                                                                                                                                                                                ( SortActual
                                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                                   }
                                                                                                                                                                                )
                                                                                                                                                                            , notChild =
                                                                                                                                                                               TermLike
                                                                                                                                                                                { getTermLike =
                                                                                                                                                                                   TermAttributes
                                                                                                                                                                                    { termSort =
                                                                                                                                                                                       SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                    , termFreeVariables =
                                                                                                                                                                                       FreeVars.unsafe
                                                                                                                                                                                        [
                                                                                                                                                                                          ( SomeVariableNameSet
                                                                                                                                                                                             ( SetVariableName
                                                                                                                                                                                                { unSetVariableName =
                                                                                                                                                                                                   VariableName
                                                                                                                                                                                                    { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                    , counter = Nothing
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                             )
                                                                                                                                                                                          , FreeVariableInfo
                                                                                                                                                                                             { sort =
                                                                                                                                                                                                SortActualSort
                                                                                                                                                                                                 ( SortActual
                                                                                                                                                                                                    { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                    , sortActualSorts = []
                                                                                                                                                                                                    }
                                                                                                                                                                                                 )
                                                                                                                                                                                             , count = 1
                                                                                                                                                                                             }
                                                                                                                                                                                          )
                                                                                                                                                                                        ]
                                                                                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                                                                                    , termDefined = Defined{isDefined = False}
                                                                                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                    , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                    }
                                                                                                                                                                                    :< VariableF
                                                                                                                                                                                     ( Const
                                                                                                                                                                                        ( Variable
                                                                                                                                                                                           { variableName =
                                                                                                                                                                                              SomeVariableNameSet
                                                                                                                                                                                               ( SetVariableName
                                                                                                                                                                                                  { unSetVariableName =
                                                                                                                                                                                                     VariableName
                                                                                                                                                                                                      { base = InternedId{getInternedId = internText "Mf", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                      , counter = Nothing
                                                                                                                                                                                                      }
                                                                                                                                                                                                  }
                                                                                                                                                                                               )
                                                                                                                                                                                           , variableSort =
                                                                                                                                                                                              SortActualSort
                                                                                                                                                                                               ( SortActual
                                                                                                                                                                                                  { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                  , sortActualSorts = []
                                                                                                                                                                                                  }
                                                                                                                                                                                               )
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                     )
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                         )
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                             )
                                                                                                                                                        }
                                                                                                                                                     , TermLike
                                                                                                                                                        { getTermLike =
                                                                                                                                                           TermAttributes
                                                                                                                                                            { termSort =
                                                                                                                                                               SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                                            , termFunction = Function{isFunction = False}
                                                                                                                                                            , termDefined = Defined{isDefined = False}
                                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                                            , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                            }
                                                                                                                                                            :< MuF
                                                                                                                                                             ( Mu
                                                                                                                                                                { muVariable =
                                                                                                                                                                   Variable
                                                                                                                                                                    { variableName =
                                                                                                                                                                       SetVariableName
                                                                                                                                                                        { unSetVariableName =
                                                                                                                                                                           VariableName
                                                                                                                                                                            { base = InternedId{getInternedId = internText "QAPt", internedIdLocation = AstLocationTest}
                                                                                                                                                                            , counter = Nothing
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    , variableSort =
                                                                                                                                                                       SortActualSort
                                                                                                                                                                        ( SortActual
                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                           }
                                                                                                                                                                        )
                                                                                                                                                                    }
                                                                                                                                                                , muChild =
                                                                                                                                                                   TermLike
                                                                                                                                                                    { getTermLike =
                                                                                                                                                                       TermAttributes
                                                                                                                                                                        { termSort =
                                                                                                                                                                           SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                        , termFreeVariables =
                                                                                                                                                                           FreeVars.unsafe
                                                                                                                                                                            [
                                                                                                                                                                              ( SomeVariableNameSet
                                                                                                                                                                                 ( SetVariableName
                                                                                                                                                                                    { unSetVariableName =
                                                                                                                                                                                       VariableName
                                                                                                                                                                                        { base = InternedId{getInternedId = internText "QAPt", internedIdLocation = AstLocationTest}
                                                                                                                                                                                        , counter = Nothing
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                 )
                                                                                                                                                                              , FreeVariableInfo
                                                                                                                                                                                 { sort =
                                                                                                                                                                                    SortActualSort
                                                                                                                                                                                     ( SortActual
                                                                                                                                                                                        { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                        , sortActualSorts = []
                                                                                                                                                                                        }
                                                                                                                                                                                     )
                                                                                                                                                                                 , count = 1
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                            ]
                                                                                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                        , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                        }
                                                                                                                                                                        :< VariableF
                                                                                                                                                                         ( Const
                                                                                                                                                                            ( Variable
                                                                                                                                                                               { variableName =
                                                                                                                                                                                  SomeVariableNameSet
                                                                                                                                                                                   ( SetVariableName
                                                                                                                                                                                      { unSetVariableName =
                                                                                                                                                                                         VariableName
                                                                                                                                                                                          { base = InternedId{getInternedId = internText "QAPt", internedIdLocation = AstLocationTest}
                                                                                                                                                                                          , counter = Nothing
                                                                                                                                                                                          }
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                               , variableSort =
                                                                                                                                                                                  SortActualSort
                                                                                                                                                                                   ( SortActual
                                                                                                                                                                                      { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                      , sortActualSorts = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                         )
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                             )
                                                                                                                                                        }
                                                                                                                                                     ]
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                      , orSecond =
                                                                                                                                         TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = NotSimplified
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< ApplySymbolF
                                                                                                                                               ( Application
                                                                                                                                                  { applicationSymbolOrAlias =
                                                                                                                                                     Symbol
                                                                                                                                                      { symbolConstructor = InternedId{getInternedId = internText "concatMap", internedIdLocation = AstLocationTest}
                                                                                                                                                      , symbolParams = []
                                                                                                                                                      , symbolSorts =
                                                                                                                                                         ApplicationSorts
                                                                                                                                                          { applicationSortsOperands =
                                                                                                                                                             [ SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                             , SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                             ]
                                                                                                                                                          , applicationSortsResult =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          }
                                                                                                                                                      , symbolAttributes =
                                                                                                                                                         A.Symbol
                                                                                                                                                          { function = A.Function{isDeclaredFunction = True}
                                                                                                                                                          , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                          , constructor = Constructor{isConstructor = False}
                                                                                                                                                          , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                          , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                          , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                          , hook = Hook{getHook = Just "MAP.concat"}
                                                                                                                                                          , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                          , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                          , memo = Memo{isMemo = False}
                                                                                                                                                          , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                          , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                          , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                          , sourceLocation =
                                                                                                                                                             SourceLocation
                                                                                                                                                              { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                              , source = Source{unSource = Nothing}
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                      }
                                                                                                                                                  , applicationChildren =
                                                                                                                                                     [ TermLike
                                                                                                                                                        { getTermLike =
                                                                                                                                                           TermAttributes
                                                                                                                                                            { termSort =
                                                                                                                                                               SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                            , termFunctional = Functional{isFunctional = True}
                                                                                                                                                            , termFunction = Function{isFunction = True}
                                                                                                                                                            , termDefined = Defined{isDefined = True}
                                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                                            , termSimplified = NotSimplified
                                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                            }
                                                                                                                                                            :< ApplySymbolF
                                                                                                                                                             ( Application
                                                                                                                                                                { applicationSymbolOrAlias =
                                                                                                                                                                   Symbol
                                                                                                                                                                    { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                    , symbolParams = []
                                                                                                                                                                    , symbolSorts =
                                                                                                                                                                       ApplicationSorts
                                                                                                                                                                        { applicationSortsOperands = []
                                                                                                                                                                        , applicationSortsResult =
                                                                                                                                                                           SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                        }
                                                                                                                                                                    , symbolAttributes =
                                                                                                                                                                       A.Symbol
                                                                                                                                                                        { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                        , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                        , constructor = Constructor{isConstructor = False}
                                                                                                                                                                        , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                        , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                        , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                        , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                        , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                        , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                        , memo = Memo{isMemo = False}
                                                                                                                                                                        , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                        , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                        , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                        , sourceLocation =
                                                                                                                                                                           SourceLocation
                                                                                                                                                                            { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                            , source = Source{unSource = Nothing}
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                , applicationChildren = []
                                                                                                                                                                }
                                                                                                                                                             )
                                                                                                                                                        }
                                                                                                                                                     , TermLike
                                                                                                                                                        { getTermLike =
                                                                                                                                                           TermAttributes
                                                                                                                                                            { termSort =
                                                                                                                                                               SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                                            , termFunction = Function{isFunction = False}
                                                                                                                                                            , termDefined = Defined{isDefined = False}
                                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                                            , termSimplified = NotSimplified
                                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                            }
                                                                                                                                                            :< T.NotF
                                                                                                                                                             ( Not
                                                                                                                                                                { notSort =
                                                                                                                                                                   SortActualSort
                                                                                                                                                                    ( SortActual
                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                       }
                                                                                                                                                                    )
                                                                                                                                                                , notChild =
                                                                                                                                                                   TermLike
                                                                                                                                                                    { getTermLike =
                                                                                                                                                                       TermAttributes
                                                                                                                                                                        { termSort =
                                                                                                                                                                           SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                        , termFunction = Function{isFunction = True}
                                                                                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                        , termSimplified = NotSimplified
                                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                        }
                                                                                                                                                                        :< ApplySymbolF
                                                                                                                                                                         ( Application
                                                                                                                                                                            { applicationSymbolOrAlias =
                                                                                                                                                                               Symbol
                                                                                                                                                                                { symbolConstructor = InternedId{getInternedId = internText "opaqueMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                                , symbolParams = []
                                                                                                                                                                                , symbolSorts =
                                                                                                                                                                                   ApplicationSorts
                                                                                                                                                                                    { applicationSortsOperands =
                                                                                                                                                                                       [ SortActualSort
                                                                                                                                                                                          ( SortActual
                                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                                             }
                                                                                                                                                                                          )
                                                                                                                                                                                       ]
                                                                                                                                                                                    , applicationSortsResult =
                                                                                                                                                                                       SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                    }
                                                                                                                                                                                , symbolAttributes =
                                                                                                                                                                                   A.Symbol
                                                                                                                                                                                    { function = A.Function{isDeclaredFunction = True}
                                                                                                                                                                                    , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                                                    , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                    , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                    , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                    , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                    , hook = Hook{getHook = Nothing}
                                                                                                                                                                                    , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                    , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                    , memo = Memo{isMemo = False}
                                                                                                                                                                                    , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                    , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                    , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                    , sourceLocation =
                                                                                                                                                                                       SourceLocation
                                                                                                                                                                                        { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                        , source = Source{unSource = Nothing}
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            , applicationChildren =
                                                                                                                                                                               [ TermLike
                                                                                                                                                                                  { getTermLike =
                                                                                                                                                                                     TermAttributes
                                                                                                                                                                                      { termSort =
                                                                                                                                                                                         SortActualSort
                                                                                                                                                                                          ( SortActual
                                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                                             }
                                                                                                                                                                                          )
                                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                      , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                      , termFunction = Function{isFunction = True}
                                                                                                                                                                                      , termDefined = Defined{isDefined = True}
                                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                      , termSimplified = NotSimplified
                                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                      }
                                                                                                                                                                                      :< ApplySymbolF
                                                                                                                                                                                       ( Application
                                                                                                                                                                                          { applicationSymbolOrAlias =
                                                                                                                                                                                             Symbol
                                                                                                                                                                                              { symbolConstructor = InternedId{getInternedId = internText "functional00", internedIdLocation = AstLocationTest}
                                                                                                                                                                                              , symbolParams = []
                                                                                                                                                                                              , symbolSorts =
                                                                                                                                                                                                 ApplicationSorts
                                                                                                                                                                                                  { applicationSortsOperands = []
                                                                                                                                                                                                  , applicationSortsResult =
                                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                                         }
                                                                                                                                                                                                      )
                                                                                                                                                                                                  }
                                                                                                                                                                                              , symbolAttributes =
                                                                                                                                                                                                 A.Symbol
                                                                                                                                                                                                  { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                                  , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                                  , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                                  , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                                  , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                                  , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                                  , hook = Hook{getHook = Nothing}
                                                                                                                                                                                                  , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                                  , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                                  , memo = Memo{isMemo = False}
                                                                                                                                                                                                  , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                                  , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                                  , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                                  , sourceLocation =
                                                                                                                                                                                                     SourceLocation
                                                                                                                                                                                                      { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                      , source = Source{unSource = Nothing}
                                                                                                                                                                                                      }
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          , applicationChildren = []
                                                                                                                                                                                          }
                                                                                                                                                                                       )
                                                                                                                                                                                  }
                                                                                                                                                                               ]
                                                                                                                                                                            }
                                                                                                                                                                         )
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                             )
                                                                                                                                                        }
                                                                                                                                                     ]
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                      }
                                                                                                                                   )
                                                                                                                              }
                                                                                                                           ]
                                                                                                                        }
                                                                                                                     )
                                                                                                                }
                                                                                                            }
                                                                                                         )
                                                                                                    }
                                                                                                }
                                                                                             )
                                                                                        }
                                                                                    }
                                                                                 )
                                                                            }
                                                                        , orSecond =
                                                                           TermLike
                                                                            { getTermLike =
                                                                               TermAttributes
                                                                                { termSort =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                , termFunction = Function{isFunction = False}
                                                                                , termDefined = Defined{isDefined = False}
                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                , termSimplified = NotSimplified
                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                }
                                                                                :< T.ImpliesF
                                                                                 ( Implies
                                                                                    { impliesSort =
                                                                                       SortActualSort
                                                                                        ( SortActual
                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                           , sortActualSorts = []
                                                                                           }
                                                                                        )
                                                                                    , impliesFirst =
                                                                                       TermLike
                                                                                        { getTermLike =
                                                                                           TermAttributes
                                                                                            { termSort =
                                                                                               SortActualSort
                                                                                                ( SortActual
                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                   , sortActualSorts = []
                                                                                                   }
                                                                                                )
                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                            , termFunction = Function{isFunction = False}
                                                                                            , termDefined = Defined{isDefined = False}
                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                            , termSimplified = NotSimplified
                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                            }
                                                                                            :< T.MuF
                                                                                             ( Mu
                                                                                                { muVariable =
                                                                                                   Variable
                                                                                                    { variableName =
                                                                                                       SetVariableName
                                                                                                        { unSetVariableName =
                                                                                                           VariableName
                                                                                                            { base = InternedId{getInternedId = internText "In", internedIdLocation = AstLocationTest}
                                                                                                            , counter = Nothing
                                                                                                            }
                                                                                                        }
                                                                                                    , variableSort =
                                                                                                       SortActualSort
                                                                                                        ( SortActual
                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                           , sortActualSorts = []
                                                                                                           }
                                                                                                        )
                                                                                                    }
                                                                                                , muChild =
                                                                                                   TermLike
                                                                                                    { getTermLike =
                                                                                                       TermAttributes
                                                                                                        { termSort =
                                                                                                           SortActualSort
                                                                                                            ( SortActual
                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                               , sortActualSorts = []
                                                                                                               }
                                                                                                            )
                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                        , termSimplified = NotSimplified
                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                        }
                                                                                                        :< T.NuF
                                                                                                         ( Nu
                                                                                                            { nuVariable =
                                                                                                               Variable
                                                                                                                { variableName =
                                                                                                                   SetVariableName
                                                                                                                    { unSetVariableName =
                                                                                                                       VariableName
                                                                                                                        { base = InternedId{getInternedId = internText "ec", internedIdLocation = AstLocationTest}
                                                                                                                        , counter = Nothing
                                                                                                                        }
                                                                                                                    }
                                                                                                                , variableSort =
                                                                                                                   SortActualSort
                                                                                                                    ( SortActual
                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                       , sortActualSorts = []
                                                                                                                       }
                                                                                                                    )
                                                                                                                }
                                                                                                            , nuChild =
                                                                                                               TermLike
                                                                                                                { getTermLike =
                                                                                                                   TermAttributes
                                                                                                                    { termSort =
                                                                                                                       SortActualSort
                                                                                                                        ( SortActual
                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                           , sortActualSorts = []
                                                                                                                           }
                                                                                                                        )
                                                                                                                    , termFreeVariables =
                                                                                                                       FreeVars.unsafe
                                                                                                                        [
                                                                                                                          ( SomeVariableNameSet
                                                                                                                             ( SetVariableName
                                                                                                                                { unSetVariableName =
                                                                                                                                   VariableName
                                                                                                                                    { base = InternedId{getInternedId = internText "ec", internedIdLocation = AstLocationTest}
                                                                                                                                    , counter = Nothing
                                                                                                                                    }
                                                                                                                                }
                                                                                                                             )
                                                                                                                          , FreeVariableInfo
                                                                                                                             { sort =
                                                                                                                                SortActualSort
                                                                                                                                 ( SortActual
                                                                                                                                    { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                    , sortActualSorts = []
                                                                                                                                    }
                                                                                                                                 )
                                                                                                                             , count = 1
                                                                                                                             }
                                                                                                                          )
                                                                                                                        ]
                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                    , termDefined = Defined{isDefined = False}
                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                    , termSimplified = NotSimplified
                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                    }
                                                                                                                    :< ApplySymbolF
                                                                                                                     ( Application
                                                                                                                        { applicationSymbolOrAlias =
                                                                                                                           Symbol
                                                                                                                            { symbolConstructor = InternedId{getInternedId = internText "concatMap", internedIdLocation = AstLocationTest}
                                                                                                                            , symbolParams = []
                                                                                                                            , symbolSorts =
                                                                                                                               ApplicationSorts
                                                                                                                                { applicationSortsOperands =
                                                                                                                                   [ SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                   , SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                   ]
                                                                                                                                , applicationSortsResult =
                                                                                                                                   SortActualSort
                                                                                                                                    ( SortActual
                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                       , sortActualSorts = []
                                                                                                                                       }
                                                                                                                                    )
                                                                                                                                }
                                                                                                                            , symbolAttributes =
                                                                                                                               A.Symbol
                                                                                                                                { function = A.Function{isDeclaredFunction = True}
                                                                                                                                , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                , constructor = Constructor{isConstructor = False}
                                                                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                , hook = Hook{getHook = Just "MAP.concat"}
                                                                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                , memo = Memo{isMemo = False}
                                                                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                , sourceLocation =
                                                                                                                                   SourceLocation
                                                                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                                                                    , source = Source{unSource = Nothing}
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        , applicationChildren =
                                                                                                                           [ TermLike
                                                                                                                              { getTermLike =
                                                                                                                                 TermAttributes
                                                                                                                                  { termSort =
                                                                                                                                     SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                  , termFreeVariables =
                                                                                                                                     FreeVars.unsafe
                                                                                                                                      [
                                                                                                                                        ( SomeVariableNameSet
                                                                                                                                           ( SetVariableName
                                                                                                                                              { unSetVariableName =
                                                                                                                                                 VariableName
                                                                                                                                                  { base = InternedId{getInternedId = internText "ec", internedIdLocation = AstLocationTest}
                                                                                                                                                  , counter = Nothing
                                                                                                                                                  }
                                                                                                                                              }
                                                                                                                                           )
                                                                                                                                        , FreeVariableInfo
                                                                                                                                           { sort =
                                                                                                                                              SortActualSort
                                                                                                                                               ( SortActual
                                                                                                                                                  { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                  , sortActualSorts = []
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                           , count = 1
                                                                                                                                           }
                                                                                                                                        )
                                                                                                                                      ]
                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                  }
                                                                                                                                  :< T.ForallF
                                                                                                                                   ( Forall
                                                                                                                                      { forallSort =
                                                                                                                                         SortActualSort
                                                                                                                                          ( SortActual
                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                             , sortActualSorts = []
                                                                                                                                             }
                                                                                                                                          )
                                                                                                                                      , forallVariable =
                                                                                                                                         Variable
                                                                                                                                          { variableName =
                                                                                                                                             ElementVariableName
                                                                                                                                              { unElementVariableName =
                                                                                                                                                 VariableName
                                                                                                                                                  { base = InternedId{getInternedId = internText "W", internedIdLocation = AstLocationTest}
                                                                                                                                                  , counter = Nothing
                                                                                                                                                  }
                                                                                                                                              }
                                                                                                                                          , variableSort =
                                                                                                                                             SortActualSort
                                                                                                                                              ( SortActual
                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "#String", internedIdLocation = AstLocationImplicit}
                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                 }
                                                                                                                                              )
                                                                                                                                          }
                                                                                                                                      , forallChild =
                                                                                                                                         TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables =
                                                                                                                                                 FreeVars.unsafe
                                                                                                                                                  [
                                                                                                                                                    ( SomeVariableNameSet
                                                                                                                                                       ( SetVariableName
                                                                                                                                                          { unSetVariableName =
                                                                                                                                                             VariableName
                                                                                                                                                              { base = InternedId{getInternedId = internText "ec", internedIdLocation = AstLocationTest}
                                                                                                                                                              , counter = Nothing
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                       )
                                                                                                                                                    , FreeVariableInfo
                                                                                                                                                       { sort =
                                                                                                                                                          SortActualSort
                                                                                                                                                           ( SortActual
                                                                                                                                                              { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                              , sortActualSorts = []
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                       , count = 1
                                                                                                                                                       }
                                                                                                                                                    )
                                                                                                                                                  ]
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = NotSimplified
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< T.IffF
                                                                                                                                               ( Iff
                                                                                                                                                  { iffSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , iffFirst =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables =
                                                                                                                                                             FreeVars.unsafe
                                                                                                                                                              [
                                                                                                                                                                ( SomeVariableNameSet
                                                                                                                                                                   ( SetVariableName
                                                                                                                                                                      { unSetVariableName =
                                                                                                                                                                         VariableName
                                                                                                                                                                          { base = InternedId{getInternedId = internText "ec", internedIdLocation = AstLocationTest}
                                                                                                                                                                          , counter = Nothing
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                   )
                                                                                                                                                                , FreeVariableInfo
                                                                                                                                                                   { sort =
                                                                                                                                                                      SortActualSort
                                                                                                                                                                       ( SortActual
                                                                                                                                                                          { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                          , sortActualSorts = []
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                   , count = 1
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                              ]
                                                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = NotSimplified
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                          }
                                                                                                                                                          :< T.ImpliesF
                                                                                                                                                           ( Implies
                                                                                                                                                              { impliesSort =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              , impliesFirst =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables =
                                                                                                                                                                         FreeVars.unsafe
                                                                                                                                                                          [
                                                                                                                                                                            ( SomeVariableNameSet
                                                                                                                                                                               ( SetVariableName
                                                                                                                                                                                  { unSetVariableName =
                                                                                                                                                                                     VariableName
                                                                                                                                                                                      { base = InternedId{getInternedId = internText "ec", internedIdLocation = AstLocationTest}
                                                                                                                                                                                      , counter = Nothing
                                                                                                                                                                                      }
                                                                                                                                                                                  }
                                                                                                                                                                               )
                                                                                                                                                                            , FreeVariableInfo
                                                                                                                                                                               { sort =
                                                                                                                                                                                  SortActualSort
                                                                                                                                                                                   ( SortActual
                                                                                                                                                                                      { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                      , sortActualSorts = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                               , count = 1
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                          ]
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.IffF
                                                                                                                                                                       ( Iff
                                                                                                                                                                          { iffSort =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          , iffFirst =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables =
                                                                                                                                                                                     FreeVars.unsafe
                                                                                                                                                                                      [
                                                                                                                                                                                        ( SomeVariableNameSet
                                                                                                                                                                                           ( SetVariableName
                                                                                                                                                                                              { unSetVariableName =
                                                                                                                                                                                                 VariableName
                                                                                                                                                                                                  { base = InternedId{getInternedId = internText "ec", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                  , counter = Nothing
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                           )
                                                                                                                                                                                        , FreeVariableInfo
                                                                                                                                                                                           { sort =
                                                                                                                                                                                              SortActualSort
                                                                                                                                                                                               ( SortActual
                                                                                                                                                                                                  { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                  , sortActualSorts = []
                                                                                                                                                                                                  }
                                                                                                                                                                                               )
                                                                                                                                                                                           , count = 1
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                      ]
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< VariableF
                                                                                                                                                                                   ( Const
                                                                                                                                                                                      ( Variable
                                                                                                                                                                                         { variableName =
                                                                                                                                                                                            SomeVariableNameSet
                                                                                                                                                                                             ( SetVariableName
                                                                                                                                                                                                { unSetVariableName =
                                                                                                                                                                                                   VariableName
                                                                                                                                                                                                    { base = InternedId{getInternedId = internText "ec", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                    , counter = Nothing
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                             )
                                                                                                                                                                                         , variableSort =
                                                                                                                                                                                            SortActualSort
                                                                                                                                                                                             ( SortActual
                                                                                                                                                                                                { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                , sortActualSorts = []
                                                                                                                                                                                                }
                                                                                                                                                                                             )
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          , iffSecond =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< T.BottomF
                                                                                                                                                                                   ( Bottom
                                                                                                                                                                                      { bottomSort =
                                                                                                                                                                                         SortActualSort
                                                                                                                                                                                          ( SortActual
                                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                                             }
                                                                                                                                                                                          )
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              , impliesSecond =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = NotSimplified
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.ImpliesF
                                                                                                                                                                       ( Implies
                                                                                                                                                                          { impliesSort =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          , impliesFirst =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                                                   ( Application
                                                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                                                         Symbol
                                                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                                          , symbolParams = []
                                                                                                                                                                                          , symbolSorts =
                                                                                                                                                                                             ApplicationSorts
                                                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                                     }
                                                                                                                                                                                                  )
                                                                                                                                                                                              }
                                                                                                                                                                                          , symbolAttributes =
                                                                                                                                                                                             A.Symbol
                                                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                              , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                              , sourceLocation =
                                                                                                                                                                                                 SourceLocation
                                                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          }
                                                                                                                                                                                      , applicationChildren = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          , impliesSecond =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< T.TopF
                                                                                                                                                                                   ( Top
                                                                                                                                                                                      { topSort =
                                                                                                                                                                                         SortActualSort
                                                                                                                                                                                          ( SortActual
                                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                                             }
                                                                                                                                                                                          )
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  , iffSecond =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = True}
                                                                                                                                                          , termFunction = Function{isFunction = True}
                                                                                                                                                          , termDefined = Defined{isDefined = True}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                          }
                                                                                                                                                          :< ApplySymbolF
                                                                                                                                                           ( Application
                                                                                                                                                              { applicationSymbolOrAlias =
                                                                                                                                                                 Symbol
                                                                                                                                                                  { symbolConstructor = InternedId{getInternedId = internText "elementMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                  , symbolParams = []
                                                                                                                                                                  , symbolSorts =
                                                                                                                                                                     ApplicationSorts
                                                                                                                                                                      { applicationSortsOperands =
                                                                                                                                                                         [ SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                         , SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                         ]
                                                                                                                                                                      , applicationSortsResult =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      }
                                                                                                                                                                  , symbolAttributes =
                                                                                                                                                                     A.Symbol
                                                                                                                                                                      { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                      , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                      , constructor = Constructor{isConstructor = False}
                                                                                                                                                                      , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                      , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                      , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                      , hook = Hook{getHook = Just "MAP.element"}
                                                                                                                                                                      , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                      , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                      , memo = Memo{isMemo = False}
                                                                                                                                                                      , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                      , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                      , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                      , sourceLocation =
                                                                                                                                                                         SourceLocation
                                                                                                                                                                          { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                          , source = Source{unSource = Nothing}
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  }
                                                                                                                                                              , applicationChildren =
                                                                                                                                                                 [ TermLike
                                                                                                                                                                    { getTermLike =
                                                                                                                                                                       TermAttributes
                                                                                                                                                                        { termSort =
                                                                                                                                                                           SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                        , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                        , termFunction = Function{isFunction = True}
                                                                                                                                                                        , termDefined = Defined{isDefined = True}
                                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                        , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                                        }
                                                                                                                                                                        :< ApplySymbolF
                                                                                                                                                                         ( Application
                                                                                                                                                                            { applicationSymbolOrAlias =
                                                                                                                                                                               Symbol
                                                                                                                                                                                { symbolConstructor = InternedId{getInternedId = internText "c", internedIdLocation = AstLocationTest}
                                                                                                                                                                                , symbolParams = []
                                                                                                                                                                                , symbolSorts =
                                                                                                                                                                                   ApplicationSorts
                                                                                                                                                                                    { applicationSortsOperands = []
                                                                                                                                                                                    , applicationSortsResult =
                                                                                                                                                                                       SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                    }
                                                                                                                                                                                , symbolAttributes =
                                                                                                                                                                                   A.Symbol
                                                                                                                                                                                    { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                    , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                    , constructor = Constructor{isConstructor = True}
                                                                                                                                                                                    , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                    , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                    , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                    , hook = Hook{getHook = Nothing}
                                                                                                                                                                                    , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                    , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                    , memo = Memo{isMemo = False}
                                                                                                                                                                                    , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                    , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                    , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                    , sourceLocation =
                                                                                                                                                                                       SourceLocation
                                                                                                                                                                                        { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                        , source = Source{unSource = Nothing}
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            , applicationChildren = []
                                                                                                                                                                            }
                                                                                                                                                                         )
                                                                                                                                                                    }
                                                                                                                                                                 , TermLike
                                                                                                                                                                    { getTermLike =
                                                                                                                                                                       TermAttributes
                                                                                                                                                                        { termSort =
                                                                                                                                                                           SortActualSort
                                                                                                                                                                            ( SortActual
                                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                                               }
                                                                                                                                                                            )
                                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                        , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                        , termFunction = Function{isFunction = True}
                                                                                                                                                                        , termDefined = Defined{isDefined = True}
                                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                        , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                                        }
                                                                                                                                                                        :< ApplySymbolF
                                                                                                                                                                         ( Application
                                                                                                                                                                            { applicationSymbolOrAlias =
                                                                                                                                                                               Symbol
                                                                                                                                                                                { symbolConstructor = InternedId{getInternedId = internText "e", internedIdLocation = AstLocationTest}
                                                                                                                                                                                , symbolParams = []
                                                                                                                                                                                , symbolSorts =
                                                                                                                                                                                   ApplicationSorts
                                                                                                                                                                                    { applicationSortsOperands = []
                                                                                                                                                                                    , applicationSortsResult =
                                                                                                                                                                                       SortActualSort
                                                                                                                                                                                        ( SortActual
                                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                    }
                                                                                                                                                                                , symbolAttributes =
                                                                                                                                                                                   A.Symbol
                                                                                                                                                                                    { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                    , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                    , constructor = Constructor{isConstructor = True}
                                                                                                                                                                                    , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                    , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                    , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                    , hook = Hook{getHook = Nothing}
                                                                                                                                                                                    , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                    , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                    , memo = Memo{isMemo = False}
                                                                                                                                                                                    , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                    , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                    , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                    , sourceLocation =
                                                                                                                                                                                       SourceLocation
                                                                                                                                                                                        { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                        , source = Source{unSource = Nothing}
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            , applicationChildren = []
                                                                                                                                                                            }
                                                                                                                                                                         )
                                                                                                                                                                    }
                                                                                                                                                                 ]
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                      }
                                                                                                                                   )
                                                                                                                              }
                                                                                                                           , TermLike
                                                                                                                              { getTermLike =
                                                                                                                                 TermAttributes
                                                                                                                                  { termSort =
                                                                                                                                     SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                  }
                                                                                                                                  :< T.OrF
                                                                                                                                   ( Or
                                                                                                                                      { orSort =
                                                                                                                                         SortActualSort
                                                                                                                                          ( SortActual
                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                             , sortActualSorts = []
                                                                                                                                             }
                                                                                                                                          )
                                                                                                                                      , orFirst =
                                                                                                                                         TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = NotSimplified
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< T.ExistsF
                                                                                                                                               ( Exists
                                                                                                                                                  { existsSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , existsVariable =
                                                                                                                                                     Variable
                                                                                                                                                      { variableName =
                                                                                                                                                         ElementVariableName
                                                                                                                                                          { unElementVariableName =
                                                                                                                                                             VariableName
                                                                                                                                                              { base = InternedId{getInternedId = internText "s", internedIdLocation = AstLocationTest}
                                                                                                                                                              , counter = Nothing
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                      , variableSort =
                                                                                                                                                         SortActualSort
                                                                                                                                                          ( SortActual
                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                             }
                                                                                                                                                          )
                                                                                                                                                      }
                                                                                                                                                  , existsChild =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = NotSimplified
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                          }
                                                                                                                                                          :< T.ForallF
                                                                                                                                                           ( Forall
                                                                                                                                                              { forallSort =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              , forallVariable =
                                                                                                                                                                 Variable
                                                                                                                                                                  { variableName =
                                                                                                                                                                     ElementVariableName
                                                                                                                                                                      { unElementVariableName =
                                                                                                                                                                         VariableName
                                                                                                                                                                          { base = InternedId{getInternedId = internText "Tw", internedIdLocation = AstLocationTest}
                                                                                                                                                                          , counter = Nothing
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  , variableSort =
                                                                                                                                                                     SortActualSort
                                                                                                                                                                      ( SortActual
                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                         }
                                                                                                                                                                      )
                                                                                                                                                                  }
                                                                                                                                                              , forallChild =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = NotSimplified
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.MuF
                                                                                                                                                                       ( Mu
                                                                                                                                                                          { muVariable =
                                                                                                                                                                             Variable
                                                                                                                                                                              { variableName =
                                                                                                                                                                                 SetVariableName
                                                                                                                                                                                  { unSetVariableName =
                                                                                                                                                                                     VariableName
                                                                                                                                                                                      { base = InternedId{getInternedId = internText "Zh", internedIdLocation = AstLocationTest}
                                                                                                                                                                                      , counter = Nothing
                                                                                                                                                                                      }
                                                                                                                                                                                  }
                                                                                                                                                                              , variableSort =
                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                     }
                                                                                                                                                                                  )
                                                                                                                                                                              }
                                                                                                                                                                          , muChild =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                                                   ( Application
                                                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                                                         Symbol
                                                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                                          , symbolParams = []
                                                                                                                                                                                          , symbolSorts =
                                                                                                                                                                                             ApplicationSorts
                                                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                                     }
                                                                                                                                                                                                  )
                                                                                                                                                                                              }
                                                                                                                                                                                          , symbolAttributes =
                                                                                                                                                                                             A.Symbol
                                                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                              , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                              , sourceLocation =
                                                                                                                                                                                                 SourceLocation
                                                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          }
                                                                                                                                                                                      , applicationChildren = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                      , orSecond =
                                                                                                                                         TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = NotSimplified
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< T.ExistsF
                                                                                                                                               ( Exists
                                                                                                                                                  { existsSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , existsVariable =
                                                                                                                                                     Variable
                                                                                                                                                      { variableName =
                                                                                                                                                         ElementVariableName
                                                                                                                                                          { unElementVariableName =
                                                                                                                                                             VariableName
                                                                                                                                                              { base = InternedId{getInternedId = internText "v", internedIdLocation = AstLocationTest}
                                                                                                                                                              , counter = Nothing
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                      , variableSort =
                                                                                                                                                         SortActualSort
                                                                                                                                                          ( SortActual
                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "stringSort", internedIdLocation = AstLocationTest}
                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                             }
                                                                                                                                                          )
                                                                                                                                                      }
                                                                                                                                                  , existsChild =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = NotSimplified
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                          }
                                                                                                                                                          :< T.ForallF
                                                                                                                                                           ( Forall
                                                                                                                                                              { forallSort =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              , forallVariable =
                                                                                                                                                                 Variable
                                                                                                                                                                  { variableName =
                                                                                                                                                                     ElementVariableName
                                                                                                                                                                      { unElementVariableName =
                                                                                                                                                                         VariableName
                                                                                                                                                                          { base = InternedId{getInternedId = internText "F", internedIdLocation = AstLocationTest}
                                                                                                                                                                          , counter = Nothing
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  , variableSort =
                                                                                                                                                                     SortActualSort
                                                                                                                                                                      ( SortActual
                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "otherTopSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                         }
                                                                                                                                                                      )
                                                                                                                                                                  }
                                                                                                                                                              , forallChild =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = NotSimplified
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.IffF
                                                                                                                                                                       ( Iff
                                                                                                                                                                          { iffSort =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          , iffFirst =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                                                   ( Application
                                                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                                                         Symbol
                                                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                                          , symbolParams = []
                                                                                                                                                                                          , symbolSorts =
                                                                                                                                                                                             ApplicationSorts
                                                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                                     }
                                                                                                                                                                                                  )
                                                                                                                                                                                              }
                                                                                                                                                                                          , symbolAttributes =
                                                                                                                                                                                             A.Symbol
                                                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                              , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                              , sourceLocation =
                                                                                                                                                                                                 SourceLocation
                                                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          }
                                                                                                                                                                                      , applicationChildren = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          , iffSecond =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                                                   ( Application
                                                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                                                         Symbol
                                                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                                          , symbolParams = []
                                                                                                                                                                                          , symbolSorts =
                                                                                                                                                                                             ApplicationSorts
                                                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                                     }
                                                                                                                                                                                                  )
                                                                                                                                                                                              }
                                                                                                                                                                                          , symbolAttributes =
                                                                                                                                                                                             A.Symbol
                                                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                              , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                              , sourceLocation =
                                                                                                                                                                                                 SourceLocation
                                                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          }
                                                                                                                                                                                      , applicationChildren = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                      }
                                                                                                                                   )
                                                                                                                              }
                                                                                                                           ]
                                                                                                                        }
                                                                                                                     )
                                                                                                                }
                                                                                                            }
                                                                                                         )
                                                                                                    }
                                                                                                }
                                                                                             )
                                                                                        }
                                                                                    , impliesSecond =
                                                                                       TermLike
                                                                                        { getTermLike =
                                                                                           TermAttributes
                                                                                            { termSort =
                                                                                               SortActualSort
                                                                                                ( SortActual
                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                   , sortActualSorts = []
                                                                                                   }
                                                                                                )
                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                            , termFunction = Function{isFunction = False}
                                                                                            , termDefined = Defined{isDefined = False}
                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                            , termSimplified = NotSimplified
                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                            }
                                                                                            :< T.AndF
                                                                                             ( And
                                                                                                { andSort =
                                                                                                   SortActualSort
                                                                                                    ( SortActual
                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                       , sortActualSorts = []
                                                                                                       }
                                                                                                    )
                                                                                                , andFirst =
                                                                                                   TermLike
                                                                                                    { getTermLike =
                                                                                                       TermAttributes
                                                                                                        { termSort =
                                                                                                           SortActualSort
                                                                                                            ( SortActual
                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                               , sortActualSorts = []
                                                                                                               }
                                                                                                            )
                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                        , termSimplified = NotSimplified
                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                        }
                                                                                                        :< T.AndF
                                                                                                         ( And
                                                                                                            { andSort =
                                                                                                               SortActualSort
                                                                                                                ( SortActual
                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                   , sortActualSorts = []
                                                                                                                   }
                                                                                                                )
                                                                                                            , andFirst =
                                                                                                               TermLike
                                                                                                                { getTermLike =
                                                                                                                   TermAttributes
                                                                                                                    { termSort =
                                                                                                                       SortActualSort
                                                                                                                        ( SortActual
                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                           , sortActualSorts = []
                                                                                                                           }
                                                                                                                        )
                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                    , termDefined = Defined{isDefined = True}
                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                    , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                    }
                                                                                                                    :< T.TopF
                                                                                                                     ( Top
                                                                                                                        { topSort =
                                                                                                                           SortActualSort
                                                                                                                            ( SortActual
                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                               , sortActualSorts = []
                                                                                                                               }
                                                                                                                            )
                                                                                                                        }
                                                                                                                     )
                                                                                                                }
                                                                                                            , andSecond =
                                                                                                               TermLike
                                                                                                                { getTermLike =
                                                                                                                   TermAttributes
                                                                                                                    { termSort =
                                                                                                                       SortActualSort
                                                                                                                        ( SortActual
                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                           , sortActualSorts = []
                                                                                                                           }
                                                                                                                        )
                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                    , termDefined = Defined{isDefined = False}
                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                    , termSimplified = NotSimplified
                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                    }
                                                                                                                    :< T.ForallF
                                                                                                                     ( Forall
                                                                                                                        { forallSort =
                                                                                                                           SortActualSort
                                                                                                                            ( SortActual
                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                               , sortActualSorts = []
                                                                                                                               }
                                                                                                                            )
                                                                                                                        , forallVariable =
                                                                                                                           Variable
                                                                                                                            { variableName =
                                                                                                                               ElementVariableName
                                                                                                                                { unElementVariableName =
                                                                                                                                   VariableName
                                                                                                                                    { base = InternedId{getInternedId = internText "K-fi", internedIdLocation = AstLocationTest}
                                                                                                                                    , counter = Nothing
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            , variableSort =
                                                                                                                               SortActualSort
                                                                                                                                ( SortActual
                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                   , sortActualSorts = []
                                                                                                                                   }
                                                                                                                                )
                                                                                                                            }
                                                                                                                        , forallChild =
                                                                                                                           TermLike
                                                                                                                            { getTermLike =
                                                                                                                               TermAttributes
                                                                                                                                { termSort =
                                                                                                                                   SortActualSort
                                                                                                                                    ( SortActual
                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                       , sortActualSorts = []
                                                                                                                                       }
                                                                                                                                    )
                                                                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                                                                , termFunction = Function{isFunction = False}
                                                                                                                                , termDefined = Defined{isDefined = False}
                                                                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                                                                , termSimplified = NotSimplified
                                                                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                }
                                                                                                                                :< T.IffF
                                                                                                                                 ( Iff
                                                                                                                                    { iffSort =
                                                                                                                                       SortActualSort
                                                                                                                                        ( SortActual
                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                           , sortActualSorts = []
                                                                                                                                           }
                                                                                                                                        )
                                                                                                                                    , iffFirst =
                                                                                                                                       TermLike
                                                                                                                                        { getTermLike =
                                                                                                                                           TermAttributes
                                                                                                                                            { termSort =
                                                                                                                                               SortActualSort
                                                                                                                                                ( SortActual
                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                   }
                                                                                                                                                )
                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                            , termFunction = Function{isFunction = False}
                                                                                                                                            , termDefined = Defined{isDefined = False}
                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                            , termSimplified = NotSimplified
                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                            }
                                                                                                                                            :< T.MuF
                                                                                                                                             ( Mu
                                                                                                                                                { muVariable =
                                                                                                                                                   Variable
                                                                                                                                                    { variableName =
                                                                                                                                                       SetVariableName
                                                                                                                                                        { unSetVariableName =
                                                                                                                                                           VariableName
                                                                                                                                                            { base = InternedId{getInternedId = internText "y85", internedIdLocation = AstLocationTest}
                                                                                                                                                            , counter = Nothing
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    , variableSort =
                                                                                                                                                       SortActualSort
                                                                                                                                                        ( SortActual
                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                           }
                                                                                                                                                        )
                                                                                                                                                    }
                                                                                                                                                , muChild =
                                                                                                                                                   TermLike
                                                                                                                                                    { getTermLike =
                                                                                                                                                       TermAttributes
                                                                                                                                                        { termSort =
                                                                                                                                                           SortActualSort
                                                                                                                                                            ( SortActual
                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                               }
                                                                                                                                                            )
                                                                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                                                                        , termSimplified = NotSimplified
                                                                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                        }
                                                                                                                                                        :< ApplySymbolF
                                                                                                                                                         ( Application
                                                                                                                                                            { applicationSymbolOrAlias =
                                                                                                                                                               Symbol
                                                                                                                                                                { symbolConstructor = InternedId{getInternedId = internText "opaqueMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                , symbolParams = []
                                                                                                                                                                , symbolSorts =
                                                                                                                                                                   ApplicationSorts
                                                                                                                                                                    { applicationSortsOperands =
                                                                                                                                                                       [ SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                       ]
                                                                                                                                                                    , applicationSortsResult =
                                                                                                                                                                       SortActualSort
                                                                                                                                                                        ( SortActual
                                                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                           , sortActualSorts = []
                                                                                                                                                                           }
                                                                                                                                                                        )
                                                                                                                                                                    }
                                                                                                                                                                , symbolAttributes =
                                                                                                                                                                   A.Symbol
                                                                                                                                                                    { function = A.Function{isDeclaredFunction = True}
                                                                                                                                                                    , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                                    , constructor = Constructor{isConstructor = False}
                                                                                                                                                                    , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                    , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                    , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                    , hook = Hook{getHook = Nothing}
                                                                                                                                                                    , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                    , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                    , memo = Memo{isMemo = False}
                                                                                                                                                                    , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                    , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                    , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                    , sourceLocation =
                                                                                                                                                                       SourceLocation
                                                                                                                                                                        { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                        , source = Source{unSource = Nothing}
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            , applicationChildren =
                                                                                                                                                               [ TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = NotSimplified
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< ApplySymbolF
                                                                                                                                                                       ( Application
                                                                                                                                                                          { applicationSymbolOrAlias =
                                                                                                                                                                             Symbol
                                                                                                                                                                              { symbolConstructor = InternedId{getInternedId = internText "plain00", internedIdLocation = AstLocationTest}
                                                                                                                                                                              , symbolParams = []
                                                                                                                                                                              , symbolSorts =
                                                                                                                                                                                 ApplicationSorts
                                                                                                                                                                                  { applicationSortsOperands = []
                                                                                                                                                                                  , applicationSortsResult =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  }
                                                                                                                                                                              , symbolAttributes =
                                                                                                                                                                                 A.Symbol
                                                                                                                                                                                  { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                  , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                                                  , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                  , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                  , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                  , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                  , hook = Hook{getHook = Nothing}
                                                                                                                                                                                  , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                  , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                  , memo = Memo{isMemo = False}
                                                                                                                                                                                  , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                  , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                  , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                  , sourceLocation =
                                                                                                                                                                                     SourceLocation
                                                                                                                                                                                      { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                      , source = Source{unSource = Nothing}
                                                                                                                                                                                      }
                                                                                                                                                                                  }
                                                                                                                                                                              }
                                                                                                                                                                          , applicationChildren = []
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                               ]
                                                                                                                                                            }
                                                                                                                                                         )
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                             )
                                                                                                                                        }
                                                                                                                                    , iffSecond =
                                                                                                                                       TermLike
                                                                                                                                        { getTermLike =
                                                                                                                                           TermAttributes
                                                                                                                                            { termSort =
                                                                                                                                               SortActualSort
                                                                                                                                                ( SortActual
                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                   }
                                                                                                                                                )
                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                            , termFunction = Function{isFunction = True}
                                                                                                                                            , termDefined = Defined{isDefined = False}
                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                            , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                            }
                                                                                                                                            :< ApplySymbolF
                                                                                                                                             ( Application
                                                                                                                                                { applicationSymbolOrAlias =
                                                                                                                                                   Symbol
                                                                                                                                                    { symbolConstructor = InternedId{getInternedId = internText "opaqueMap", internedIdLocation = AstLocationTest}
                                                                                                                                                    , symbolParams = []
                                                                                                                                                    , symbolSorts =
                                                                                                                                                       ApplicationSorts
                                                                                                                                                        { applicationSortsOperands =
                                                                                                                                                           [ SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                           ]
                                                                                                                                                        , applicationSortsResult =
                                                                                                                                                           SortActualSort
                                                                                                                                                            ( SortActual
                                                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                               , sortActualSorts = []
                                                                                                                                                               }
                                                                                                                                                            )
                                                                                                                                                        }
                                                                                                                                                    , symbolAttributes =
                                                                                                                                                       A.Symbol
                                                                                                                                                        { function = A.Function{isDeclaredFunction = True}
                                                                                                                                                        , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                        , constructor = Constructor{isConstructor = False}
                                                                                                                                                        , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                        , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                        , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                        , hook = Hook{getHook = Nothing}
                                                                                                                                                        , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                        , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                        , memo = Memo{isMemo = False}
                                                                                                                                                        , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                        , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                        , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                        , sourceLocation =
                                                                                                                                                           SourceLocation
                                                                                                                                                            { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                            , source = Source{unSource = Nothing}
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                , applicationChildren =
                                                                                                                                                   [ TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = True}
                                                                                                                                                          , termFunction = Function{isFunction = True}
                                                                                                                                                          , termDefined = Defined{isDefined = True}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                          }
                                                                                                                                                          :< ApplySymbolF
                                                                                                                                                           ( Application
                                                                                                                                                              { applicationSymbolOrAlias =
                                                                                                                                                                 Symbol
                                                                                                                                                                  { symbolConstructor = InternedId{getInternedId = internText "c", internedIdLocation = AstLocationTest}
                                                                                                                                                                  , symbolParams = []
                                                                                                                                                                  , symbolSorts =
                                                                                                                                                                     ApplicationSorts
                                                                                                                                                                      { applicationSortsOperands = []
                                                                                                                                                                      , applicationSortsResult =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      }
                                                                                                                                                                  , symbolAttributes =
                                                                                                                                                                     A.Symbol
                                                                                                                                                                      { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                      , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                      , constructor = Constructor{isConstructor = True}
                                                                                                                                                                      , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                      , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                      , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                      , hook = Hook{getHook = Nothing}
                                                                                                                                                                      , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                      , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                      , memo = Memo{isMemo = False}
                                                                                                                                                                      , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                      , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                      , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                      , sourceLocation =
                                                                                                                                                                         SourceLocation
                                                                                                                                                                          { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                          , source = Source{unSource = Nothing}
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  }
                                                                                                                                                              , applicationChildren = []
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                   ]
                                                                                                                                                }
                                                                                                                                             )
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                 )
                                                                                                                            }
                                                                                                                        }
                                                                                                                     )
                                                                                                                }
                                                                                                            }
                                                                                                         )
                                                                                                    }
                                                                                                , andSecond =
                                                                                                   TermLike
                                                                                                    { getTermLike =
                                                                                                       TermAttributes
                                                                                                        { termSort =
                                                                                                           SortActualSort
                                                                                                            ( SortActual
                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                               , sortActualSorts = []
                                                                                                               }
                                                                                                            )
                                                                                                        , termFreeVariables = FreeVars.unsafe []
                                                                                                        , termFunctional = Functional{isFunctional = False}
                                                                                                        , termFunction = Function{isFunction = False}
                                                                                                        , termDefined = Defined{isDefined = False}
                                                                                                        , termCreated = Created{getCreated = Nothing}
                                                                                                        , termSimplified = NotSimplified
                                                                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                        }
                                                                                                        :< T.AndF
                                                                                                         ( And
                                                                                                            { andSort =
                                                                                                               SortActualSort
                                                                                                                ( SortActual
                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                   , sortActualSorts = []
                                                                                                                   }
                                                                                                                )
                                                                                                            , andFirst =
                                                                                                               TermLike
                                                                                                                { getTermLike =
                                                                                                                   TermAttributes
                                                                                                                    { termSort =
                                                                                                                       SortActualSort
                                                                                                                        ( SortActual
                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                           , sortActualSorts = []
                                                                                                                           }
                                                                                                                        )
                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                    , termFunctional = Functional{isFunctional = False}
                                                                                                                    , termFunction = Function{isFunction = False}
                                                                                                                    , termDefined = Defined{isDefined = False}
                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                    , termSimplified = NotSimplified
                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                    }
                                                                                                                    :< T.ImpliesF
                                                                                                                     ( Implies
                                                                                                                        { impliesSort =
                                                                                                                           SortActualSort
                                                                                                                            ( SortActual
                                                                                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                               , sortActualSorts = []
                                                                                                                               }
                                                                                                                            )
                                                                                                                        , impliesFirst =
                                                                                                                           TermLike
                                                                                                                            { getTermLike =
                                                                                                                               TermAttributes
                                                                                                                                { termSort =
                                                                                                                                   SortActualSort
                                                                                                                                    ( SortActual
                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                       , sortActualSorts = []
                                                                                                                                       }
                                                                                                                                    )
                                                                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                                                                , termFunction = Function{isFunction = True}
                                                                                                                                , termDefined = Defined{isDefined = False}
                                                                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                                                                , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                }
                                                                                                                                :< T.BottomF
                                                                                                                                 ( Bottom
                                                                                                                                    { bottomSort =
                                                                                                                                       SortActualSort
                                                                                                                                        ( SortActual
                                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                           , sortActualSorts = []
                                                                                                                                           }
                                                                                                                                        )
                                                                                                                                    }
                                                                                                                                 )
                                                                                                                            }
                                                                                                                        , impliesSecond =
                                                                                                                           TermLike
                                                                                                                            { getTermLike =
                                                                                                                               TermAttributes
                                                                                                                                { termSort =
                                                                                                                                   SortActualSort
                                                                                                                                    ( SortActual
                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                       , sortActualSorts = []
                                                                                                                                       }
                                                                                                                                    )
                                                                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                                                                , termFunction = Function{isFunction = False}
                                                                                                                                , termDefined = Defined{isDefined = False}
                                                                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                                                                , termSimplified = NotSimplified
                                                                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                }
                                                                                                                                :< ApplySymbolF
                                                                                                                                 ( Application
                                                                                                                                    { applicationSymbolOrAlias =
                                                                                                                                       Symbol
                                                                                                                                        { symbolConstructor = InternedId{getInternedId = internText "concatMap", internedIdLocation = AstLocationTest}
                                                                                                                                        , symbolParams = []
                                                                                                                                        , symbolSorts =
                                                                                                                                           ApplicationSorts
                                                                                                                                            { applicationSortsOperands =
                                                                                                                                               [ SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                               , SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                               ]
                                                                                                                                            , applicationSortsResult =
                                                                                                                                               SortActualSort
                                                                                                                                                ( SortActual
                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                   }
                                                                                                                                                )
                                                                                                                                            }
                                                                                                                                        , symbolAttributes =
                                                                                                                                           A.Symbol
                                                                                                                                            { function = A.Function{isDeclaredFunction = True}
                                                                                                                                            , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                            , constructor = Constructor{isConstructor = False}
                                                                                                                                            , injective = Injective{isDeclaredInjective = False}
                                                                                                                                            , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                            , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                            , hook = Hook{getHook = Just "MAP.concat"}
                                                                                                                                            , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                            , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                            , memo = Memo{isMemo = False}
                                                                                                                                            , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                            , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                            , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                            , sourceLocation =
                                                                                                                                               SourceLocation
                                                                                                                                                { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                , source = Source{unSource = Nothing}
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    , applicationChildren =
                                                                                                                                       [ TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< T.NotF
                                                                                                                                               ( Not
                                                                                                                                                  { notSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , notChild =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                          }
                                                                                                                                                          :< T.ExistsF
                                                                                                                                                           ( Exists
                                                                                                                                                              { existsSort =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              , existsVariable =
                                                                                                                                                                 Variable
                                                                                                                                                                  { variableName =
                                                                                                                                                                     ElementVariableName
                                                                                                                                                                      { unElementVariableName =
                                                                                                                                                                         VariableName
                                                                                                                                                                          { base = InternedId{getInternedId = internText "gN1E", internedIdLocation = AstLocationTest}
                                                                                                                                                                          , counter = Nothing
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  , variableSort =
                                                                                                                                                                     SortActualSort
                                                                                                                                                                      ( SortActual
                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "boolSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                         }
                                                                                                                                                                      )
                                                                                                                                                                  }
                                                                                                                                                              , existsChild =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.NuF
                                                                                                                                                                       ( Nu
                                                                                                                                                                          { nuVariable =
                                                                                                                                                                             Variable
                                                                                                                                                                              { variableName =
                                                                                                                                                                                 SetVariableName
                                                                                                                                                                                  { unSetVariableName =
                                                                                                                                                                                     VariableName
                                                                                                                                                                                      { base = InternedId{getInternedId = internText "RQd", internedIdLocation = AstLocationTest}
                                                                                                                                                                                      , counter = Nothing
                                                                                                                                                                                      }
                                                                                                                                                                                  }
                                                                                                                                                                              , variableSort =
                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                     }
                                                                                                                                                                                  )
                                                                                                                                                                              }
                                                                                                                                                                          , nuChild =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables =
                                                                                                                                                                                     FreeVars.unsafe
                                                                                                                                                                                      [
                                                                                                                                                                                        ( SomeVariableNameSet
                                                                                                                                                                                           ( SetVariableName
                                                                                                                                                                                              { unSetVariableName =
                                                                                                                                                                                                 VariableName
                                                                                                                                                                                                  { base = InternedId{getInternedId = internText "RQd", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                  , counter = Nothing
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                           )
                                                                                                                                                                                        , FreeVariableInfo
                                                                                                                                                                                           { sort =
                                                                                                                                                                                              SortActualSort
                                                                                                                                                                                               ( SortActual
                                                                                                                                                                                                  { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                  , sortActualSorts = []
                                                                                                                                                                                                  }
                                                                                                                                                                                               )
                                                                                                                                                                                           , count = 1
                                                                                                                                                                                           }
                                                                                                                                                                                        )
                                                                                                                                                                                      ]
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< VariableF
                                                                                                                                                                                   ( Const
                                                                                                                                                                                      ( Variable
                                                                                                                                                                                         { variableName =
                                                                                                                                                                                            SomeVariableNameSet
                                                                                                                                                                                             ( SetVariableName
                                                                                                                                                                                                { unSetVariableName =
                                                                                                                                                                                                   VariableName
                                                                                                                                                                                                    { base = InternedId{getInternedId = internText "RQd", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                    , counter = Nothing
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                             )
                                                                                                                                                                                         , variableSort =
                                                                                                                                                                                            SortActualSort
                                                                                                                                                                                             ( SortActual
                                                                                                                                                                                                { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                , sortActualSorts = []
                                                                                                                                                                                                }
                                                                                                                                                                                             )
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                       , TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = NotSimplified
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< T.OrF
                                                                                                                                               ( Or
                                                                                                                                                  { orSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , orFirst =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = NotSimplified
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                          }
                                                                                                                                                          :< MuF
                                                                                                                                                           ( Mu
                                                                                                                                                              { muVariable =
                                                                                                                                                                 Variable
                                                                                                                                                                  { variableName =
                                                                                                                                                                     SetVariableName
                                                                                                                                                                      { unSetVariableName =
                                                                                                                                                                         VariableName
                                                                                                                                                                          { base = InternedId{getInternedId = internText "JM", internedIdLocation = AstLocationTest}
                                                                                                                                                                          , counter = Nothing
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  , variableSort =
                                                                                                                                                                     SortActualSort
                                                                                                                                                                      ( SortActual
                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                         }
                                                                                                                                                                      )
                                                                                                                                                                  }
                                                                                                                                                              , muChild =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = NotSimplified
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.ExistsF
                                                                                                                                                                       ( Exists
                                                                                                                                                                          { existsSort =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          , existsVariable =
                                                                                                                                                                             Variable
                                                                                                                                                                              { variableName =
                                                                                                                                                                                 ElementVariableName
                                                                                                                                                                                  { unElementVariableName =
                                                                                                                                                                                     VariableName
                                                                                                                                                                                      { base = InternedId{getInternedId = internText "kQm", internedIdLocation = AstLocationTest}
                                                                                                                                                                                      , counter = Nothing
                                                                                                                                                                                      }
                                                                                                                                                                                  }
                                                                                                                                                                              , variableSort =
                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "otherSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                     }
                                                                                                                                                                                  )
                                                                                                                                                                              }
                                                                                                                                                                          , existsChild =
                                                                                                                                                                             TermLike
                                                                                                                                                                              { getTermLike =
                                                                                                                                                                                 TermAttributes
                                                                                                                                                                                  { termSort =
                                                                                                                                                                                     SortActualSort
                                                                                                                                                                                      ( SortActual
                                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                                         }
                                                                                                                                                                                      )
                                                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                                  }
                                                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                                                   ( Application
                                                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                                                         Symbol
                                                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                                                                                          , symbolParams = []
                                                                                                                                                                                          , symbolSorts =
                                                                                                                                                                                             ApplicationSorts
                                                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                                                 SortActualSort
                                                                                                                                                                                                  ( SortActual
                                                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                                                     }
                                                                                                                                                                                                  )
                                                                                                                                                                                              }
                                                                                                                                                                                          , symbolAttributes =
                                                                                                                                                                                             A.Symbol
                                                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                                              , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                                              , sourceLocation =
                                                                                                                                                                                                 SourceLocation
                                                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                          }
                                                                                                                                                                                      , applicationChildren = []
                                                                                                                                                                                      }
                                                                                                                                                                                   )
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  , orSecond =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                          }
                                                                                                                                                          :< T.ForallF
                                                                                                                                                           ( Forall
                                                                                                                                                              { forallSort =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              , forallVariable =
                                                                                                                                                                 Variable
                                                                                                                                                                  { variableName =
                                                                                                                                                                     ElementVariableName
                                                                                                                                                                      { unElementVariableName =
                                                                                                                                                                         VariableName
                                                                                                                                                                          { base = InternedId{getInternedId = internText "PR2H", internedIdLocation = AstLocationTest}
                                                                                                                                                                          , counter = Nothing
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  , variableSort =
                                                                                                                                                                     SortActualSort
                                                                                                                                                                      ( SortActual
                                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "#String", internedIdLocation = AstLocationImplicit}
                                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                                         }
                                                                                                                                                                      )
                                                                                                                                                                  }
                                                                                                                                                              , forallChild =
                                                                                                                                                                 TermLike
                                                                                                                                                                  { getTermLike =
                                                                                                                                                                     TermAttributes
                                                                                                                                                                      { termSort =
                                                                                                                                                                         SortActualSort
                                                                                                                                                                          ( SortActual
                                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                                             }
                                                                                                                                                                          )
                                                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                                                      , termDefined = Defined{isDefined = True}
                                                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                      , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                      }
                                                                                                                                                                      :< T.TopF
                                                                                                                                                                       ( Top
                                                                                                                                                                          { topSort =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          }
                                                                                                                                                                       )
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                       ]
                                                                                                                                    }
                                                                                                                                 )
                                                                                                                            }
                                                                                                                        }
                                                                                                                     )
                                                                                                                }
                                                                                                            , andSecond =
                                                                                                               TermLike
                                                                                                                { getTermLike =
                                                                                                                   TermAttributes
                                                                                                                    { termSort =
                                                                                                                       SortActualSort
                                                                                                                        ( SortActual
                                                                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                           , sortActualSorts = []
                                                                                                                           }
                                                                                                                        )
                                                                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                                                                    , termFunctional = Functional{isFunctional = True}
                                                                                                                    , termFunction = Function{isFunction = True}
                                                                                                                    , termDefined = Defined{isDefined = True}
                                                                                                                    , termCreated = Created{getCreated = Nothing}
                                                                                                                    , termSimplified = NotSimplified
                                                                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                    }
                                                                                                                    :< ApplySymbolF
                                                                                                                     ( Application
                                                                                                                        { applicationSymbolOrAlias =
                                                                                                                           Symbol
                                                                                                                            { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                                                                            , symbolParams = []
                                                                                                                            , symbolSorts =
                                                                                                                               ApplicationSorts
                                                                                                                                { applicationSortsOperands = []
                                                                                                                                , applicationSortsResult =
                                                                                                                                   SortActualSort
                                                                                                                                    ( SortActual
                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                                                                       , sortActualSorts = []
                                                                                                                                       }
                                                                                                                                    )
                                                                                                                                }
                                                                                                                            , symbolAttributes =
                                                                                                                               A.Symbol
                                                                                                                                { function = A.Function{isDeclaredFunction = False}
                                                                                                                                , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                , constructor = Constructor{isConstructor = False}
                                                                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                , hook = Hook{getHook = Just "MAP.unit"}
                                                                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                , memo = Memo{isMemo = False}
                                                                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                , sourceLocation =
                                                                                                                                   SourceLocation
                                                                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                                                                    , source = Source{unSource = Nothing}
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        , applicationChildren = []
                                                                                                                        }
                                                                                                                     )
                                                                                                                }
                                                                                                            }
                                                                                                         )
                                                                                                    }
                                                                                                }
                                                                                             )
                                                                                        }
                                                                                    }
                                                                                 )
                                                                            }
                                                                        }
                                                                     )
                                                                }
                                                            }
                                                         )
                                                    }
                                                , inContainingChild =
                                                   TermLike
                                                    { getTermLike =
                                                       TermAttributes
                                                        { termSort =
                                                           SortActualSort
                                                            ( SortActual
                                                               { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                               , sortActualSorts = []
                                                               }
                                                            )
                                                        , termFreeVariables = FreeVars.unsafe []
                                                        , termFunctional = Functional{isFunctional = False}
                                                        , termFunction = Function{isFunction = False}
                                                        , termDefined = Defined{isDefined = False}
                                                        , termCreated = Created{getCreated = Nothing}
                                                        , termSimplified = NotSimplified
                                                        , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                        }
                                                        :< NuF
                                                         ( Nu
                                                            { nuVariable =
                                                               Variable
                                                                { variableName =
                                                                   SetVariableName
                                                                    { unSetVariableName =
                                                                       VariableName
                                                                        { base = InternedId{getInternedId = internText "fZr", internedIdLocation = AstLocationTest}
                                                                        , counter = Nothing
                                                                        }
                                                                    }
                                                                , variableSort =
                                                                   SortActualSort
                                                                    ( SortActual
                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                       , sortActualSorts = []
                                                                       }
                                                                    )
                                                                }
                                                            , nuChild =
                                                               TermLike
                                                                { getTermLike =
                                                                   TermAttributes
                                                                    { termSort =
                                                                       SortActualSort
                                                                        ( SortActual
                                                                           { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                           , sortActualSorts = []
                                                                           }
                                                                        )
                                                                    , termFreeVariables = FreeVars.unsafe []
                                                                    , termFunctional = Functional{isFunctional = True}
                                                                    , termFunction = Function{isFunction = True}
                                                                    , termDefined = Defined{isDefined = True}
                                                                    , termCreated = Created{getCreated = Nothing}
                                                                    , termSimplified = NotSimplified
                                                                    , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                    }
                                                                    :< ApplySymbolF
                                                                     ( Application
                                                                        { applicationSymbolOrAlias =
                                                                           Symbol
                                                                            { symbolConstructor = InternedId{getInternedId = internText "unitMap", internedIdLocation = AstLocationTest}
                                                                            , symbolParams = []
                                                                            , symbolSorts =
                                                                               ApplicationSorts
                                                                                { applicationSortsOperands = []
                                                                                , applicationSortsResult =
                                                                                   SortActualSort
                                                                                    ( SortActual
                                                                                       { sortActualName = InternedId{getInternedId = internText "mapSort", internedIdLocation = AstLocationTest}
                                                                                       , sortActualSorts = []
                                                                                       }
                                                                                    )
                                                                                }
                                                                            , symbolAttributes =
                                                                               A.Symbol
                                                                                { function = A.Function{isDeclaredFunction = False}
                                                                                , functional = A.Functional{isDeclaredFunctional = True}
                                                                                , constructor = Constructor{isConstructor = False}
                                                                                , injective = Injective{isDeclaredInjective = False}
                                                                                , sortInjection = SortInjection{isSortInjection = False}
                                                                                , anywhere = Anywhere{isAnywhere = False}
                                                                                , hook = Hook{getHook = Just "MAP.unit"}
                                                                                , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                , smthook = Smthook{getSmthook = Nothing}
                                                                                , memo = Memo{isMemo = False}
                                                                                , klabel = Klabel{getKlabel = Nothing}
                                                                                , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                , sourceLocation =
                                                                                   SourceLocation
                                                                                    { location = Location{start = Nothing, end = Nothing}
                                                                                    , source = Source{unSource = Nothing}
                                                                                    }
                                                                                }
                                                                            }
                                                                        , applicationChildren = []
                                                                        }
                                                                     )
                                                                }
                                                            }
                                                         )
                                                    }
                                                }
                                             )
                                         )
                                      )
                                  , iffSecond =
                                     CofreeT
                                      ( Identity
                                         ( PredicatePattern
                                            { freeVariables = FreeVars.unsafe []
                                            , simplified = NotSimplified
                                            }
                                            :< AndF
                                             ( And
                                                { andSort = ()
                                                , andFirst =
                                                   CofreeT
                                                    ( Identity
                                                       ( PredicatePattern
                                                          { freeVariables = FreeVars.unsafe []
                                                          , simplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                          }
                                                          :< TopF (Top{topSort = ()})
                                                       )
                                                    )
                                                , andSecond =
                                                   CofreeT
                                                    ( Identity
                                                       ( PredicatePattern
                                                          { freeVariables = FreeVars.unsafe []
                                                          , simplified = NotSimplified
                                                          }
                                                          :< FloorF
                                                           ( Floor
                                                              { floorOperandSort = ()
                                                              , floorResultSort = ()
                                                              , floorChild =
                                                                 TermLike
                                                                  { getTermLike =
                                                                     TermAttributes
                                                                      { termSort =
                                                                         SortActualSort
                                                                          ( SortActual
                                                                             { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                             , sortActualSorts = []
                                                                             }
                                                                          )
                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                      , termFunctional = Functional{isFunctional = False}
                                                                      , termFunction = Function{isFunction = False}
                                                                      , termDefined = Defined{isDefined = False}
                                                                      , termCreated = Created{getCreated = Nothing}
                                                                      , termSimplified = NotSimplified
                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                      }
                                                                      :< T.ImpliesF
                                                                       ( Implies
                                                                          { impliesSort =
                                                                             SortActualSort
                                                                              ( SortActual
                                                                                 { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                 , sortActualSorts = []
                                                                                 }
                                                                              )
                                                                          , impliesFirst =
                                                                             TermLike
                                                                              { getTermLike =
                                                                                 TermAttributes
                                                                                  { termSort =
                                                                                     SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                  , termFunction = Function{isFunction = False}
                                                                                  , termDefined = Defined{isDefined = True}
                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                  }
                                                                                  :< T.TopF
                                                                                   ( Top
                                                                                      { topSort =
                                                                                         SortActualSort
                                                                                          ( SortActual
                                                                                             { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                             , sortActualSorts = []
                                                                                             }
                                                                                          )
                                                                                      }
                                                                                   )
                                                                              }
                                                                          , impliesSecond =
                                                                             TermLike
                                                                              { getTermLike =
                                                                                 TermAttributes
                                                                                  { termSort =
                                                                                     SortActualSort
                                                                                      ( SortActual
                                                                                         { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                         , sortActualSorts = []
                                                                                         }
                                                                                      )
                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                  , termFunction = Function{isFunction = False}
                                                                                  , termDefined = Defined{isDefined = False}
                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                  , termSimplified = NotSimplified
                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                  }
                                                                                  :< T.AndF
                                                                                   ( And
                                                                                      { andSort =
                                                                                         SortActualSort
                                                                                          ( SortActual
                                                                                             { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                             , sortActualSorts = []
                                                                                             }
                                                                                          )
                                                                                      , andFirst =
                                                                                         TermLike
                                                                                          { getTermLike =
                                                                                             TermAttributes
                                                                                              { termSort =
                                                                                                 SortActualSort
                                                                                                  ( SortActual
                                                                                                     { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                     , sortActualSorts = []
                                                                                                     }
                                                                                                  )
                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                              , termFunction = Function{isFunction = False}
                                                                                              , termDefined = Defined{isDefined = False}
                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                              , termSimplified = NotSimplified
                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                              }
                                                                                              :< ApplySymbolF
                                                                                               ( Application
                                                                                                  { applicationSymbolOrAlias =
                                                                                                     Symbol
                                                                                                      { symbolConstructor = InternedId{getInternedId = internText "fTestInt", internedIdLocation = AstLocationTest}
                                                                                                      , symbolParams = []
                                                                                                      , symbolSorts =
                                                                                                         ApplicationSorts
                                                                                                          { applicationSortsOperands =
                                                                                                             [ SortActualSort
                                                                                                                ( SortActual
                                                                                                                   { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                   , sortActualSorts = []
                                                                                                                   }
                                                                                                                )
                                                                                                             ]
                                                                                                          , applicationSortsResult =
                                                                                                             SortActualSort
                                                                                                              ( SortActual
                                                                                                                 { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                 , sortActualSorts = []
                                                                                                                 }
                                                                                                              )
                                                                                                          }
                                                                                                      , symbolAttributes =
                                                                                                         A.Symbol
                                                                                                          { function = A.Function{isDeclaredFunction = True}
                                                                                                          , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                          , constructor = Constructor{isConstructor = False}
                                                                                                          , injective = Injective{isDeclaredInjective = False}
                                                                                                          , sortInjection = SortInjection{isSortInjection = False}
                                                                                                          , anywhere = Anywhere{isAnywhere = False}
                                                                                                          , hook = Hook{getHook = Nothing}
                                                                                                          , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                          , smthook = Smthook{getSmthook = Nothing}
                                                                                                          , memo = Memo{isMemo = False}
                                                                                                          , klabel = Klabel{getKlabel = Nothing}
                                                                                                          , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                          , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                          , sourceLocation =
                                                                                                             SourceLocation
                                                                                                              { location = Location{start = Nothing, end = Nothing}
                                                                                                              , source = Source{unSource = Nothing}
                                                                                                              }
                                                                                                          }
                                                                                                      }
                                                                                                  , applicationChildren =
                                                                                                     [ TermLike
                                                                                                        { getTermLike =
                                                                                                           TermAttributes
                                                                                                            { termSort =
                                                                                                               SortActualSort
                                                                                                                ( SortActual
                                                                                                                   { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                   , sortActualSorts = []
                                                                                                                   }
                                                                                                                )
                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                            , termFunction = Function{isFunction = False}
                                                                                                            , termDefined = Defined{isDefined = False}
                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                            , termSimplified = NotSimplified
                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                            }
                                                                                                            :< ApplySymbolF
                                                                                                             ( Application
                                                                                                                { applicationSymbolOrAlias =
                                                                                                                   Symbol
                                                                                                                    { symbolConstructor = InternedId{getInternedId = internText "sigma", internedIdLocation = AstLocationTest}
                                                                                                                    , symbolParams = []
                                                                                                                    , symbolSorts =
                                                                                                                       ApplicationSorts
                                                                                                                        { applicationSortsOperands =
                                                                                                                           [ SortActualSort
                                                                                                                              ( SortActual
                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                 , sortActualSorts = []
                                                                                                                                 }
                                                                                                                              )
                                                                                                                           , SortActualSort
                                                                                                                              ( SortActual
                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                 , sortActualSorts = []
                                                                                                                                 }
                                                                                                                              )
                                                                                                                           ]
                                                                                                                        , applicationSortsResult =
                                                                                                                           SortActualSort
                                                                                                                            ( SortActual
                                                                                                                               { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                               , sortActualSorts = []
                                                                                                                               }
                                                                                                                            )
                                                                                                                        }
                                                                                                                    , symbolAttributes =
                                                                                                                       A.Symbol
                                                                                                                        { function = A.Function{isDeclaredFunction = False}
                                                                                                                        , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                        , constructor = Constructor{isConstructor = True}
                                                                                                                        , injective = Injective{isDeclaredInjective = False}
                                                                                                                        , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                        , anywhere = Anywhere{isAnywhere = False}
                                                                                                                        , hook = Hook{getHook = Nothing}
                                                                                                                        , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                        , smthook = Smthook{getSmthook = Nothing}
                                                                                                                        , memo = Memo{isMemo = False}
                                                                                                                        , klabel = Klabel{getKlabel = Nothing}
                                                                                                                        , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                        , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                        , sourceLocation =
                                                                                                                           SourceLocation
                                                                                                                            { location = Location{start = Nothing, end = Nothing}
                                                                                                                            , source = Source{unSource = Nothing}
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                , applicationChildren =
                                                                                                                   [ TermLike
                                                                                                                      { getTermLike =
                                                                                                                         TermAttributes
                                                                                                                          { termSort =
                                                                                                                             SortActualSort
                                                                                                                              ( SortActual
                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                 , sortActualSorts = []
                                                                                                                                 }
                                                                                                                              )
                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                          , termSimplified = NotSimplified
                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                          }
                                                                                                                          :< MuF
                                                                                                                           ( Mu
                                                                                                                              { muVariable =
                                                                                                                                 Variable
                                                                                                                                  { variableName =
                                                                                                                                     SetVariableName
                                                                                                                                      { unSetVariableName =
                                                                                                                                         VariableName
                                                                                                                                          { base = InternedId{getInternedId = internText "G", internedIdLocation = AstLocationTest}
                                                                                                                                          , counter = Nothing
                                                                                                                                          }
                                                                                                                                      }
                                                                                                                                  , variableSort =
                                                                                                                                     SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                  }
                                                                                                                              , muChild =
                                                                                                                                 TermLike
                                                                                                                                  { getTermLike =
                                                                                                                                     TermAttributes
                                                                                                                                      { termSort =
                                                                                                                                         SortActualSort
                                                                                                                                          ( SortActual
                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                             , sortActualSorts = []
                                                                                                                                             }
                                                                                                                                          )
                                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                                      , termSimplified = NotSimplified
                                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                      }
                                                                                                                                      :< T.ImpliesF
                                                                                                                                       ( Implies
                                                                                                                                          { impliesSort =
                                                                                                                                             SortActualSort
                                                                                                                                              ( SortActual
                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                 }
                                                                                                                                              )
                                                                                                                                          , impliesFirst =
                                                                                                                                             TermLike
                                                                                                                                              { getTermLike =
                                                                                                                                                 TermAttributes
                                                                                                                                                  { termSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                  }
                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                   ( Application
                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                         Symbol
                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "b", internedIdLocation = AstLocationTest}
                                                                                                                                                          , symbolParams = []
                                                                                                                                                          , symbolSorts =
                                                                                                                                                             ApplicationSorts
                                                                                                                                                              { applicationSortsOperands = []
                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              }
                                                                                                                                                          , symbolAttributes =
                                                                                                                                                             A.Symbol
                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                              , constructor = Constructor{isConstructor = True}
                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                              , hook = Hook{getHook = Nothing}
                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                              , sourceLocation =
                                                                                                                                                                 SourceLocation
                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                      , applicationChildren = []
                                                                                                                                                      }
                                                                                                                                                   )
                                                                                                                                              }
                                                                                                                                          , impliesSecond =
                                                                                                                                             TermLike
                                                                                                                                              { getTermLike =
                                                                                                                                                 TermAttributes
                                                                                                                                                  { termSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                  , termFunctional = Functional{isFunctional = True}
                                                                                                                                                  , termFunction = Function{isFunction = True}
                                                                                                                                                  , termDefined = Defined{isDefined = True}
                                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                  }
                                                                                                                                                  :< ApplySymbolF
                                                                                                                                                   ( Application
                                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                                         Symbol
                                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "functionalConstr11", internedIdLocation = AstLocationTest}
                                                                                                                                                          , symbolParams = []
                                                                                                                                                          , symbolSorts =
                                                                                                                                                             ApplicationSorts
                                                                                                                                                              { applicationSortsOperands =
                                                                                                                                                                 [ SortActualSort
                                                                                                                                                                    ( SortActual
                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                       }
                                                                                                                                                                    )
                                                                                                                                                                 ]
                                                                                                                                                              , applicationSortsResult =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              }
                                                                                                                                                          , symbolAttributes =
                                                                                                                                                             A.Symbol
                                                                                                                                                              { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                              , constructor = Constructor{isConstructor = True}
                                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                              , hook = Hook{getHook = Nothing}
                                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                              , sourceLocation =
                                                                                                                                                                 SourceLocation
                                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                      , applicationChildren =
                                                                                                                                                         [ TermLike
                                                                                                                                                            { getTermLike =
                                                                                                                                                               TermAttributes
                                                                                                                                                                { termSort =
                                                                                                                                                                   SortActualSort
                                                                                                                                                                    ( SortActual
                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                       }
                                                                                                                                                                    )
                                                                                                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                                , termFunctional = Functional{isFunctional = True}
                                                                                                                                                                , termFunction = Function{isFunction = True}
                                                                                                                                                                , termDefined = Defined{isDefined = True}
                                                                                                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                                                                                                , termSimplified = NotSimplified
                                                                                                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                                }
                                                                                                                                                                :< ApplySymbolF
                                                                                                                                                                 ( Application
                                                                                                                                                                    { applicationSymbolOrAlias =
                                                                                                                                                                       Symbol
                                                                                                                                                                        { symbolConstructor = InternedId{getInternedId = internText "functionalInjective00", internedIdLocation = AstLocationTest}
                                                                                                                                                                        , symbolParams = []
                                                                                                                                                                        , symbolSorts =
                                                                                                                                                                           ApplicationSorts
                                                                                                                                                                            { applicationSortsOperands = []
                                                                                                                                                                            , applicationSortsResult =
                                                                                                                                                                               SortActualSort
                                                                                                                                                                                ( SortActual
                                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                                   }
                                                                                                                                                                                )
                                                                                                                                                                            }
                                                                                                                                                                        , symbolAttributes =
                                                                                                                                                                           A.Symbol
                                                                                                                                                                            { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                            , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                            , constructor = Constructor{isConstructor = False}
                                                                                                                                                                            , injective = Injective{isDeclaredInjective = True}
                                                                                                                                                                            , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                            , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                            , hook = Hook{getHook = Nothing}
                                                                                                                                                                            , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                            , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                            , memo = Memo{isMemo = False}
                                                                                                                                                                            , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                            , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                            , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                            , sourceLocation =
                                                                                                                                                                               SourceLocation
                                                                                                                                                                                { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                                , source = Source{unSource = Nothing}
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    , applicationChildren = []
                                                                                                                                                                    }
                                                                                                                                                                 )
                                                                                                                                                            }
                                                                                                                                                         ]
                                                                                                                                                      }
                                                                                                                                                   )
                                                                                                                                              }
                                                                                                                                          }
                                                                                                                                       )
                                                                                                                                  }
                                                                                                                              }
                                                                                                                           )
                                                                                                                      }
                                                                                                                   , TermLike
                                                                                                                      { getTermLike =
                                                                                                                         TermAttributes
                                                                                                                          { termSort =
                                                                                                                             SortActualSort
                                                                                                                              ( SortActual
                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                 , sortActualSorts = []
                                                                                                                                 }
                                                                                                                              )
                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                                          , termDefined = Defined{isDefined = True}
                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                          , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                          }
                                                                                                                          :< T.TopF
                                                                                                                           ( Top
                                                                                                                              { topSort =
                                                                                                                                 SortActualSort
                                                                                                                                  ( SortActual
                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                     , sortActualSorts = []
                                                                                                                                     }
                                                                                                                                  )
                                                                                                                              }
                                                                                                                           )
                                                                                                                      }
                                                                                                                   ]
                                                                                                                }
                                                                                                             )
                                                                                                        }
                                                                                                     ]
                                                                                                  }
                                                                                               )
                                                                                          }
                                                                                      , andSecond =
                                                                                         TermLike
                                                                                          { getTermLike =
                                                                                             TermAttributes
                                                                                              { termSort =
                                                                                                 SortActualSort
                                                                                                  ( SortActual
                                                                                                     { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                     , sortActualSorts = []
                                                                                                     }
                                                                                                  )
                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                              , termFunction = Function{isFunction = False}
                                                                                              , termDefined = Defined{isDefined = False}
                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                              , termSimplified = NotSimplified
                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                              }
                                                                                              :< T.ImpliesF
                                                                                               ( Implies
                                                                                                  { impliesSort =
                                                                                                     SortActualSort
                                                                                                      ( SortActual
                                                                                                         { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                         , sortActualSorts = []
                                                                                                         }
                                                                                                      )
                                                                                                  , impliesFirst =
                                                                                                     TermLike
                                                                                                      { getTermLike =
                                                                                                         TermAttributes
                                                                                                          { termSort =
                                                                                                             SortActualSort
                                                                                                              ( SortActual
                                                                                                                 { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                 , sortActualSorts = []
                                                                                                                 }
                                                                                                              )
                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                          , termDefined = Defined{isDefined = False}
                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                          , termSimplified = NotSimplified
                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                          }
                                                                                                          :< T.AndF
                                                                                                           ( And
                                                                                                              { andSort =
                                                                                                                 SortActualSort
                                                                                                                  ( SortActual
                                                                                                                     { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                     , sortActualSorts = []
                                                                                                                     }
                                                                                                                  )
                                                                                                              , andFirst =
                                                                                                                 TermLike
                                                                                                                  { getTermLike =
                                                                                                                     TermAttributes
                                                                                                                      { termSort =
                                                                                                                         SortActualSort
                                                                                                                          ( SortActual
                                                                                                                             { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                             , sortActualSorts = []
                                                                                                                             }
                                                                                                                          )
                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                      , termFunctional = Functional{isFunctional = True}
                                                                                                                      , termFunction = Function{isFunction = True}
                                                                                                                      , termDefined = Defined{isDefined = True}
                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                      , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                      }
                                                                                                                      :< InternalIntF
                                                                                                                       ( Const
                                                                                                                          ( InternalInt
                                                                                                                             { internalIntSort =
                                                                                                                                SortActualSort
                                                                                                                                 ( SortActual
                                                                                                                                    { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                    , sortActualSorts = []
                                                                                                                                    }
                                                                                                                                 )
                                                                                                                             , internalIntValue = 776
                                                                                                                             }
                                                                                                                          )
                                                                                                                       )
                                                                                                                  }
                                                                                                              , andSecond =
                                                                                                                 TermLike
                                                                                                                  { getTermLike =
                                                                                                                     TermAttributes
                                                                                                                      { termSort =
                                                                                                                         SortActualSort
                                                                                                                          ( SortActual
                                                                                                                             { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                             , sortActualSorts = []
                                                                                                                             }
                                                                                                                          )
                                                                                                                      , termFreeVariables = FreeVars.unsafe []
                                                                                                                      , termFunctional = Functional{isFunctional = False}
                                                                                                                      , termFunction = Function{isFunction = False}
                                                                                                                      , termDefined = Defined{isDefined = False}
                                                                                                                      , termCreated = Created{getCreated = Nothing}
                                                                                                                      , termSimplified = NotSimplified
                                                                                                                      , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                      }
                                                                                                                      :< T.IffF
                                                                                                                       ( Iff
                                                                                                                          { iffSort =
                                                                                                                             SortActualSort
                                                                                                                              ( SortActual
                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                 , sortActualSorts = []
                                                                                                                                 }
                                                                                                                              )
                                                                                                                          , iffFirst =
                                                                                                                             TermLike
                                                                                                                              { getTermLike =
                                                                                                                                 TermAttributes
                                                                                                                                  { termSort =
                                                                                                                                     SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                  , termSimplified = NotSimplified
                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                  }
                                                                                                                                  :< ApplySymbolF
                                                                                                                                   ( Application
                                                                                                                                      { applicationSymbolOrAlias =
                                                                                                                                         Symbol
                                                                                                                                          { symbolConstructor = InternedId{getInternedId = internText "fTestInt", internedIdLocation = AstLocationTest}
                                                                                                                                          , symbolParams = []
                                                                                                                                          , symbolSorts =
                                                                                                                                             ApplicationSorts
                                                                                                                                              { applicationSortsOperands =
                                                                                                                                                 [ SortActualSort
                                                                                                                                                    ( SortActual
                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                       }
                                                                                                                                                    )
                                                                                                                                                 ]
                                                                                                                                              , applicationSortsResult =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              }
                                                                                                                                          , symbolAttributes =
                                                                                                                                             A.Symbol
                                                                                                                                              { function = A.Function{isDeclaredFunction = True}
                                                                                                                                              , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                              , constructor = Constructor{isConstructor = False}
                                                                                                                                              , injective = Injective{isDeclaredInjective = False}
                                                                                                                                              , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                              , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                              , hook = Hook{getHook = Nothing}
                                                                                                                                              , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                              , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                              , memo = Memo{isMemo = False}
                                                                                                                                              , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                              , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                              , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                              , sourceLocation =
                                                                                                                                                 SourceLocation
                                                                                                                                                  { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                  , source = Source{unSource = Nothing}
                                                                                                                                                  }
                                                                                                                                              }
                                                                                                                                          }
                                                                                                                                      , applicationChildren =
                                                                                                                                         [ TermLike
                                                                                                                                            { getTermLike =
                                                                                                                                               TermAttributes
                                                                                                                                                { termSort =
                                                                                                                                                   SortActualSort
                                                                                                                                                    ( SortActual
                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                       }
                                                                                                                                                    )
                                                                                                                                                , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                , termFunctional = Functional{isFunctional = False}
                                                                                                                                                , termFunction = Function{isFunction = False}
                                                                                                                                                , termDefined = Defined{isDefined = False}
                                                                                                                                                , termCreated = Created{getCreated = Nothing}
                                                                                                                                                , termSimplified = NotSimplified
                                                                                                                                                , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                }
                                                                                                                                                :< ApplySymbolF
                                                                                                                                                 ( Application
                                                                                                                                                    { applicationSymbolOrAlias =
                                                                                                                                                       Symbol
                                                                                                                                                        { symbolConstructor = InternedId{getInternedId = internText "plain20", internedIdLocation = AstLocationTest}
                                                                                                                                                        , symbolParams = []
                                                                                                                                                        , symbolSorts =
                                                                                                                                                           ApplicationSorts
                                                                                                                                                            { applicationSortsOperands =
                                                                                                                                                               [ SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                               , SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                               ]
                                                                                                                                                            , applicationSortsResult =
                                                                                                                                                               SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                            }
                                                                                                                                                        , symbolAttributes =
                                                                                                                                                           A.Symbol
                                                                                                                                                            { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                            , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                            , constructor = Constructor{isConstructor = False}
                                                                                                                                                            , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                            , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                            , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                            , hook = Hook{getHook = Nothing}
                                                                                                                                                            , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                            , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                            , memo = Memo{isMemo = False}
                                                                                                                                                            , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                            , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                            , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                            , sourceLocation =
                                                                                                                                                               SourceLocation
                                                                                                                                                                { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                , source = Source{unSource = Nothing}
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    , applicationChildren =
                                                                                                                                                       [ TermLike
                                                                                                                                                          { getTermLike =
                                                                                                                                                             TermAttributes
                                                                                                                                                              { termSort =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                              , termFunctional = Functional{isFunctional = True}
                                                                                                                                                              , termFunction = Function{isFunction = True}
                                                                                                                                                              , termDefined = Defined{isDefined = True}
                                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                                              , termSimplified = NotSimplified
                                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                              }
                                                                                                                                                              :< ApplySymbolF
                                                                                                                                                               ( Application
                                                                                                                                                                  { applicationSymbolOrAlias =
                                                                                                                                                                     Symbol
                                                                                                                                                                      { symbolConstructor = InternedId{getInternedId = internText "anywhere", internedIdLocation = AstLocationTest}
                                                                                                                                                                      , symbolParams = []
                                                                                                                                                                      , symbolSorts =
                                                                                                                                                                         ApplicationSorts
                                                                                                                                                                          { applicationSortsOperands = []
                                                                                                                                                                          , applicationSortsResult =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          }
                                                                                                                                                                      , symbolAttributes =
                                                                                                                                                                         A.Symbol
                                                                                                                                                                          { function = A.Function{isDeclaredFunction = False}
                                                                                                                                                                          , functional = A.Functional{isDeclaredFunctional = True}
                                                                                                                                                                          , constructor = Constructor{isConstructor = False}
                                                                                                                                                                          , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                          , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                          , anywhere = Anywhere{isAnywhere = True}
                                                                                                                                                                          , hook = Hook{getHook = Nothing}
                                                                                                                                                                          , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                          , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                          , memo = Memo{isMemo = False}
                                                                                                                                                                          , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                          , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                          , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                          , sourceLocation =
                                                                                                                                                                             SourceLocation
                                                                                                                                                                              { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                              , source = Source{unSource = Nothing}
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  , applicationChildren = []
                                                                                                                                                                  }
                                                                                                                                                               )
                                                                                                                                                          }
                                                                                                                                                       , TermLike
                                                                                                                                                          { getTermLike =
                                                                                                                                                             TermAttributes
                                                                                                                                                              { termSort =
                                                                                                                                                                 SortActualSort
                                                                                                                                                                  ( SortActual
                                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                                     }
                                                                                                                                                                  )
                                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                                              , termFunction = Function{isFunction = True}
                                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                                              , termSimplified = NotSimplified
                                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                              }
                                                                                                                                                              :< ApplySymbolF
                                                                                                                                                               ( Application
                                                                                                                                                                  { applicationSymbolOrAlias =
                                                                                                                                                                     Symbol
                                                                                                                                                                      { symbolConstructor = InternedId{getInternedId = internText "ch", internedIdLocation = AstLocationTest}
                                                                                                                                                                      , symbolParams = []
                                                                                                                                                                      , symbolSorts =
                                                                                                                                                                         ApplicationSorts
                                                                                                                                                                          { applicationSortsOperands = []
                                                                                                                                                                          , applicationSortsResult =
                                                                                                                                                                             SortActualSort
                                                                                                                                                                              ( SortActual
                                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "testSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                                 }
                                                                                                                                                                              )
                                                                                                                                                                          }
                                                                                                                                                                      , symbolAttributes =
                                                                                                                                                                         A.Symbol
                                                                                                                                                                          { function = A.Function{isDeclaredFunction = True}
                                                                                                                                                                          , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                                          , constructor = Constructor{isConstructor = False}
                                                                                                                                                                          , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                                          , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                                          , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                                          , hook = Hook{getHook = Nothing}
                                                                                                                                                                          , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                                          , smthook = Smthook{getSmthook = Nothing}
                                                                                                                                                                          , memo = Memo{isMemo = False}
                                                                                                                                                                          , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                                          , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                                          , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                                          , sourceLocation =
                                                                                                                                                                             SourceLocation
                                                                                                                                                                              { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                                              , source = Source{unSource = Nothing}
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                  , applicationChildren = []
                                                                                                                                                                  }
                                                                                                                                                               )
                                                                                                                                                          }
                                                                                                                                                       ]
                                                                                                                                                    }
                                                                                                                                                 )
                                                                                                                                            }
                                                                                                                                         ]
                                                                                                                                      }
                                                                                                                                   )
                                                                                                                              }
                                                                                                                          , iffSecond =
                                                                                                                             TermLike
                                                                                                                              { getTermLike =
                                                                                                                                 TermAttributes
                                                                                                                                  { termSort =
                                                                                                                                     SortActualSort
                                                                                                                                      ( SortActual
                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                         , sortActualSorts = []
                                                                                                                                         }
                                                                                                                                      )
                                                                                                                                  , termFreeVariables = FreeVars.unsafe []
                                                                                                                                  , termFunctional = Functional{isFunctional = False}
                                                                                                                                  , termFunction = Function{isFunction = False}
                                                                                                                                  , termDefined = Defined{isDefined = False}
                                                                                                                                  , termCreated = Created{getCreated = Nothing}
                                                                                                                                  , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                  , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                  }
                                                                                                                                  :< T.IffF
                                                                                                                                   ( Iff
                                                                                                                                      { iffSort =
                                                                                                                                         SortActualSort
                                                                                                                                          ( SortActual
                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                             , sortActualSorts = []
                                                                                                                                             }
                                                                                                                                          )
                                                                                                                                      , iffFirst =
                                                                                                                                         TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< ApplySymbolF
                                                                                                                                               ( Application
                                                                                                                                                  { applicationSymbolOrAlias =
                                                                                                                                                     Symbol
                                                                                                                                                      { symbolConstructor = InternedId{getInternedId = internText "tdivIntId", internedIdLocation = AstLocationTest}
                                                                                                                                                      , symbolParams = []
                                                                                                                                                      , symbolSorts =
                                                                                                                                                         ApplicationSorts
                                                                                                                                                          { applicationSortsOperands =
                                                                                                                                                             [ SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                             , SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                             ]
                                                                                                                                                          , applicationSortsResult =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          }
                                                                                                                                                      , symbolAttributes =
                                                                                                                                                         A.Symbol
                                                                                                                                                          { function = A.Function{isDeclaredFunction = True}
                                                                                                                                                          , functional = A.Functional{isDeclaredFunctional = False}
                                                                                                                                                          , constructor = Constructor{isConstructor = False}
                                                                                                                                                          , injective = Injective{isDeclaredInjective = False}
                                                                                                                                                          , sortInjection = SortInjection{isSortInjection = False}
                                                                                                                                                          , anywhere = Anywhere{isAnywhere = False}
                                                                                                                                                          , hook = Hook{getHook = Just "INT.tdiv"}
                                                                                                                                                          , smtlib = Smtlib{getSmtlib = Nothing}
                                                                                                                                                          , smthook = Smthook{getSmthook = Just (Atom "div")}
                                                                                                                                                          , memo = Memo{isMemo = False}
                                                                                                                                                          , klabel = Klabel{getKlabel = Nothing}
                                                                                                                                                          , symbolKywd = SymbolKywd{isSymbolKywd = False}
                                                                                                                                                          , noEvaluators = NoEvaluators{hasNoEvaluators = False}
                                                                                                                                                          , sourceLocation =
                                                                                                                                                             SourceLocation
                                                                                                                                                              { location = Location{start = Nothing, end = Nothing}
                                                                                                                                                              , source = Source{unSource = Nothing}
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                      }
                                                                                                                                                  , applicationChildren =
                                                                                                                                                     [ TermLike
                                                                                                                                                        { getTermLike =
                                                                                                                                                           TermAttributes
                                                                                                                                                            { termSort =
                                                                                                                                                               SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                                            , termFunction = Function{isFunction = True}
                                                                                                                                                            , termDefined = Defined{isDefined = False}
                                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                                            , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                            }
                                                                                                                                                            :< T.BottomF
                                                                                                                                                             ( Bottom
                                                                                                                                                                { bottomSort =
                                                                                                                                                                   SortActualSort
                                                                                                                                                                    ( SortActual
                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                       }
                                                                                                                                                                    )
                                                                                                                                                                }
                                                                                                                                                             )
                                                                                                                                                        }
                                                                                                                                                     , TermLike
                                                                                                                                                        { getTermLike =
                                                                                                                                                           TermAttributes
                                                                                                                                                            { termSort =
                                                                                                                                                               SortActualSort
                                                                                                                                                                ( SortActual
                                                                                                                                                                   { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                   , sortActualSorts = []
                                                                                                                                                                   }
                                                                                                                                                                )
                                                                                                                                                            , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                            , termFunctional = Functional{isFunctional = False}
                                                                                                                                                            , termFunction = Function{isFunction = False}
                                                                                                                                                            , termDefined = Defined{isDefined = True}
                                                                                                                                                            , termCreated = Created{getCreated = Nothing}
                                                                                                                                                            , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                            , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                                            }
                                                                                                                                                            :< T.TopF
                                                                                                                                                             ( Top
                                                                                                                                                                { topSort =
                                                                                                                                                                   SortActualSort
                                                                                                                                                                    ( SortActual
                                                                                                                                                                       { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                       , sortActualSorts = []
                                                                                                                                                                       }
                                                                                                                                                                    )
                                                                                                                                                                }
                                                                                                                                                             )
                                                                                                                                                        }
                                                                                                                                                     ]
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                      , iffSecond =
                                                                                                                                         TermLike
                                                                                                                                          { getTermLike =
                                                                                                                                             TermAttributes
                                                                                                                                              { termSort =
                                                                                                                                                 SortActualSort
                                                                                                                                                  ( SortActual
                                                                                                                                                     { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                     , sortActualSorts = []
                                                                                                                                                     }
                                                                                                                                                  )
                                                                                                                                              , termFreeVariables = FreeVars.unsafe []
                                                                                                                                              , termFunctional = Functional{isFunctional = False}
                                                                                                                                              , termFunction = Function{isFunction = False}
                                                                                                                                              , termDefined = Defined{isDefined = False}
                                                                                                                                              , termCreated = Created{getCreated = Nothing}
                                                                                                                                              , termSimplified = Simplified (SimplifiedData {sType = Partly, condition = Any})
                                                                                                                                              , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                                                              }
                                                                                                                                              :< T.ForallF
                                                                                                                                               ( Forall
                                                                                                                                                  { forallSort =
                                                                                                                                                     SortActualSort
                                                                                                                                                      ( SortActual
                                                                                                                                                         { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                         , sortActualSorts = []
                                                                                                                                                         }
                                                                                                                                                      )
                                                                                                                                                  , forallVariable =
                                                                                                                                                     Variable
                                                                                                                                                      { variableName =
                                                                                                                                                         ElementVariableName
                                                                                                                                                          { unElementVariableName =
                                                                                                                                                             VariableName
                                                                                                                                                              { base = InternedId{getInternedId = internText "wE", internedIdLocation = AstLocationTest}
                                                                                                                                                              , counter = Nothing
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                      , variableSort =
                                                                                                                                                         SortActualSort
                                                                                                                                                          ( SortActual
                                                                                                                                                             { sortActualName = InternedId{getInternedId = internText "otherTopSort", internedIdLocation = AstLocationTest}
                                                                                                                                                             , sortActualSorts = []
                                                                                                                                                             }
                                                                                                                                                          )
                                                                                                                                                      }
                                                                                                                                                  , forallChild =
                                                                                                                                                     TermLike
                                                                                                                                                      { getTermLike =
                                                                                                                                                         TermAttributes
                                                                                                                                                          { termSort =
                                                                                                                                                             SortActualSort
                                                                                                                                                              ( SortActual
                                                                                                                                                                 { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                 , sortActualSorts = []
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                                                                          , termFunctional = Functional{isFunctional = True}
                                                                                                                                                          , termFunction = Function{isFunction = True}
                                                                                                                                                          , termDefined = Defined{isDefined = True}
                                                                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                                                                          , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Just ConstructorLikeHead}
                                                                                                                                                          }
                                                                                                                                                          :< InternalIntF
                                                                                                                                                           ( Const
                                                                                                                                                              ( InternalInt
                                                                                                                                                                 { internalIntSort =
                                                                                                                                                                    SortActualSort
                                                                                                                                                                     ( SortActual
                                                                                                                                                                        { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                                                                        , sortActualSorts = []
                                                                                                                                                                        }
                                                                                                                                                                     )
                                                                                                                                                                 , internalIntValue = 1320
                                                                                                                                                                 }
                                                                                                                                                              )
                                                                                                                                                           )
                                                                                                                                                      }
                                                                                                                                                  }
                                                                                                                                               )
                                                                                                                                          }
                                                                                                                                      }
                                                                                                                                   )
                                                                                                                              }
                                                                                                                          }
                                                                                                                       )
                                                                                                                  }
                                                                                                              }
                                                                                                           )
                                                                                                      }
                                                                                                  , impliesSecond =
                                                                                                     TermLike
                                                                                                      { getTermLike =
                                                                                                         TermAttributes
                                                                                                          { termSort =
                                                                                                             SortActualSort
                                                                                                              ( SortActual
                                                                                                                 { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                 , sortActualSorts = []
                                                                                                                 }
                                                                                                              )
                                                                                                          , termFreeVariables = FreeVars.unsafe []
                                                                                                          , termFunctional = Functional{isFunctional = False}
                                                                                                          , termFunction = Function{isFunction = False}
                                                                                                          , termDefined = Defined{isDefined = True}
                                                                                                          , termCreated = Created{getCreated = Nothing}
                                                                                                          , termSimplified = Simplified (SimplifiedData {sType = Fully, condition = Any})
                                                                                                          , termConstructorLike = ConstructorLike{getConstructorLike = Nothing}
                                                                                                          }
                                                                                                          :< T.TopF
                                                                                                           ( Top
                                                                                                              { topSort =
                                                                                                                 SortActualSort
                                                                                                                  ( SortActual
                                                                                                                     { sortActualName = InternedId{getInternedId = internText "intSort", internedIdLocation = AstLocationTest}
                                                                                                                     , sortActualSorts = []
                                                                                                                     }
                                                                                                                  )
                                                                                                              }
                                                                                                           )
                                                                                                      }
                                                                                                  }
                                                                                               )
                                                                                          }
                                                                                      }
                                                                                   )
                                                                              }
                                                                          }
                                                                       )
                                                                  }
                                                              }
                                                           )
                                                       )
                                                    )
                                                }
                                             )
                                         )
                                      )
                                  }
                               )
                           )
                        )
                    }
                 )
             )
          )
      }
  , substitution = NormalizedSubstitution (fromList [])
  }
{- ORMOLU_ENABLE -}
