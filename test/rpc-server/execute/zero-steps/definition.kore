[topCellInitializer{}(LblinitGeneratedTopCell{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)")]

module BASIC-K
    sort SortK{} []
    sort SortKItem{} []
endmodule
[]
module KSEQ
    import BASIC-K []
    symbol kseq{}(SortKItem{}, SortK{}) : SortK{} [constructor{}(), functional{}()]
    symbol dotk{}() : SortK{} [constructor{}(), functional{}()]
    symbol append{}(SortK{}, SortK{}) : SortK{} [function{}()]
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, dotk{}()),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                TAIL:SortK{},
                \top{SortK{}}()
            )
        )
    ) []
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, kseq{}(K:SortKItem{}, KS:SortK{})),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                kseq{}(K:SortKItem{}, append{}(KS:SortK{}, TAIL:SortK{})),
                \top{SortK{}}()
            )
        )
    ) []
endmodule
[]
module INJ
    symbol inj{From, To}(From) : To [sortInjection{}()]
    axiom {S1, S2, S3, R} \equals{S3, R}(inj{S2, S3}(inj{S1, S2}(T:S1)), inj{S1, S3}(T:S1)) [simplification{}()]
endmodule
[]
module K
    import KSEQ []
    import INJ []
    alias weakExistsFinally{A}(A) : A where weakExistsFinally{A}(@X:A) := @X:A []
    alias weakAlwaysFinally{A}(A) : A where weakAlwaysFinally{A}(@X:A) := @X:A []
    alias allPathGlobally{A}(A) : A where allPathGlobally{A}(@X:A) := @X:A []
endmodule
[]

module TEST

// imports
  import K []

// sorts
  sort SortStoreCellOpt{} []
  sort SortIExp{} []
  sort SortStoreCell{} []
  sort SortKCellOpt{} []
  sort SortGeneratedTopCellFragment{} []
  hooked-sort SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), element{}(LblListItem{}()), concat{}(Lbl'Unds'List'Unds'{}()), unit{}(Lbl'Stop'List{}()), hook{}("LIST.List"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(629,3,629,32)")]
  sort SortKCell{} []
  sort SortGeneratedTopCell{} []
  sort SortGeneratedCounterCell{} []
  hooked-sort SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1197,3,1197,35)"), hook{}("FLOAT.Float"), hasDomainValues{}()]
  hooked-sort SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), concat{}(Lbl'Unds'Map'Unds'{}()), unit{}(Lbl'Stop'Map{}()), hook{}("MAP.Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(218,3,218,29)")]
  hooked-sort SortString{} [hook{}("STRING.String"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1410,3,1410,38)"), hasDomainValues{}()]
  sort SortId{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2041,3,2041,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), token{}(), hasDomainValues{}()]
  sort SortKConfigVar{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/kast.md)"), token{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,3,40,28)"), hasDomainValues{}()]
  sort SortExp{} []
  sort SortBExp{} []
  hooked-sort SortInt{} [hook{}("INT.Int"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(905,3,905,29)"), hasDomainValues{}()]
  hooked-sort SortSet{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), element{}(LblSetItem{}()), concat{}(Lbl'Unds'Set'Unds'{}()), unit{}(Lbl'Stop'Set{}()), hook{}("SET.Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(504,3,504,29)")]
  sort SortKResult{} []
  sort SortStmt{} []
  hooked-sort SortBool{} [hook{}("BOOL.Bool"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(784,3,784,32)"), hasDomainValues{}()]

// symbols
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_!=__TEST-SYNTAX_BExp_IExp_IExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_!=__TEST-SYNTAX_BExp_IExp_IExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_&&__TEST-SYNTAX_BExp_BExp_BExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_&&__TEST-SYNTAX_BExp_BExp_BExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_*__TEST-SYNTAX_IExp_IExp_IExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_*__TEST-SYNTAX_IExp_IExp_IExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_+__TEST-SYNTAX_IExp_IExp_IExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_+__TEST-SYNTAX_IExp_IExp_IExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_-__TEST-SYNTAX_IExp_IExp_IExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_-__TEST-SYNTAX_IExp_IExp_IExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_/__TEST-SYNTAX_IExp_IExp_IExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_/__TEST-SYNTAX_IExp_IExp_IExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<=__TEST-SYNTAX_BExp_IExp_IExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<=__TEST-SYNTAX_BExp_IExp_IExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<__TEST-SYNTAX_BExp_IExp_IExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<__TEST-SYNTAX_BExp_IExp_IExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_==__TEST-SYNTAX_BExp_IExp_IExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_==__TEST-SYNTAX_BExp_IExp_IExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_=_;_TEST-SYNTAX_Stmt_Id_IExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>=__TEST-SYNTAX_BExp_IExp_IExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>=__TEST-SYNTAX_BExp_IExp_IExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>__TEST-SYNTAX_BExp_IExp_IExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>__TEST-SYNTAX_BExp_IExp_IExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_^__TEST-SYNTAX_IExp_IExp_IExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_^__TEST-SYNTAX_IExp_IExp_IExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_||__TEST-SYNTAX_BExp_BExp_BExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_||__TEST-SYNTAX_BExp_BExp_BExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(SortK{}, SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("110101"), left{}(), format{}("%c#freezerif(_)_else__TEST-SYNTAX_Stmt_BExp_Stmt_Stmt0_%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  hooked-symbol Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(SortBool{}, SortSort, SortSort) : SortSort [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("ite"), right{}(), terminals{}("1010101"), hook{}("KEQUAL.ite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2092,26,2092,126)"), left{}(), format{}("%c#if%r %1 %c#then%r %2 %c#else%r %3 %c#fi%r"), function{}()]
  hooked-symbol Lbl'Stop'List{}() : SortList{} [latex{}("\\dotCt{List}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), smtlib{}("smt_seq_nil"), terminals{}("1"), klabel{}(".List"), hook{}("LIST.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(653,19,653,147)"), left{}(), format{}("%c.List%r"), function{}()]
  hooked-symbol Lbl'Stop'Map{}() : SortMap{} [latex{}("\\dotCt{Map}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".Map"), hook{}("MAP.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(248,18,248,129)"), left{}(), format{}("%c.Map%r"), function{}()]
  hooked-symbol Lbl'Stop'Set{}() : SortSet{} [latex{}("\\dotCt{Set}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".Set"), hook{}("SET.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(533,18,533,123)"), left{}(), format{}("%c.Set%r"), function{}()]
  symbol Lbl'-LT-'generatedCounter'-GT-'{}(SortInt{}) : SortGeneratedCounterCell{} [functional{}(), constructor{}(), cellName{}("generatedCounter"), priorities{}(), right{}(), terminals{}("101"), left{}(), format{}("%c<generatedCounter>%r%i%n%1%d%n%c</generatedCounter>%r"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'{}(SortKCell{}, SortGeneratedCounterCell{}, SortStoreCell{}) : SortGeneratedTopCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cellName{}("generatedTop"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("10001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(56,7,58,28)"), left{}(), format{}("%c<generatedTop>%r%i%n%1%n%3%d%n%c</generatedTop>%r"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'-fragment{}(SortKCellOpt{}, SortStoreCellOpt{}) : SortGeneratedTopCellFragment{} [functional{}(), constructor{}(), cellFragment{}("GeneratedTopCell"), priorities{}(), right{}(), terminals{}("1001"), left{}(), format{}("%c<generatedTop>-fragment%r %1 %2 %c</generatedTop>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'k'-GT-'{}(SortK{}) : SortKCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cellName{}("k"), maincell{}(), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(56,7,58,28)"), left{}(), format{}("%c<k>%r%i%n%1%d%n%c</k>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'store'-GT-'{}(SortMap{}) : SortStoreCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cellName{}("store"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(56,7,58,28)"), left{}(), format{}("%c<store>%r%i%n%1%d%n%c</store>%r"), injective{}(), cell{}()]
  hooked-symbol LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("Base2String"), hook{}("STRING.base2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1539,21,1539,99)"), left{}(), format{}("%cBase2String%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(SortBool{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Bool2String"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1489,21,1489,61)"), left{}(), format{}("%cBool2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(SortFloat{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Float2String"), hook{}("STRING.float2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1516,21,1516,106)"), left{}(), format{}("%cFloat2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String{}(SortFloat{}, SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("FloatFormat"), hook{}("STRING.floatFormat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1517,21,1517,122)"), left{}(), format{}("%cFloat2String%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(SortId{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Id2String"), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2048,21,2048,90)"), left{}(), format{}("%cId2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Int2String"), hook{}("STRING.int2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1538,21,1538,104)"), left{}(), format{}("%cInt2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblList'Coln'get{}(SortList{}, SortInt{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("0101"), klabel{}("List:get"), hook{}("LIST.get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(672,20,672,99)"), left{}(), format{}("%1 %c[%r %2 %c]%r"), function{}()]
  hooked-symbol LblList'Coln'range{}(SortList{}, SortInt{}, SortInt{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("List:range"), hook{}("LIST.range"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(719,19,719,120)"), left{}(), format{}("%crange%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblListItem{}(SortKItem{}) : SortList{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), smtlib{}("smt_seq_elem"), terminals{}("1101"), klabel{}("ListItem"), hook{}("LIST.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(661,19,661,137)"), left{}(), format{}("%cListItem%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblMap'Coln'lookup{}(SortMap{}, SortKItem{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("0101"), klabel{}("Map:lookup"), hook{}("MAP.lookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(271,20,271,113)"), left{}(), format{}("%1 %c[%r %2 %c]%r"), function{}()]
  hooked-symbol LblMap'Coln'update{}(SortMap{}, SortKItem{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), prefer{}(), right{}(), terminals{}("010101"), klabel{}("Map:update"), hook{}("MAP.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(290,18,290,145)"), left{}(), format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}()]
  hooked-symbol LblSet'Coln'difference{}(SortSet{}, SortSet{}) : SortSet{} [latex{}("{#1}-_{\\it Set}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("Set:difference"), hook{}("SET.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(573,18,573,147)"), left{}(), format{}("%1 %c-Set%r %2"), function{}()]
  hooked-symbol LblSet'Coln'in{}(SortKItem{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("Set:in"), hook{}("SET.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(581,19,581,107)"), left{}(), format{}("%1 %cin%r %2"), function{}()]
  hooked-symbol LblSetItem{}(SortKItem{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("SetItem"), hook{}("SET.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(541,18,541,124)"), left{}(), format{}("%cSetItem%r %c(%r %1 %c)%r"), injective{}(), function{}()]
  hooked-symbol LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("String2Base"), hook{}("STRING.string2base"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1540,21,1540,99)"), left{}(), format{}("%cString2Base%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(SortString{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1495,19,1495,49)"), left{}(), format{}("%cString2Bool%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String{}(SortString{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Float"), hook{}("STRING.string2float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1518,21,1518,94)"), left{}(), format{}("%cString2Float%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(SortString{}) : SortId{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Id"), hook{}("STRING.string2token"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2049,17,2049,85)"), left{}(), format{}("%cString2Id%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Int"), hook{}("STRING.string2int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1537,21,1537,92)"), left{}(), format{}("%cString2Int%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(SortIExp{}, SortIExp{}) : SortBExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,21,28,47)"), left{}(), format{}("%1 %c!=%r %2"), injective{}(), seqstrict{}()]
  hooked-symbol Lbl'UndsPerc'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\%_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("mod"), right{}(), terminals{}("010"), klabel{}("_%Int_"), hook{}("INT.tmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(953,18,953,171)"), left{}(Lbl'UndsStar'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}()), format{}("%1 %c%%Int%r %2"), function{}()]
  symbol Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(SortBExp{}, SortBExp{}) : SortBExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,21,30,47)"), left{}(), format{}("%1 %c&&%r %2"), injective{}(), seqstrict{}()]
  hooked-symbol Lbl'UndsAnd-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\&_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("andInt"), terminals{}("010"), klabel{}("_&Int_"), hook{}("INT.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(964,18,964,183)"), left{}(Lbl'UndsAnd-'Int'Unds'{}()), format{}("%1 %c&Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsStar'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ast_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("*"), right{}(), terminals{}("010"), klabel{}("_*Int_"), hook{}("INT.mul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(949,18,949,182)"), left{}(Lbl'Unds'modInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsStar'Int'Unds'{}()), format{}("%1 %c*Int%r %2"), function{}()]
  symbol Lbl'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(SortIExp{}, SortIExp{}) : SortIExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(),Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,21,13,46)"), left{}(), format{}("%1 %c*%r %2"), injective{}(), seqstrict{}()]
  hooked-symbol Lbl'UndsPlus'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{+_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), smt-hook{}("+"), right{}(), terminals{}("010"), klabel{}("_+Int_"), hook{}("INT.add"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(958,18,958,179)"), left{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), format{}("%1 %c+Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortString{} [latex{}("{#1}+_{\\scriptstyle\\it String}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1428,21,1428,140)"), left{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}()), format{}("%1 %c+String%r %2"), function{}()]
  symbol Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(SortIExp{}, SortIExp{}) : SortIExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(15,21,15,46)"), left{}(), format{}("%1 %c+%r %2"), injective{}(), seqstrict{}()]
  hooked-symbol Lbl'Unds'-Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{-_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), smt-hook{}("-"), right{}(), terminals{}("010"), klabel{}("_-Int_"), hook{}("INT.sub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(959,18,959,179)"), left{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), format{}("%1 %c-Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [latex{}("{#1}-_{\\it Map}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("MAP.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(311,18,311,121)"), left{}(), format{}("%1 %c-Map%r %2"), function{}()]
  symbol Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(SortIExp{}, SortIExp{}) : SortIExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(16,21,16,46)"), left{}(), format{}("%1 %c-%r %2"), injective{}(), seqstrict{}()]
  hooked-symbol Lbl'UndsSlsh'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\div_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("div"), right{}(), terminals{}("010"), klabel{}("_/Int_"), hook{}("INT.tdiv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(952,18,952,173)"), left{}(Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}()), format{}("%1 %c/Int%r %2"), function{}()]
  symbol Lbl'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(SortIExp{}, SortIExp{}) : SortIExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(),Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,21,14,46)"), left{}(), format{}("%1 %c/%r %2"), injective{}(), seqstrict{}()]
  hooked-symbol Lbl'Unds-LT--LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ll_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("shlInt"), terminals{}("010"), klabel{}("_<<Int_"), hook{}("INT.shl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(962,18,962,173)"), left{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}()), format{}("%1 %c<<Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\leq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), smt-hook{}("<="), right{}(), terminals{}("010"), klabel{}("_<=Int_"), hook{}("INT.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1020,19,1020,177)"), left{}(Lbl'Unds-LT-Eqls'Int'Unds'{}()), format{}("%1 %c<=Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("MAP.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,19,383,92)"), left{}(), format{}("%1 %c<=Map%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("SET.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(590,19,590,86)"), left{}(), format{}("%1 %c<=Set%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1573,19,1573,83)"), left{}(), format{}("%1 %c<=String%r %2"), function{}()]
  symbol Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(SortIExp{}, SortIExp{}) : SortBExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,21,23,47)"), left{}(), format{}("%1 %c<=%r %2"), injective{}(), seqstrict{}()]
  hooked-symbol Lbl'Unds-LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{<_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), smt-hook{}("<"), right{}(), terminals{}("010"), klabel{}("_<Int_"), hook{}("INT.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1021,19,1021,172)"), left{}(Lbl'Unds-LT-'Int'Unds'{}()), format{}("%1 %c<Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1572,19,1572,83)"), left{}(), format{}("%1 %c<String%r %2"), function{}()]
  symbol Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(SortIExp{}, SortIExp{}) : SortBExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,21,24,47)"), left{}(), format{}("%1 %c<%r %2"), injective{}(), seqstrict{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), smt-hook{}("distinct"), right{}(), terminals{}("010"), klabel{}("_=/=Bool_"), hook{}("BOOL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(825,19,825,133)"), left{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}()), format{}("%1 %c=/=Bool%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{/}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), smt-hook{}("distinct"), right{}(), terminals{}("010"), klabel{}("_=/=Int_"), hook{}("INT.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1025,19,1025,189)"), left{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}()), format{}("%1 %c=/=Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{\\neq_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), notEqualEqualK{}(), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),LblnotBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), smt-hook{}("distinct"), right{}(), terminals{}("010"), klabel{}("_=/=K_"), hook{}("KEQUAL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2088,19,2088,171)"), left{}(Lbl'UndsEqlsEqls'K'Unds'{}(),Lbl'UndsEqlsSlshEqls'K'Unds'{}()), format{}("%1 %c=/=K%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1569,19,1569,95)"), left{}(Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}()), format{}("%1 %c=/=String%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), smt-hook{}("="), right{}(), terminals{}("010"), klabel{}("_==Bool_"), hook{}("BOOL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(824,19,824,125)"), left{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), format{}("%1 %c==Bool%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), smt-hook{}("="), right{}(), terminals{}("010"), klabel{}("_==Int_"), hook{}("INT.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1024,19,1024,178)"), left{}(Lbl'UndsEqlsEqls'Int'Unds'{}()), format{}("%1 %c==Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{=_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),LblnotBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), smt-hook{}("="), right{}(), terminals{}("010"), equalEqualK{}(), klabel{}("_==K_"), hook{}("KEQUAL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2087,19,2087,157)"), left{}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(),Lbl'UndsEqlsEqls'K'Unds'{}()), format{}("%1 %c==K%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1568,19,1568,89)"), left{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}()), format{}("%1 %c==String%r %2"), function{}()]
  symbol Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(SortIExp{}, SortIExp{}) : SortBExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,21,27,47)"), left{}(), format{}("%1 %c==%r %2"), injective{}(), seqstrict{}()]
  symbol Lbl'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp{}(SortId{}, SortIExp{}) : SortStmt{} [functional{}(), constructor{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(), right{}(), terminals{}("0101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,9,40,55)"), left{}(), format{}("%1 %c=%r %2 %c;%r"), injective{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\geq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), smt-hook{}(">="), right{}(), terminals{}("010"), klabel{}("_>=Int_"), hook{}("INT.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1022,19,1022,177)"), left{}(Lbl'Unds-GT-Eqls'Int'Unds'{}()), format{}("%1 %c>=Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1575,19,1575,83)"), left{}(), format{}("%1 %c>=String%r %2"), function{}()]
  symbol Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(SortIExp{}, SortIExp{}) : SortBExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,21,25,47)"), left{}(), format{}("%1 %c>=%r %2"), injective{}(), seqstrict{}()]
  hooked-symbol Lbl'Unds-GT--GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\gg_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("shrInt"), terminals{}("010"), klabel{}("_>>Int_"), hook{}("INT.shr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(961,18,961,173)"), left{}(Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}()), format{}("%1 %c>>Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{>_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), smt-hook{}(">"), right{}(), terminals{}("010"), klabel{}("_>Int_"), hook{}("INT.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1023,19,1023,172)"), left{}(Lbl'Unds-GT-'Int'Unds'{}()), format{}("%1 %c>Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1574,19,1574,83)"), left{}(), format{}("%1 %c>String%r %2"), function{}()]
  symbol Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(SortIExp{}, SortIExp{}) : SortBExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,21,26,47)"), left{}(), format{}("%1 %c>%r %2"), injective{}(), seqstrict{}()]
  hooked-symbol Lbl'Unds'List'Unds'{}(SortList{}, SortList{}) : SortList{} [unit{}(Lbl'Stop'List{}()), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), element{}(LblListItem{}()), symbol'Kywd'{}(), priorities{}(), right{}(), assoc{}(), smtlib{}("smt_seq_concat"), terminals{}("00"), klabel{}("_List_"), hook{}("LIST.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(645,19,645,193)"), left{}(Lbl'Unds'List'Unds'{}()), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'Map'Unds'{}(SortMap{}, SortMap{}) : SortMap{} [unit{}(Lbl'Stop'Map{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), symbol'Kywd'{}(), comm{}(), priorities{}(), right{}(), assoc{}(), terminals{}("00"), index{}("0"), klabel{}("_Map_"), hook{}("MAP.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(240,18,240,173)"), left{}(Lbl'Unds'Map'Unds'{}()), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'Set'Unds'{}(SortSet{}, SortSet{}) : SortSet{} [unit{}(Lbl'Stop'Set{}()), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), element{}(LblSetItem{}()), symbol'Kywd'{}(), idem{}(), comm{}(), priorities{}(), right{}(), assoc{}(), terminals{}("00"), klabel{}("_Set_"), hook{}("SET.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(525,18,525,177)"), left{}(Lbl'Unds'Set'Unds'{}()), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010101"), klabel{}("List:set"), hook{}("LIST.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(681,19,681,108)"), left{}(), format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(SortMap{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010111"), klabel{}("_[_<-undef]"), hook{}("MAP.remove"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,18,299,122)"), left{}(), format{}("%1 %c[%r %2 %c<-%r %cundef%r %c]%r"), function{}()]
  hooked-symbol Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(SortMap{}, SortKItem{}, SortKItem{}) : SortKItem{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010110"), klabel{}("Map:lookupOrDefault"), hook{}("MAP.lookupOrDefault"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,20,281,139)"), left{}(), format{}("%1 %c[%r %2 %c]%r %corDefault%r %3"), function{}()]
  hooked-symbol Lbl'UndsXor-Perc'Int'UndsUnds'{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("(mod (^ #1 #2) #3)"), right{}(), terminals{}("0100"), klabel{}("_^%Int__"), hook{}("INT.powmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(947,18,947,139)"), left{}(Lbl'UndsXor-Perc'Int'UndsUnds'{}(),Lbl'UndsXor-'Int'Unds'{}()), format{}("%1 %c^%%Int%r %2 %3"), function{}()]
  hooked-symbol Lbl'UndsXor-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{{\\char`\\^}_{\\!\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("^"), right{}(), terminals{}("010"), klabel{}("_^Int_"), hook{}("INT.pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(946,18,946,178)"), left{}(Lbl'UndsXor-'Int'Unds'{}(),Lbl'UndsXor-Perc'Int'UndsUnds'{}()), format{}("%1 %c^Int%r %2"), function{}()]
  symbol Lbl'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(SortIExp{}, SortIExp{}) : SortIExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(),Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,21,12,46)"), left{}(), format{}("%1 %c^%r %2"), injective{}(), seqstrict{}()]
  symbol Lbl'UndsUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(SortStmt{}, SortStmt{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(41,9,41,50)"), left{}(Lbl'UndsUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}()), format{}("%1 %2"), injective{}()]
  hooked-symbol Lbl'Unds'andBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\wedge_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("and"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_andBool_"), hook{}("BOOL.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(817,19,817,190)"), left{}(Lbl'Unds'andBool'Unds'{}()), format{}("%1 %candBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'andThenBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("and"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_andThenBool_"), hook{}("BOOL.andThen"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(818,19,818,152)"), left{}(Lbl'Unds'andThenBool'Unds'{}()), format{}("%1 %candThenBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'divInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("div"), right{}(), terminals{}("010"), klabel{}("_divInt_"), hook{}("INT.ediv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(955,18,955,122)"), left{}(Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}()), format{}("%1 %cdivInt%r %2"), function{}()]
  symbol Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1034,19,1034,53)"), left{}(), format{}("%1 %cdividesInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds'impliesBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("=>"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_impliesBool_"), hook{}("BOOL.implies"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(822,19,822,151)"), left{}(Lbl'Unds'impliesBool'Unds'{}()), format{}("%1 %cimpliesBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(SortKItem{}, SortList{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), klabel{}("_inList_"), hook{}("LIST.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(728,19,728,102)"), left{}(), format{}("%1 %cin%r %2"), function{}()]
  hooked-symbol Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(SortKItem{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("01101"), hook{}("MAP.in_keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,19,357,94)"), left{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Unds'modInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("mod"), right{}(), terminals{}("010"), klabel{}("_modInt_"), hook{}("INT.emod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(956,18,956,122)"), left{}(Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}()), format{}("%1 %cmodInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds'orBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\vee_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("or"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_orBool_"), hook{}("BOOL.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(820,19,820,185)"), left{}(Lbl'Unds'orBool'Unds'{}()), format{}("%1 %corBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'orElseBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("or"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_orElseBool_"), hook{}("BOOL.orElse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(821,19,821,149)"), left{}(Lbl'Unds'orElseBool'Unds'{}()), format{}("%1 %corElseBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'xorBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("xor"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_xorBool_"), hook{}("BOOL.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(819,19,819,144)"), left{}(Lbl'Unds'xorBool'Unds'{}()), format{}("%1 %cxorBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'xorInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\oplus_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("xorInt"), terminals{}("010"), klabel{}("_xorInt_"), hook{}("INT.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(966,18,966,189)"), left{}(Lbl'Unds'xorInt'Unds'{}()), format{}("%1 %cxorInt%r %2"), function{}()]
  hooked-symbol Lbl'UndsPipe'-'-GT-Unds'{}(SortKItem{}, SortKItem{}) : SortMap{} [latex{}("{#1}\\mapsto{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Stop'Map{}(),Lbl'Unds'Map'Unds'{}()), right{}(Lbl'UndsPipe'-'-GT-Unds'{}()), terminals{}("010"), klabel{}("_|->_"), hook{}("MAP.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,18,257,156)"), left{}(Lbl'UndsPipe'-'-GT-Unds'{}()), format{}("%1 %c|->%r %2"), injective{}(), function{}()]
  hooked-symbol Lbl'UndsPipe'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{|_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), smtlib{}("orInt"), terminals{}("010"), klabel{}("_|Int_"), hook{}("INT.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(968,18,968,180)"), left{}(Lbl'UndsPipe'Int'Unds'{}()), format{}("%1 %c|Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("SET.union"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,18,552,89)"), left{}(Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}()), format{}("%1 %c|Set%r %2"), function{}()]
  symbol Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(SortBExp{}, SortBExp{}) : SortBExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,21,31,47)"), left{}(), format{}("%1 %c||%r %2"), injective{}(), seqstrict{}()]
  hooked-symbol LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("(ite (< #1 0) (- 0 #1) #1)"), right{}(), terminals{}("1101"), klabel{}("absInt"), hook{}("INT.abs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(985,18,985,124)"), left{}(), format{}("%cabsInt%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("bitRangeInt"), hook{}("INT.bitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1010,18,1010,103)"), left{}(), format{}("%cbitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("categoryChar"), hook{}("STRING.category"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1585,21,1585,81)"), left{}(), format{}("%ccategoryChar%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Map:choice"), hook{}("MAP.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(393,20,393,101)"), left{}(), format{}("%cchoice%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set{}(SortSet{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Set:choice"), hook{}("SET.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(608,20,608,95)"), left{}(), format{}("%cchoice%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("chrChar"), hook{}("STRING.chr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1445,21,1445,70)"), left{}(), format{}("%cchrChar%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), hook{}("STRING.countAllOccurrences"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1558,18,1558,151)"), left{}(), format{}("%ccountAllOccurrences%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("directionalityChar"), hook{}("STRING.directionality"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1586,21,1586,87)"), left{}(), format{}("%cdirectionalityChar%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101010101"), klabel{}("fillList"), hook{}("LIST.fill"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(709,19,709,100)"), left{}(), format{}("%cfillList%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}()]
  hooked-symbol LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("findChar"), hook{}("STRING.findChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1482,18,1482,116)"), left{}(), format{}("%cfindChar%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("findString"), hook{}("STRING.find"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1471,18,1471,111)"), left{}(), format{}("%cfindString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(SortInt{}) : SortId{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), freshGenerator{}(), klabel{}("freshId"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2050,17,2050,80)"), left{}(), format{}("%cfreshId%r %c(%r %1 %c)%r"), private{}(), function{}()]
  symbol LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), freshGenerator{}(), klabel{}("freshInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1159,18,1159,82)"), left{}(), format{}("%cfreshInt%r %c(%r %1 %c)%r"), private{}(), function{}()]
  symbol LblgetGeneratedCounterCell{}(SortGeneratedTopCell{}) : SortGeneratedCounterCell{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cgetGeneratedCounterCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt{}(SortBExp{}, SortStmt{}, SortStmt{}) : SortStmt{} [functional{}(), constructor{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(), right{}(), terminals{}("1101010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,9,44,55)"), left{}(), format{}("%cif%r %c(%r %1 %c)%r %2 %celse%r %3"), injective{}()]
  symbol LblinitGeneratedCounterCell{}() : SortGeneratedCounterCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitGeneratedCounterCell%r"), function{}()]
  symbol LblinitGeneratedTopCell{}(SortMap{}) : SortGeneratedTopCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), initializer{}(), format{}("%cinitGeneratedTopCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblinitKCell{}(SortMap{}) : SortKCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), initializer{}(), format{}("%cinitKCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblinitStoreCell{}() : SortStoreCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitStoreCell%r"), function{}()]
  hooked-symbol LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("intersectSet"), hook{}("SET.intersection"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(563,18,563,89)"), left{}(), format{}("%cintersectSet%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblisBExp{}(SortK{}) : SortBool{} [functional{}(), predicate{}("BExp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBExp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBool{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Bool"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBool%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisExp{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Exp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisExp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFloat{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Float"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedCounterCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GeneratedCounterCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedCounterCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedTopCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GeneratedTopCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedTopCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedTopCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GeneratedTopCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedTopCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIExp{}(SortK{}) : SortBool{} [functional{}(), predicate{}("IExp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIExp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisId{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Id"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisId%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Int"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisInt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisK{}(SortK{}) : SortBool{} [functional{}(), predicate{}("K"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisK%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("KCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("KCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKConfigVar{}(SortK{}) : SortBool{} [functional{}(), predicate{}("KConfigVar"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKConfigVar%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKItem{}(SortK{}) : SortBool{} [functional{}(), predicate{}("KItem"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKItem%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKResult{}(SortK{}) : SortBool{} [functional{}(), predicate{}("KResult"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKResult%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisList{}(SortK{}) : SortBool{} [functional{}(), predicate{}("List"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisList%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMap{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Map"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMap%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisSet{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Set"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisSet%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisStmt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Stmt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisStmt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisStoreCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("StoreCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisStoreCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisStoreCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("StoreCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisStoreCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisString{}(SortK{}) : SortBool{} [functional{}(), predicate{}("String"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisString%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(SortMap{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("keys"), hook{}("MAP.keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,18,341,87)"), left{}(), format{}("%ckeys%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), hook{}("MAP.keys_list"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,19,349,80)"), left{}(), format{}("%ckeys_list%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("lengthString"), hook{}("STRING.length"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1436,18,1436,85)"), left{}(), format{}("%clengthString%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("log2Int"), hook{}("INT.log2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(996,18,996,75)"), left{}(), format{}("%clog2Int%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem{}(SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("makeList"), hook{}("LIST.make"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(690,19,690,82)"), left{}(), format{}("%cmakeList%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("(ite (< #1 #2) #2 #1)"), right{}(), terminals{}("110101"), hook{}("INT.max"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(977,18,977,119)"), left{}(), format{}("%cmaxInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("(ite (< #1 #2) #1 #2)"), right{}(), terminals{}("110101"), hook{}("INT.min"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(976,18,976,119)"), left{}(), format{}("%cminInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblnewUUID'Unds'STRING-COMMON'Unds'String{}() : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1"), impure{}(), hook{}("STRING.uuid"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1588,21,1588,68)"), left{}(), format{}("%cnewUUID%r"), function{}()]
  symbol LblnoKCell{}() : SortKCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("KCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoKCell%r"), injective{}()]
  symbol LblnoStoreCell{}() : SortStoreCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("StoreCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoStoreCell%r"), injective{}()]
  hooked-symbol LblnotBool'Unds'{}(SortBool{}) : SortBool{} [latex{}("\\neg_{\\scriptstyle\\it Bool}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), smt-hook{}("not"), boolOperation{}(), right{}(), terminals{}("10"), klabel{}("notBool_"), hook{}("BOOL.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(816,19,816,177)"), left{}(), format{}("%cnotBool%r %1"), function{}()]
  hooked-symbol LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("ordChar"), hook{}("STRING.ord"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1446,18,1446,70)"), left{}(), format{}("%cordChar%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'BExp{}(SortK{}) : SortBExp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:BExp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Bool{}(SortK{}) : SortBool{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Bool%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Exp{}(SortK{}) : SortExp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Exp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Float{}(SortK{}) : SortFloat{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Float%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedCounterCell{}(SortK{}) : SortGeneratedCounterCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedCounterCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedTopCell{}(SortK{}) : SortGeneratedTopCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedTopCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedTopCellFragment{}(SortK{}) : SortGeneratedTopCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedTopCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IExp{}(SortK{}) : SortIExp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IExp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Id{}(SortK{}) : SortId{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Id%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Int{}(SortK{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Int%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'K{}(SortK{}) : SortK{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:K%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KCell{}(SortK{}) : SortKCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KCellOpt{}(SortK{}) : SortKCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KItem{}(SortK{}) : SortKItem{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KItem%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KResult{}(SortK{}) : SortKResult{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KResult%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'List{}(SortK{}) : SortList{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:List%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Map{}(SortK{}) : SortMap{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Map%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Set{}(SortK{}) : SortSet{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Set%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Stmt{}(SortK{}) : SortStmt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Stmt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'StoreCell{}(SortK{}) : SortStoreCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:StoreCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'StoreCellOpt{}(SortK{}) : SortStoreCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:StoreCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'String{}(SortK{}) : SortString{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblrandInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("randInt"), hook{}("INT.rand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1044,18,1044,65)"), left{}(), format{}("%crandInt%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(SortMap{}, SortSet{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("removeAll"), hook{}("MAP.removeAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,18,333,92)"), left{}(), format{}("%cremoveAll%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortString{}, SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101010101"), hook{}("STRING.replace"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1556,21,1556,146)"), left{}(), format{}("%creplace%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}()]
  hooked-symbol LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), hook{}("STRING.replaceAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1555,21,1555,154)"), left{}(), format{}("%creplaceAll%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), hook{}("STRING.replaceFirst"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1557,21,1557,156)"), left{}(), format{}("%creplaceFirst%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("rfindChar"), hook{}("STRING.rfindChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1483,18,1483,117)"), left{}(), format{}("%crfindChar%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("rfindString"), hook{}("STRING.rfind"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1472,18,1472,112)"), left{}(), format{}("%crfindString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("signExtendBitRangeInt"), hook{}("INT.signExtendBitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1011,18,1011,113)"), left{}(), format{}("%csignExtendBitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(SortList{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("smt_seq_len"), terminals{}("1101"), klabel{}("sizeList"), hook{}("LIST.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(736,18,736,122)"), left{}(), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(SortMap{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("sizeMap"), hook{}("MAP.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,18,373,104)"), left{}(), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(SortSet{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("size"), hook{}("SET.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(598,18,598,81)"), left{}(), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblsrandInt'LParUndsRParUnds'INT-COMMON'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("srandInt"), hook{}("INT.srand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1045,16,1045,65)"), left{}(), format{}("%csrandInt%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(SortString{}, SortInt{}, SortInt{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("substrString"), hook{}("STRING.substr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1461,21,1461,122)"), left{}(), format{}("%csubstrString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List{}(SortList{}, SortInt{}, SortList{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("updateList"), hook{}("LIST.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(700,19,700,97)"), left{}(), format{}("%cupdateList%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("updateMap"), hook{}("MAP.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,18,324,92)"), left{}(), format{}("%cupdateMap%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("values"), hook{}("MAP.values"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(365,19,365,77)"), left{}(), format{}("%cvalues%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblwhile'LParUndsRParUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt{}(SortBExp{}, SortStmt{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(), right{}(), terminals{}("11010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,9,45,34)"), left{}(), format{}("%cwhile%r %c(%r %1 %c)%r %2"), injective{}()]
  symbol Lbl'LBraUndsRBraUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt{}(SortStmt{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(42,9,42,21)"), left{}(), format{}("%c{%r %1 %c}%r"), injective{}()]
  symbol Lbl'LBraRBraUnds'TEST-SYNTAX'Unds'Stmt{}() : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), priorities{}(), right{}(), terminals{}("11"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,9,43,21)"), left{}(), format{}("%c{%r %c}%r"), injective{}()]
  hooked-symbol Lbl'Tild'Int'Unds'{}(SortInt{}) : SortInt{} [latex{}("\\mathop{\\sim_{\\scriptstyle\\it Int}}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsXor-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'UndsXor-Perc'Int'UndsUnds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smtlib{}("notInt"), terminals{}("10"), klabel{}("~Int_"), hook{}("INT.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(944,18,944,173)"), left{}(), format{}("%c~Int%r %1"), function{}()]

// generated axioms
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreCellOpt{}, SortKItem{}} (From:SortStoreCellOpt{}))) [subsort{SortStoreCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortString{}, SortKItem{}} (From:SortString{}))) [subsort{SortString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortInt{}, SortKResult{}} (From:SortInt{}))) [subsort{SortInt{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCellOpt{}, SortKItem{}} (From:SortKCellOpt{}))) [subsort{SortKCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKResult{}, SortKItem{}} (From:SortKResult{}))) [subsort{SortKResult{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, inj{SortBool{}, SortBExp{}} (From:SortBool{}))) [subsort{SortBool{}, SortBExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCell{}, SortKItem{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIExp{}, \equals{SortIExp{}, R} (Val:SortIExp{}, inj{SortId{}, SortIExp{}} (From:SortId{}))) [subsort{SortId{}, SortIExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, inj{SortKCell{}, SortKCellOpt{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSet{}, SortKItem{}} (From:SortSet{}))) [subsort{SortSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreCell{}, SortKItem{}} (From:SortStoreCell{}))) [subsort{SortStoreCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortBExp{}, SortExp{}} (From:SortBExp{}))) [subsort{SortBExp{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCell{}, SortKItem{}} (From:SortGeneratedTopCell{}))) [subsort{SortGeneratedTopCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIExp{}, SortKItem{}} (From:SortIExp{}))) [subsort{SortIExp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStoreCellOpt{}, \equals{SortStoreCellOpt{}, R} (Val:SortStoreCellOpt{}, inj{SortStoreCell{}, SortStoreCellOpt{}} (From:SortStoreCell{}))) [subsort{SortStoreCell{}, SortStoreCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortIExp{}, SortExp{}} (From:SortIExp{}))) [subsort{SortIExp{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortList{}, SortKItem{}} (From:SortList{}))) [subsort{SortList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortId{}, SortKItem{}} (From:SortId{}))) [subsort{SortId{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFloat{}, SortKItem{}} (From:SortFloat{}))) [subsort{SortFloat{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBool{}, SortKItem{}} (From:SortBool{}))) [subsort{SortBool{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInt{}, SortKItem{}} (From:SortInt{}))) [subsort{SortInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIExp{}, \equals{SortIExp{}, R} (Val:SortIExp{}, inj{SortInt{}, SortIExp{}} (From:SortInt{}))) [subsort{SortInt{}, SortIExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (From:SortGeneratedTopCellFragment{}))) [subsort{SortGeneratedTopCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExp{}, SortKItem{}} (From:SortExp{}))) [subsort{SortExp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBExp{}, SortKItem{}} (From:SortBExp{}))) [subsort{SortBExp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStmt{}, SortKItem{}} (From:SortStmt{}))) [subsort{SortStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMap{}, SortKItem{}} (From:SortMap{}))) [subsort{SortMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortBool{}, SortKResult{}} (From:SortBool{}))) [subsort{SortBool{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R, SortSort} \exists{R} (Val:SortSort, \equals{SortSort, R} (Val:SortSort, Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(K0:SortBool{}, K1:SortSort, K2:SortSort))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Stop'List{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Stop'Map{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Stop'Set{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedCounterCell{}} (\and{SortGeneratedCounterCell{}} (Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{}), Lbl'-LT-'generatedCounter'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'generatedCounter'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R} (Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortKCell{}, K1:SortGeneratedCounterCell{}, K2:SortStoreCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCell{}} (\and{SortGeneratedTopCell{}} (Lbl'-LT-'generatedTop'-GT-'{}(X0:SortKCell{}, X1:SortGeneratedCounterCell{}, X2:SortStoreCell{}), Lbl'-LT-'generatedTop'-GT-'{}(Y0:SortKCell{}, Y1:SortGeneratedCounterCell{}, Y2:SortStoreCell{})), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}} (X0:SortKCell{}, Y0:SortKCell{}), \and{SortGeneratedCounterCell{}} (X1:SortGeneratedCounterCell{}, Y1:SortGeneratedCounterCell{}), \and{SortStoreCell{}} (X2:SortStoreCell{}, Y2:SortStoreCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R} (Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortKCellOpt{}, K1:SortStoreCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCellFragment{}} (\and{SortGeneratedTopCellFragment{}} (Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortStoreCellOpt{}), Lbl'-LT-'generatedTop'-GT-'-fragment{}(Y0:SortKCellOpt{}, Y1:SortStoreCellOpt{})), Lbl'-LT-'generatedTop'-GT-'-fragment{}(\and{SortKCellOpt{}} (X0:SortKCellOpt{}, Y0:SortKCellOpt{}), \and{SortStoreCellOpt{}} (X1:SortStoreCellOpt{}, Y1:SortStoreCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKCell{}, \equals{SortKCell{}, R} (Val:SortKCell{}, Lbl'-LT-'k'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKCell{}} (\and{SortKCell{}} (Lbl'-LT-'k'-GT-'{}(X0:SortK{}), Lbl'-LT-'k'-GT-'{}(Y0:SortK{})), Lbl'-LT-'k'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStoreCell{}, \equals{SortStoreCell{}, R} (Val:SortStoreCell{}, Lbl'-LT-'store'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortStoreCell{}} (\and{SortStoreCell{}} (Lbl'-LT-'store'-GT-'{}(X0:SortMap{}), Lbl'-LT-'store'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'store'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(K0:SortId{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblListItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblMap'Coln'update{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSetItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(K0:SortIExp{}, K1:SortIExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{})), Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(\and{SortIExp{}} (X0:SortIExp{}, Y0:SortIExp{}), \and{SortIExp{}} (X1:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(K0:SortBExp{}, K1:SortBExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}), Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{})), Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(\and{SortBExp{}} (X0:SortBExp{}, Y0:SortBExp{}), \and{SortBExp{}} (X1:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}), Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}), Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}), Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}), Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}), Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}), Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsAnd-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsStar'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIExp{}, \equals{SortIExp{}, R} (Val:SortIExp{}, Lbl'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(K0:SortIExp{}, K1:SortIExp{}))) [functional{}()] // functional
  axiom{}\implies{SortIExp{}} (\and{SortIExp{}} (Lbl'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{})), Lbl'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(\and{SortIExp{}} (X0:SortIExp{}, Y0:SortIExp{}), \and{SortIExp{}} (X1:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIExp{}} (\and{SortIExp{}} (Lbl'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIExp{}} (\and{SortIExp{}} (Lbl'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIExp{}} (\and{SortIExp{}} (Lbl'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIExp{}} (\and{SortIExp{}} (Lbl'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIExp{}, \equals{SortIExp{}, R} (Val:SortIExp{}, Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(K0:SortIExp{}, K1:SortIExp{}))) [functional{}()] // functional
  axiom{}\implies{SortIExp{}} (\and{SortIExp{}} (Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{})), Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(\and{SortIExp{}} (X0:SortIExp{}, Y0:SortIExp{}), \and{SortIExp{}} (X1:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIExp{}} (\and{SortIExp{}} (Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIExp{}} (\and{SortIExp{}} (Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIExp{}} (\and{SortIExp{}} (Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'-Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIExp{}, \equals{SortIExp{}, R} (Val:SortIExp{}, Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(K0:SortIExp{}, K1:SortIExp{}))) [functional{}()] // functional
  axiom{}\implies{SortIExp{}} (\and{SortIExp{}} (Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{})), Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(\and{SortIExp{}} (X0:SortIExp{}, Y0:SortIExp{}), \and{SortIExp{}} (X1:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIExp{}} (\and{SortIExp{}} (Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIExp{}} (\and{SortIExp{}} (Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIExp{}, \equals{SortIExp{}, R} (Val:SortIExp{}, Lbl'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(K0:SortIExp{}, K1:SortIExp{}))) [functional{}()] // functional
  axiom{}\implies{SortIExp{}} (\and{SortIExp{}} (Lbl'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{})), Lbl'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(\and{SortIExp{}} (X0:SortIExp{}, Y0:SortIExp{}), \and{SortIExp{}} (X1:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIExp{}} (\and{SortIExp{}} (Lbl'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(K0:SortIExp{}, K1:SortIExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{})), Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(\and{SortIExp{}} (X0:SortIExp{}, Y0:SortIExp{}), \and{SortIExp{}} (X1:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(K0:SortIExp{}, K1:SortIExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{})), Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(\and{SortIExp{}} (X0:SortIExp{}, Y0:SortIExp{}), \and{SortIExp{}} (X1:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(K0:SortIExp{}, K1:SortIExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{})), Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(\and{SortIExp{}} (X0:SortIExp{}, Y0:SortIExp{}), \and{SortIExp{}} (X1:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp{}(K0:SortId{}, K1:SortIExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp{}(X0:SortId{}, X1:SortIExp{}), Lbl'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp{}(Y0:SortId{}, Y1:SortIExp{})), Lbl'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortIExp{}} (X1:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp{}(X0:SortId{}, X1:SortIExp{}), Lbl'UndsUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp{}(X0:SortId{}, X1:SortIExp{}), Lblif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt{}(Y0:SortBExp{}, Y1:SortStmt{}, Y2:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp{}(X0:SortId{}, X1:SortIExp{}), Lblwhile'LParUndsRParUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt{}(Y0:SortBExp{}, Y1:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp{}(X0:SortId{}, X1:SortIExp{}), Lbl'LBraUndsRBraUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp{}(X0:SortId{}, X1:SortIExp{}), Lbl'LBraRBraUnds'TEST-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(K0:SortIExp{}, K1:SortIExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{})), Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(\and{SortIExp{}} (X0:SortIExp{}, Y0:SortIExp{}), \and{SortIExp{}} (X1:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(K0:SortIExp{}, K1:SortIExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{})), Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(\and{SortIExp{}} (X0:SortIExp{}, Y0:SortIExp{}), \and{SortIExp{}} (X1:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(K1:SortList{},K2:SortList{}),K3:SortList{}),Lbl'Unds'List'Unds'{}(K1:SortList{},Lbl'Unds'List'Unds'{}(K2:SortList{},K3:SortList{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(K:SortList{},Lbl'Stop'List{}()),K:SortList{}) [unit{}()] // right unit
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),K:SortList{}),K:SortList{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),K3:SortMap{}),Lbl'Unds'Map'Unds'{}(K1:SortMap{},Lbl'Unds'Map'Unds'{}(K2:SortMap{},K3:SortMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),Lbl'Unds'Map'Unds'{}(K2:SortMap{},K1:SortMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K:SortMap{},Lbl'Stop'Map{}()),K:SortMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),K:SortMap{}),K:SortMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),K3:SortSet{}),Lbl'Unds'Set'Unds'{}(K1:SortSet{},Lbl'Unds'Set'Unds'{}(K2:SortSet{},K3:SortSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),Lbl'Unds'Set'Unds'{}(K2:SortSet{},K1:SortSet{})) [comm{}()] // commutativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},K:SortSet{}),K:SortSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},Lbl'Stop'Set{}()),K:SortSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),K:SortSet{}),K:SortSet{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Unds'Set'Unds'{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIExp{}, \equals{SortIExp{}, R} (Val:SortIExp{}, Lbl'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(K0:SortIExp{}, K1:SortIExp{}))) [functional{}()] // functional
  axiom{}\implies{SortIExp{}} (\and{SortIExp{}} (Lbl'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}), Lbl'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(Y0:SortIExp{}, Y1:SortIExp{})), Lbl'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(\and{SortIExp{}} (X0:SortIExp{}, Y0:SortIExp{}), \and{SortIExp{}} (X1:SortIExp{}, Y1:SortIExp{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(K0:SortStmt{}, K1:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbl'UndsUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}, Y1:SortStmt{})), Lbl'UndsUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}), \and{SortStmt{}} (X1:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt{}(Y0:SortBExp{}, Y1:SortStmt{}, Y2:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblwhile'LParUndsRParUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt{}(Y0:SortBExp{}, Y1:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbl'LBraUndsRBraUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbl'LBraRBraUnds'TEST-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andThenBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'impliesBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orElseBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'xorBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'xorInt'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPipe'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(K0:SortBExp{}, K1:SortBExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}), Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{})), Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(\and{SortBExp{}} (X0:SortBExp{}, Y0:SortBExp{}), \and{SortBExp{}} (X1:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt{}(K0:SortBExp{}, K1:SortStmt{}, K2:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt{}(X0:SortBExp{}, X1:SortStmt{}, X2:SortStmt{}), Lblif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt{}(Y0:SortBExp{}, Y1:SortStmt{}, Y2:SortStmt{})), Lblif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt{}(\and{SortBExp{}} (X0:SortBExp{}, Y0:SortBExp{}), \and{SortStmt{}} (X1:SortStmt{}, Y1:SortStmt{}), \and{SortStmt{}} (X2:SortStmt{}, Y2:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt{}(X0:SortBExp{}, X1:SortStmt{}, X2:SortStmt{}), Lblwhile'LParUndsRParUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt{}(Y0:SortBExp{}, Y1:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt{}(X0:SortBExp{}, X1:SortStmt{}, X2:SortStmt{}), Lbl'LBraUndsRBraUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt{}(X0:SortBExp{}, X1:SortStmt{}, X2:SortStmt{}), Lbl'LBraRBraUnds'TEST-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBExp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBool{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFloat{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIExp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisId{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisK{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKConfigVar{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKItem{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKResult{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisList{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisSet{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStmt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStoreCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStoreCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, LblnoKCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStoreCellOpt{}, \equals{SortStoreCellOpt{}, R} (Val:SortStoreCellOpt{}, LblnoStoreCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(K0:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(K0:SortString{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblwhile'LParUndsRParUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt{}(K0:SortBExp{}, K1:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblwhile'LParUndsRParUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt{}(X0:SortBExp{}, X1:SortStmt{}), Lblwhile'LParUndsRParUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt{}(Y0:SortBExp{}, Y1:SortStmt{})), Lblwhile'LParUndsRParUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt{}(\and{SortBExp{}} (X0:SortBExp{}, Y0:SortBExp{}), \and{SortStmt{}} (X1:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblwhile'LParUndsRParUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt{}(X0:SortBExp{}, X1:SortStmt{}), Lbl'LBraUndsRBraUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblwhile'LParUndsRParUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt{}(X0:SortBExp{}, X1:SortStmt{}), Lbl'LBraRBraUnds'TEST-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'LBraUndsRBraUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt{}(K0:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'LBraUndsRBraUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}), Lbl'LBraUndsRBraUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{})), Lbl'LBraUndsRBraUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'LBraUndsRBraUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}), Lbl'LBraRBraUnds'TEST-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'LBraRBraUnds'TEST-SYNTAX'Unds'Stmt{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Tild'Int'Unds'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{} \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}, X1:SortK{}))), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortList{}, inj{SortList{}, SortKItem{}} (Val:SortList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortString{}, inj{SortString{}, SortKItem{}} (Val:SortString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExp{}, inj{SortExp{}, SortKItem{}} (Val:SortExp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBExp{}, inj{SortBExp{}, SortKItem{}} (Val:SortBExp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIExp{}, inj{SortIExp{}, SortKItem{}} (Val:SortIExp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (Val:SortGeneratedCounterCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortId{}, inj{SortId{}, SortKItem{}} (Val:SortId{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBool{}, inj{SortBool{}, SortKItem{}} (Val:SortBool{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCell{}, inj{SortKCell{}, SortKItem{}} (Val:SortKCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStoreCell{}, inj{SortStoreCell{}, SortKItem{}} (Val:SortStoreCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStoreCellOpt{}, inj{SortStoreCellOpt{}, SortKItem{}} (Val:SortStoreCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKResult{}, inj{SortKResult{}, SortKItem{}} (Val:SortKResult{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMap{}, inj{SortMap{}, SortKItem{}} (Val:SortMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCellOpt{}, inj{SortKCellOpt{}, SortKItem{}} (Val:SortKCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStmt{}, inj{SortStmt{}, SortKItem{}} (Val:SortStmt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInt{}, inj{SortInt{}, SortKItem{}} (Val:SortInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFloat{}, inj{SortFloat{}, SortKItem{}} (Val:SortFloat{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCell{}, inj{SortGeneratedTopCell{}, SortKItem{}} (Val:SortGeneratedTopCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSet{}, inj{SortSet{}, SortKItem{}} (Val:SortSet{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCellFragment{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (Val:SortGeneratedTopCellFragment{})), \bottom{SortKItem{}}())))))))))))))))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \bottom{SortList{}}() [constructor{}()] // no junk
  axiom{} \or{SortString{}} (\top{SortString{}}(), \bottom{SortString{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKConfigVar{}} (\top{SortKConfigVar{}}(), \bottom{SortKConfigVar{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortExp{}} (\exists{SortExp{}} (Val:SortBExp{}, inj{SortBExp{}, SortExp{}} (Val:SortBExp{})), \or{SortExp{}} (\exists{SortExp{}} (Val:SortIExp{}, inj{SortIExp{}, SortExp{}} (Val:SortIExp{})), \or{SortExp{}} (\exists{SortExp{}} (Val:SortId{}, inj{SortId{}, SortExp{}} (Val:SortId{})), \or{SortExp{}} (\exists{SortExp{}} (Val:SortBool{}, inj{SortBool{}, SortExp{}} (Val:SortBool{})), \or{SortExp{}} (\exists{SortExp{}} (Val:SortInt{}, inj{SortInt{}, SortExp{}} (Val:SortInt{})), \bottom{SortExp{}}()))))) [constructor{}()] // no junk
  axiom{} \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortIExp{}, \exists{SortBExp{}} (X1:SortIExp{}, Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortBExp{}, \exists{SortBExp{}} (X1:SortBExp{}, Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortIExp{}, \exists{SortBExp{}} (X1:SortIExp{}, Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortIExp{}, \exists{SortBExp{}} (X1:SortIExp{}, Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortIExp{}, \exists{SortBExp{}} (X1:SortIExp{}, Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortIExp{}, \exists{SortBExp{}} (X1:SortIExp{}, Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortIExp{}, \exists{SortBExp{}} (X1:SortIExp{}, Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortBExp{}, \exists{SortBExp{}} (X1:SortBExp{}, Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (Val:SortBool{}, inj{SortBool{}, SortBExp{}} (Val:SortBool{})), \bottom{SortBExp{}}()))))))))) [constructor{}()] // no junk
  axiom{} \or{SortIExp{}} (\exists{SortIExp{}} (X0:SortIExp{}, \exists{SortIExp{}} (X1:SortIExp{}, Lbl'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}))), \or{SortIExp{}} (\exists{SortIExp{}} (X0:SortIExp{}, \exists{SortIExp{}} (X1:SortIExp{}, Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}))), \or{SortIExp{}} (\exists{SortIExp{}} (X0:SortIExp{}, \exists{SortIExp{}} (X1:SortIExp{}, Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}))), \or{SortIExp{}} (\exists{SortIExp{}} (X0:SortIExp{}, \exists{SortIExp{}} (X1:SortIExp{}, Lbl'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}))), \or{SortIExp{}} (\exists{SortIExp{}} (X0:SortIExp{}, \exists{SortIExp{}} (X1:SortIExp{}, Lbl'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(X0:SortIExp{}, X1:SortIExp{}))), \or{SortIExp{}} (\exists{SortIExp{}} (Val:SortId{}, inj{SortId{}, SortIExp{}} (Val:SortId{})), \or{SortIExp{}} (\exists{SortIExp{}} (Val:SortInt{}, inj{SortInt{}, SortIExp{}} (Val:SortInt{})), \bottom{SortIExp{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCell{}} (\exists{SortGeneratedCounterCell{}} (X0:SortInt{}, Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{})), \bottom{SortGeneratedCounterCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortId{}} (\top{SortId{}}(), \bottom{SortId{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortBool{}} (\top{SortBool{}}(), \bottom{SortBool{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKCell{}} (\exists{SortKCell{}} (X0:SortK{}, Lbl'-LT-'k'-GT-'{}(X0:SortK{})), \bottom{SortKCell{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortK{}}() [constructor{}()] // no junk
  axiom{} \or{SortStoreCell{}} (\exists{SortStoreCell{}} (X0:SortMap{}, Lbl'-LT-'store'-GT-'{}(X0:SortMap{})), \bottom{SortStoreCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStoreCellOpt{}} (LblnoStoreCell{}(), \or{SortStoreCellOpt{}} (\exists{SortStoreCellOpt{}} (Val:SortStoreCell{}, inj{SortStoreCell{}, SortStoreCellOpt{}} (Val:SortStoreCell{})), \bottom{SortStoreCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortBool{}, inj{SortBool{}, SortKResult{}} (Val:SortBool{})), \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortInt{}, inj{SortInt{}, SortKResult{}} (Val:SortInt{})), \bottom{SortKResult{}}())) [constructor{}()] // no junk
  axiom{} \bottom{SortMap{}}() [constructor{}()] // no junk
  axiom{} \or{SortKCellOpt{}} (LblnoKCell{}(), \or{SortKCellOpt{}} (\exists{SortKCellOpt{}} (Val:SortKCell{}, inj{SortKCell{}, SortKCellOpt{}} (Val:SortKCell{})), \bottom{SortKCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortId{}, \exists{SortStmt{}} (X1:SortIExp{}, Lbl'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp{}(X0:SortId{}, X1:SortIExp{}))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortStmt{}, \exists{SortStmt{}} (X1:SortStmt{}, Lbl'UndsUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortBExp{}, \exists{SortStmt{}} (X1:SortStmt{}, \exists{SortStmt{}} (X2:SortStmt{}, Lblif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt{}(X0:SortBExp{}, X1:SortStmt{}, X2:SortStmt{})))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortBExp{}, \exists{SortStmt{}} (X1:SortStmt{}, Lblwhile'LParUndsRParUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt{}(X0:SortBExp{}, X1:SortStmt{}))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortStmt{}, Lbl'LBraUndsRBraUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{})), \or{SortStmt{}} (Lbl'LBraRBraUnds'TEST-SYNTAX'Unds'Stmt{}(), \bottom{SortStmt{}}())))))) [constructor{}()] // no junk
  axiom{} \or{SortInt{}} (\top{SortInt{}}(), \bottom{SortInt{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortFloat{}} (\top{SortFloat{}}(), \bottom{SortFloat{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortGeneratedTopCell{}} (\exists{SortGeneratedTopCell{}} (X0:SortKCell{}, \exists{SortGeneratedTopCell{}} (X1:SortGeneratedCounterCell{}, \exists{SortGeneratedTopCell{}} (X2:SortStoreCell{}, Lbl'-LT-'generatedTop'-GT-'{}(X0:SortKCell{}, X1:SortGeneratedCounterCell{}, X2:SortStoreCell{})))), \bottom{SortGeneratedTopCell{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortSet{}}() [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCellFragment{}} (\exists{SortGeneratedTopCellFragment{}} (X0:SortKCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X1:SortStoreCellOpt{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortStoreCellOpt{}))), \bottom{SortGeneratedTopCellFragment{}}()) [constructor{}()] // no junk

// rules
// rule #Ceil{Int,#SortParam}(`_%Int_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_=/=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(277564ad2537209fd698729ceaa01973f97125176cf1078f98e2edb7cc190f34), org.kframework.attributes.Location(Location(1085,8,1085,102)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \ceil{SortInt{}, Q0}(Lbl'UndsPerc'Int'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
     \and{Q0} (
       \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{})),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1085,8,1085,102)"), simplification{}(""), UNIQUE'Unds'ID{}("277564ad2537209fd698729ceaa01973f97125176cf1078f98e2edb7cc190f34")]

// rule #Ceil{Int,#SortParam}(`_/Int_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_=/=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1eefe48360417c30b8e5f115a539adbc38e337fa903d6c589811e7b619f8d1cd), org.kframework.attributes.Location(Location(1084,8,1084,102)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \ceil{SortInt{}, Q0}(Lbl'UndsSlsh'Int'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
     \and{Q0} (
       \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{})),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1084,8,1084,102)"), simplification{}(""), UNIQUE'Unds'ID{}("1eefe48360417c30b8e5f115a539adbc38e337fa903d6c589811e7b619f8d1cd")]

// rule #Ceil{Int,#SortParam}(`_<<Int_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_>=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0b052005b3756fb7082a3e365e1de3b170b4b0d828aab504a9ec2cfd19666528), org.kframework.attributes.Location(Location(1088,8,1088,102)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \ceil{SortInt{}, Q0}(Lbl'Unds-LT--LT-'Int'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
     \and{Q0} (
       \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'Unds-GT-Eqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{})),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1088,8,1088,102)"), simplification{}(""), UNIQUE'Unds'ID{}("0b052005b3756fb7082a3e365e1de3b170b4b0d828aab504a9ec2cfd19666528")]

// rule #Ceil{Int,#SortParam}(`_>>Int_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_>=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8504798d0c71a9c32788426e50147e59ac302592e16aa6bae4511370fd436af8), org.kframework.attributes.Location(Location(1087,8,1087,102)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \ceil{SortInt{}, Q0}(Lbl'Unds-GT--GT-'Int'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
     \and{Q0} (
       \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'Unds-GT-Eqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{})),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1087,8,1087,102)"), simplification{}(""), UNIQUE'Unds'ID{}("8504798d0c71a9c32788426e50147e59ac302592e16aa6bae4511370fd436af8")]

// rule #Ceil{Int,#SortParam}(`_modInt_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_=/=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f864cd1e17e48500bc78b5fa83b901031cdbfd8f0575388667ce1475a2a7f532), org.kframework.attributes.Location(Location(1086,8,1086,102)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \ceil{SortInt{}, Q0}(Lbl'Unds'modInt'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
     \and{Q0} (
       \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{})),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1086,8,1086,102)"), simplification{}(""), UNIQUE'Unds'ID{}("f864cd1e17e48500bc78b5fa83b901031cdbfd8f0575388667ce1475a2a7f532")]

// rule #Equals{Bool,#SortParam}(`_=/=Int_`(K1,K2),#token("false","Bool"))=>#Equals{Int,#SortParam}(K1,K2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1b2f0c28a758d91c183983c16b5c28434ae93f4bc5f72c42ff26e578bbe9e778), org.kframework.attributes.Location(Location(1128,8,1128,55)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarK1:SortInt{},VarK2:SortInt{}),\dv{SortBool{}}("false")),
     \and{Q0} (
       \equals{SortInt{}, Q0}(VarK1:SortInt{},VarK2:SortInt{}),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1128,8,1128,55)"), simplification{}(""), UNIQUE'Unds'ID{}("1b2f0c28a758d91c183983c16b5c28434ae93f4bc5f72c42ff26e578bbe9e778")]

// rule #Equals{Bool,#SortParam}(`_=/=Int_`(K1,K2),#token("true","Bool"))=>#Not{#SortParam}(#Equals{Int,#SortParam}(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(415c2e6721f051830c68e88f4f1e28d01ef3a444ee893de275777f8da52ee675), org.kframework.attributes.Location(Location(1126,8,1126,60)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarK1:SortInt{},VarK2:SortInt{}),\dv{SortBool{}}("true")),
     \and{Q0} (
       \not{Q0}(\equals{SortInt{}, Q0}(VarK1:SortInt{},VarK2:SortInt{})),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1126,8,1126,60)"), simplification{}(""), UNIQUE'Unds'ID{}("415c2e6721f051830c68e88f4f1e28d01ef3a444ee893de275777f8da52ee675")]

// rule #Equals{Bool,#SortParam}(`_=/=K_`(K1,K2),#token("false","Bool"))=>#Equals{K,#SortParam}(K1,K2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7e3c2755de9f56727e93033164148b26514ac3266a4968788a9da9e314f085a2), org.kframework.attributes.Location(Location(2107,8,2107,53)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{}),\dv{SortBool{}}("false")),
     \and{Q0} (
       \equals{SortK{}, Q0}(VarK1:SortK{},VarK2:SortK{}),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2107,8,2107,53)"), simplification{}(""), UNIQUE'Unds'ID{}("7e3c2755de9f56727e93033164148b26514ac3266a4968788a9da9e314f085a2")]

// rule #Equals{Bool,#SortParam}(`_=/=K_`(K1,K2),#token("true","Bool"))=>#Not{#SortParam}(#Equals{K,#SortParam}(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9130be811669fe4a43adca72c6c6019dd71bbc3230adf9d3aec48a8a4f0902a5), org.kframework.attributes.Location(Location(2105,8,2105,58)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{}),\dv{SortBool{}}("true")),
     \and{Q0} (
       \not{Q0}(\equals{SortK{}, Q0}(VarK1:SortK{},VarK2:SortK{})),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2105,8,2105,58)"), simplification{}(""), UNIQUE'Unds'ID{}("9130be811669fe4a43adca72c6c6019dd71bbc3230adf9d3aec48a8a4f0902a5")]

// rule #Equals{Bool,#SortParam}(`_==Int_`(K1,K2),#token("false","Bool"))=>#Not{#SortParam}(#Equals{Int,#SortParam}(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3fbd49f516b65c441727e322cf239d04b588af705f2f55c0809e19c84453adc8), org.kframework.attributes.Location(Location(1124,8,1124,60)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarK1:SortInt{},VarK2:SortInt{}),\dv{SortBool{}}("false")),
     \and{Q0} (
       \not{Q0}(\equals{SortInt{}, Q0}(VarK1:SortInt{},VarK2:SortInt{})),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1124,8,1124,60)"), simplification{}(""), UNIQUE'Unds'ID{}("3fbd49f516b65c441727e322cf239d04b588af705f2f55c0809e19c84453adc8")]

// rule #Equals{Bool,#SortParam}(`_==Int_`(K1,K2),#token("true","Bool"))=>#Equals{Int,#SortParam}(K1,K2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2ef27a628b08283a24d379050acde3bad9d410fe40366d9b4ffecb885e0f69a1), org.kframework.attributes.Location(Location(1122,8,1122,53)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarK1:SortInt{},VarK2:SortInt{}),\dv{SortBool{}}("true")),
     \and{Q0} (
       \equals{SortInt{}, Q0}(VarK1:SortInt{},VarK2:SortInt{}),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1122,8,1122,53)"), simplification{}(""), UNIQUE'Unds'ID{}("2ef27a628b08283a24d379050acde3bad9d410fe40366d9b4ffecb885e0f69a1")]

// rule #Equals{Bool,#SortParam}(`_==K_`(K1,K2),#token("false","Bool"))=>#Not{#SortParam}(#Equals{K,#SortParam}(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6bd0e33cfd9a06f8dafd28aada596b748f8ad71d7a6b0d5d06b4ec8bd3c17ae6), org.kframework.attributes.Location(Location(2103,8,2103,58)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{}),\dv{SortBool{}}("false")),
     \and{Q0} (
       \not{Q0}(\equals{SortK{}, Q0}(VarK1:SortK{},VarK2:SortK{})),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2103,8,2103,58)"), simplification{}(""), UNIQUE'Unds'ID{}("6bd0e33cfd9a06f8dafd28aada596b748f8ad71d7a6b0d5d06b4ec8bd3c17ae6")]

// rule #Equals{Bool,#SortParam}(`_==K_`(K1,K2),#token("true","Bool"))=>#Equals{K,#SortParam}(K1,K2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(34091c658d74ff4f694390d20661da89dbe79df122c20fb96f99d0b4a0362f92), org.kframework.attributes.Location(Location(2101,8,2101,51)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{}),\dv{SortBool{}}("true")),
     \and{Q0} (
       \equals{SortK{}, Q0}(VarK1:SortK{},VarK2:SortK{}),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2101,8,2101,51)"), simplification{}(""), UNIQUE'Unds'ID{}("34091c658d74ff4f694390d20661da89dbe79df122c20fb96f99d0b4a0362f92")]

// rule #Equals{Bool,#SortParam}(`_andBool_`(@B1,@B2),#token("true","Bool"))=>#And{#SortParam}(#Equals{Bool,#SortParam}(@B1,#token("true","Bool")),#Equals{Bool,#SortParam}(@B2,#token("true","Bool"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(07baa96fd82cc826cf1685cb8119bf1c214ed8b884464ffe20e53b993c12e918), org.kframework.attributes.Location(Location(878,8,878,84)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(Lbl'Unds'andBool'Unds'{}(@VarB1:SortBool{},@VarB2:SortBool{}),\dv{SortBool{}}("true")),
     \and{Q0} (
       \and{Q0}(\equals{SortBool{}, Q0}(@VarB1:SortBool{},\dv{SortBool{}}("true")),\equals{SortBool{}, Q0}(@VarB2:SortBool{},\dv{SortBool{}}("true"))),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(878,8,878,84)"), simplification{}(""), UNIQUE'Unds'ID{}("07baa96fd82cc826cf1685cb8119bf1c214ed8b884464ffe20e53b993c12e918")]

// rule #Equals{Bool,#SortParam}(`_orBool_`(@B1,@B2),#token("false","Bool"))=>#And{#SortParam}(#Equals{Bool,#SortParam}(@B1,#token("false","Bool")),#Equals{Bool,#SortParam}(@B2,#token("false","Bool"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b11ac075f3dd3ffe0ddbec1741072a8869b134229fe049807754e8ad343744e), org.kframework.attributes.Location(Location(880,8,880,86)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(Lbl'Unds'orBool'Unds'{}(@VarB1:SortBool{},@VarB2:SortBool{}),\dv{SortBool{}}("false")),
     \and{Q0} (
       \and{Q0}(\equals{SortBool{}, Q0}(@VarB1:SortBool{},\dv{SortBool{}}("false")),\equals{SortBool{}, Q0}(@VarB2:SortBool{},\dv{SortBool{}}("false"))),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(880,8,880,86)"), simplification{}(""), UNIQUE'Unds'ID{}("2b11ac075f3dd3ffe0ddbec1741072a8869b134229fe049807754e8ad343744e")]

// rule #Equals{Bool,#SortParam}(`notBool_`(@B),#token("false","Bool"))=>#Equals{Bool,#SortParam}(@B,#token("true","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(34328f07490eae9a3c60959e6bc930879eadfd5c2141758b8ee518c2fb0204ad), org.kframework.attributes.Location(Location(875,8,875,55)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(LblnotBool'Unds'{}(@VarB:SortBool{}),\dv{SortBool{}}("false")),
     \and{Q0} (
       \equals{SortBool{}, Q0}(@VarB:SortBool{},\dv{SortBool{}}("true")),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(875,8,875,55)"), simplification{}(""), UNIQUE'Unds'ID{}("34328f07490eae9a3c60959e6bc930879eadfd5c2141758b8ee518c2fb0204ad")]

// rule #Equals{Bool,#SortParam}(`notBool_`(@B),#token("true","Bool"))=>#Equals{Bool,#SortParam}(@B,#token("false","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ff38a911e0bfd4c9765658dd908e0ef2ceee912f22703ddb571af28ef362bc9e), org.kframework.attributes.Location(Location(873,8,873,55)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(LblnotBool'Unds'{}(@VarB:SortBool{}),\dv{SortBool{}}("true")),
     \and{Q0} (
       \equals{SortBool{}, Q0}(@VarB:SortBool{},\dv{SortBool{}}("false")),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(873,8,873,55)"), simplification{}(""), UNIQUE'Unds'ID{}("ff38a911e0bfd4c9765658dd908e0ef2ceee912f22703ddb571af28ef362bc9e")]

// rule #Equals{Bool,#SortParam}(#token("false","Bool"),`_=/=Int_`(K1,K2))=>#Equals{Int,#SortParam}(K1,K2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d7c9cbef16213d5e4080a42fb2a09667bd1c8938cf3c53435e59f29a08840af3), org.kframework.attributes.Location(Location(1129,8,1129,55)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(\dv{SortBool{}}("false"),Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarK1:SortInt{},VarK2:SortInt{})),
     \and{Q0} (
       \equals{SortInt{}, Q0}(VarK1:SortInt{},VarK2:SortInt{}),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1129,8,1129,55)"), simplification{}(""), UNIQUE'Unds'ID{}("d7c9cbef16213d5e4080a42fb2a09667bd1c8938cf3c53435e59f29a08840af3")]

// rule #Equals{Bool,#SortParam}(#token("false","Bool"),`_=/=K_`(K1,K2))=>#Equals{K,#SortParam}(K1,K2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8c3adbcee5cba3c9dba97d0b267b9589c7960c2c903190cb69f6d94ea1fbdd75), org.kframework.attributes.Location(Location(2108,8,2108,53)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(\dv{SortBool{}}("false"),Lbl'UndsEqlsSlshEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{})),
     \and{Q0} (
       \equals{SortK{}, Q0}(VarK1:SortK{},VarK2:SortK{}),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2108,8,2108,53)"), simplification{}(""), UNIQUE'Unds'ID{}("8c3adbcee5cba3c9dba97d0b267b9589c7960c2c903190cb69f6d94ea1fbdd75")]

// rule #Equals{Bool,#SortParam}(#token("false","Bool"),`_==Int_`(K1,K2))=>#Not{#SortParam}(#Equals{Int,#SortParam}(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c7c52e8d084d36a80f6e3cde653e5611142b9a1f73dfa4281eacb201c7e61a6f), org.kframework.attributes.Location(Location(1125,8,1125,60)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(\dv{SortBool{}}("false"),Lbl'UndsEqlsEqls'Int'Unds'{}(VarK1:SortInt{},VarK2:SortInt{})),
     \and{Q0} (
       \not{Q0}(\equals{SortInt{}, Q0}(VarK1:SortInt{},VarK2:SortInt{})),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1125,8,1125,60)"), simplification{}(""), UNIQUE'Unds'ID{}("c7c52e8d084d36a80f6e3cde653e5611142b9a1f73dfa4281eacb201c7e61a6f")]

// rule #Equals{Bool,#SortParam}(#token("false","Bool"),`_==K_`(K1,K2))=>#Not{#SortParam}(#Equals{K,#SortParam}(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(074355783c5651a021ad5e253782bea2ebbab652b3e80d5516eed89f9e435dda), org.kframework.attributes.Location(Location(2104,8,2104,58)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(\dv{SortBool{}}("false"),Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{})),
     \and{Q0} (
       \not{Q0}(\equals{SortK{}, Q0}(VarK1:SortK{},VarK2:SortK{})),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2104,8,2104,58)"), simplification{}(""), UNIQUE'Unds'ID{}("074355783c5651a021ad5e253782bea2ebbab652b3e80d5516eed89f9e435dda")]

// rule #Equals{Bool,#SortParam}(#token("false","Bool"),`_orBool_`(@B1,@B2))=>#And{#SortParam}(#Equals{Bool,#SortParam}(#token("false","Bool"),@B1),#Equals{Bool,#SortParam}(#token("false","Bool"),@B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d58ed383e30c685252b6208bcbaa2c5a6d2bb2c61866156cd5f5496203452471), org.kframework.attributes.Location(Location(879,8,879,86)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(\dv{SortBool{}}("false"),Lbl'Unds'orBool'Unds'{}(@VarB1:SortBool{},@VarB2:SortBool{})),
     \and{Q0} (
       \and{Q0}(\equals{SortBool{}, Q0}(\dv{SortBool{}}("false"),@VarB1:SortBool{}),\equals{SortBool{}, Q0}(\dv{SortBool{}}("false"),@VarB2:SortBool{})),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(879,8,879,86)"), simplification{}(""), UNIQUE'Unds'ID{}("d58ed383e30c685252b6208bcbaa2c5a6d2bb2c61866156cd5f5496203452471")]

// rule #Equals{Bool,#SortParam}(#token("false","Bool"),`notBool_`(@B))=>#Equals{Bool,#SortParam}(#token("true","Bool"),@B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(41cf8859c3dd6d6cb8f0d5950f13eda843cb8f3a234f96f288ac0443685d67e6), org.kframework.attributes.Location(Location(874,8,874,55)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(\dv{SortBool{}}("false"),LblnotBool'Unds'{}(@VarB:SortBool{})),
     \and{Q0} (
       \equals{SortBool{}, Q0}(\dv{SortBool{}}("true"),@VarB:SortBool{}),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(874,8,874,55)"), simplification{}(""), UNIQUE'Unds'ID{}("41cf8859c3dd6d6cb8f0d5950f13eda843cb8f3a234f96f288ac0443685d67e6")]

// rule #Equals{Bool,#SortParam}(#token("true","Bool"),`_=/=Int_`(K1,K2))=>#Not{#SortParam}(#Equals{Int,#SortParam}(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dfa307a5e907cea86327028760f87f409e66628e90f2c249c7604c7c4a1075c9), org.kframework.attributes.Location(Location(1127,8,1127,60)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(\dv{SortBool{}}("true"),Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarK1:SortInt{},VarK2:SortInt{})),
     \and{Q0} (
       \not{Q0}(\equals{SortInt{}, Q0}(VarK1:SortInt{},VarK2:SortInt{})),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1127,8,1127,60)"), simplification{}(""), UNIQUE'Unds'ID{}("dfa307a5e907cea86327028760f87f409e66628e90f2c249c7604c7c4a1075c9")]

// rule #Equals{Bool,#SortParam}(#token("true","Bool"),`_=/=K_`(K1,K2))=>#Not{#SortParam}(#Equals{K,#SortParam}(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4bb5613968e43b08303fdbbe2dd22b6186c92b98ef7b9cb3c7f1f46ee17d91a6), org.kframework.attributes.Location(Location(2106,8,2106,58)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(\dv{SortBool{}}("true"),Lbl'UndsEqlsSlshEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{})),
     \and{Q0} (
       \not{Q0}(\equals{SortK{}, Q0}(VarK1:SortK{},VarK2:SortK{})),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2106,8,2106,58)"), simplification{}(""), UNIQUE'Unds'ID{}("4bb5613968e43b08303fdbbe2dd22b6186c92b98ef7b9cb3c7f1f46ee17d91a6")]

// rule #Equals{Bool,#SortParam}(#token("true","Bool"),`_==Int_`(K1,K2))=>#Equals{Int,#SortParam}(K1,K2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8cca279825f2643425a59b2b4604747f38b6c33ee61380f6c2bf438632b28511), org.kframework.attributes.Location(Location(1123,8,1123,53)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(\dv{SortBool{}}("true"),Lbl'UndsEqlsEqls'Int'Unds'{}(VarK1:SortInt{},VarK2:SortInt{})),
     \and{Q0} (
       \equals{SortInt{}, Q0}(VarK1:SortInt{},VarK2:SortInt{}),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1123,8,1123,53)"), simplification{}(""), UNIQUE'Unds'ID{}("8cca279825f2643425a59b2b4604747f38b6c33ee61380f6c2bf438632b28511")]

// rule #Equals{Bool,#SortParam}(#token("true","Bool"),`_==K_`(K1,K2))=>#Equals{K,#SortParam}(K1,K2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ec5382e5e3ff3234e9ad938d6fbc2b7fbf9b88bd8c3d5b52ba6d9e54c93bb323), org.kframework.attributes.Location(Location(2102,8,2102,51)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(\dv{SortBool{}}("true"),Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{})),
     \and{Q0} (
       \equals{SortK{}, Q0}(VarK1:SortK{},VarK2:SortK{}),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2102,8,2102,51)"), simplification{}(""), UNIQUE'Unds'ID{}("ec5382e5e3ff3234e9ad938d6fbc2b7fbf9b88bd8c3d5b52ba6d9e54c93bb323")]

// rule #Equals{Bool,#SortParam}(#token("true","Bool"),`_andBool_`(@B1,@B2))=>#And{#SortParam}(#Equals{Bool,#SortParam}(#token("true","Bool"),@B1),#Equals{Bool,#SortParam}(#token("true","Bool"),@B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b87686476d42cb8b71543b0942857bf74e4e1f49c62efe4f060a06e0cc2d53fb), org.kframework.attributes.Location(Location(877,8,877,84)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(\dv{SortBool{}}("true"),Lbl'Unds'andBool'Unds'{}(@VarB1:SortBool{},@VarB2:SortBool{})),
     \and{Q0} (
       \and{Q0}(\equals{SortBool{}, Q0}(\dv{SortBool{}}("true"),@VarB1:SortBool{}),\equals{SortBool{}, Q0}(\dv{SortBool{}}("true"),@VarB2:SortBool{})),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(877,8,877,84)"), simplification{}(""), UNIQUE'Unds'ID{}("b87686476d42cb8b71543b0942857bf74e4e1f49c62efe4f060a06e0cc2d53fb")]

// rule #Equals{Bool,#SortParam}(#token("true","Bool"),`notBool_`(@B))=>#Equals{Bool,#SortParam}(#token("false","Bool"),@B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2c40c69936606d292ca999440716bfe9b6421a9e4a182731b8881126a2dc8e2f), org.kframework.attributes.Location(Location(872,8,872,55)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \equals{SortBool{}, Q0}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(@VarB:SortBool{})),
     \and{Q0} (
       \equals{SortBool{}, Q0}(\dv{SortBool{}}("false"),@VarB:SortBool{}),
        \top{Q0}())))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(872,8,872,55)"), simplification{}(""), UNIQUE'Unds'ID{}("2c40c69936606d292ca999440716bfe9b6421a9e4a182731b8881126a2dc8e2f")]

// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,B1,_Gen0)=>B1 requires C ensures #token("true","Bool") [UNIQUE_ID(2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2), org.kframework.attributes.Location(Location(2128,8,2128,59)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        VarC:SortBool{},
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarB1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            Var'Unds'Gen0:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB1:SortK{},
        \top{SortK{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2128,8,2128,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2")]

// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,_Gen0,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [UNIQUE_ID(651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa), org.kframework.attributes.Location(Location(2129,8,2129,67)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarC:SortBool{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            Var'Unds'Gen0:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            VarB2:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB2:SortK{},
        \top{SortK{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2129,8,2129,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa")]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_!=__TEST-SYNTAX_BExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_!=__TEST-SYNTAX_BExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(0711cbbd90dd3634f13f78207d2b4771c23fcd1d7d55c0f6ff472d02c1118d5c), cool, cool-like, org.kframework.attributes.Location(Location(28,21,28,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule31LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule31LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule31LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,21,28,47)"), UNIQUE'Unds'ID{}("0711cbbd90dd3634f13f78207d2b4771c23fcd1d7d55c0f6ff472d02c1118d5c"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_!=__TEST-SYNTAX_BExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_!=__TEST-SYNTAX_BExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(cdc0fdfc9011d519f987522dfcb7ceba86a25f295b938772d44d0369a1298cdc), cool, cool-like, org.kframework.attributes.Location(Location(28,21,28,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule32LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule32LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule32LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,21,28,47)"), UNIQUE'Unds'ID{}("cdc0fdfc9011d519f987522dfcb7ceba86a25f295b938772d44d0369a1298cdc"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{BExp,KItem}(HOLE) #as _Gen4``~>`#freezer_&&__TEST-SYNTAX_BExp_BExp_BExp0_`(inj{BExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_&&__TEST-SYNTAX_BExp_BExp_BExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(e04b73ff8a52b0ecc6c6d2e0fd50c66ef284dc150b97c5499062f5cad380ddc7), cool, cool-like, org.kframework.attributes.Location(Location(30,21,30,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule33LHS{}(SortBExp{},SortBExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule33LHS{}(VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK1:SortBExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule33LHS{}(VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(VarHOLE:SortBExp{},VarK1:SortBExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,21,30,47)"), UNIQUE'Unds'ID{}("e04b73ff8a52b0ecc6c6d2e0fd50c66ef284dc150b97c5499062f5cad380ddc7"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{BExp,KItem}(HOLE) #as _Gen4``~>`#freezer_&&__TEST-SYNTAX_BExp_BExp_BExp1_`(inj{BExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_&&__TEST-SYNTAX_BExp_BExp_BExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(e1ae361a08498a05f87a008a07022227a4beea30cc8843f2ac73b84d15041584), cool, cool-like, org.kframework.attributes.Location(Location(30,21,30,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule34LHS{}(SortBExp{},SortBExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule34LHS{}(VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK0:SortBExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule34LHS{}(VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(VarK0:SortBExp{},VarHOLE:SortBExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,21,30,47)"), UNIQUE'Unds'ID{}("e1ae361a08498a05f87a008a07022227a4beea30cc8843f2ac73b84d15041584"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_*__TEST-SYNTAX_IExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(`_*__TEST-SYNTAX_IExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(d109c90dc63c16084a3568ab4a90033df46e21b70328abc8e444e528b5cfd13f), cool, cool-like, org.kframework.attributes.Location(Location(13,21,13,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule35LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule35LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule35LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,21,13,46)"), UNIQUE'Unds'ID{}("d109c90dc63c16084a3568ab4a90033df46e21b70328abc8e444e528b5cfd13f"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_*__TEST-SYNTAX_IExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(`_*__TEST-SYNTAX_IExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(9b7697fad3803ae57de2b31c54b9b19d75f9097be4231ed3e1b344a2c9059051), cool, cool-like, org.kframework.attributes.Location(Location(13,21,13,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule36LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule36LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule36LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,21,13,46)"), UNIQUE'Unds'ID{}("9b7697fad3803ae57de2b31c54b9b19d75f9097be4231ed3e1b344a2c9059051"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_+__TEST-SYNTAX_IExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(`_+__TEST-SYNTAX_IExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(e8884a561cd2f6291aac8d42bde117826268b73f73cc313a480eebfb7e510b2a), cool, cool-like, org.kframework.attributes.Location(Location(15,21,15,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule37LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule37LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule37LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(15,21,15,46)"), UNIQUE'Unds'ID{}("e8884a561cd2f6291aac8d42bde117826268b73f73cc313a480eebfb7e510b2a"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_+__TEST-SYNTAX_IExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(`_+__TEST-SYNTAX_IExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(c1984d611f32591bc90a7bc08c6f1909246a3af8ced59fd4e1aa3fe813bb391b), cool, cool-like, org.kframework.attributes.Location(Location(15,21,15,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule38LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule38LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule38LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(15,21,15,46)"), UNIQUE'Unds'ID{}("c1984d611f32591bc90a7bc08c6f1909246a3af8ced59fd4e1aa3fe813bb391b"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_-__TEST-SYNTAX_IExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(`_-__TEST-SYNTAX_IExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(ce0563a299e3acb7b6136b6209b564493cb6a26a5557c8dbc93950c9ce25d3e2), cool, cool-like, org.kframework.attributes.Location(Location(16,21,16,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule39LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule39LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule39LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(16,21,16,46)"), UNIQUE'Unds'ID{}("ce0563a299e3acb7b6136b6209b564493cb6a26a5557c8dbc93950c9ce25d3e2"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_-__TEST-SYNTAX_IExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(`_-__TEST-SYNTAX_IExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(966cc442cfcbedc9e0966a4eb4ca7aa153e9d837a6a67ab8f702057bb9f8c820), cool, cool-like, org.kframework.attributes.Location(Location(16,21,16,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule40LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule40LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule40LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(16,21,16,46)"), UNIQUE'Unds'ID{}("966cc442cfcbedc9e0966a4eb4ca7aa153e9d837a6a67ab8f702057bb9f8c820"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_/__TEST-SYNTAX_IExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(`_/__TEST-SYNTAX_IExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(8b689c247a1d979bcaef4b68eb57ab93f959ac90bd4f4fca85336e6fbbc23a87), cool, cool-like, org.kframework.attributes.Location(Location(14,21,14,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule41LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule41LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule41LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,21,14,46)"), UNIQUE'Unds'ID{}("8b689c247a1d979bcaef4b68eb57ab93f959ac90bd4f4fca85336e6fbbc23a87"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_/__TEST-SYNTAX_IExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(`_/__TEST-SYNTAX_IExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(ae32c6df24b0db311ebca1def16507c041ecedc4cf9c3b2426699f756f65d6b8), cool, cool-like, org.kframework.attributes.Location(Location(14,21,14,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule42LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule42LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule42LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,21,14,46)"), UNIQUE'Unds'ID{}("ae32c6df24b0db311ebca1def16507c041ecedc4cf9c3b2426699f756f65d6b8"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_<=__TEST-SYNTAX_BExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<=__TEST-SYNTAX_BExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(a4d51451247b0df9a4a712a81b6db7acc55e4c0eb36a91f19c110515ac210fa9), cool, cool-like, org.kframework.attributes.Location(Location(23,21,23,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule43LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule43LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule43LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,21,23,47)"), UNIQUE'Unds'ID{}("a4d51451247b0df9a4a712a81b6db7acc55e4c0eb36a91f19c110515ac210fa9"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_<=__TEST-SYNTAX_BExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<=__TEST-SYNTAX_BExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(1b8572e763482e1d839626e936919c5462c7f0274d1d1dc0240bbd96514b17a8), cool, cool-like, org.kframework.attributes.Location(Location(23,21,23,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule44LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule44LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule44LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,21,23,47)"), UNIQUE'Unds'ID{}("1b8572e763482e1d839626e936919c5462c7f0274d1d1dc0240bbd96514b17a8"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_<__TEST-SYNTAX_BExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<__TEST-SYNTAX_BExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(9cf0e00965e94cbb2b4f734f75fa33442d85d621862aeaaaafef4a7a1ce2e943), cool, cool-like, org.kframework.attributes.Location(Location(24,21,24,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule45LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule45LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule45LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,21,24,47)"), UNIQUE'Unds'ID{}("9cf0e00965e94cbb2b4f734f75fa33442d85d621862aeaaaafef4a7a1ce2e943"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_<__TEST-SYNTAX_BExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<__TEST-SYNTAX_BExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(49031df9eebf81115bfddbe443b25770680c8daca44b342fbd47acb760c75206), cool, cool-like, org.kframework.attributes.Location(Location(24,21,24,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule46LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule46LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule46LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,21,24,47)"), UNIQUE'Unds'ID{}("49031df9eebf81115bfddbe443b25770680c8daca44b342fbd47acb760c75206"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_==__TEST-SYNTAX_BExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_==__TEST-SYNTAX_BExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(4b1d02ee874610d60df3250ca09c0959c8fd15163c71d2eead940dc75a0a215e), cool, cool-like, org.kframework.attributes.Location(Location(27,21,27,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule47LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule47LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule47LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,21,27,47)"), UNIQUE'Unds'ID{}("4b1d02ee874610d60df3250ca09c0959c8fd15163c71d2eead940dc75a0a215e"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_==__TEST-SYNTAX_BExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_==__TEST-SYNTAX_BExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(6b2e1b756bba76e48b04f581f54c738ad1de1eb76e7049b71c9ee2f7c0f63ef0), cool, cool-like, org.kframework.attributes.Location(Location(27,21,27,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule48LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule48LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule48LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,21,27,47)"), UNIQUE'Unds'ID{}("6b2e1b756bba76e48b04f581f54c738ad1de1eb76e7049b71c9ee2f7c0f63ef0"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_=_;_TEST-SYNTAX_Stmt_Id_IExp1_`(inj{Id,KItem}(K0))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Stmt,KItem}(`_=_;_TEST-SYNTAX_Stmt_Id_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(40fa2246114f7143843d3a767fdaaa74ba1e70722d0583d38843ffa748f2fa23), cool, cool-like, org.kframework.attributes.Location(Location(40,9,40,55)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), strict(2)]
  alias rule49LHS{}(SortIExp{},SortId{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule49LHS{}(VarHOLE:SortIExp{},VarK0:SortId{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule49LHS{}(VarHOLE:SortIExp{},VarK0:SortId{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp{}(VarK0:SortId{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,9,40,55)"), UNIQUE'Unds'ID{}("40fa2246114f7143843d3a767fdaaa74ba1e70722d0583d38843ffa748f2fa23")]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_>=__TEST-SYNTAX_BExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>=__TEST-SYNTAX_BExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(02e6602236b93ebcf127e6680b567fab9d94605f7f49a54aec2928f9d69e0dd9), cool, cool-like, org.kframework.attributes.Location(Location(25,21,25,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule50LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule50LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule50LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,21,25,47)"), UNIQUE'Unds'ID{}("02e6602236b93ebcf127e6680b567fab9d94605f7f49a54aec2928f9d69e0dd9"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_>=__TEST-SYNTAX_BExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>=__TEST-SYNTAX_BExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(9f39b25fcb3592a55a8c2d456bf3c6a830610c53b6c3a90182c89a7528ec26cf), cool, cool-like, org.kframework.attributes.Location(Location(25,21,25,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule51LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule51LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule51LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,21,25,47)"), UNIQUE'Unds'ID{}("9f39b25fcb3592a55a8c2d456bf3c6a830610c53b6c3a90182c89a7528ec26cf"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_>__TEST-SYNTAX_BExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>__TEST-SYNTAX_BExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(d37b25785fdbfa5ac54cefe8d19b9e40f74d18be2b5968992a31ad1ec0ca9930), cool, cool-like, org.kframework.attributes.Location(Location(26,21,26,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule52LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule52LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule52LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,21,26,47)"), UNIQUE'Unds'ID{}("d37b25785fdbfa5ac54cefe8d19b9e40f74d18be2b5968992a31ad1ec0ca9930"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_>__TEST-SYNTAX_BExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>__TEST-SYNTAX_BExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(4181dabd2cf270c07ffb2874fb9a17dbeefeade15e3a378fef480d98c2fa95b9), cool, cool-like, org.kframework.attributes.Location(Location(26,21,26,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule53LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule53LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule53LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,21,26,47)"), UNIQUE'Unds'ID{}("4181dabd2cf270c07ffb2874fb9a17dbeefeade15e3a378fef480d98c2fa95b9"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_^__TEST-SYNTAX_IExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(`_^__TEST-SYNTAX_IExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(950188a0473a12251ef19e00899aa16b28ea45cfb0a70c4fb8c326c5873bdaa7), cool, cool-like, org.kframework.attributes.Location(Location(12,21,12,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule54LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule54LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule54LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,21,12,46)"), UNIQUE'Unds'ID{}("950188a0473a12251ef19e00899aa16b28ea45cfb0a70c4fb8c326c5873bdaa7"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{IExp,KItem}(HOLE) #as _Gen4``~>`#freezer_^__TEST-SYNTAX_IExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(`_^__TEST-SYNTAX_IExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(49dea94de2537bf303838e3de4ec874d60047a2e983f77f1382124ef4f090aa5), cool, cool-like, org.kframework.attributes.Location(Location(12,21,12,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule55LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule55LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule55LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,21,12,46)"), UNIQUE'Unds'ID{}("49dea94de2537bf303838e3de4ec874d60047a2e983f77f1382124ef4f090aa5"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{BExp,KItem}(HOLE) #as _Gen4``~>`#freezer_||__TEST-SYNTAX_BExp_BExp_BExp0_`(inj{BExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_||__TEST-SYNTAX_BExp_BExp_BExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(9b37ffb0f66d4d7f8de733b7c8f40d5b40415fb2b435ec7c67a34ce0d4c72372), cool, cool-like, org.kframework.attributes.Location(Location(31,21,31,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule56LHS{}(SortBExp{},SortBExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule56LHS{}(VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK1:SortBExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule56LHS{}(VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(VarHOLE:SortBExp{},VarK1:SortBExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,21,31,47)"), UNIQUE'Unds'ID{}("9b37ffb0f66d4d7f8de733b7c8f40d5b40415fb2b435ec7c67a34ce0d4c72372"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{BExp,KItem}(HOLE) #as _Gen4``~>`#freezer_||__TEST-SYNTAX_BExp_BExp_BExp1_`(inj{BExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_||__TEST-SYNTAX_BExp_BExp_BExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(4374fdf5049ca90b570d8008cec118a306488587680f1d0388fd2d74d161aba1), cool, cool-like, org.kframework.attributes.Location(Location(31,21,31,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule57LHS{}(SortBExp{},SortBExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule57LHS{}(VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK0:SortBExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule57LHS{}(VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(VarK0:SortBExp{},VarHOLE:SortBExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,21,31,47)"), UNIQUE'Unds'ID{}("4374fdf5049ca90b570d8008cec118a306488587680f1d0388fd2d74d161aba1"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(``inj{BExp,KItem}(HOLE) #as _Gen4``~>`#freezerif(_)_else__TEST-SYNTAX_Stmt_BExp_Stmt_Stmt0_`(inj{Stmt,KItem}(K1),inj{Stmt,KItem}(K2))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__TEST-SYNTAX_Stmt_BExp_Stmt_Stmt`(HOLE,K1,K2))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen4)) ensures #token("true","Bool") [UNIQUE_ID(25c071a4719f7b10677a2e8508b2aad8c7b36cf4d367ba278b8815ab40baebc8), cool, cool-like, org.kframework.attributes.Location(Location(44,9,44,55)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), strict(1)]
  alias rule58LHS{}(SortBExp{},SortStmt{},SortStmt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule58LHS{}(VarHOLE:SortBExp{},VarK1:SortStmt{},VarK2:SortStmt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen4:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),Var'Unds'Gen4:SortKItem{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarK1:SortStmt{}),dotk{}()),kseq{}(inj{SortStmt{}, SortKItem{}}(VarK2:SortStmt{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule58LHS{}(VarHOLE:SortBExp{},VarK1:SortStmt{},VarK2:SortStmt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen4:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt{}(VarHOLE:SortBExp{},VarK1:SortStmt{},VarK2:SortStmt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [cool{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,9,44,55)"), UNIQUE'Unds'ID{}("25c071a4719f7b10677a2e8508b2aad8c7b36cf4d367ba278b8815ab40baebc8")]

// rule `<generatedTop>`(`<k>`(``inj{Id,KItem}(I) #as _Gen2``~>_DotVar1),_DotVar0,`<store>`(STORE) #as _Gen3)=>`<generatedTop>`(`<k>`(`Map:lookup`(STORE,_Gen2)~>_DotVar1),_DotVar0,_Gen3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6511e6eefc3bf63657a3a9e18bbf7038c2c421cec27232314f8432319069985c), cool-like, org.kframework.attributes.Location(Location(64,6,65,28)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule59LHS{}(SortId{},SortMap{},SortGeneratedCounterCell{},SortK{},SortKItem{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule59LHS{}(VarI:SortId{},VarSTORE:SortMap{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{},Var'Unds'Gen3:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),Var'Unds'Gen2:SortKItem{}),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{},\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(VarSTORE:SortMap{}),Var'Unds'Gen3:SortStoreCell{}))) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule59LHS{}(VarI:SortId{},VarSTORE:SortMap{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{},Var'Unds'Gen3:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblMap'Coln'lookup{}(VarSTORE:SortMap{},Var'Unds'Gen2:SortKItem{}),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'Gen3:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,6,65,28)"), UNIQUE'Unds'ID{}("6511e6eefc3bf63657a3a9e18bbf7038c2c421cec27232314f8432319069985c")]

// rule `<generatedTop>`(`<k>`(inj{Stmt,KItem}(`while(_)__TEST-SYNTAX_Stmt_BExp_Stmt`(BE,BODY) #as _Gen5)~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__TEST-SYNTAX_Stmt_BExp_Stmt_Stmt`(BE,`{_}_TEST-SYNTAX_Stmt_Stmt`(`___TEST-SYNTAX_Stmt_Stmt_Stmt`(BODY,_Gen5)),`{}_TEST-SYNTAX_Stmt`(.KList)))~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(06e19887fe5689e6225a2880e71126a4df106e4eaec4e7dda1ca97c0ef4c0141), org.kframework.attributes.Location(Location(102,9,102,88)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule60LHS{}(SortBExp{},SortStmt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortStmt{}) : SortGeneratedTopCell{}
  where rule60LHS{}(VarBE:SortBExp{},VarBODY:SortStmt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen5:SortStmt{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(\and{SortStmt{}}(Lblwhile'LParUndsRParUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt{}(VarBE:SortBExp{},VarBODY:SortStmt{}),Var'Unds'Gen5:SortStmt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule60LHS{}(VarBE:SortBExp{},VarBODY:SortStmt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'Gen5:SortStmt{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt{}(VarBE:SortBExp{},Lbl'LBraUndsRBraUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarBODY:SortStmt{},Var'Unds'Gen5:SortStmt{})),Lbl'LBraRBraUnds'TEST-SYNTAX'Unds'Stmt{}())),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(102,9,102,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("06e19887fe5689e6225a2880e71126a4df106e4eaec4e7dda1ca97c0ef4c0141")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_!=__TEST-SYNTAX_BExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_!=__TEST-SYNTAX_BExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(0424804e281debc98eb83a99fd220cf53b752432928017cc4f56c4e46a1e12ce), heat, org.kframework.attributes.Location(Location(28,21,28,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule61LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule61LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule61LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,21,28,47)"), UNIQUE'Unds'ID{}("0424804e281debc98eb83a99fd220cf53b752432928017cc4f56c4e46a1e12ce"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_!=__TEST-SYNTAX_BExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_!=__TEST-SYNTAX_BExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(`_andBool_`(isKResult(inj{IExp,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(f98f472d1fc0be367cfd380ca246c167443e98cb6bf48e8f605888481b7f2936), heat, org.kframework.attributes.Location(Location(28,21,28,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule62LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule62LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule62LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,21,28,47)"), UNIQUE'Unds'ID{}("f98f472d1fc0be367cfd380ca246c167443e98cb6bf48e8f605888481b7f2936"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_!=__TEST-SYNTAX_BExp_IExp_IExp`(inj{Int,IExp}(I1),inj{Int,IExp}(I2)))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Bool,KItem}(`_=/=Int_`(I1,I2))~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bb6a4412eb50f687a2a07d72957dfea3fe2eeb3726c5e59e2c7c4d50f621a4c1), org.kframework.attributes.Location(Location(80,9,80,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule63LHS{}(SortInt{},SortInt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule63LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(inj{SortInt{}, SortIExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortIExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule63LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(80,9,80,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("bb6a4412eb50f687a2a07d72957dfea3fe2eeb3726c5e59e2c7c4d50f621a4c1")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_&&__TEST-SYNTAX_BExp_BExp_BExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(HOLE)~>`#freezer_&&__TEST-SYNTAX_BExp_BExp_BExp0_`(inj{BExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{BExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c128d0fb5809d0c147bcf663bfc0e9be51d682d8aa94b44f340aaa41bf3fac34), heat, org.kframework.attributes.Location(Location(30,21,30,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule64LHS{}(SortBExp{},SortBExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule64LHS{}(VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(VarHOLE:SortBExp{},VarK1:SortBExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule64LHS{}(VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK1:SortBExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,21,30,47)"), UNIQUE'Unds'ID{}("c128d0fb5809d0c147bcf663bfc0e9be51d682d8aa94b44f340aaa41bf3fac34"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_&&__TEST-SYNTAX_BExp_BExp_BExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(HOLE)~>`#freezer_&&__TEST-SYNTAX_BExp_BExp_BExp1_`(inj{BExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(`_andBool_`(isKResult(inj{BExp,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{BExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(b55284c8d05f4d98baa5a0a7f89c4520bc946dc011b2abfa225c571d13d49375), heat, org.kframework.attributes.Location(Location(30,21,30,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule65LHS{}(SortBExp{},SortBExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule65LHS{}(VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK0:SortBExp{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(VarK0:SortBExp{},VarHOLE:SortBExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule65LHS{}(VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK0:SortBExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,21,30,47)"), UNIQUE'Unds'ID{}("b55284c8d05f4d98baa5a0a7f89c4520bc946dc011b2abfa225c571d13d49375"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_&&__TEST-SYNTAX_BExp_BExp_BExp`(inj{Bool,BExp}(B1),inj{Bool,BExp}(B2)))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Bool,KItem}(`_andBool_`(B1,B2))~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bccea847c155756fce53ea63b1ed6003289fc448c9e9d35e28fa5b4eda9f0f45), org.kframework.attributes.Location(Location(83,9,83,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule66LHS{}(SortBool{},SortBool{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule66LHS{}(VarB1:SortBool{},VarB2:SortBool{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(inj{SortBool{}, SortBExp{}}(VarB1:SortBool{}),inj{SortBool{}, SortBExp{}}(VarB2:SortBool{}))),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule66LHS{}(VarB1:SortBool{},VarB2:SortBool{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds'andBool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(83,9,83,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("bccea847c155756fce53ea63b1ed6003289fc448c9e9d35e28fa5b4eda9f0f45")]

// rule `<generatedTop>`(`<k>`(inj{IExp,KItem}(`_*__TEST-SYNTAX_IExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_*__TEST-SYNTAX_IExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(544d12d33e8714e9cd46857ce0833dafa34036dfb1f82e1222bd34278cbdb637), heat, org.kframework.attributes.Location(Location(13,21,13,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule67LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule67LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule67LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,21,13,46)"), UNIQUE'Unds'ID{}("544d12d33e8714e9cd46857ce0833dafa34036dfb1f82e1222bd34278cbdb637"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{IExp,KItem}(`_*__TEST-SYNTAX_IExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_*__TEST-SYNTAX_IExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(`_andBool_`(isKResult(inj{IExp,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(245e8fefc6e0320d6e78b43cb37f42d8a47ed4555b950e9d3d5f35a73b27ad5d), heat, org.kframework.attributes.Location(Location(13,21,13,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule68LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule68LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule68LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,21,13,46)"), UNIQUE'Unds'ID{}("245e8fefc6e0320d6e78b43cb37f42d8a47ed4555b950e9d3d5f35a73b27ad5d"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{IExp,KItem}(`_*__TEST-SYNTAX_IExp_IExp_IExp`(inj{Int,IExp}(I1),inj{Int,IExp}(I2)))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Int,KItem}(`_*Int_`(I1,I2))~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(154e59349f4b82120fab8c01a782c3e1f53e0253c4aa7450ea48a8f31076d133), org.kframework.attributes.Location(Location(70,9,70,43)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule69LHS{}(SortInt{},SortInt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule69LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(inj{SortInt{}, SortIExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortIExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule69LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsStar'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(70,9,70,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("154e59349f4b82120fab8c01a782c3e1f53e0253c4aa7450ea48a8f31076d133")]

// rule `<generatedTop>`(`<k>`(inj{IExp,KItem}(`_+__TEST-SYNTAX_IExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_+__TEST-SYNTAX_IExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(e841d31502d2eb692b89abaa551f1040cae7b5bb48b3c595c35bd621656155b6), heat, org.kframework.attributes.Location(Location(15,21,15,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule70LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule70LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule70LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(15,21,15,46)"), UNIQUE'Unds'ID{}("e841d31502d2eb692b89abaa551f1040cae7b5bb48b3c595c35bd621656155b6"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{IExp,KItem}(`_+__TEST-SYNTAX_IExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_+__TEST-SYNTAX_IExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(`_andBool_`(isKResult(inj{IExp,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(6413c4cd21eed0825a5dfe570b6a2621e53f16707be2fc914696e3e2dfc80274), heat, org.kframework.attributes.Location(Location(15,21,15,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule71LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule71LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule71LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(15,21,15,46)"), UNIQUE'Unds'ID{}("6413c4cd21eed0825a5dfe570b6a2621e53f16707be2fc914696e3e2dfc80274"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{IExp,KItem}(`_+__TEST-SYNTAX_IExp_IExp_IExp`(inj{Int,IExp}(I1),inj{Int,IExp}(I2)))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Int,KItem}(`_+Int_`(I1,I2))~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2a458c9718b993b79379063157d7fa2d73b15f7aed323d5cf602b6065a506588), org.kframework.attributes.Location(Location(68,9,68,43)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule72LHS{}(SortInt{},SortInt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule72LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(inj{SortInt{}, SortIExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortIExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule72LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,9,68,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2a458c9718b993b79379063157d7fa2d73b15f7aed323d5cf602b6065a506588")]

// rule `<generatedTop>`(`<k>`(inj{IExp,KItem}(`_-__TEST-SYNTAX_IExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_-__TEST-SYNTAX_IExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(cb2abc4683e333de92e6d31ae4f5936dae70631602f17b754ce31050421d3ab5), heat, org.kframework.attributes.Location(Location(16,21,16,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule73LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule73LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule73LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(16,21,16,46)"), UNIQUE'Unds'ID{}("cb2abc4683e333de92e6d31ae4f5936dae70631602f17b754ce31050421d3ab5"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{IExp,KItem}(`_-__TEST-SYNTAX_IExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_-__TEST-SYNTAX_IExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(`_andBool_`(isKResult(inj{IExp,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8a71992162102d6c7703774f7a59d9705150f8146d796cf6c739ff58f3c15a7c), heat, org.kframework.attributes.Location(Location(16,21,16,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule74LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule74LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule74LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(16,21,16,46)"), UNIQUE'Unds'ID{}("8a71992162102d6c7703774f7a59d9705150f8146d796cf6c739ff58f3c15a7c"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{IExp,KItem}(`_-__TEST-SYNTAX_IExp_IExp_IExp`(inj{Int,IExp}(I1),inj{Int,IExp}(I2)))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Int,KItem}(`_-Int_`(I1,I2))~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6d6919eeb3b1b2538e8151c569e8b143891cdf45b87edc118efe8834e36642c1), org.kframework.attributes.Location(Location(69,9,69,43)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule75LHS{}(SortInt{},SortInt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule75LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(inj{SortInt{}, SortIExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortIExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule75LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(69,9,69,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6d6919eeb3b1b2538e8151c569e8b143891cdf45b87edc118efe8834e36642c1")]

// rule `<generatedTop>`(`<k>`(inj{IExp,KItem}(`_/__TEST-SYNTAX_IExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_/__TEST-SYNTAX_IExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c584395072e533c3a033e9b960c71b0925bdffa560c08f87e773e29751eb0adf), heat, org.kframework.attributes.Location(Location(14,21,14,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule76LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule76LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule76LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,21,14,46)"), UNIQUE'Unds'ID{}("c584395072e533c3a033e9b960c71b0925bdffa560c08f87e773e29751eb0adf"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{IExp,KItem}(`_/__TEST-SYNTAX_IExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_/__TEST-SYNTAX_IExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(`_andBool_`(isKResult(inj{IExp,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(23fecf992c412c8ba726e577624e6f63120ded998aa7ce4c571f4b4d617f3b74), heat, org.kframework.attributes.Location(Location(14,21,14,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule77LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule77LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule77LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,21,14,46)"), UNIQUE'Unds'ID{}("23fecf992c412c8ba726e577624e6f63120ded998aa7ce4c571f4b4d617f3b74"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{IExp,KItem}(`_/__TEST-SYNTAX_IExp_IExp_IExp`(inj{Int,IExp}(I1),inj{Int,IExp}(I2)))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Int,KItem}(`_/Int_`(I1,I2))~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d507f6f9e656e510e46dfe577672b41a3a7816475bb85bd5d68ed8e78af564d3), org.kframework.attributes.Location(Location(71,9,71,43)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule78LHS{}(SortInt{},SortInt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule78LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(inj{SortInt{}, SortIExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortIExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule78LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsSlsh'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(71,9,71,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d507f6f9e656e510e46dfe577672b41a3a7816475bb85bd5d68ed8e78af564d3")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<=__TEST-SYNTAX_BExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_<=__TEST-SYNTAX_BExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(7f7e93797c16e3dd11fdf607ee87fca632ef4d92829898059b4798930a8920b6), heat, org.kframework.attributes.Location(Location(23,21,23,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule79LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule79LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule79LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,21,23,47)"), UNIQUE'Unds'ID{}("7f7e93797c16e3dd11fdf607ee87fca632ef4d92829898059b4798930a8920b6"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<=__TEST-SYNTAX_BExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_<=__TEST-SYNTAX_BExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(`_andBool_`(isKResult(inj{IExp,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(4d62dcdcea1e9f84432b482e47eb7eb82796e5c88b3b2a1571cc234045318abc), heat, org.kframework.attributes.Location(Location(23,21,23,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule80LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule80LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule80LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,21,23,47)"), UNIQUE'Unds'ID{}("4d62dcdcea1e9f84432b482e47eb7eb82796e5c88b3b2a1571cc234045318abc"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<=__TEST-SYNTAX_BExp_IExp_IExp`(inj{Int,IExp}(I1),inj{Int,IExp}(I2)))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Bool,KItem}(`_<=Int_`(I1,I2))~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8697f4515c252ef68e6ab4852a040ca1733467efe17775f9fdb9b29c0324572c), org.kframework.attributes.Location(Location(75,9,75,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule81LHS{}(SortInt{},SortInt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule81LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(inj{SortInt{}, SortIExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortIExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule81LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(75,9,75,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8697f4515c252ef68e6ab4852a040ca1733467efe17775f9fdb9b29c0324572c")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<__TEST-SYNTAX_BExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_<__TEST-SYNTAX_BExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(18e44ce827d6bfe1eefcfd656524272eb6183eaf8dc203e3c5ffed4464faa5c1), heat, org.kframework.attributes.Location(Location(24,21,24,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule82LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule82LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule82LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,21,24,47)"), UNIQUE'Unds'ID{}("18e44ce827d6bfe1eefcfd656524272eb6183eaf8dc203e3c5ffed4464faa5c1"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<__TEST-SYNTAX_BExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_<__TEST-SYNTAX_BExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(`_andBool_`(isKResult(inj{IExp,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(3313c265384961729068c5bc44cb97102cc8ef43977fd00ac4ccc5a26c3a225c), heat, org.kframework.attributes.Location(Location(24,21,24,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule83LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule83LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule83LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,21,24,47)"), UNIQUE'Unds'ID{}("3313c265384961729068c5bc44cb97102cc8ef43977fd00ac4ccc5a26c3a225c"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<__TEST-SYNTAX_BExp_IExp_IExp`(inj{Int,IExp}(I1),inj{Int,IExp}(I2)))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Bool,KItem}(`_<Int_`(I1,I2))~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(493525cb1fbe5b2526a31396f92cf8e0bd55c0d7d4b7b6b29cc69bc9b143933e), org.kframework.attributes.Location(Location(76,9,76,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule84LHS{}(SortInt{},SortInt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule84LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(inj{SortInt{}, SortIExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortIExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule84LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-LT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(76,9,76,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("493525cb1fbe5b2526a31396f92cf8e0bd55c0d7d4b7b6b29cc69bc9b143933e")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_==__TEST-SYNTAX_BExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_==__TEST-SYNTAX_BExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(6e5be6209dcb29d7a68438dc98346322a975f8cc0d8340e1ca84374a90b2b0f8), heat, org.kframework.attributes.Location(Location(27,21,27,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule85LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule85LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule85LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,21,27,47)"), UNIQUE'Unds'ID{}("6e5be6209dcb29d7a68438dc98346322a975f8cc0d8340e1ca84374a90b2b0f8"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_==__TEST-SYNTAX_BExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_==__TEST-SYNTAX_BExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(`_andBool_`(isKResult(inj{IExp,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(2b2d2a34cd2ebe3b4d20185f550133129c60900b5398c4c99d30486631708b6d), heat, org.kframework.attributes.Location(Location(27,21,27,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule86LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule86LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule86LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,21,27,47)"), UNIQUE'Unds'ID{}("2b2d2a34cd2ebe3b4d20185f550133129c60900b5398c4c99d30486631708b6d"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_==__TEST-SYNTAX_BExp_IExp_IExp`(inj{Int,IExp}(I1),inj{Int,IExp}(I2)))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Bool,KItem}(`_==Int_`(I1,I2))~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(58d340444cb03ac6a200971ea9c595f006a9ac195f1766970ca6cd813960f5e9), org.kframework.attributes.Location(Location(79,9,79,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule87LHS{}(SortInt{},SortInt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule87LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(inj{SortInt{}, SortIExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortIExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule87LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(79,9,79,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("58d340444cb03ac6a200971ea9c595f006a9ac195f1766970ca6cd813960f5e9")]

// rule `<generatedTop>`(`<k>`(inj{Stmt,KItem}(`_=_;_TEST-SYNTAX_Stmt_Id_IExp`(ID,inj{Int,IExp}(I)))~>_DotVar1),_DotVar0,`<store>`(STORE))=>`<generatedTop>`(`<k>`(_DotVar1),_DotVar0,`<store>`(`Map:update`(STORE,inj{Id,KItem}(ID),inj{Int,KItem}(I)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(60522a4ca4d0ae2c5e07426d5bedaa271db5002046ed5b9889ce79cbf769d1e1), org.kframework.attributes.Location(Location(87,9,88,52)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule88LHS{}(SortInt{},SortId{},SortMap{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule88LHS{}(VarI:SortInt{},VarID:SortId{},VarSTORE:SortMap{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp{}(VarID:SortId{},inj{SortInt{}, SortIExp{}}(VarI:SortInt{}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{},Lbl'-LT-'store'-GT-'{}(VarSTORE:SortMap{}))) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule88LHS{}(VarI:SortInt{},VarID:SortId{},VarSTORE:SortMap{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar1:SortK{}),Var'Unds'DotVar0:SortGeneratedCounterCell{},Lbl'-LT-'store'-GT-'{}(LblMap'Coln'update{}(VarSTORE:SortMap{},inj{SortId{}, SortKItem{}}(VarID:SortId{}),inj{SortInt{}, SortKItem{}}(VarI:SortInt{}))))))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(87,9,88,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("60522a4ca4d0ae2c5e07426d5bedaa271db5002046ed5b9889ce79cbf769d1e1")]

// rule `<generatedTop>`(`<k>`(inj{Stmt,KItem}(`_=_;_TEST-SYNTAX_Stmt_Id_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_=_;_TEST-SYNTAX_Stmt_Id_IExp1_`(inj{Id,KItem}(K0))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(e837493e1e842e4117f0789b52d93c99416001572c1bc376c6f85c3097378d1b), heat, org.kframework.attributes.Location(Location(40,9,40,55)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), strict(2)]
  alias rule89LHS{}(SortIExp{},SortId{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule89LHS{}(VarHOLE:SortIExp{},VarK0:SortId{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp{}(VarK0:SortId{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule89LHS{}(VarHOLE:SortIExp{},VarK0:SortId{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'TEST-SYNTAX'Unds'Stmt'Unds'Id'Unds'IExp1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,9,40,55)"), UNIQUE'Unds'ID{}("e837493e1e842e4117f0789b52d93c99416001572c1bc376c6f85c3097378d1b")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>=__TEST-SYNTAX_BExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_>=__TEST-SYNTAX_BExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(0dbe7af9c4f80baba4406d94f3346f43e14502c24ea45e51d5706c2a4a794104), heat, org.kframework.attributes.Location(Location(25,21,25,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule90LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule90LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule90LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,21,25,47)"), UNIQUE'Unds'ID{}("0dbe7af9c4f80baba4406d94f3346f43e14502c24ea45e51d5706c2a4a794104"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>=__TEST-SYNTAX_BExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_>=__TEST-SYNTAX_BExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(`_andBool_`(isKResult(inj{IExp,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(1988eaa6da7bff4c6d2731787897d38dcc05ca887d9811b6a32292c7e35d6f97), heat, org.kframework.attributes.Location(Location(25,21,25,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule91LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule91LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule91LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,21,25,47)"), UNIQUE'Unds'ID{}("1988eaa6da7bff4c6d2731787897d38dcc05ca887d9811b6a32292c7e35d6f97"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>=__TEST-SYNTAX_BExp_IExp_IExp`(inj{Int,IExp}(I1),inj{Int,IExp}(I2)))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Bool,KItem}(`_>=Int_`(I1,I2))~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3a3a5643436d023872be3dfa8f4750974dd754f68f978db1742328b6c3516f60), org.kframework.attributes.Location(Location(77,9,77,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule92LHS{}(SortInt{},SortInt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule92LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(inj{SortInt{}, SortIExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortIExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule92LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(77,9,77,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3a3a5643436d023872be3dfa8f4750974dd754f68f978db1742328b6c3516f60")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>__TEST-SYNTAX_BExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_>__TEST-SYNTAX_BExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(31c61d65838b5ebb030cfc82cf9dac358acc4aa43b88f29e04625f1018566ec5), heat, org.kframework.attributes.Location(Location(26,21,26,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule93LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule93LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule93LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,21,26,47)"), UNIQUE'Unds'ID{}("31c61d65838b5ebb030cfc82cf9dac358acc4aa43b88f29e04625f1018566ec5"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>__TEST-SYNTAX_BExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_>__TEST-SYNTAX_BExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(`_andBool_`(isKResult(inj{IExp,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(4dad2c0832e9b87b085ed10cbf14264cb5f74cf0f8c0b737a361a43f4f309c6c), heat, org.kframework.attributes.Location(Location(26,21,26,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule94LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule94LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule94LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,21,26,47)"), UNIQUE'Unds'ID{}("4dad2c0832e9b87b085ed10cbf14264cb5f74cf0f8c0b737a361a43f4f309c6c"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>__TEST-SYNTAX_BExp_IExp_IExp`(inj{Int,IExp}(I1),inj{Int,IExp}(I2)))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Bool,KItem}(`_>Int_`(I1,I2))~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1b1ac1d7167d628a82c0ad83f8874d6213fca74995143add368e8b7b4586bfed), org.kframework.attributes.Location(Location(78,9,78,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule95LHS{}(SortInt{},SortInt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule95LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'TEST-SYNTAX'Unds'BExp'Unds'IExp'Unds'IExp{}(inj{SortInt{}, SortIExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortIExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule95LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-GT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(78,9,78,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("1b1ac1d7167d628a82c0ad83f8874d6213fca74995143add368e8b7b4586bfed")]

// rule `<generatedTop>`(`<k>`(inj{IExp,KItem}(`_^__TEST-SYNTAX_IExp_IExp_IExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_^__TEST-SYNTAX_IExp_IExp_IExp0_`(inj{IExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(43cbc3140fddc6b7f2db9b73c8a583d42d8e07645879f8f64ec7edd1c49eaa55), heat, org.kframework.attributes.Location(Location(12,21,12,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule96LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule96LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarHOLE:SortIExp{},VarK1:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule96LHS{}(VarHOLE:SortIExp{},VarK1:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp0'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK1:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,21,12,46)"), UNIQUE'Unds'ID{}("43cbc3140fddc6b7f2db9b73c8a583d42d8e07645879f8f64ec7edd1c49eaa55"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{IExp,KItem}(`_^__TEST-SYNTAX_IExp_IExp_IExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{IExp,KItem}(HOLE)~>`#freezer_^__TEST-SYNTAX_IExp_IExp_IExp1_`(inj{IExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(`_andBool_`(isKResult(inj{IExp,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{IExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(202ae9e18418b6cc81279cb46aa97eeb61e4a712adc6a967336689a663f1ff41), heat, org.kframework.attributes.Location(Location(12,21,12,46)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule97LHS{}(SortIExp{},SortIExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule97LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(VarK0:SortIExp{},VarHOLE:SortIExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule97LHS{}(VarHOLE:SortIExp{},VarK0:SortIExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarHOLE:SortIExp{}),kseq{}(Lbl'Hash'freezer'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp1'Unds'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(VarK0:SortIExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,21,12,46)"), UNIQUE'Unds'ID{}("202ae9e18418b6cc81279cb46aa97eeb61e4a712adc6a967336689a663f1ff41"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{IExp,KItem}(`_^__TEST-SYNTAX_IExp_IExp_IExp`(inj{Int,IExp}(I1),inj{Int,IExp}(I2)))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Int,KItem}(`_^Int_`(I1,I2))~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(432c10be4eb1556af3a18aa784e547970d25e0b3b6be091105884fb2a5516437), org.kframework.attributes.Location(Location(72,9,72,43)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule98LHS{}(SortInt{},SortInt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule98LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIExp{}, SortKItem{}}(Lbl'UndsXor-UndsUnds'TEST-SYNTAX'Unds'IExp'Unds'IExp'Unds'IExp{}(inj{SortInt{}, SortIExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortIExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule98LHS{}(VarI1:SortInt{},VarI2:SortInt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsXor-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(72,9,72,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("432c10be4eb1556af3a18aa784e547970d25e0b3b6be091105884fb2a5516437")]

// rule `<generatedTop>`(`<k>`(inj{Stmt,KItem}(`___TEST-SYNTAX_Stmt_Stmt_Stmt`(S1,S2))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Stmt,KItem}(S1)~>inj{Stmt,KItem}(S2)~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(abc79d29800246dd0f98f8b5b0458205b766e3c375d791b3de28962b602ee795), org.kframework.attributes.Location(Location(91,9,91,49)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule99LHS{}(SortStmt{},SortStmt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule99LHS{}(VarS1:SortStmt{},VarS2:SortStmt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarS1:SortStmt{},VarS2:SortStmt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule99LHS{}(VarS1:SortStmt{},VarS2:SortStmt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS1:SortStmt{}),kseq{}(inj{SortStmt{}, SortKItem{}}(VarS2:SortStmt{}),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(91,9,91,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("abc79d29800246dd0f98f8b5b0458205b766e3c375d791b3de28962b602ee795")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_||__TEST-SYNTAX_BExp_BExp_BExp`(HOLE,K1))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(HOLE)~>`#freezer_||__TEST-SYNTAX_BExp_BExp_BExp0_`(inj{BExp,KItem}(K1))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{BExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(76e7ec5e0037453bd45087841d084cadc19a97921dee5e782bd982f02747280f), heat, org.kframework.attributes.Location(Location(31,21,31,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule100LHS{}(SortBExp{},SortBExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule100LHS{}(VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(VarHOLE:SortBExp{},VarK1:SortBExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule100LHS{}(VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK1:SortBExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,21,31,47)"), UNIQUE'Unds'ID{}("76e7ec5e0037453bd45087841d084cadc19a97921dee5e782bd982f02747280f"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_||__TEST-SYNTAX_BExp_BExp_BExp`(K0,HOLE))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(HOLE)~>`#freezer_||__TEST-SYNTAX_BExp_BExp_BExp1_`(inj{BExp,KItem}(K0))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(`_andBool_`(isKResult(inj{BExp,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{BExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(3ee8e54c12984c491d9fda1a14f1e810031596c570c75cdddfbf5394953088de), heat, org.kframework.attributes.Location(Location(31,21,31,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), seqstrict]
  alias rule101LHS{}(SortBExp{},SortBExp{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule101LHS{}(VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK0:SortBExp{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(VarK0:SortBExp{},VarHOLE:SortBExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule101LHS{}(VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK0:SortBExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,21,31,47)"), UNIQUE'Unds'ID{}("3ee8e54c12984c491d9fda1a14f1e810031596c570c75cdddfbf5394953088de"), seqstrict{}()]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_||__TEST-SYNTAX_BExp_BExp_BExp`(inj{Bool,BExp}(B1),inj{Bool,BExp}(B2)))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Bool,KItem}(`_orBool_`(B1,B2))~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4653675fb6eaf644c3ee428ae8f2066425aabb5c3f6f9ee86f05691f72827242), org.kframework.attributes.Location(Location(84,9,84,47)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule102LHS{}(SortBool{},SortBool{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule102LHS{}(VarB1:SortBool{},VarB2:SortBool{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'TEST-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(inj{SortBool{}, SortBExp{}}(VarB1:SortBool{}),inj{SortBool{}, SortBExp{}}(VarB2:SortBool{}))),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule102LHS{}(VarB1:SortBool{},VarB2:SortBool{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds'orBool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,9,84,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4653675fb6eaf644c3ee428ae8f2066425aabb5c3f6f9ee86f05691f72827242")]

// rule `<generatedTop>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__TEST-SYNTAX_Stmt_BExp_Stmt_Stmt`(HOLE,K1,K2))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(HOLE)~>`#freezerif(_)_else__TEST-SYNTAX_Stmt_BExp_Stmt_Stmt0_`(inj{Stmt,KItem}(K1),inj{Stmt,KItem}(K2))~>_DotVar1),_Gen0,_Gen1) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{BExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c699685df1f1e20e2d1da8429c47847296cf44d864e52a45a0729c3bb0c65574), heat, org.kframework.attributes.Location(Location(44,9,44,55)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), strict(1)]
  alias rule103LHS{}(SortBExp{},SortStmt{},SortStmt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule103LHS{}(VarHOLE:SortBExp{},VarK1:SortStmt{},VarK2:SortStmt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt{}(VarHOLE:SortBExp{},VarK1:SortStmt{},VarK2:SortStmt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule103LHS{}(VarHOLE:SortBExp{},VarK1:SortStmt{},VarK2:SortStmt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt0'Unds'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarK1:SortStmt{}),dotk{}()),kseq{}(inj{SortStmt{}, SortKItem{}}(VarK2:SortStmt{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,9,44,55)"), UNIQUE'Unds'ID{}("c699685df1f1e20e2d1da8429c47847296cf44d864e52a45a0729c3bb0c65574")]

// rule `<generatedTop>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__TEST-SYNTAX_Stmt_BExp_Stmt_Stmt`(inj{Bool,BExp}(#token("false","Bool")),_THEN,ELSE))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Stmt,KItem}(ELSE)~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cfa630befcbcf11f15ec34da9758687807d1cb9f42804f63f61540211c40cce3), org.kframework.attributes.Location(Location(99,9,99,57)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule104LHS{}(SortStmt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{},SortStmt{}) : SortGeneratedTopCell{}
  where rule104LHS{}(VarELSE:SortStmt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'THEN:SortStmt{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt{}(inj{SortBool{}, SortBExp{}}(\dv{SortBool{}}("false")),Var'Unds'THEN:SortStmt{},VarELSE:SortStmt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule104LHS{}(VarELSE:SortStmt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{},Var'Unds'THEN:SortStmt{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarELSE:SortStmt{}),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(99,9,99,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("cfa630befcbcf11f15ec34da9758687807d1cb9f42804f63f61540211c40cce3")]

// rule `<generatedTop>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__TEST-SYNTAX_Stmt_BExp_Stmt_Stmt`(inj{Bool,BExp}(#token("true","Bool")),THEN,_ELSE))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Stmt,KItem}(THEN)~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(186e587b80b0af4b6e0296cc9346b6a4d0a538d3b62e46c6b35e38382661b073), org.kframework.attributes.Location(Location(98,9,98,57)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule105LHS{}(SortStmt{},SortK{},SortStmt{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule105LHS{}(VarTHEN:SortStmt{},Var'Unds'DotVar1:SortK{},Var'Unds'ELSE:SortStmt{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'TEST-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Stmt'Unds'Stmt{}(inj{SortBool{}, SortBExp{}}(\dv{SortBool{}}("true")),VarTHEN:SortStmt{},Var'Unds'ELSE:SortStmt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule105LHS{}(VarTHEN:SortStmt{},Var'Unds'DotVar1:SortK{},Var'Unds'ELSE:SortStmt{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarTHEN:SortStmt{}),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(98,9,98,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("186e587b80b0af4b6e0296cc9346b6a4d0a538d3b62e46c6b35e38382661b073")]

// rule `<generatedTop>`(`<k>`(inj{Stmt,KItem}(`{_}_TEST-SYNTAX_Stmt_Stmt`(S))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(inj{Stmt,KItem}(S)~>_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd25c5f1594fd1d18c33b1ee3a6afff1e88d61dceaab14e5ebe9bf9b123519e2), org.kframework.attributes.Location(Location(94,9,94,32)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule106LHS{}(SortStmt{},SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule106LHS{}(VarS:SortStmt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'LBraUndsRBraUnds'TEST-SYNTAX'Unds'Stmt'Unds'Stmt{}(VarS:SortStmt{})),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule106LHS{}(VarS:SortStmt{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(94,9,94,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("fd25c5f1594fd1d18c33b1ee3a6afff1e88d61dceaab14e5ebe9bf9b123519e2")]

// rule `<generatedTop>`(`<k>`(inj{Stmt,KItem}(`{}_TEST-SYNTAX_Stmt`(.KList))~>_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<k>`(_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(524d1cffdd2a6a9e498644f7df45a371d35790a81f0b84b2149c71373baf80bd), org.kframework.attributes.Location(Location(95,9,95,32)), org.kframework.attributes.Source(Source(/home/sam/git/haskell-backend/rpc_tests/test.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule107LHS{}(SortK{},SortGeneratedCounterCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule107LHS{}(Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'LBraRBraUnds'TEST-SYNTAX'Unds'Stmt{}()),Var'Unds'DotVar1:SortK{})),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule107LHS{}(Var'Unds'DotVar1:SortK{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar1:SortK{}),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(95,9,95,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("524d1cffdd2a6a9e498644f7df45a371d35790a81f0b84b2149c71373baf80bd")]

// rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("false","Bool"))=>#token("\"false\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f), org.kframework.attributes.Location(Location(1491,8,1491,37)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(X0:SortBool{}),
     \and{SortString{}} (
       \dv{SortString{}}("false"),
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1491,8,1491,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f")]

// rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("true","Bool"))=>#token("\"true\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d), org.kframework.attributes.Location(Location(1490,8,1490,36)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(X0:SortBool{}),
     \and{SortString{}} (
       \dv{SortString{}}("true"),
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1490,8,1490,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d")]

// rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"false\"","String"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835), org.kframework.attributes.Location(Location(1497,8,1497,37)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            \dv{SortString{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(X0:SortString{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1497,8,1497,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835")]

// rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"true\"","String"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8), org.kframework.attributes.Location(Location(1496,8,1496,36)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            \dv{SortString{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(X0:SortString{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1496,8,1496,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8")]

// rule `_%Int_`(X,N)=>X requires `_andBool_`(`_<=Int_`(#token("0","Int"),X),`_<Int_`(X,N)) ensures #token("true","Bool") [UNIQUE_ID(3c6a6ed93c91491e78006950a229b91fe57edd207091cb418b88655e3af66f94), org.kframework.attributes.Location(Location(1069,8,1069,59)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarX:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \equals{SortInt{},R} (
      Lbl'UndsPerc'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),
     \and{SortInt{}} (
       VarX:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1069,8,1069,59)"), simplification{}(""), UNIQUE'Unds'ID{}("3c6a6ed93c91491e78006950a229b91fe57edd207091cb418b88655e3af66f94")]

// rule `_&Int_`(I1,`_&Int_`(I2,C))=>`_&Int_`(`_&Int_`(I1,I2),C) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1b7de709091a3290862d7a9ca2625659b666b89c5a3b27bdfee178b1628fd179), concrete(I1, I2), org.kframework.attributes.Location(Location(1104,8,1104,50)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'UndsAnd-'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsAnd-'Int'Unds'{}(VarI2:SortInt{},VarC:SortInt{})),
     \and{SortInt{}} (
       Lbl'UndsAnd-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),VarC:SortInt{}),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI1:SortInt{},VarI2:SortInt{}), symbolic{}(VarC:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1104,8,1104,50)"), simplification{}(""), UNIQUE'Unds'ID{}("1b7de709091a3290862d7a9ca2625659b666b89c5a3b27bdfee178b1628fd179")]

// rule `_+Int_`(I,B)=>`_+Int_`(B,I) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f414cbac7ca5c0f2f75da04135615fea6af0646bed9962865d7b02a45901a09b), concrete(I), org.kframework.attributes.Location(Location(1091,8,1091,28)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(51), symbolic(B)]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},VarB:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsPlus'Int'Unds'{}(VarB:SortInt{},VarI:SortInt{}),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI:SortInt{}), symbolic{}(VarB:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1091,8,1091,28)"), simplification{}("51"), UNIQUE'Unds'ID{}("f414cbac7ca5c0f2f75da04135615fea6af0646bed9962865d7b02a45901a09b")]

// rule `_+Int_`(I,#token("0","Int"))=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d8b4ae4926d8ec7b1d5abaa5fed68fd6c7f3f5a21c76a51231394a2b36fbf995), org.kframework.attributes.Location(Location(1065,8,1065,21)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")),
     \and{SortInt{}} (
       VarI:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1065,8,1065,21)"), simplification{}(""), UNIQUE'Unds'ID{}("d8b4ae4926d8ec7b1d5abaa5fed68fd6c7f3f5a21c76a51231394a2b36fbf995")]

// rule `_+Int_`(I1,`_+Int_`(B,I3))=>`_+Int_`(B,`_+Int_`(I1,I3)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(268b9a7c15e96c6d7eca16bc9022dc880f06a15ca8018eb1854b9836fc3e965c), concrete(I1, I3), org.kframework.attributes.Location(Location(1095,8,1095,50)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(B)]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarB:SortInt{},VarI3:SortInt{})),
     \and{SortInt{}} (
       Lbl'UndsPlus'Int'Unds'{}(VarB:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI3:SortInt{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI1:SortInt{},VarI3:SortInt{}), symbolic{}(VarB:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1095,8,1095,50)"), simplification{}(""), UNIQUE'Unds'ID{}("268b9a7c15e96c6d7eca16bc9022dc880f06a15ca8018eb1854b9836fc3e965c")]

// rule `_+Int_`(I1,`_+Int_`(I2,C))=>`_+Int_`(`_+Int_`(I1,I2),C) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(945eee1b50c7ee86f3997715061349a7d77bf7ede65b292713da34b6ba2e568e), concrete(I1, I2), org.kframework.attributes.Location(Location(1097,8,1097,50)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarI2:SortInt{},VarC:SortInt{})),
     \and{SortInt{}} (
       Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),VarC:SortInt{}),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI1:SortInt{},VarI2:SortInt{}), symbolic{}(VarC:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1097,8,1097,50)"), simplification{}(""), UNIQUE'Unds'ID{}("945eee1b50c7ee86f3997715061349a7d77bf7ede65b292713da34b6ba2e568e")]

// rule `_+Int_`(I1,`_-Int_`(I2,C))=>`_-Int_`(`_+Int_`(I1,I2),C) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3f8e2290240b516c1395fc1e6f038dc63b8fe27951133eb2a64b65a0d71e1cf1), concrete(I1, I2), org.kframework.attributes.Location(Location(1098,8,1098,50)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'-Int'Unds'{}(VarI2:SortInt{},VarC:SortInt{})),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),VarC:SortInt{}),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI1:SortInt{},VarI2:SortInt{}), symbolic{}(VarC:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1098,8,1098,50)"), simplification{}(""), UNIQUE'Unds'ID{}("3f8e2290240b516c1395fc1e6f038dc63b8fe27951133eb2a64b65a0d71e1cf1")]

// rule `_+Int_`(`_+Int_`(A,I2),I3)=>`_+Int_`(A,`_+Int_`(I2,I3)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bd1f111a70bb9802e01754c9b95e7bbc5e924e2cd3749d93c73a02b7d01377a9), concrete(I2, I3), org.kframework.attributes.Location(Location(1094,8,1094,50)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(A)]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarA:SortInt{},VarI2:SortInt{}),VarI3:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsPlus'Int'Unds'{}(VarA:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarI2:SortInt{},VarI3:SortInt{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI2:SortInt{},VarI3:SortInt{}), symbolic{}(VarA:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1094,8,1094,50)"), simplification{}(""), UNIQUE'Unds'ID{}("bd1f111a70bb9802e01754c9b95e7bbc5e924e2cd3749d93c73a02b7d01377a9")]

// rule `_+Int_`(`_-Int_`(I1,B),I3)=>`_-Int_`(`_+Int_`(I1,I3),B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a0ccce19dfe6142c052181702bc6afa92bef00189634e2cd81e3df72d18b6f72), concrete(I1, I3), org.kframework.attributes.Location(Location(1099,8,1099,50)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(B)]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarB:SortInt{}),VarI3:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI3:SortInt{}),VarB:SortInt{}),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI1:SortInt{},VarI3:SortInt{}), symbolic{}(VarB:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1099,8,1099,50)"), simplification{}(""), UNIQUE'Unds'ID{}("a0ccce19dfe6142c052181702bc6afa92bef00189634e2cd81e3df72d18b6f72")]

// rule `_-Int_`(A,I)=>`_+Int_`(A,`_-Int_`(#token("0","Int"),I)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5006e67cf607e7b0d114a5cf79189eef34941e4c1136f2bcfa0ecb4a5f409aaa), concrete(I), org.kframework.attributes.Location(Location(1092,8,1092,37)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(51), symbolic(A)]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'Unds'-Int'Unds'{}(VarA:SortInt{},VarI:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsPlus'Int'Unds'{}(VarA:SortInt{},Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),VarI:SortInt{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI:SortInt{}), symbolic{}(VarA:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1092,8,1092,37)"), simplification{}("51"), UNIQUE'Unds'ID{}("5006e67cf607e7b0d114a5cf79189eef34941e4c1136f2bcfa0ecb4a5f409aaa")]

// rule `_-Int_`(I,#token("0","Int"))=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d86d26d8f81aca004f9bc8ad3e99c8c73cbf1c3dd4c60d3f44c3a524af1dff49), org.kframework.attributes.Location(Location(1066,8,1066,21)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'Unds'-Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")),
     \and{SortInt{}} (
       VarI:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1066,8,1066,21)"), simplification{}(""), UNIQUE'Unds'ID{}("d86d26d8f81aca004f9bc8ad3e99c8c73cbf1c3dd4c60d3f44c3a524af1dff49")]

// rule `_-Int_`(I1,`_+Int_`(B,I3))=>`_-Int_`(`_-Int_`(I1,I3),B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f3dfc3d737ef13caec61d97df64b52c7385de0bdcbe1ad7df52e5782b021d3bc), concrete(I1, I3), org.kframework.attributes.Location(Location(1096,8,1096,50)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(B)]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarB:SortInt{},VarI3:SortInt{})),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarI3:SortInt{}),VarB:SortInt{}),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI1:SortInt{},VarI3:SortInt{}), symbolic{}(VarB:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1096,8,1096,50)"), simplification{}(""), UNIQUE'Unds'ID{}("f3dfc3d737ef13caec61d97df64b52c7385de0bdcbe1ad7df52e5782b021d3bc")]

// rule `_-Int_`(I1,`_+Int_`(I2,C))=>`_-Int_`(`_-Int_`(I1,I2),C) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(40f6808fcbd77c0ad816055dc5c3128e2140c47840910c8141267828c3289f60), concrete(I1, I2), org.kframework.attributes.Location(Location(1100,8,1100,50)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarI2:SortInt{},VarC:SortInt{})),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),VarC:SortInt{}),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI1:SortInt{},VarI2:SortInt{}), symbolic{}(VarC:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1100,8,1100,50)"), simplification{}(""), UNIQUE'Unds'ID{}("40f6808fcbd77c0ad816055dc5c3128e2140c47840910c8141267828c3289f60")]

// rule `_-Int_`(I1,`_-Int_`(I2,C))=>`_+Int_`(`_-Int_`(I1,I2),C) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1c038450af0ca2c7dbe53cab1a50de6a5afebca70825506f82586b79697c8685), concrete(I1, I2), org.kframework.attributes.Location(Location(1101,8,1101,50)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'-Int'Unds'{}(VarI2:SortInt{},VarC:SortInt{})),
     \and{SortInt{}} (
       Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),VarC:SortInt{}),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI1:SortInt{},VarI2:SortInt{}), symbolic{}(VarC:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1101,8,1101,50)"), simplification{}(""), UNIQUE'Unds'ID{}("1c038450af0ca2c7dbe53cab1a50de6a5afebca70825506f82586b79697c8685")]

// rule `_-Int_`(`_-Int_`(C,I2),I3)=>`_-Int_`(C,`_+Int_`(I2,I3)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2f0c45ab27fd9a31e04bd48a211c47471e15e88ed3a5ab72217ae49fc4480ba9), concrete(I2, I3), org.kframework.attributes.Location(Location(1102,8,1102,50)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'Unds'-Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarC:SortInt{},VarI2:SortInt{}),VarI3:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(VarC:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarI2:SortInt{},VarI3:SortInt{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI2:SortInt{},VarI3:SortInt{}), symbolic{}(VarC:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1102,8,1102,50)"), simplification{}(""), UNIQUE'Unds'ID{}("2f0c45ab27fd9a31e04bd48a211c47471e15e88ed3a5ab72217ae49fc4480ba9")]

// rule `_<<Int_`(X,#token("0","Int"))=>X requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d9cace14bde6a604c371ca45e9ea6900a124efc18d91742ed49ef2efd97baa33), org.kframework.attributes.Location(Location(1072,8,1072,22)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},\dv{SortInt{}}("0")),
     \and{SortInt{}} (
       VarX:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1072,8,1072,22)"), simplification{}(""), UNIQUE'Unds'ID{}("d9cace14bde6a604c371ca45e9ea6900a124efc18d91742ed49ef2efd97baa33")]

// rule `_<<Int_`(#token("0","Int"),_Gen0)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d402e237d3a3b4ebf2358cc61e77cbb3ec03989d9be016003b2916d1935a8e9), org.kframework.attributes.Location(Location(1073,8,1073,22)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("0"),Var'Unds'Gen0:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("0"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1073,8,1073,22)"), simplification{}(""), UNIQUE'Unds'ID{}("2d402e237d3a3b4ebf2358cc61e77cbb3ec03989d9be016003b2916d1935a8e9")]

// rule `_<=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80), org.kframework.attributes.Location(Location(1590,8,1590,63)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1590,8,1590,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80")]

// rule `_=/=Bool_`(B1,B2)=>`notBool_`(`_==Bool_`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f), org.kframework.attributes.Location(Location(866,8,866,57)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB1:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB2:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(866,8,866,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f")]

// rule `_=/=Int_`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3), org.kframework.attributes.Location(Location(1156,8,1156,53)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Int'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1156,8,1156,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3")]

// rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c), org.kframework.attributes.Location(Location(2126,8,2126,45)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarK2:SortK{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'K'Unds'{}(X0:SortK{},X1:SortK{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2126,8,2126,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c")]

// rule `_=/=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_==String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7), org.kframework.attributes.Location(Location(1570,8,1570,65)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1570,8,1570,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7")]

// rule `_==K_`(inj{Int,KItem}(I1),inj{Int,KItem}(I2))=>`_==Int_`(I1,I2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8bf41fa14e6cef57ebcd77d165461911b0f45874319eafd20a311466ff77ac6f), org.kframework.attributes.Location(Location(1121,8,1121,40)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI1:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}())),
     \and{SortBool{}} (
       Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1121,8,1121,40)"), simplification{}(""), UNIQUE'Unds'ID{}("8bf41fa14e6cef57ebcd77d165461911b0f45874319eafd20a311466ff77ac6f")]

// rule `_==K_`(inj{Bool,KItem}(K1),inj{Bool,KItem}(K2))=>`_==Bool_`(K1,K2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(51ca403f7048793055685a9e3a051e86807f14b2d4901ae81d0b4eedff7b1d77), org.kframework.attributes.Location(Location(2100,8,2100,43)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarK1:SortBool{}),dotk{}()),kseq{}(inj{SortBool{}, SortKItem{}}(VarK2:SortBool{}),dotk{}())),
     \and{SortBool{}} (
       Lbl'UndsEqlsEqls'Bool'Unds'{}(VarK1:SortBool{},VarK2:SortBool{}),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2100,8,2100,43)"), simplification{}(""), UNIQUE'Unds'ID{}("51ca403f7048793055685a9e3a051e86807f14b2d4901ae81d0b4eedff7b1d77")]

// rule `_==K_`(inj{String,KItem}(S1),inj{String,KItem}(S2))=>`_==String__STRING-COMMON_Bool_String_String`(S1,S2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(512288fc69c52cbd01cf38881d419b391f66a3d428beddb746e0012a9f880325), org.kframework.attributes.Location(Location(1632,8,1632,49)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS1:SortString{}),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(VarS2:SortString{}),dotk{}())),
     \and{SortBool{}} (
       Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1632,8,1632,49)"), simplification{}(""), UNIQUE'Unds'ID{}("512288fc69c52cbd01cf38881d419b391f66a3d428beddb746e0012a9f880325")]

// rule `_>=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17), org.kframework.attributes.Location(Location(1592,8,1592,63)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1592,8,1592,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17")]

// rule `_>>Int_`(X,#token("0","Int"))=>X requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(572bf49a8ddd18981c88d4573e09bebfa4ca9f0d3d1caaea04d9fa30b5d20c39), org.kframework.attributes.Location(Location(1074,8,1074,22)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},\dv{SortInt{}}("0")),
     \and{SortInt{}} (
       VarX:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1074,8,1074,22)"), simplification{}(""), UNIQUE'Unds'ID{}("572bf49a8ddd18981c88d4573e09bebfa4ca9f0d3d1caaea04d9fa30b5d20c39")]

// rule `_>>Int_`(#token("0","Int"),_Gen0)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1cf22edfe70c5e6f01624499522c9b110616a96e9f7894de7508ebb4a51091b9), org.kframework.attributes.Location(Location(1075,8,1075,22)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortInt{},R} (
      Lbl'Unds-GT--GT-'Int'Unds'{}(\dv{SortInt{}}("0"),Var'Unds'Gen0:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("0"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1075,8,1075,22)"), simplification{}(""), UNIQUE'Unds'ID{}("1cf22edfe70c5e6f01624499522c9b110616a96e9f7894de7508ebb4a51091b9")]

// rule `_>String__STRING-COMMON_Bool_String_String`(S1,S2)=>`_<String__STRING-COMMON_Bool_String_String`(S2,S1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0), org.kframework.attributes.Location(Location(1591,8,1591,52)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{}),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1591,8,1591,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0")]

// rule `_andBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497), org.kframework.attributes.Location(Location(839,8,839,37)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(839,8,839,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497")]

// rule `_andBool_`(B,#token("true","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98), org.kframework.attributes.Location(Location(838,8,838,37)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(838,8,838,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98")]

// rule `_andBool_`(_Gen0,#token("false","Bool") #as _Gen1)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca), org.kframework.attributes.Location(Location(840,8,840,37)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(840,8,840,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca")]

// rule `_andBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f), org.kframework.attributes.Location(Location(837,8,837,37)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(837,8,837,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f")]

// rule `_andThenBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d), org.kframework.attributes.Location(Location(844,8,844,36)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(844,8,844,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d")]

// rule `_andThenBool_`(K,#token("true","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c), org.kframework.attributes.Location(Location(843,8,843,37)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(843,8,843,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c")]

// rule `_andThenBool_`(_Gen0,#token("false","Bool") #as _Gen1)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2), org.kframework.attributes.Location(Location(845,8,845,36)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(845,8,845,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2")]

// rule `_andThenBool_`(#token("true","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689), org.kframework.attributes.Location(Location(842,8,842,37)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(842,8,842,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689")]

// rule `_divInt_`(I1,I2)=>`_/Int_`(`_-Int_`(I1,`_modInt_`(I1,I2)),I2) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4), org.kframework.attributes.Location(Location(1145,8,1146,23)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      Lbl'Unds'divInt'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsSlsh'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarI2:SortInt{}),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1145,8,1146,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4")]

// rule `_dividesInt__INT-COMMON_Bool_Int_Int`(I1,I2)=>`_==Int_`(`_%Int_`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5), org.kframework.attributes.Location(Location(1157,8,1157,58)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},VarI1:SortInt{}),\dv{SortInt{}}("0")),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1157,8,1157,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5")]

// rule `_impliesBool_`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96), org.kframework.attributes.Location(Location(864,8,864,45)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(VarB:SortBool{}),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(864,8,864,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96")]

// rule `_impliesBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712), org.kframework.attributes.Location(Location(863,8,863,39)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(863,8,863,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712")]

// rule `_impliesBool_`(#token("false","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e), org.kframework.attributes.Location(Location(862,8,862,40)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(862,8,862,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e")]

// rule `_impliesBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d), org.kframework.attributes.Location(Location(861,8,861,36)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(861,8,861,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d")]

// rule `_modInt_`(I1,I2)=>`_%Int_`(`_+Int_`(`_%Int_`(I1,`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6), concrete, org.kframework.attributes.Location(Location(1148,5,1151,23)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \equals{SortInt{},R} (
      Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsPerc'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1148,5,1151,23)"), simplification{}(""), UNIQUE'Unds'ID{}("adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6")]

// rule `_modInt_`(X,N)=>X requires `_andBool_`(`_<=Int_`(#token("0","Int"),X),`_<Int_`(X,N)) ensures #token("true","Bool") [UNIQUE_ID(3a397a001af2fcd0eaf3c29fa026cf37c07fb9b8d6245bae8906780b5e74f503), org.kframework.attributes.Location(Location(1068,8,1068,59)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarX:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \equals{SortInt{},R} (
      Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarN:SortInt{}),
     \and{SortInt{}} (
       VarX:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1068,8,1068,59)"), simplification{}(""), UNIQUE'Unds'ID{}("3a397a001af2fcd0eaf3c29fa026cf37c07fb9b8d6245bae8906780b5e74f503")]

// rule `_orBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26), org.kframework.attributes.Location(Location(854,8,854,32)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(854,8,854,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26")]

// rule `_orBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3), org.kframework.attributes.Location(Location(852,8,852,34)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(852,8,852,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3")]

// rule `_orBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b), org.kframework.attributes.Location(Location(853,8,853,32)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(853,8,853,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b")]

// rule `_orBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2), org.kframework.attributes.Location(Location(851,8,851,34)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(851,8,851,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2")]

// rule `_orElseBool_`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480), org.kframework.attributes.Location(Location(859,8,859,37)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(859,8,859,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480")]

// rule `_orElseBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14), org.kframework.attributes.Location(Location(857,8,857,33)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(857,8,857,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14")]

// rule `_orElseBool_`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf), org.kframework.attributes.Location(Location(858,8,858,37)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(858,8,858,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf")]

// rule `_orElseBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6), org.kframework.attributes.Location(Location(856,8,856,33)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(856,8,856,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6")]

// rule `_xorBool_`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f), org.kframework.attributes.Location(Location(849,8,849,38)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(849,8,849,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f")]

// rule `_xorBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75), org.kframework.attributes.Location(Location(848,8,848,38)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(848,8,848,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75")]

// rule `_xorBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf), org.kframework.attributes.Location(Location(847,8,847,38)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(847,8,847,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf")]

// rule `_|Set__SET_Set_Set_Set`(S1,S2)=>`_Set_`(S1,`Set:difference`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62), org.kframework.attributes.Location(Location(553,8,553,45)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortSet{}, R} (
            X0:SortSet{},
            VarS1:SortSet{}
          ),\and{R} (
          \in{SortSet{}, R} (
            X1:SortSet{},
            VarS2:SortSet{}
          ),
          \top{R} ()
        ))),
    \equals{SortSet{},R} (
      Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(X0:SortSet{},X1:SortSet{}),
     \and{SortSet{}} (
       Lbl'Unds'Set'Unds'{}(VarS1:SortSet{},LblSet'Coln'difference{}(VarS2:SortSet{},VarS1:SortSet{})),
        \top{SortSet{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(553,8,553,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62")]

// rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_modInt_`(`_>>Int_`(I,IDX),`_<<Int_`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119), org.kframework.attributes.Location(Location(1141,8,1141,85)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI:SortInt{},VarIDX:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1141,8,1141,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToCount)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToCount)) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e), org.kframework.attributes.Location(Location(1601,8,1602,60)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToCount:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortInt{}} (
       Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToCount:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToCount:SortString{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1601,8,1602,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>#token("0","Int") requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84), org.kframework.attributes.Location(Location(1599,8,1600,59)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToCount:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("0"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1599,8,1600,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),#token("-1","Int")),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT-COMMON_Int_Int_Int`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)))) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295), org.kframework.attributes.Location(Location(1594,8,1594,431)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{})))),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1594,8,1594,431)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_Gen0,#token("\"\"","String"),_Gen1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117), org.kframework.attributes.Location(Location(1595,8,1595,32)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            \dv{SortString{}}("")
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'Gen1:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("-1"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1595,8,1595,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117")]

// rule `freshId(_)_ID-COMMON_Id_Int`(I)=>`String2Id(_)_ID-COMMON_Id_String`(`_+String__STRING-COMMON_String_String_String`(#token("\"_\"","String"),`Int2String(_)_STRING-COMMON_String_Int`(I))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3965c8e65257ebae926d601fa8ac672d34e4c211d73ba594c571c6bc5960f3de), org.kframework.attributes.Location(Location(2052,8,2052,62)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortId{},R} (
      LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(X0:SortInt{}),
     \and{SortId{}} (
       LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("_"),LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(VarI:SortInt{}))),
        \top{SortId{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2052,8,2052,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3965c8e65257ebae926d601fa8ac672d34e4c211d73ba594c571c6bc5960f3de")]

// rule `freshInt(_)_INT_Int_Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b), org.kframework.attributes.Location(Location(1160,8,1160,28)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(X0:SortInt{}),
     \and{SortInt{}} (
       VarI:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1160,8,1160,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b")]

// rule getGeneratedCounterCell(`<generatedTop>`(_Gen0,Cell,_Gen1))=>Cell requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortGeneratedTopCell{}, R} (
            X0:SortGeneratedTopCell{},
            Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'Gen0:SortKCell{},VarCell:SortGeneratedCounterCell{},Var'Unds'Gen1:SortStoreCell{})
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      LblgetGeneratedCounterCell{}(X0:SortGeneratedTopCell{}),
     \and{SortGeneratedCounterCell{}} (
       VarCell:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  []

// rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortGeneratedCounterCell{},R} (
      LblinitGeneratedCounterCell{}(),
     \and{SortGeneratedCounterCell{}} (
       Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortGeneratedCounterCell{}}())))
  [initializer{}()]

// rule initGeneratedTopCell(Init)=>`<generatedTop>`(initKCell(Init),initGeneratedCounterCell(.KList),initStoreCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(759590bfece89326fd64763efe4067394b44dab1a6f41f6c9c2cd179ec7f5fad), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      LblinitGeneratedTopCell{}(X0:SortMap{}),
     \and{SortGeneratedTopCell{}} (
       Lbl'-LT-'generatedTop'-GT-'{}(LblinitKCell{}(VarInit:SortMap{}),LblinitGeneratedCounterCell{}(),LblinitStoreCell{}()),
        \top{SortGeneratedTopCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("759590bfece89326fd64763efe4067394b44dab1a6f41f6c9c2cd179ec7f5fad")]

// rule initKCell(Init)=>`<k>`(inj{Stmt,KItem}(`project:Stmt`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$PGM","KConfigVar")))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(22d54eca8d9ac85f814b9c78605ed3331a8a4d463df4bf0fa35d2c76bafb8855), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      LblinitKCell{}(X0:SortMap{}),
     \and{SortKCell{}} (
       Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblproject'Coln'Stmt{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$PGM"))),dotk{}()))),dotk{}())),
        \top{SortKCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("22d54eca8d9ac85f814b9c78605ed3331a8a4d463df4bf0fa35d2c76bafb8855")]

// rule initStoreCell(.KList)=>`<store>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(25c9fd48ffb4ae6d3301adb7ee16d732c9e7eff638e62fef57a687c62281f5ee), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortStoreCell{},R} (
      LblinitStoreCell{}(),
     \and{SortStoreCell{}} (
       Lbl'-LT-'store'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortStoreCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("25c9fd48ffb4ae6d3301adb7ee16d732c9e7eff638e62fef57a687c62281f5ee")]

// rule isBExp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBExp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBExp{}, SortKItem{}}(Var'Unds'Gen0:SortBExp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBExp(inj{BExp,KItem}(BExp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBExp{}, SortKItem{}}(VarBExp:SortBExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isBool(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBool{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'Gen0:SortBool{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBool(inj{Bool,KItem}(Bool))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isExp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortExp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isExp(inj{Exp,KItem}(Exp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExp{}, SortKItem{}}(VarExp:SortExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isFloat(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortFloat{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFloat{}, SortKItem{}}(Var'Unds'Gen1:SortFloat{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisFloat{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isFloat(inj{Float,KItem}(Float))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFloat{}, SortKItem{}}(VarFloat:SortFloat{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisFloat{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isGeneratedCounterCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedCounterCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedCounterCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isGeneratedCounterCell(inj{GeneratedCounterCell,KItem}(GeneratedCounterCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isGeneratedTopCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedTopCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedTopCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isGeneratedTopCell(inj{GeneratedTopCell,KItem}(GeneratedTopCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isGeneratedTopCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortGeneratedTopCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(Var'Unds'Gen0:SortGeneratedTopCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isGeneratedTopCellFragment(inj{GeneratedTopCellFragment,KItem}(GeneratedTopCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isIExp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIExp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIExp{}, SortKItem{}}(Var'Unds'Gen1:SortIExp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isIExp(inj{IExp,KItem}(IExp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIExp{}, SortKItem{}}(VarIExp:SortIExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isId(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisId{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isId(inj{Id,KItem}(Id))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortId{}, SortKItem{}}(VarId:SortId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisId{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'Gen1:SortInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isInt(inj{Int,KItem}(Int))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isK(K)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisK{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCell{}, SortKItem{}}(Var'Unds'Gen1:SortKCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKCell(inj{KCell,KItem}(KCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarKCell:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortKCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortKCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKCellOpt(inj{KCellOpt,KItem}(KCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarKCellOpt:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKConfigVar(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKConfigVar{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKConfigVar{}, SortKItem{}}(Var'Unds'Gen1:SortKConfigVar{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKConfigVar(inj{KConfigVar,KItem}(KConfigVar))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(Var'Unds'Gen1:SortKItem{},dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKItem(KItem)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarKItem:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKResult(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKResult{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKResult{}, SortKItem{}}(Var'Unds'Gen1:SortKResult{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKResult(inj{KResult,KItem}(KResult))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKResult{}, SortKItem{}}(VarKResult:SortKResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortList{}, SortKItem{}}(Var'Unds'Gen0:SortList{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isList(inj{List,KItem}(List))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMap{}, SortKItem{}}(Var'Unds'Gen1:SortMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isMap(inj{Map,KItem}(Map))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortSet{}, SortKItem{}}(Var'Unds'Gen0:SortSet{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isSet(inj{Set,KItem}(Set))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStmt{}, SortKItem{}}(Var'Unds'Gen0:SortStmt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStmt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isStmt(inj{Stmt,KItem}(Stmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStmt{}, SortKItem{}}(VarStmt:SortStmt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStmt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isStoreCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortStoreCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStoreCell{}, SortKItem{}}(Var'Unds'Gen1:SortStoreCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStoreCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isStoreCell(inj{StoreCell,KItem}(StoreCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCell{}, SortKItem{}}(VarStoreCell:SortStoreCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStoreCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isStoreCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortStoreCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortStoreCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStoreCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isStoreCellOpt(inj{StoreCellOpt,KItem}(StoreCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(VarStoreCellOpt:SortStoreCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStoreCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'Gen1:SortString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isString(inj{String,KItem}(String))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarString:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I1 requires `_<=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6), org.kframework.attributes.Location(Location(1153,8,1153,57)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI1:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1153,8,1153,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I2 requires `_>=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3), org.kframework.attributes.Location(Location(1154,8,1154,57)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI2:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1154,8,1154,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3")]

// rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415), org.kframework.attributes.Location(Location(835,8,835,29)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(835,8,835,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415")]

// rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c), org.kframework.attributes.Location(Location(834,8,834,29)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(834,8,834,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c")]

// rule `project:BExp`(inj{BExp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBExp{}, SortKItem{}}(VarK:SortBExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBExp{},R} (
      Lblproject'Coln'BExp{}(X0:SortK{}),
     \and{SortBExp{}} (
       VarK:SortBExp{},
        \top{SortBExp{}}())))
  [projection{}()]

// rule `project:Bool`(inj{Bool,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarK:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      Lblproject'Coln'Bool{}(X0:SortK{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [projection{}()]

// rule `project:Exp`(inj{Exp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExp{}, SortKItem{}}(VarK:SortExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortExp{},R} (
      Lblproject'Coln'Exp{}(X0:SortK{}),
     \and{SortExp{}} (
       VarK:SortExp{},
        \top{SortExp{}}())))
  [projection{}()]

// rule `project:Float`(inj{Float,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFloat{}, SortKItem{}}(VarK:SortFloat{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortFloat{},R} (
      Lblproject'Coln'Float{}(X0:SortK{}),
     \and{SortFloat{}} (
       VarK:SortFloat{},
        \top{SortFloat{}}())))
  [projection{}()]

// rule `project:GeneratedCounterCell`(inj{GeneratedCounterCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarK:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      Lblproject'Coln'GeneratedCounterCell{}(X0:SortK{}),
     \and{SortGeneratedCounterCell{}} (
       VarK:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  [projection{}()]

// rule `project:GeneratedTopCell`(inj{GeneratedTopCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarK:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      Lblproject'Coln'GeneratedTopCell{}(X0:SortK{}),
     \and{SortGeneratedTopCell{}} (
       VarK:SortGeneratedTopCell{},
        \top{SortGeneratedTopCell{}}())))
  [projection{}()]

// rule `project:GeneratedTopCellFragment`(inj{GeneratedTopCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarK:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCellFragment{},R} (
      Lblproject'Coln'GeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortGeneratedTopCellFragment{}} (
       VarK:SortGeneratedTopCellFragment{},
        \top{SortGeneratedTopCellFragment{}}())))
  [projection{}()]

// rule `project:IExp`(inj{IExp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIExp{}, SortKItem{}}(VarK:SortIExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIExp{},R} (
      Lblproject'Coln'IExp{}(X0:SortK{}),
     \and{SortIExp{}} (
       VarK:SortIExp{},
        \top{SortIExp{}}())))
  [projection{}()]

// rule `project:Id`(inj{Id,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortId{}, SortKItem{}}(VarK:SortId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortId{},R} (
      Lblproject'Coln'Id{}(X0:SortK{}),
     \and{SortId{}} (
       VarK:SortId{},
        \top{SortId{}}())))
  [projection{}()]

// rule `project:Int`(inj{Int,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarK:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'Coln'Int{}(X0:SortK{}),
     \and{SortInt{}} (
       VarK:SortInt{},
        \top{SortInt{}}())))
  [projection{}()]

// rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortK{},R} (
      Lblproject'Coln'K{}(X0:SortK{}),
     \and{SortK{}} (
       VarK:SortK{},
        \top{SortK{}}())))
  [projection{}()]

// rule `project:KCell`(inj{KCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarK:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      Lblproject'Coln'KCell{}(X0:SortK{}),
     \and{SortKCell{}} (
       VarK:SortKCell{},
        \top{SortKCell{}}())))
  [projection{}()]

// rule `project:KCellOpt`(inj{KCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarK:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCellOpt{},R} (
      Lblproject'Coln'KCellOpt{}(X0:SortK{}),
     \and{SortKCellOpt{}} (
       VarK:SortKCellOpt{},
        \top{SortKCellOpt{}}())))
  [projection{}()]

// rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarK:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKItem{},R} (
      Lblproject'Coln'KItem{}(X0:SortK{}),
     \and{SortKItem{}} (
       VarK:SortKItem{},
        \top{SortKItem{}}())))
  [projection{}()]

// rule `project:KResult`(inj{KResult,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKResult{}, SortKItem{}}(VarK:SortKResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKResult{},R} (
      Lblproject'Coln'KResult{}(X0:SortK{}),
     \and{SortKResult{}} (
       VarK:SortKResult{},
        \top{SortKResult{}}())))
  [projection{}()]

// rule `project:List`(inj{List,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarK:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortList{},R} (
      Lblproject'Coln'List{}(X0:SortK{}),
     \and{SortList{}} (
       VarK:SortList{},
        \top{SortList{}}())))
  [projection{}()]

// rule `project:Map`(inj{Map,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarK:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortMap{},R} (
      Lblproject'Coln'Map{}(X0:SortK{}),
     \and{SortMap{}} (
       VarK:SortMap{},
        \top{SortMap{}}())))
  [projection{}()]

// rule `project:Set`(inj{Set,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarK:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortSet{},R} (
      Lblproject'Coln'Set{}(X0:SortK{}),
     \and{SortSet{}} (
       VarK:SortSet{},
        \top{SortSet{}}())))
  [projection{}()]

// rule `project:Stmt`(inj{Stmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStmt{}, SortKItem{}}(VarK:SortStmt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStmt{},R} (
      Lblproject'Coln'Stmt{}(X0:SortK{}),
     \and{SortStmt{}} (
       VarK:SortStmt{},
        \top{SortStmt{}}())))
  [projection{}()]

// rule `project:StoreCell`(inj{StoreCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCell{}, SortKItem{}}(VarK:SortStoreCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStoreCell{},R} (
      Lblproject'Coln'StoreCell{}(X0:SortK{}),
     \and{SortStoreCell{}} (
       VarK:SortStoreCell{},
        \top{SortStoreCell{}}())))
  [projection{}()]

// rule `project:StoreCellOpt`(inj{StoreCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(VarK:SortStoreCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStoreCellOpt{},R} (
      Lblproject'Coln'StoreCellOpt{}(X0:SortK{}),
     \and{SortStoreCellOpt{}} (
       VarK:SortStoreCellOpt{},
        \top{SortStoreCellOpt{}}())))
  [projection{}()]

// rule `project:String`(inj{String,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarK:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      Lblproject'Coln'String{}(X0:SortK{}),
     \and{SortString{}} (
       VarK:SortString{},
        \top{SortString{}}())))
  [projection{}()]

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,Count)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToReplace,Replacement,`_-Int_`(Count,#token("1","Int")))) requires `_>Int_`(Count,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9), org.kframework.attributes.Location(Location(1611,8,1614,30)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarCount:SortInt{}
          ),
          \top{R} ()
        ))))),
    \equals{SortString{},R} (
      Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortString{},X3:SortInt{}),
     \and{SortString{}} (
       Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToReplace:SortString{},VarReplacement:SortString{},Lbl'Unds'-Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1611,8,1614,30)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9")]

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,_Gen0,_Gen1,#token("0","Int"))=>Source requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5), org.kframework.attributes.Location(Location(1615,8,1615,49)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            Var'Unds'Gen1:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            \dv{SortInt{}}("0")
          ),
          \top{R} ()
        ))))),
    \equals{SortString{},R} (
      Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortString{},X3:SortInt{}),
     \and{SortString{}} (
       VarSource:SortString{},
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1615,8,1615,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5")]

// rule `replaceAll(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToReplace)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5), org.kframework.attributes.Location(Location(1616,8,1616,154)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{})),
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1616,8,1616,154)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source))) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c), org.kframework.attributes.Location(Location(1604,8,1606,66)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{}))),
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1604,8,1606,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,_Gen0)=>Source requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34), org.kframework.attributes.Location(Location(1607,8,1608,57)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            Var'Unds'Gen0:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       VarSource:SortString{},
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1607,8,1608,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`rfindString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205), org.kframework.attributes.Location(Location(1596,8,1596,182)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1596,8,1596,182)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_Gen0,#token("\"\"","String"),_Gen1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6), org.kframework.attributes.Location(Location(1597,8,1597,33)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            \dv{SortString{}}("")
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'Gen1:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("-1"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1597,8,1597,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6")]

// rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))),`_<<Int_`(#token("1","Int"),LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f), org.kframework.attributes.Location(Location(1143,8,1143,164)), org.kframework.attributes.Source(Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1143,8,1143,164)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ammyi79fv13y6jhdc58ywq199g4qsb2f-k-5.3.0-ff5dcc3b56e055c6ca22f68bd994c77c9563743f-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f")]

// rule #Ceil{Map,#SortParam}(`_Map_`(`_|->_`(@K0,@K1),@Rest))=>#And{#SortParam}(#Equals{Bool,#SortParam}(`_in_keys(_)_MAP_Bool_KItem_Map`(@K0,@Rest),#token("false","Bool")),#And{#SortParam}(#Top{#SortParam}(.KList),#Ceil{KItem,#SortParam}(@K1))) requires #token("true","Bool") ensures #token("true","Bool") [simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \equals{Q0,R} (
      \ceil{SortMap{}, Q0}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(@VarK0:SortKItem{},@VarK1:SortKItem{}),@VarRest:SortMap{})),
     \and{Q0} (
       \and{Q0}(\equals{SortBool{}, Q0}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(@VarK0:SortKItem{},@VarRest:SortMap{}),\dv{SortBool{}}("false")),\and{Q0}(\top{Q0}(),\ceil{SortKItem{}, Q0}(@VarK1:SortKItem{}))),
        \top{Q0}())))
  [simplification{}(""), sortParams{}("{Q0}")]


// priority groups
endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(48,1,103,10)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/sam/git/haskell-backend/rpc_tests/test.k)")]
