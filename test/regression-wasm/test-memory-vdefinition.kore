[topCellInitializer{}(LblinitGeneratedTopCell{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)")]

module BASIC-K
    sort SortK{} []
    sort SortKItem{} []
endmodule
[]
module KSEQ
    import BASIC-K []
    symbol kseq{}(SortKItem{}, SortK{}) : SortK{} [constructor{}(), functional{}()]
    symbol dotk{}() : SortK{} [constructor{}(), functional{}()]
    symbol append{}(SortK{}, SortK{}) : SortK{} [function{}()]
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, dotk{}()),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \and{R}(
            \equals{SortK{}, R}(
                append{}(X0:SortK{}, X1:SortK{}),
                TAIL:SortK{}
            ),
            \top{R}()
        )
    ) []
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, kseq{}(K:SortKItem{}, KS:SortK{})),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \and{R}(
            \equals{SortK{}, R}(
                append{}(X0:SortK{}, X1:SortK{}),
                kseq{}(K:SortKItem{}, append{}(KS:SortK{}, TAIL:SortK{}))
            ),
            \top{R}()
        )
    ) []
endmodule
[]
module INJ
    symbol inj{From, To}(From) : To [sortInjection{}()]
    axiom {S1, S2, S3, R} \equals{S3, R}(inj{S2, S3}(inj{S1, S2}(T:S1)), inj{S1, S3}(T:S1)) [simplification{}()]
endmodule
[]
module K
    import KSEQ []
    import INJ []
    alias weakExistsFinally{A}(A) : A where weakExistsFinally{A}(@X:A) := @X:A []
    alias weakAlwaysFinally{A}(A) : A where weakAlwaysFinally{A}(@X:A) := @X:A []
    alias allPathGlobally{A}(A) : A where allPathGlobally{A}(@X:A) := @X:A []
endmodule
[]
module KWASM-LEMMAS

// imports
  import K []

// sorts
  sort SortFModInstCell{} []
  sort SortCurModIdxCellOpt{} []
  sort SortEmptyStmt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,5,49,20)")]
  sort SortFLocalCell{} []
  sort SortModIdxCell{} []
  sort SortLocalDecls{} []
  sort SortNextGlobAddrCell{} []
  sort SortFuncMetadata{} []
  sort SortModuleIdCell{} []
  sort SortTdataCellOpt{} []
  sort SortDataString{} []
  sort SortExportDefn{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(146,5,146,21)")]
  sort SortCvtf64Op{} []
  sort SortPlainInstr{} []
  sort SortModuleMetadataCellFragment{} []
  sort SortIRelOp{} []
  sort SortEmptyStmts{} []
  sort SortOffsetArg{} []
  sort SortNextGlobIdxCellOpt{} []
  sort SortGlobalsCellOpt{} []
  sort SortTestOp{} []
  sort SortNextTabAddrCell{} []
  sort SortGlobIdsCell{} []
  sort SortNextMemAddrCell{} []
  sort SortWasmCell{} []
  sort SortTAddrCell{} []
  sort SortModuleInstancesCellFragment{} []
  sort SortBlockMetaData{} []
  sort SortTabsCell{} []
  sort SortOptionalInt{} []
  sort SortFCodeCell{} []
  sort SortTmaxCellOpt{} []
  sort SortFuncIdCell{} []
  sort SortTypeKeyWord{} []
  sort SortFTypeCellOpt{} []
  sort SortStoreOpM{} []
  sort SortStartDefn{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(144,5,144,20)")]
  sort SortNextGlobAddrCellOpt{} []
  sort SortModIdxCellOpt{} []
  sort SortIdentifierToken{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,5,22,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), token{}(), hasDomainValues{}()]
  sort SortNextModuleIdxCellOpt{} []
  sort SortTabIdsCell{} []
  sort SortFuncIdsCell{} []
  sort SortTypeDecl{} []
  sort SortInlineExport{} []
  sort SortFBinOp{} []
  sort SortImportDefn{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(145,5,145,21)")]
  sort SortVal{} []
  sort SortFuncDefCell{} []
  sort SortAlignArg{} []
  sort SortFuncAddrsCell{} []
  sort SortMemType{} []
  sort Sort'Hash'Layout{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), token{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,5,24,34)"), hasDomainValues{}()]
  sort SortMemsCell{} []
  sort SortCurFrameCellOpt{} []
  sort SortFuncIdsCellOpt{} []
  sort SortStoreOp{} []
  sort SortModuleMetadataCell{} []
  sort SortTypeDecls{} []
  sort SortLocalsCellOpt{} []
  sort SortLocalIdsCellOpt{} []
  sort SortValStack{} []
  sort SortTextLimits{} []
  sort SortLoadOp{} []
  sort SortNumber{} []
  sort SortNextTabAddrCellOpt{} []
  sort SortMemorySpec{} []
  sort SortGlobalSpec{} []
  hooked-sort SortTabInstCellMap{} [element{}(LblTabInstCellMapItem{}()), cellCollection{}(), concat{}(Lbl'Unds'TabInstCellMap'Unds'{}()), unit{}(Lbl'Stop'TabInstCellMap{}()), hook{}("MAP.Map")]
  sort SortFoldedInstr{} []
  sort SortIUnOp{} []
  sort SortGlobalInstCell{} []
  sort SortGlobalsCellFragment{} []
  sort SortMemsCellOpt{} []
  sort SortGValueCellOpt{} []
  sort SortGeneratedTopCellFragment{} []
  hooked-sort SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), element{}(LblListItem{}()), concat{}(Lbl'Unds'List'Unds'{}()), unit{}(Lbl'Stop'List{}()), hook{}("LIST.List"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(631,3,631,31)")]
  sort SortTdataCell{} []
  sort SortFuncsCell{} []
  sort SortIdentifier{} []
  sort SortValstackCell{} []
  sort SortFuncMetadataCellOpt{} []
  sort SortFuncMetadataCellFragment{} []
  sort SortTabsCellOpt{} []
  sort SortFuncsCellFragment{} []
  sort SortLimits{} []
  sort SortFValType{} []
  sort SortNextModuleIdxCell{} []
  sort SortWasmIntToken{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,5,23,34)"), token{}(), hasDomainValues{}()]
  sort SortFModInstCellOpt{} []
  sort SortBlockInstr{} []
  sort SortIBinOp{} []
  sort SortFuncDefn{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(139,5,139,19)")]
  sort SortGAddrCellOpt{} []
  sort SortGeneratedTopCell{} []
  sort SortGlobalAddrsCell{} []
  sort SortTypeDefn{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(137,5,137,19)")]
  sort SortModuleInstancesCellOpt{} []
  sort SortGeneratedCounterCell{} []
  sort SortExternval{} []
  sort SortOptionalString{} []
  sort SortMemAddrsCell{} []
  sort SortInts{} []
  sort SortTypesCellOpt{} []
  sort SortValstackCellOpt{} []
  sort SortWasmCellFragment{} []
  sort SortAllocatedKind{} []
  sort SortCvtf32Op{} []
  sort SortMainStoreCell{} []
  hooked-sort SortFuncDefCellMap{} [element{}(LblFuncDefCellMapItem{}()), cellCollection{}(), concat{}(Lbl'Unds'FuncDefCellMap'Unds'{}()), unit{}(Lbl'Stop'FuncDefCellMap{}()), hook{}("MAP.Map")]
  sort SortElemDefn{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(142,5,142,19)")]
  sort SortLabel{} []
  sort SortCurFrameCell{} []
  sort SortGlobIdsCellOpt{} []
  sort SortMemArg{} []
  sort SortSignedness{} []
  hooked-sort SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1160,3,1160,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), hook{}("FLOAT.Float"), hasDomainValues{}()]
  sort SortTmaxCell{} []
  sort SortLoadOpM{} []
  sort SortModuleIdsCellOpt{} []
  sort SortWasmCellOpt{} []
  sort SortStmts{} []
  sort SortInlineImport{} []
  sort SortFTypeCell{} []
  sort SortContext{} []
  sort SortLocalsCell{} []
  sort SortVecType{} []
  sort SortTabAddrsCell{} []
  sort SortExportsCell{} []
  sort SortGMutCell{} []
  hooked-sort SortGlobalInstCellMap{} [element{}(LblGlobalInstCellMapItem{}()), cellCollection{}(), concat{}(Lbl'Unds'GlobalInstCellMap'Unds'{}()), unit{}(Lbl'Stop'GlobalInstCellMap{}()), hook{}("MAP.Map")]
  sort SortModuleMetadataCellOpt{} []
  sort SortTypeIdsCellOpt{} []
  hooked-sort SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), concat{}(Lbl'Unds'Map'Unds'{}()), unit{}(Lbl'Stop'Map{}()), hook{}("MAP.Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(227,3,227,28)")]
  sort SortGlobalAddrsCellOpt{} []
  sort SortModuleInstCellFragment{} []
  sort SortTableElemType{} []
  sort SortMut{} []
  hooked-sort SortString{} [hook{}("STRING.String"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1370,3,1370,37)"), hasDomainValues{}()]
  sort SortFuncType{} []
  sort SortMsizeCellOpt{} []
  sort SortMemAddrsCellOpt{} []
  sort SortFRelOp{} []
  sort SortElemSegment{} []
  sort SortTsizeCellOpt{} []
  sort SortTableSpec{} []
  sort SortGeneratedCounterCellOpt{} []
  sort SortNextMemAddrCellOpt{} []
  sort SortFuncDefCellFragment{} []
  sort SortMemInstCellFragment{} []
  sort SortTabAddrsCellOpt{} []
  sort SortMemoryDefn{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(141,5,141,21)")]
  sort SortMsizeCell{} []
  sort SortGValueCell{} []
  sort SortMmaxCellOpt{} []
  sort SortMemIdsCell{} []
  sort SortKConfigVar{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,3,40,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/kast.md)"), token{}(), hasDomainValues{}()]
  sort SortLocalDecl{} []
  sort SortNextTypeIdxCellOpt{} []
  sort SortTypesCell{} []
  sort SortMainStoreCellFragment{} []
  sort SortCvtOp{} []
  sort SortCvti32Op{} []
  sort SortMemsCellFragment{} []
  sort SortTabIdsCellOpt{} []
  sort SortNextFuncAddrCellOpt{} []
  sort SortDefn{} []
  sort SortFuncMetadataCell{} []
  sort SortFAddrCell{} []
  sort SortOptionalId{} []
  sort SortFVal{} []
  sort SortFLocalCellOpt{} []
  sort SortDeterministicMemoryGrowthCellOpt{} []
  sort SortTabInstCellFragment{} []
  sort SortInstrsCellOpt{} []
  hooked-sort SortInt{} [hook{}("INT.Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(888,3,888,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), hasDomainValues{}()]
  sort SortTypeUse{} []
  sort SortModuleInstCell{} []
  sort SortGMutCellOpt{} []
  sort SortValTypes{} []
  sort SortFrame{} []
  sort SortModuleRegistryCellOpt{} []
  sort SortOffset{} []
  sort SortModuleRegistryCell{} []
  hooked-sort SortSet{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), element{}(LblSetItem{}()), concat{}(Lbl'Unds'Set'Unds'{}()), unit{}(Lbl'Stop'Set{}()), hook{}("SET.Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(506,3,506,28)")]
  sort SortNextFuncAddrCell{} []
  sort SortGlobalDefn{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(138,5,138,21)")]
  sort SortCvti64Op{} []
  sort SortNextFuncIdxCellOpt{} []
  sort SortModuleIdsCell{} []
  sort SortFAddrCellOpt{} []
  sort SortWasmString{} []
  sort SortMemIdsCellOpt{} []
  sort SortImportDesc{} []
  sort SortTableType{} []
  sort SortDefns{} []
  sort SortFCodeCellOpt{} []
  sort SortNextTypeIdxCell{} []
  sort SortFuncSpec{} []
  sort SortModuleInstancesCell{} []
  sort SortIValType{} []
  sort SortInstrsCell{} []
  sort SortFuncsCellOpt{} []
  hooked-sort SortBytes{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), token{}(), hook{}("BYTES.Bytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1667,3,1667,41)")]
  sort SortMAddrCellOpt{} []
  sort SortTAddrCellOpt{} []
  sort SortValType{} []
  sort SortInstr{} []
  sort SortMemInstCell{} []
  sort SortModuleIdCellOpt{} []
  sort SortTypesInfo{} []
  sort SortModuleDecl{} []
  sort SortEndianness{} []
  sort SortIVal{} []
  sort SortInstrs{} []
  sort SortLocalIdsCell{} []
  sort SortDeterministicMemoryGrowthCell{} []
  sort SortGlobalInstCellFragment{} []
  sort SortMAddrCell{} []
  sort SortTableDefn{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(140,5,140,20)")]
  sort SortType{} []
  sort SortNextFuncIdxCell{} []
  sort SortGlobalType{} []
  sort SortTextFormatGlobalType{} []
  sort SortDataDefn{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(143,5,143,19)")]
  sort SortIndex{} []
  sort SortModuleMetadata{} []
  sort SortTabsCellFragment{} []
  hooked-sort SortModuleInstCellMap{} [element{}(LblModuleInstCellMapItem{}()), cellCollection{}(), concat{}(Lbl'Unds'ModuleInstCellMap'Unds'{}()), unit{}(Lbl'Stop'ModuleInstCellMap{}()), hook{}("MAP.Map")]
  sort SortFUnOp{} []
  sort SortWasmInt{} []
  sort SortAlloc{} []
  sort SortMainStoreCellOpt{} []
  sort SortMmaxCell{} []
  sort SortFuncAddrsCellOpt{} []
  hooked-sort SortMemInstCellMap{} [element{}(LblMemInstCellMapItem{}()), cellCollection{}(), concat{}(Lbl'Unds'MemInstCellMap'Unds'{}()), unit{}(Lbl'Stop'MemInstCellMap{}()), hook{}("MAP.Map")]
  sort SortCurModIdxCell{} []
  sort SortMdataCell{} []
  sort SortStmt{} []
  sort SortTsizeCell{} []
  hooked-sort SortBool{} [hook{}("BOOL.Bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(786,3,786,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), hasDomainValues{}()]
  sort SortModuleFileNameCellOpt{} []
  sort SortModuleFileNameCell{} []
  sort SortWasmStringToken{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), token{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,5,25,34)"), hasDomainValues{}()]
  sort SortExportsCellOpt{} []
  sort SortGlobalsCell{} []
  sort SortTabInstCell{} []
  sort SortCurFrameCellFragment{} []
  sort SortTypeIdsCell{} []
  sort SortFuncIdCellOpt{} []
  sort SortNextGlobIdxCell{} []
  sort SortMdataCellOpt{} []
  sort SortGAddrCell{} []

// symbols
  symbol Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(SortMap{}, SortIndex{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#ContextLookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,20,185,60)"), left{}(), format{}("%c#ContextLookup%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'DS2Bytes'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'DataString{}(SortDataString{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#DS2Bytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(542,22,542,54)"), left{}(), format{}("%c#DS2Bytes%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'appendInstrs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(SortInstrs{}, SortInstrs{}) : SortInstrs{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#appendInstrs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(566,23,566,66)"), left{}(), format{}("%c#appendInstrs%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(SortBool{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(395,20,395,56)"), left{}(), format{}("%c#bool%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(SortIVal{}) : SortIVal{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#chop"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(342,21,342,57)"), left{}(), format{}("%c#chop%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'concatDS'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString{}(SortDataString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#concatDS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(531,23,531,65)"), left{}(), format{}("%c#concatDS%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'concatDS'LParUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString'Unds'String{}(SortDataString{}, SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#concatDSAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(532,23,532,87)"), left{}(), format{}("%c#concatDS%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'ctz'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#ctz"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(134,20,134,47)"), left{}(), format{}("%c#ctz%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'distinctBits'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#distinctBits"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(288,21,288,58)"), left{}(), format{}("%c#distinctBits%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(SortInt{}, SortValStack{}) : SortValStack{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#drop"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(426,25,426,76)"), left{}(), format{}("%c#drop%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'emptyModule'LParUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId{}(SortOptionalId{}) : SortModuleDecl{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#emptyModule"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1378,27,1378,73)"), left{}(), format{}("%c#emptyModule%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'encodeUTF8'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int{}(SortInt{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#encodeUTF8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(511,22,511,51)"), left{}(), format{}("%c#encodeUTF8%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'freshCtx'LParRParUnds'WASM-TEXT'Unds'Context{}() : SortContext{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("111"), klabel{}("#freshCtx"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(705,24,705,89)"), left{}(), format{}("%c#freshCtx%r %c(%r %c)%r"), function{}()]
  symbol Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(SortInt{}) : SortIdentifier{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#freshId"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(163,27,163,42)"), left{}(), format{}("%c#freshId%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(SortTypeKeyWord{}, SortTypeDecls{}, SortValTypes{}) : SortVecType{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("#gatherTypes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(624,24,624,85)"), left{}(), format{}("%c#gatherTypes%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'getBytesRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(SortBytes{}, SortInt{}, SortInt{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("#getBytesRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(576,22,576,80)"), left{}(), format{}("%c#getBytesRange%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'getElemSegment'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Index'Unds'ElemSegment'Unds'Int{}(SortElemSegment{}, SortInt{}) : SortIndex{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#getElemSegment"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(197,22,197,66)"), left{}(), format{}("%c#getElemSegment%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'getInts'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Ints'Unds'Int{}(SortInts{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#getInts"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(199,22,199,66)"), left{}(), format{}("%c#getInts%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'getOffset'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'MemArg{}(SortMemArg{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#getOffset"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(954,20,954,63)"), left{}(), format{}("%c#getOffset%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(SortBytes{}, SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), smtlib{}("getRange"), terminals{}("11010101"), klabel{}("#getRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(589,20,589,86)"), left{}(), format{}("%c#getRange%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(SortInt{}, SortOptionalInt{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#growthAllowed"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1112,21,1112,63)"), left{}(), format{}("%c#growthAllowed%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'idcFuncs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns{}(SortDefns{}, SortDefns{}) : SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#idcFuncs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1035,20,1035,69)"), left{}(), format{}("%c#idcFuncs%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'idcFuncsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(SortDefns{}, SortDefns{}, SortInt{}, SortMap{}) : SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101010101"), klabel{}("#idcFuncsAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1036,20,1036,69)"), left{}(), format{}("%c#idcFuncsAux%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}()]
  symbol Lbl'Hash'idcGlobals'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns{}(SortDefns{}, SortDefns{}) : SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#idcGlobals"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1048,20,1048,71)"), left{}(), format{}("%c#idcGlobals%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'idcGlobalsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(SortDefns{}, SortDefns{}, SortInt{}, SortMap{}) : SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101010101"), klabel{}("#idcGlobalsAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1049,20,1049,71)"), left{}(), format{}("%c#idcGlobalsAux%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}()]
  symbol Lbl'Hash'idcTypes'LParUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns{}(SortDefns{}) : SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#idcTypes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1026,20,1026,62)"), left{}(), format{}("%c#idcTypes%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'idcTypesAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Int'Unds'Map{}(SortDefns{}, SortInt{}, SortMap{}) : SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("#idcTypesAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1027,20,1027,62)"), left{}(), format{}("%c#idcTypesAux%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'ids2Idxs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'TypeUse'Unds'LocalDecls{}(SortTypeUse{}, SortLocalDecls{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#ids2Idxs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1061,20,1061,77)"), left{}(), format{}("%c#ids2Idxs%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(SortInt{}, SortTypeUse{}, SortLocalDecls{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("#ids2Idxs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1062,20,1062,77)"), left{}(), format{}("%c#ids2Idxs%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#idxCloseBracket"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(506,20,506,62)"), left{}(), format{}("%c#idxCloseBracket%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(SortBool{}, SortSort, SortSort) : SortSort [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("ite"), right{}(), terminals{}("1010101"), hook{}("KEQUAL.ite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2048,26,2048,125)"), left{}(), format{}("%c#if%r %1 %c#then%r %2 %c#else%r %3 %c#fi%r"), function{}()]
  symbol Lbl'Hash'inSignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(SortIValType{}, SortInt{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#inSignedRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,21,257,63)"), left{}(), format{}("%c#inSignedRange%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'inUnsignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(SortIValType{}, SortInt{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#inUnsignedRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(256,21,256,63)"), left{}(), format{}("%c#inUnsignedRange%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Ints{}(SortInt{}, SortInt{}, SortMap{}, SortInts{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("1101010101"), klabel{}("#initElements"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1145,21,1145,57)"), left{}(), format{}("%c#initElements%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), injective{}()]
  symbol Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(SortInt{}, SortValStack{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("100"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(504,22,504,48)"), left{}(), format{}("%c#init_locals%r %1 %2"), injective{}()]
  symbol Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(SortFloat{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#isInfinityOrNaN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(153,21,153,57)"), left{}(), format{}("%c#isInfinityOrNaN%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(SortElemSegment{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#lenElemSegment"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(196,22,196,66)"), left{}(), format{}("%c#lenElemSegment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'lenInts'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Ints{}(SortInts{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#lenInts"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(198,22,198,66)"), left{}(), format{}("%c#lenInts%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'lengthDataPages'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'DataString{}(SortDataString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#lengthDataPages"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(511,20,511,61)"), left{}(), format{}("%c#lengthDataPages%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(SortInt{}, SortOptionalInt{}, SortLimits{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("#limitsMatchImport"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1350,21,1350,75)"), left{}(), format{}("%c#limitsMatchImport%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'locals2vectype'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(SortLocalDecls{}, SortValTypes{}) : SortVecType{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#locals2vectype"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(803,24,803,75)"), left{}(), format{}("%c#locals2vectype%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}() : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("111"), klabel{}("#maxMemorySize"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1124,20,1124,46)"), left{}(), format{}("%c#maxMemorySize%r %c(%r %c)%r"), function{}()]
  symbol Lbl'Hash'maxTableSize'LParRParUnds'WASM'Unds'Int{}() : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("111"), klabel{}("#maxTableSize"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1125,20,1125,46)"), left{}(), format{}("%c#maxTableSize%r %c(%r %c)%r"), function{}()]
  symbol Lbl'Hash'minSigned'LParUndsRParUnds'KWASM-LEMMAS'Unds'Int'Unds'IValType{}(SortIValType{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#minSigned"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(262,20,262,54)"), left{}(), format{}("%c#minSigned%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'minWidth'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#minWidth"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(133,20,133,47)"), left{}(), format{}("%c#minWidth%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(SortIValType{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), smtlib{}("numBytes"), terminals{}("1101"), klabel{}("#numBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(290,20,290,82)"), left{}(), format{}("%c#numBytes%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}() : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("111"), klabel{}("#pageSize"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1123,20,1123,46)"), left{}(), format{}("%c#pageSize%r %c(%r %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'parseWasmString'LParUndsRParUnds'WASM-DATA-COMMON-SYNTAX'Unds'String'Unds'WasmStringToken{}(SortWasmStringToken{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#parseWasmString"), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,23,51,110)"), left{}(), format{}("%c#parseWasmString%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'popcnt'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#popcnt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(135,20,135,47)"), left{}(), format{}("%c#popcnt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(SortIValType{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), smtlib{}("pow "), terminals{}("1101"), klabel{}("#pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(301,20,301,74)"), left{}(), format{}("%c#pow%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(SortIValType{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), smtlib{}("pow1"), terminals{}("1101"), klabel{}("#pow1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(302,20,302,74)"), left{}(), format{}("%c#pow1%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'reverseDefns'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Defns{}(SortDefns{}, SortDefns{}) : SortDefns{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#reverseDefns"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(674,22,674,59)"), left{}(), format{}("%c#reverseDefns%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'reverseInstrs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(SortInstrs{}, SortInstrs{}) : SortInstrs{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#reverseInstrs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(567,23,567,66)"), left{}(), format{}("%c#reverseInstrs%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'revs'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack{}(SortValStack{}) : SortValStack{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#revs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(427,25,427,76)"), left{}(), format{}("%c#revs%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(SortValStack{}, SortValStack{}) : SortValStack{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#revsAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(428,25,428,94)"), left{}(), format{}("%c#revs%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'revt'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(SortValTypes{}) : SortValTypes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#revt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(275,25,275,76)"), left{}(), format{}("%c#revt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(SortValTypes{}, SortValTypes{}) : SortValTypes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#revtAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(276,25,276,94)"), left{}(), format{}("%c#revt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(SortFValType{}, SortNumber{}) : SortFVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#round"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(358,21,358,59)"), left{}(), format{}("%c#round%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(SortMap{}, SortOptionalId{}, SortInt{}) : SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("#saveId"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(171,20,171,60)"), left{}(), format{}("%c#saveId%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'setBytesRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Bytes{}(SortBytes{}, SortInt{}, SortBytes{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("#setBytesRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(555,22,555,82)"), left{}(), format{}("%c#setBytesRange%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int'Unds'Int{}(SortBytes{}, SortInt{}, SortInt{}, SortInt{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), smtlib{}("setRange"), terminals{}("1101010101"), klabel{}("#setRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(563,22,563,99)"), left{}(), format{}("%c#setRange%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}()]
  symbol Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(SortIValType{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#signed"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,20,373,61)"), left{}(), format{}("%c#signed%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#signedWidth"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(375,20,375,61)"), left{}(), format{}("%c#signedWidth%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(SortDefns{}, SortModuleDecl{}) : SortModuleDecl{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#structureModule"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(657,27,657,76)"), left{}(), format{}("%c#structureModule%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(SortContext{}, SortDefn{}) : SortDefn{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(731,27,731,88)"), left{}(), format{}("%c#t2aDefn%r %c<%r %1 %c>%r %c(%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(SortContext{}, SortDefns{}) : SortDefns{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1008,27,1008,88)"), left{}(), format{}("%c#t2aDefns%r %c<%r %1 %c>%r %c(%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash't2aElemSegment'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Ints'Unds'Context'Unds'ElemSegment{}(SortContext{}, SortElemSegment{}) : SortInts{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(846,21,846,84)"), left{}(), format{}("%c#t2aElemSegment%r %c<%r %1 %c>%r %c(%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(SortContext{}, SortInstr{}) : SortInstr{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(883,22,883,73)"), left{}(), format{}("%c#t2aInstr%r %c<%r %1 %c>%r %c(%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(SortContext{}, SortInstrs{}) : SortInstrs{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1009,27,1009,88)"), left{}(), format{}("%c#t2aInstrs%r %c<%r %1 %c>%r %c(%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash't2aModule'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Context'Unds'ModuleDecl{}(SortContext{}, SortModuleDecl{}) : SortModuleDecl{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(730,27,730,88)"), left{}(), format{}("%c#t2aModule%r %c<%r %1 %c>%r %c(%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash't2aModuleDecl'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Context'Unds'ModuleDecl{}(SortContext{}, SortModuleDecl{}) : SortModuleDecl{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(729,27,729,88)"), left{}(), format{}("%c#t2aModuleDecl%r %c<%r %1 %c>%r %c(%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash't2aStmt'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmt'Unds'Context'Unds'Stmt{}(SortContext{}, SortStmt{}) : SortStmt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(728,27,728,88)"), left{}(), format{}("%c#t2aStmt%r %c<%r %1 %c>%r %c(%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash't2aStmts'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Context'Unds'Stmts{}(SortContext{}, SortStmts{}) : SortStmts{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1007,27,1007,88)"), left{}(), format{}("%c#t2aStmts%r %c<%r %1 %c>%r %c(%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(SortInt{}, SortValStack{}) : SortValStack{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#take"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(425,25,425,76)"), left{}(), format{}("%c#take%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(SortMap{}, SortInt{}) : SortTypesInfo{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#ti"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(443,26,443,52)"), left{}(), format{}("%c#ti%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol Lbl'Hash'types2indices'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Defns'Unds'TypesInfo{}(SortDefns{}, SortTypesInfo{}) : SortTypesInfo{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#types2indices"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(445,26,445,70)"), left{}(), format{}("%c#types2indices%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(SortDefns{}, SortInt{}, SortTypesInfo{}) : SortDefns{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("#unfoldDefns"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(393,22,393,71)"), left{}(), format{}("%c#unfoldDefns%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(SortInstrs{}, SortInt{}, SortMap{}) : SortInstrs{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("#unfoldInstrs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(559,23,559,67)"), left{}(), format{}("%c#unfoldInstrs%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(SortIValType{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#unsigned"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(374,20,374,61)"), left{}(), format{}("%c#unsigned%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'updateFuncIds'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map{}(SortContext{}, SortMap{}) : SortContext{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#updateFuncIds"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(708,24,708,89)"), left{}(), format{}("%c#updateFuncIds%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'updateFuncIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(SortContext{}, SortMap{}, SortBool{}) : SortContext{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("#updateFuncIdsAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(709,24,709,89)"), left{}(), format{}("%c#updateFuncIdsAux%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'updateLocalIds'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map{}(SortContext{}, SortMap{}) : SortContext{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#updateLocalIds"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(706,24,706,89)"), left{}(), format{}("%c#updateLocalIds%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'updateLocalIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(SortContext{}, SortMap{}, SortBool{}) : SortContext{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("#updateLocalIdsAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(707,24,707,89)"), left{}(), format{}("%c#updateLocalIdsAux%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(SortIValType{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#width"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(289,20,289,64)"), left{}(), format{}("%c#width%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#wrap"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(346,20,346,61)"), left{}(), format{}("%c#wrap%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(SortValTypes{}) : SortValStack{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#zero"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(424,25,424,76)"), left{}(), format{}("%c#zero%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'LParUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr{}(SortPlainInstr{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), prefer{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(141,28,141,61)"), left{}(), format{}("%c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'LParUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(SortPlainInstr{}, SortInstrs{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(140,28,140,52)"), left{}(), format{}("%c(%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(144,28,144,70)"), left{}(), format{}("%c(%r %cblock%r %1 %2 %3 %c)%r"), injective{}()]
  symbol Lbl'LPar'data'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'DataString{}(SortDataString{}) : SortMemorySpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(244,27,244,51)"), left{}(), format{}("%c(%r %cdata%r %1 %c)%r"), injective{}()]
  symbol Lbl'LPar'data'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Offset'Unds'DataString{}(SortOffset{}, SortDataString{}) : SortDataDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(297,25,297,56)"), left{}(), format{}("%c(%r %cdata%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(SortIndex{}, SortOffset{}, SortDataString{}) : SortDataDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(296,25,296,66)"), left{}(), format{}("%c(%r %cdata%r %1 %2 %3 %c)%r"), injective{}()]
  symbol Lbl'LPar'elem'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(SortOffset{}, SortElemSegment{}) : SortElemDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(288,25,288,64)"), left{}(), format{}("%c(%r %celem%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(SortIndex{}, SortOffset{}, SortElemSegment{}) : SortElemDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(287,25,287,63)"), left{}(), format{}("%c(%r %celem%r %1 %2 %3 %c)%r"), injective{}()]
  symbol Lbl'LPar'elem'Unds'func'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(SortOffset{}, SortElemSegment{}) : SortElemDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(289,25,289,64)"), left{}(), format{}("%c(%r %celem%r %1 %cfunc%r %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(SortWasmString{}, SortExternval{}) : SortExportDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101011"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(169,27,169,71)"), left{}(), format{}("%c(%r %cexport%r %1 %c(%r %2 %c)%r %c)%r"), injective{}()]
  symbol Lbl'LPar'export'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineExport'Unds'WasmString{}(SortWasmString{}) : SortInlineExport{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(172,30,172,56)"), left{}(), format{}("%c(%r %cexport%r %1 %c)%r"), injective{}()]
  symbol Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(SortOptionalId{}, SortFuncSpec{}) : SortFuncDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(203,25,203,59)"), left{}(), format{}("%c(%r %cfunc%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(SortOptionalId{}, SortTypeUse{}) : SortImportDesc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11001"), klabel{}("funcImportDesc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(193,27,193,99)"), left{}(), format{}("%c(%r %cfunc%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(SortOptionalId{}, SortGlobalSpec{}) : SortGlobalDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(256,27,256,65)"), left{}(), format{}("%c(%r %cglobal%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(SortOptionalId{}, SortTextFormatGlobalType{}) : SortImportDesc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11001"), klabel{}("globImportDesc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(194,27,194,99)"), left{}(), format{}("%c(%r %cglobal%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}, SortInstrs{}, SortInstrs{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11000110111011"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(147,28,147,111)"), left{}(), format{}("%c(%r %cif%r %1 %2 %3 %c(%r %cthen%r %4 %c)%r %c(%r %celse%r %5 %c)%r %c)%r"), injective{}()]
  symbol Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}, SortInstrs{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1100011011"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(146,28,146,89)"), left{}(), format{}("%c(%r %cif%r %1 %2 %3 %c(%r %cthen%r %4 %c)%r %c)%r"), injective{}()]
  symbol Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(SortWasmString{}, SortWasmString{}) : SortInlineImport{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(186,29,186,66)"), left{}(), format{}("%c(%r %cimport%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(SortWasmString{}, SortWasmString{}, SortImportDesc{}) : SortImportDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,27,179,75)"), left{}(), format{}("%c(%r %cimport%r %1 %2 %3 %c)%r"), injective{}()]
  symbol Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("1101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(747,22,747,41)"), left{}(), format{}("%c(%r %cinvoke%r %1 %c)%r"), injective{}()]
  symbol Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(145,28,145,69)"), left{}(), format{}("%c(%r %cloop%r %1 %2 %3 %c)%r"), injective{}()]
  symbol Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(SortOptionalId{}, SortMemType{}) : SortImportDesc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11001"), klabel{}(" memImportDesc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(196,27,196,99)"), left{}(), format{}("%c(%r %cmemory%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(SortOptionalId{}, SortMemorySpec{}) : SortMemoryDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(238,27,238,64)"), left{}(), format{}("%c(%r %cmemory%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'module'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(SortOptionalId{}, SortDefns{}) : SortModuleDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(315,27,315,59)"), left{}(), format{}("%c(%r %cmodule%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'mut'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TextFormatGlobalType'Unds'ValType{}(SortValType{}) : SortTextFormatGlobalType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(262,47,262,67)"), left{}(), format{}("%c(%r %cmut%r %1 %c)%r"), injective{}()]
  symbol Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(SortInstrs{}) : SortOffset{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(272,23,272,45)"), left{}(), format{}("%c(%r %coffset%r %1 %c)%r"), injective{}()]
  symbol Lbl'LPar'start'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StartDefn'Unds'Index{}(SortIndex{}) : SortStartDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(304,26,304,46)"), left{}(), format{}("%c(%r %cstart%r %1 %c)%r"), injective{}()]
  symbol Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(SortOptionalId{}, SortTableType{}) : SortImportDesc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11001"), klabel{}(" tabImportDesc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(195,27,195,99)"), left{}(), format{}("%c(%r %ctable%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(SortOptionalId{}, SortTableSpec{}) : SortTableDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(223,26,223,61)"), left{}(), format{}("%c(%r %ctable%r %1 %2 %c)%r"), injective{}()]
  symbol Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(SortOptionalId{}, SortTypeDecls{}) : SortTypeDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1011011"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(154,25,154,71)"), left{}(), format{}("%c(type%r %1 %c(%r %cfunc%r %2 %c)%r %c)%r"), injective{}()]
  symbol Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(SortIndex{}) : SortTypeUse{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), prefer{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(95,28,95,63)"), left{}(), format{}("%c(type%r %1 %c)%r"), injective{}()]
  symbol Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(SortIndex{}, SortTypeDecls{}) : SortTypeUse{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("1010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(96,28,96,54)"), left{}(), format{}("%c(type%r %1 %c)%r %2"), injective{}()]
  hooked-symbol Lbl--Float'UndsUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPerc'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'UndsPlus'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'UndsStar'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'UndsXor-'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'Unds'-Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'UndsSlsh'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}()), smt-hook{}("fp.neg"), right{}(), terminals{}("10"), hook{}("FLOAT.neg"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1228,20,1228,104)"), left{}(), format{}("%c--Float%r %1"), function{}()]
  hooked-symbol Lbl'Stop'Bytes'Unds'BYTES-HOOKED'Unds'Bytes{}() : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1"), hook{}("BYTES.empty"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1697,20,1697,69)"), left{}(), format{}("%c.Bytes%r"), function{}()]
  hooked-symbol Lbl'Stop'FuncDefCellMap{}() : SortFuncDefCellMap{} [priorities{}(), right{}(), terminals{}("1"), hook{}("MAP.unit"), left{}(), format{}("%c.FuncDefCellMap%r"), function{}()]
  hooked-symbol Lbl'Stop'GlobalInstCellMap{}() : SortGlobalInstCellMap{} [priorities{}(), right{}(), terminals{}("1"), hook{}("MAP.unit"), left{}(), format{}("%c.GlobalInstCellMap%r"), function{}()]
  symbol Lbl'Stop'Identifier{}() : SortOptionalId{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".Identifier"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,27,35,58)"), left{}(), format{}("%c%r"), injective{}()]
  symbol Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}() : SortOptionalInt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(225,34,225,39)"), left{}(), format{}("%c.Int%r"), injective{}()]
  hooked-symbol Lbl'Stop'List{}() : SortList{} [latex{}("\\dotCt{List}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), smtlib{}("smt_seq_nil"), terminals{}("1"), klabel{}(".List"), hook{}("LIST.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(655,19,655,146)"), left{}(), format{}("%c.List%r"), function{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}() : SortDefns{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), anywhere{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".List{\"listStmt\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(59,27,59,65)"), left{}(), format{}("%c.Defns%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}() : SortInstrs{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), anywhere{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".List{\"listStmt\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,27,58,65)"), left{}(), format{}("%c.Instrs%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}() : SortStmts{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), anywhere{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".List{\"listStmt\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(60,27,60,65)"), left{}(), format{}("%c.Stmts%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}() : SortTypeDecls{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("1"), klabel{}(".List{\"listTypeDecl\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(101,28,101,69)"), left{}(), format{}("%c.TypeDecls%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'DataString'Unds'WasmString'Unds'DataString'QuotRBraUnds'DataString{}() : SortDataString{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1"), klabel{}(".List{\"listWasmString\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(54,27,54,71)"), left{}(), format{}("%c.DataString%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}() : SortElemSegment{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1"), klabel{}(".List{\"listIndex\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(75,28,75,62)"), left{}(), format{}("%c.ElemSegment%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}() : SortLocalDecls{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1"), klabel{}(".List{\"listLocalDecl\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(216,27,216,77)"), left{}(), format{}("%c.LocalDecls%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuot'listInt'QuotRBraUnds'Ints{}() : SortInts{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".List{\"listInt\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(193,21,193,59)"), left{}(), format{}("%c.Ints%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}() : SortEmptyStmts{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".List{\"listStmt\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,27,57,73)"), left{}(), format{}("%c.EmptyStmts%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}() : SortValTypes{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".List{\"listValTypes\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,25,97,72)"), left{}(), format{}("%c.ValTypes%r"), injective{}()]
  hooked-symbol Lbl'Stop'Map{}() : SortMap{} [latex{}("\\dotCt{Map}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".Map"), hook{}("MAP.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,18,257,128)"), left{}(), format{}("%c.Map%r"), function{}()]
  hooked-symbol Lbl'Stop'MemInstCellMap{}() : SortMemInstCellMap{} [priorities{}(), right{}(), terminals{}("1"), hook{}("MAP.unit"), left{}(), format{}("%c.MemInstCellMap%r"), function{}()]
  hooked-symbol Lbl'Stop'ModuleInstCellMap{}() : SortModuleInstCellMap{} [priorities{}(), right{}(), terminals{}("1"), hook{}("MAP.unit"), left{}(), format{}("%c.ModuleInstCellMap%r"), function{}()]
  symbol Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}() : SortMut{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(313,20,313,25)"), left{}(), format{}("%c.Mut%r"), injective{}()]
  hooked-symbol Lbl'Stop'Set{}() : SortSet{} [latex{}("\\dotCt{Set}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".Set"), hook{}("SET.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(535,18,535,122)"), left{}(), format{}("%c.Set%r"), function{}()]
  symbol Lbl'Stop'String{}() : SortOptionalString{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".String"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1383,31,1383,65)"), left{}(), format{}("%c.String%r"), injective{}()]
  hooked-symbol Lbl'Stop'TabInstCellMap{}() : SortTabInstCellMap{} [priorities{}(), right{}(), terminals{}("1"), hook{}("MAP.unit"), left{}(), format{}("%c.TabInstCellMap%r"), function{}()]
  symbol Lbl'Stop'Type'Unds'WASM-DATA'Unds'Type{}() : SortType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(259,21,259,27)"), left{}(), format{}("%c.Type%r"), injective{}()]
  symbol Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}() : SortValStack{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(407,25,407,35)"), left{}(), format{}("%c.ValStack%r"), injective{}()]
  symbol Lbl'Stop'WasmString'Unds'WASM-DATA-COMMON-SYNTAX'Unds'WasmString{}() : SortWasmString{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(47,27,47,39)"), left{}(), format{}("%c.WasmString%r"), injective{}()]
  symbol Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(SortFValType{}, SortFloat{}) : SortFVal{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1010"), klabel{}("<_>_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(323,21,323,58)"), left{}(), format{}("%c<%r %1 %c>%r %2"), injective{}()]
  symbol Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(SortIValType{}, SortInt{}) : SortIVal{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1010"), klabel{}("<_>_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(322,21,322,58)"), left{}(), format{}("%c<%r %1 %c>%r %2"), injective{}()]
  symbol Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(SortValType{}, SortNumber{}) : SortVal{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), anywhere{}(), priorities{}(), right{}(), terminals{}("1010"), klabel{}("<_>_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,21,324,58)"), left{}(), format{}("%c<%r %1 %c>%r %2"), injective{}()]
  symbol Lbl'-LT-'curFrame'-GT-'{}(SortLocalsCell{}, SortCurModIdxCell{}) : SortCurFrameCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("curFrame"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("1001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<curFrame>%r%i%n%1%n%2%d%n%c</curFrame>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'curFrame'-GT-'-fragment{}(SortLocalsCellOpt{}, SortCurModIdxCellOpt{}) : SortCurFrameCellFragment{} [functional{}(), constructor{}(), cellFragment{}("CurFrameCell"), priorities{}(), right{}(), terminals{}("1001"), left{}(), format{}("%c<curFrame>-fragment%r %1 %2 %c</curFrame>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'curModIdx'-GT-'{}(SortOptionalInt{}) : SortCurModIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("curModIdx"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<curModIdx>%r%i%n%1%d%n%c</curModIdx>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(SortBool{}) : SortDeterministicMemoryGrowthCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("deterministicMemoryGrowth"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<deterministicMemoryGrowth>%r%i%n%1%d%n%c</deterministicMemoryGrowth>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'exports'-GT-'{}(SortMap{}) : SortExportsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("exports"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<exports>%r%i%n%1%d%n%c</exports>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'fAddr'-GT-'{}(SortInt{}) : SortFAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("fAddr"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<fAddr>%r%i%n%1%d%n%c</fAddr>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'fCode'-GT-'{}(SortInstrs{}) : SortFCodeCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("fCode"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<fCode>%r%i%n%1%d%n%c</fCode>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'fLocal'-GT-'{}(SortType{}) : SortFLocalCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("fLocal"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<fLocal>%r%i%n%1%d%n%c</fLocal>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'fModInst'-GT-'{}(SortInt{}) : SortFModInstCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("fModInst"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<fModInst>%r%i%n%1%d%n%c</fModInst>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'fType'-GT-'{}(SortType{}) : SortFTypeCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("fType"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<fType>%r%i%n%1%d%n%c</fType>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcAddrs'-GT-'{}(SortMap{}) : SortFuncAddrsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("funcAddrs"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<funcAddrs>%r%i%n%1%d%n%c</funcAddrs>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcDef'-GT-'{}(SortFAddrCell{}, SortFCodeCell{}, SortFTypeCell{}, SortFLocalCell{}, SortFModInstCell{}, SortFuncMetadataCell{}) : SortFuncDefCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("funcDef"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("10000001"), type{}("Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<funcDef>%r%i%n%1%n%2%n%3%n%4%n%5%n%6%d%n%c</funcDef>%r"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcDef'-GT-'-fragment{}(SortFAddrCellOpt{}, SortFCodeCellOpt{}, SortFTypeCellOpt{}, SortFLocalCellOpt{}, SortFModInstCellOpt{}, SortFuncMetadataCellOpt{}) : SortFuncDefCellFragment{} [functional{}(), constructor{}(), cellFragment{}("FuncDefCell"), priorities{}(), right{}(), terminals{}("10000001"), left{}(), format{}("%c<funcDef>-fragment%r %1 %2 %3 %4 %5 %6 %c</funcDef>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'funcId'-GT-'{}(SortOptionalId{}) : SortFuncIdCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("funcId"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<funcId>%r%i%n%1%d%n%c</funcId>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcIds'-GT-'{}(SortMap{}) : SortFuncIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("funcIds"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<funcIds>%r%i%n%1%d%n%c</funcIds>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcMetadata'-GT-'{}(SortFuncIdCell{}, SortLocalIdsCell{}) : SortFuncMetadataCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("funcMetadata"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("1001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<funcMetadata>%r%i%n%1%n%2%d%n%c</funcMetadata>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcMetadata'-GT-'-fragment{}(SortFuncIdCellOpt{}, SortLocalIdsCellOpt{}) : SortFuncMetadataCellFragment{} [functional{}(), constructor{}(), cellFragment{}("FuncMetadataCell"), priorities{}(), right{}(), terminals{}("1001"), left{}(), format{}("%c<funcMetadata>-fragment%r %1 %2 %c</funcMetadata>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'funcs'-GT-'{}(SortFuncDefCellMap{}) : SortFuncsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("funcs"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<funcs>%r%i%n%1%d%n%c</funcs>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcs'-GT-'-fragment{}(SortFuncDefCellMap{}) : SortFuncsCellFragment{} [functional{}(), constructor{}(), cellFragment{}("FuncsCell"), priorities{}(), right{}(), terminals{}("101"), left{}(), format{}("%c<funcs>-fragment%r %1 %c</funcs>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'gAddr'-GT-'{}(SortInt{}) : SortGAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("gAddr"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<gAddr>%r%i%n%1%d%n%c</gAddr>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'gMut'-GT-'{}(SortMut{}) : SortGMutCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("gMut"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<gMut>%r%i%n%1%d%n%c</gMut>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'gValue'-GT-'{}(SortVal{}) : SortGValueCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("gValue"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<gValue>%r%i%n%1%d%n%c</gValue>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'generatedCounter'-GT-'{}(SortInt{}) : SortGeneratedCounterCell{} [functional{}(), constructor{}(), cellName{}("generatedCounter"), priorities{}(), right{}(), terminals{}("101"), left{}(), format{}("%c<generatedCounter>%r%i%n%1%d%n%c</generatedCounter>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'{}(SortWasmCell{}, SortGeneratedCounterCell{}) : SortGeneratedTopCell{} [functional{}(), constructor{}(), cellName{}("generatedTop"), priorities{}(), right{}(), terminals{}("1001"), left{}(), format{}("%1"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'-fragment{}(SortWasmCellOpt{}, SortGeneratedCounterCellOpt{}) : SortGeneratedTopCellFragment{} [functional{}(), constructor{}(), cellFragment{}("GeneratedTopCell"), priorities{}(), right{}(), terminals{}("1001"), left{}(), format{}("%c<generatedTop>-fragment%r %1 %2 %c</generatedTop>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'globIds'-GT-'{}(SortMap{}) : SortGlobIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("globIds"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<globIds>%r%i%n%1%d%n%c</globIds>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'globalAddrs'-GT-'{}(SortMap{}) : SortGlobalAddrsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("globalAddrs"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<globalAddrs>%r%i%n%1%d%n%c</globalAddrs>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'globalInst'-GT-'{}(SortGAddrCell{}, SortGValueCell{}, SortGMutCell{}) : SortGlobalInstCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("globalInst"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("10001"), type{}("Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<globalInst>%r%i%n%1%n%2%n%3%d%n%c</globalInst>%r"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'globalInst'-GT-'-fragment{}(SortGAddrCellOpt{}, SortGValueCellOpt{}, SortGMutCellOpt{}) : SortGlobalInstCellFragment{} [functional{}(), constructor{}(), cellFragment{}("GlobalInstCell"), priorities{}(), right{}(), terminals{}("10001"), left{}(), format{}("%c<globalInst>-fragment%r %1 %2 %3 %c</globalInst>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'globals'-GT-'{}(SortGlobalInstCellMap{}) : SortGlobalsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("globals"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<globals>%r%i%n%1%d%n%c</globals>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'globals'-GT-'-fragment{}(SortGlobalInstCellMap{}) : SortGlobalsCellFragment{} [functional{}(), constructor{}(), cellFragment{}("GlobalsCell"), priorities{}(), right{}(), terminals{}("101"), left{}(), format{}("%c<globals>-fragment%r %1 %c</globals>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'instrs'-GT-'{}(SortK{}) : SortInstrsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("instrs"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<instrs>%r%i%n%1%d%n%c</instrs>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'localIds'-GT-'{}(SortMap{}) : SortLocalIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("localIds"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<localIds>%r%i%n%1%d%n%c</localIds>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'locals'-GT-'{}(SortMap{}) : SortLocalsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("locals"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<locals>%r%i%n%1%d%n%c</locals>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'mAddr'-GT-'{}(SortInt{}) : SortMAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("mAddr"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<mAddr>%r%i%n%1%d%n%c</mAddr>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'mainStore'-GT-'{}(SortFuncsCell{}, SortNextFuncAddrCell{}, SortTabsCell{}, SortNextTabAddrCell{}, SortMemsCell{}, SortNextMemAddrCell{}, SortGlobalsCell{}, SortNextGlobAddrCell{}) : SortMainStoreCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("mainStore"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("1000000001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<mainStore>%r%i%n%1%n%2%n%3%n%4%n%5%n%6%n%7%n%8%d%n%c</mainStore>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'mainStore'-GT-'-fragment{}(SortFuncsCellOpt{}, SortNextFuncAddrCellOpt{}, SortTabsCellOpt{}, SortNextTabAddrCellOpt{}, SortMemsCellOpt{}, SortNextMemAddrCellOpt{}, SortGlobalsCellOpt{}, SortNextGlobAddrCellOpt{}) : SortMainStoreCellFragment{} [functional{}(), constructor{}(), cellFragment{}("MainStoreCell"), priorities{}(), right{}(), terminals{}("1000000001"), left{}(), format{}("%c<mainStore>-fragment%r %1 %2 %3 %4 %5 %6 %7 %8 %c</mainStore>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'mdata'-GT-'{}(SortBytes{}) : SortMdataCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("mdata"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<mdata>%r%i%n%1%d%n%c</mdata>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'memAddrs'-GT-'{}(SortMap{}) : SortMemAddrsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("memAddrs"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<memAddrs>%r%i%n%1%d%n%c</memAddrs>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'memIds'-GT-'{}(SortMap{}) : SortMemIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("memIds"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<memIds>%r%i%n%1%d%n%c</memIds>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'memInst'-GT-'{}(SortMAddrCell{}, SortMmaxCell{}, SortMsizeCell{}, SortMdataCell{}) : SortMemInstCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("memInst"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("100001"), type{}("Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<memInst>%r%i%n%1%n%2%n%3%n%4%d%n%c</memInst>%r"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'memInst'-GT-'-fragment{}(SortMAddrCellOpt{}, SortMmaxCellOpt{}, SortMsizeCellOpt{}, SortMdataCellOpt{}) : SortMemInstCellFragment{} [functional{}(), constructor{}(), cellFragment{}("MemInstCell"), priorities{}(), right{}(), terminals{}("100001"), left{}(), format{}("%c<memInst>-fragment%r %1 %2 %3 %4 %c</memInst>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'mems'-GT-'{}(SortMemInstCellMap{}) : SortMemsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("mems"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<mems>%r%i%n%1%d%n%c</mems>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'mems'-GT-'-fragment{}(SortMemInstCellMap{}) : SortMemsCellFragment{} [functional{}(), constructor{}(), cellFragment{}("MemsCell"), priorities{}(), right{}(), terminals{}("101"), left{}(), format{}("%c<mems>-fragment%r %1 %c</mems>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'mmax'-GT-'{}(SortOptionalInt{}) : SortMmaxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("mmax"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<mmax>%r%i%n%1%d%n%c</mmax>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'modIdx'-GT-'{}(SortInt{}) : SortModIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("modIdx"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<modIdx>%r%i%n%1%d%n%c</modIdx>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'moduleFileName'-GT-'{}(SortOptionalString{}) : SortModuleFileNameCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("moduleFileName"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<moduleFileName>%r%i%n%1%d%n%c</moduleFileName>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'moduleId'-GT-'{}(SortOptionalId{}) : SortModuleIdCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("moduleId"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<moduleId>%r%i%n%1%d%n%c</moduleId>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'moduleIds'-GT-'{}(SortMap{}) : SortModuleIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("moduleIds"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<moduleIds>%r%i%n%1%d%n%c</moduleIds>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'moduleInst'-GT-'{}(SortModIdxCell{}, SortExportsCell{}, SortTypesCell{}, SortNextTypeIdxCell{}, SortFuncAddrsCell{}, SortNextFuncIdxCell{}, SortTabIdsCell{}, SortTabAddrsCell{}, SortMemIdsCell{}, SortMemAddrsCell{}, SortGlobIdsCell{}, SortGlobalAddrsCell{}, SortNextGlobIdxCell{}, SortModuleMetadataCell{}) : SortModuleInstCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("moduleInst"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("1000000000000001"), type{}("Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<moduleInst>%r%i%n%1%n%2%n%3%n%4%n%5%n%6%n%7%n%8%n%9%n%10%n%11%n%12%n%13%n%14%d%n%c</moduleInst>%r"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'moduleInst'-GT-'-fragment{}(SortModIdxCellOpt{}, SortExportsCellOpt{}, SortTypesCellOpt{}, SortNextTypeIdxCellOpt{}, SortFuncAddrsCellOpt{}, SortNextFuncIdxCellOpt{}, SortTabIdsCellOpt{}, SortTabAddrsCellOpt{}, SortMemIdsCellOpt{}, SortMemAddrsCellOpt{}, SortGlobIdsCellOpt{}, SortGlobalAddrsCellOpt{}, SortNextGlobIdxCellOpt{}, SortModuleMetadataCellOpt{}) : SortModuleInstCellFragment{} [functional{}(), constructor{}(), cellFragment{}("ModuleInstCell"), priorities{}(), right{}(), terminals{}("1000000000000001"), left{}(), format{}("%c<moduleInst>-fragment%r %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13 %14 %c</moduleInst>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'moduleInstances'-GT-'{}(SortModuleInstCellMap{}) : SortModuleInstancesCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("moduleInstances"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<moduleInstances>%r%i%n%1%d%n%c</moduleInstances>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'moduleInstances'-GT-'-fragment{}(SortModuleInstCellMap{}) : SortModuleInstancesCellFragment{} [functional{}(), constructor{}(), cellFragment{}("ModuleInstancesCell"), priorities{}(), right{}(), terminals{}("101"), left{}(), format{}("%c<moduleInstances>-fragment%r %1 %c</moduleInstances>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'moduleMetadata'-GT-'{}(SortModuleFileNameCell{}, SortModuleIdCell{}, SortFuncIdsCell{}, SortTypeIdsCell{}) : SortModuleMetadataCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("moduleMetadata"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("100001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<moduleMetadata>%r%i%n%1%n%2%n%3%n%4%d%n%c</moduleMetadata>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'moduleMetadata'-GT-'-fragment{}(SortModuleFileNameCellOpt{}, SortModuleIdCellOpt{}, SortFuncIdsCellOpt{}, SortTypeIdsCellOpt{}) : SortModuleMetadataCellFragment{} [functional{}(), constructor{}(), cellFragment{}("ModuleMetadataCell"), priorities{}(), right{}(), terminals{}("100001"), left{}(), format{}("%c<moduleMetadata>-fragment%r %1 %2 %3 %4 %c</moduleMetadata>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'moduleRegistry'-GT-'{}(SortMap{}) : SortModuleRegistryCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("moduleRegistry"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<moduleRegistry>%r%i%n%1%d%n%c</moduleRegistry>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'msize'-GT-'{}(SortInt{}) : SortMsizeCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("msize"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<msize>%r%i%n%1%d%n%c</msize>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextFuncAddr'-GT-'{}(SortInt{}) : SortNextFuncAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("nextFuncAddr"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<nextFuncAddr>%r%i%n%1%d%n%c</nextFuncAddr>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextFuncIdx'-GT-'{}(SortInt{}) : SortNextFuncIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("nextFuncIdx"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<nextFuncIdx>%r%i%n%1%d%n%c</nextFuncIdx>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextGlobAddr'-GT-'{}(SortInt{}) : SortNextGlobAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("nextGlobAddr"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<nextGlobAddr>%r%i%n%1%d%n%c</nextGlobAddr>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextGlobIdx'-GT-'{}(SortInt{}) : SortNextGlobIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("nextGlobIdx"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<nextGlobIdx>%r%i%n%1%d%n%c</nextGlobIdx>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextMemAddr'-GT-'{}(SortInt{}) : SortNextMemAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("nextMemAddr"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<nextMemAddr>%r%i%n%1%d%n%c</nextMemAddr>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextModuleIdx'-GT-'{}(SortInt{}) : SortNextModuleIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("nextModuleIdx"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<nextModuleIdx>%r%i%n%1%d%n%c</nextModuleIdx>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextTabAddr'-GT-'{}(SortInt{}) : SortNextTabAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("nextTabAddr"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<nextTabAddr>%r%i%n%1%d%n%c</nextTabAddr>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextTypeIdx'-GT-'{}(SortInt{}) : SortNextTypeIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("nextTypeIdx"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<nextTypeIdx>%r%i%n%1%d%n%c</nextTypeIdx>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tAddr'-GT-'{}(SortInt{}) : SortTAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("tAddr"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<tAddr>%r%i%n%1%d%n%c</tAddr>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tabAddrs'-GT-'{}(SortMap{}) : SortTabAddrsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("tabAddrs"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<tabAddrs>%r%i%n%1%d%n%c</tabAddrs>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tabIds'-GT-'{}(SortMap{}) : SortTabIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("tabIds"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<tabIds>%r%i%n%1%d%n%c</tabIds>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tabInst'-GT-'{}(SortTAddrCell{}, SortTmaxCell{}, SortTsizeCell{}, SortTdataCell{}) : SortTabInstCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("tabInst"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("100001"), type{}("Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<tabInst>%r%i%n%1%n%2%n%3%n%4%d%n%c</tabInst>%r"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tabInst'-GT-'-fragment{}(SortTAddrCellOpt{}, SortTmaxCellOpt{}, SortTsizeCellOpt{}, SortTdataCellOpt{}) : SortTabInstCellFragment{} [functional{}(), constructor{}(), cellFragment{}("TabInstCell"), priorities{}(), right{}(), terminals{}("100001"), left{}(), format{}("%c<tabInst>-fragment%r %1 %2 %3 %4 %c</tabInst>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'tabs'-GT-'{}(SortTabInstCellMap{}) : SortTabsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("tabs"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<tabs>%r%i%n%1%d%n%c</tabs>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tabs'-GT-'-fragment{}(SortTabInstCellMap{}) : SortTabsCellFragment{} [functional{}(), constructor{}(), cellFragment{}("TabsCell"), priorities{}(), right{}(), terminals{}("101"), left{}(), format{}("%c<tabs>-fragment%r %1 %c</tabs>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'tdata'-GT-'{}(SortMap{}) : SortTdataCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("tdata"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<tdata>%r%i%n%1%d%n%c</tdata>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tmax'-GT-'{}(SortOptionalInt{}) : SortTmaxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("tmax"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<tmax>%r%i%n%1%d%n%c</tmax>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tsize'-GT-'{}(SortInt{}) : SortTsizeCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("tsize"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<tsize>%r%i%n%1%d%n%c</tsize>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'typeIds'-GT-'{}(SortMap{}) : SortTypeIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("typeIds"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<typeIds>%r%i%n%1%d%n%c</typeIds>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'types'-GT-'{}(SortMap{}) : SortTypesCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("types"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<types>%r%i%n%1%d%n%c</types>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'valstack'-GT-'{}(SortValStack{}) : SortValstackCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("valstack"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<valstack>%r%i%n%1%d%n%c</valstack>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'wasm'-GT-'{}(SortInstrsCell{}, SortValstackCell{}, SortCurFrameCell{}, SortModuleRegistryCell{}, SortModuleIdsCell{}, SortModuleInstancesCell{}, SortNextModuleIdxCell{}, SortMainStoreCell{}, SortDeterministicMemoryGrowthCell{}) : SortWasmCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), cellName{}("wasm"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("10000000001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,7,244,14)"), left{}(), format{}("%c<wasm>%r%i%n%1%n%2%n%3%n%4%n%5%n%6%n%7%n%8%n%9%d%n%c</wasm>%r"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'wasm'-GT-'-fragment{}(SortInstrsCellOpt{}, SortValstackCellOpt{}, SortCurFrameCellOpt{}, SortModuleRegistryCellOpt{}, SortModuleIdsCellOpt{}, SortModuleInstancesCellOpt{}, SortNextModuleIdxCellOpt{}, SortMainStoreCellOpt{}, SortDeterministicMemoryGrowthCellOpt{}) : SortWasmCellFragment{} [functional{}(), constructor{}(), cellFragment{}("WasmCell"), priorities{}(), right{}(), terminals{}("10000000001"), left{}(), format{}("%c<wasm>-fragment%r %1 %2 %3 %4 %5 %6 %7 %8 %9 %c</wasm>-fragment%r"), injective{}()]
  hooked-symbol LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("Base2String"), hook{}("STRING.base2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1498,21,1498,98)"), left{}(), format{}("%cBase2String%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(SortBool{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Bool2String"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1448,21,1448,60)"), left{}(), format{}("%cBool2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblBytes2Int'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes'Unds'Endianness'Unds'Signedness{}(SortBytes{}, SortEndianness{}, SortSignedness{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("Bytes2Int"), hook{}("BYTES.bytes2int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1746,18,1746,103)"), left{}(), format{}("%cBytes2Int%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblBytes2String'LParUndsRParUnds'BYTES-HOOKED'Unds'String'Unds'Bytes{}(SortBytes{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Bytes2String"), hook{}("BYTES.bytes2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1758,21,1758,88)"), left{}(), format{}("%cBytes2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(SortFloat{}) : SortInt{} [latex{}("{\\\\it{}Float2Int}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Float2Int"), hook{}("FLOAT.float2int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1325,18,1325,108)"), left{}(), format{}("%cFloat2Int%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(SortFloat{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Float2String"), hook{}("STRING.float2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1475,21,1475,105)"), left{}(), format{}("%cFloat2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String{}(SortFloat{}, SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("FloatFormat"), hook{}("STRING.floatFormat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1476,21,1476,121)"), left{}(), format{}("%cFloat2String%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblFuncDefCellMap'Coln'in'Unds'keys{}(SortFAddrCell{}, SortFuncDefCellMap{}) : SortBool{} [functional{}(), priorities{}(), right{}(), terminals{}("01101"), hook{}("MAP.in_keys"), left{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}()]
  hooked-symbol LblFuncDefCellMapItem{}(SortFAddrCell{}, SortFuncDefCell{}) : SortFuncDefCellMap{} [priorities{}(), right{}(), terminals{}("110101"), hook{}("MAP.element"), left{}(), format{}("%2"), function{}()]
  hooked-symbol LblGlobalInstCellMap'Coln'in'Unds'keys{}(SortGAddrCell{}, SortGlobalInstCellMap{}) : SortBool{} [functional{}(), priorities{}(), right{}(), terminals{}("01101"), hook{}("MAP.in_keys"), left{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}()]
  hooked-symbol LblGlobalInstCellMapItem{}(SortGAddrCell{}, SortGlobalInstCell{}) : SortGlobalInstCellMap{} [priorities{}(), right{}(), terminals{}("110101"), hook{}("MAP.element"), left{}(), format{}("%2"), function{}()]
  symbol LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(SortInt{}, SortEndianness{}, SortSignedness{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("Int2BytesNoLen"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1748,20,1748,104)"), left{}(), format{}("%cInt2Bytes%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(SortInt{}, SortInt{}, SortEndianness{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("Int2Bytes"), hook{}("BYTES.int2bytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1747,20,1747,104)"), left{}(), format{}("%cInt2Bytes%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblInt2Float'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortFloat{} [latex{}("{\\\\it{}Int2Float}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("Int2Float"), hook{}("FLOAT.int2float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1324,20,1324,131)"), left{}(), format{}("%cInt2Float%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Int2String"), hook{}("STRING.int2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1497,21,1497,103)"), left{}(), format{}("%cInt2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblList'Coln'get{}(SortList{}, SortInt{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("0101"), klabel{}("List:get"), hook{}("LIST.get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(674,20,674,98)"), left{}(), format{}("%1 %c[%r %2 %c]%r"), function{}()]
  hooked-symbol LblList'Coln'range{}(SortList{}, SortInt{}, SortInt{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("List:range"), hook{}("LIST.range"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(721,19,721,119)"), left{}(), format{}("%crange%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblListItem{}(SortKItem{}) : SortList{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), smtlib{}("smt_seq_elem"), terminals{}("1101"), klabel{}("ListItem"), hook{}("LIST.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(663,19,663,136)"), left{}(), format{}("%cListItem%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblMap'Coln'lookup{}(SortMap{}, SortKItem{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("0101"), klabel{}("Map:lookup"), hook{}("MAP.lookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(280,20,280,112)"), left{}(), format{}("%1 %c[%r %2 %c]%r"), function{}()]
  hooked-symbol LblMap'Coln'update{}(SortMap{}, SortKItem{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), prefer{}(), right{}(), terminals{}("010101"), klabel{}("Map:update"), hook{}("MAP.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,18,299,144)"), left{}(), format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}()]
  hooked-symbol LblMemInstCellMap'Coln'in'Unds'keys{}(SortMAddrCell{}, SortMemInstCellMap{}) : SortBool{} [functional{}(), priorities{}(), right{}(), terminals{}("01101"), hook{}("MAP.in_keys"), left{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}()]
  hooked-symbol LblMemInstCellMapItem{}(SortMAddrCell{}, SortMemInstCell{}) : SortMemInstCellMap{} [priorities{}(), right{}(), terminals{}("110101"), hook{}("MAP.element"), left{}(), format{}("%2"), function{}()]
  hooked-symbol LblModuleInstCellMap'Coln'in'Unds'keys{}(SortModIdxCell{}, SortModuleInstCellMap{}) : SortBool{} [functional{}(), priorities{}(), right{}(), terminals{}("01101"), hook{}("MAP.in_keys"), left{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}()]
  hooked-symbol LblModuleInstCellMapItem{}(SortModIdxCell{}, SortModuleInstCell{}) : SortModuleInstCellMap{} [priorities{}(), right{}(), terminals{}("110101"), hook{}("MAP.element"), left{}(), format{}("%2"), function{}()]
  hooked-symbol LblSet'Coln'difference{}(SortSet{}, SortSet{}) : SortSet{} [latex{}("{#1}-_{\\it Set}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("Set:difference"), hook{}("SET.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(575,18,575,146)"), left{}(), format{}("%1 %c-Set%r %2"), function{}()]
  hooked-symbol LblSet'Coln'in{}(SortKItem{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("Set:in"), hook{}("SET.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(583,19,583,106)"), left{}(), format{}("%1 %cin%r %2"), function{}()]
  hooked-symbol LblSetItem{}(SortKItem{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("SetItem"), hook{}("SET.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(543,18,543,112)"), left{}(), format{}("%cSetItem%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("String2Base"), hook{}("STRING.string2base"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1499,21,1499,98)"), left{}(), format{}("%cString2Base%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(SortString{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1454,19,1454,48)"), left{}(), format{}("%cString2Bool%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Bytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'String{}(SortString{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Bytes"), hook{}("BYTES.string2bytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1759,20,1759,88)"), left{}(), format{}("%cString2Bytes%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String{}(SortString{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Float"), hook{}("STRING.string2float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1477,21,1477,93)"), left{}(), format{}("%cString2Float%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Identifier'LParUndsRParUnds'WASM-TEXT'Unds'IdentifierToken'Unds'String{}(SortString{}) : SortIdentifierToken{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Identifier"), hook{}("STRING.string2token"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(363,32,363,106)"), left{}(), format{}("%cString2Identifier%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Int"), hook{}("STRING.string2int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1496,21,1496,91)"), left{}(), format{}("%cString2Int%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblTabInstCellMap'Coln'in'Unds'keys{}(SortTAddrCell{}, SortTabInstCellMap{}) : SortBool{} [functional{}(), priorities{}(), right{}(), terminals{}("01101"), hook{}("MAP.in_keys"), left{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}()]
  hooked-symbol LblTabInstCellMapItem{}(SortTAddrCell{}, SortTabInstCell{}) : SortTabInstCellMap{} [priorities{}(), right{}(), terminals{}("110101"), hook{}("MAP.element"), left{}(), format{}("%2"), function{}()]
  symbol LblWasmInt{}(SortWasmIntToken{}) : SortWasmInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("0"), klabel{}("WasmInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(81,24,81,78)"), left{}(), format{}("%1"), avoid{}(), function{}()]
  symbol LblWasmIntToken2Int'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'WasmIntToken{}(SortWasmIntToken{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("WasmIntToken2Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(350,23,350,72)"), left{}(), format{}("%cWasmIntToken2Int%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblWasmIntToken2String'LParUndsRParUnds'WASM-TEXT'Unds'String'Unds'WasmIntToken{}(SortWasmIntToken{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("WasmIntToken2String"), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(348,23,348,111)"), left{}(), format{}("%cWasmIntToken2String%r %c(%r %1 %c)%r"), function{}()]
  symbol LblWasmIntTokenString2Int'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("WasmIntTokenString2Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,23,349,72)"), left{}(), format{}("%cWasmIntTokenString2Int%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'UndsPerc'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}\\mathrel{\\%_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'Unds'-Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}()), smt-hook{}("(fp.rem roundNearestTiesToEven #1 #2)"), right{}(), terminals{}("010"), hook{}("FLOAT.rem"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1233,20,1233,182)"), left{}(Lbl'UndsPerc'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'UndsStar'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'UndsSlsh'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}()), format{}("%1 %c%%Float%r %2"), function{}()]
  hooked-symbol Lbl'UndsPerc'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\%_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("mod"), right{}(), terminals{}("010"), klabel{}("_%Int_"), hook{}("INT.tmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(936,18,936,170)"), left{}(Lbl'UndsStar'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}()), format{}("%1 %c%%Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsAnd-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\&_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("andInt"), terminals{}("010"), klabel{}("_&Int_"), hook{}("INT.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(947,18,947,182)"), left{}(Lbl'UndsAnd-'Int'Unds'{}()), format{}("%1 %c&Int%r %2"), function{}()]
  symbol Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(SortTableElemType{}, SortElemSegment{}) : SortTableSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("01101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(225,26,225,65)"), left{}(), format{}("%1 %c(%r %celem%r %2 %c)%r"), injective{}()]
  hooked-symbol Lbl'UndsStar'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}\\mathrel{\\ast_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'Unds'-Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}()), smt-hook{}("(fp.mul roundNearestTiesToEven #1 #2)"), right{}(), terminals{}("010"), hook{}("FLOAT.mul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1231,20,1231,184)"), left{}(Lbl'UndsSlsh'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'UndsStar'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'UndsPerc'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}()), format{}("%1 %c*Float%r %2"), function{}()]
  hooked-symbol Lbl'UndsStar'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ast_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("*"), right{}(), terminals{}("010"), klabel{}("_*Int_"), hook{}("INT.mul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(932,18,932,181)"), left{}(Lbl'Unds'modInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsStar'Int'Unds'{}()), format{}("%1 %c*Int%r %2"), function{}()]
  symbol Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(SortValStack{}, SortValStack{}) : SortValStack{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(409,25,409,69)"), left{}(), format{}("%1 %c++%r %2"), function{}()]
  hooked-symbol Lbl'UndsPlus'Bytes'UndsUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Bytes{}(SortBytes{}, SortBytes{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(Lbl'UndsPlus'Bytes'UndsUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Bytes{}()), terminals{}("010"), hook{}("BYTES.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1844,20,1844,89)"), left{}(), format{}("%1 %c+Bytes%r %2"), function{}()]
  hooked-symbol Lbl'UndsPlus'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}\\mathrel{+_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("(fp.add roundNearestTiesToEven #1 #2)"), right{}(), terminals{}("010"), hook{}("FLOAT.add"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1235,20,1235,181)"), left{}(Lbl'UndsPlus'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'Unds'-Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}()), format{}("%1 %c+Float%r %2"), function{}()]
  hooked-symbol Lbl'UndsPlus'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{+_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), smt-hook{}("+"), right{}(), terminals{}("010"), klabel{}("_+Int_"), hook{}("INT.add"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(941,18,941,178)"), left{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), format{}("%1 %c+Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortString{} [latex{}("{#1}+_{\\scriptstyle\\it String}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1387,21,1387,139)"), left{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}()), format{}("%1 %c+String%r %2"), function{}()]
  symbol Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(SortValTypes{}, SortValTypes{}) : SortValTypes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(266,25,266,68)"), left{}(), format{}("%1 %c+%r %2"), function{}()]
  hooked-symbol Lbl'Unds'-Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}\\mathrel{-_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("(fp.sub roundNearestTiesToEven #1 #2)"), right{}(), terminals{}("010"), hook{}("FLOAT.sub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1236,20,1236,181)"), left{}(Lbl'UndsPlus'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'Unds'-Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}()), format{}("%1 %c-Float%r %2"), function{}()]
  hooked-symbol Lbl'Unds'-Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{-_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), smt-hook{}("-"), right{}(), terminals{}("010"), klabel{}("_-Int_"), hook{}("INT.sub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(942,18,942,178)"), left{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), format{}("%1 %c-Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [latex{}("{#1}-_{\\it Map}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("MAP.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(320,18,320,120)"), left{}(), format{}("%1 %c-Map%r %2"), function{}()]
  symbol Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(SortFValType{}, SortLoadOpM{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(106,27,106,46)"), left{}(), format{}("%1 %c.%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(SortFValType{}, SortStoreOpM{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(104,27,104,48)"), left{}(), format{}("%1 %c.%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(SortIValType{}, SortLoadOpM{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(105,27,105,46)"), left{}(), format{}("%1 %c.%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(SortIValType{}, SortStoreOpM{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(103,27,103,48)"), left{}(), format{}("%1 %c.%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(SortFValType{}, SortFUnOp{}, SortFloat{}) : SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), priorities{}(), right{}(), terminals{}("0100"), klabel{}("floatUnOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(114,20,114,73)"), left{}(), format{}("%1 %c.%r %2 %3"), function{}()]
  symbol Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IUnOp'Unds'Int{}(SortIValType{}, SortIUnOp{}, SortInt{}) : SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), priorities{}(), right{}(), terminals{}("0100"), klabel{}("intUnOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(113,20,113,73)"), left{}(), format{}("%1 %c.%r %2 %3"), function{}()]
  symbol Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'TestOp'Unds'Int{}(SortIValType{}, SortTestOp{}, SortInt{}) : SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), priorities{}(), right{}(), terminals{}("0100"), klabel{}("intTestOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(313,20,313,72)"), left{}(), format{}("%1 %c.%r %2 %3"), function{}()]
  symbol Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(SortValType{}, SortCvtOp{}, SortNumber{}) : SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), priorities{}(), right{}(), terminals{}("0100"), klabel{}("numberCvtOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(395,20,395,75)"), left{}(), format{}("%1 %c.%r %2 %3"), function{}()]
  symbol Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(SortIValType{}, SortLoadOp{}, SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("0100"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1005,22,1005,44)"), left{}(), format{}("%1 %c.%r %2 %3"), injective{}()]
  symbol Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(SortFValType{}, SortFBinOp{}, SortFloat{}, SortFloat{}) : SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), priorities{}(), right{}(), terminals{}("01000"), klabel{}("floatBinOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(194,20,194,81)"), left{}(), format{}("%1 %c.%r %2 %3 %4"), function{}()]
  symbol Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(SortFValType{}, SortFRelOp{}, SortFloat{}, SortFloat{}) : SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), priorities{}(), right{}(), terminals{}("01000"), klabel{}("floatRelOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(331,20,331,81)"), left{}(), format{}("%1 %c.%r %2 %3 %4"), function{}()]
  symbol Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(SortIValType{}, SortIBinOp{}, SortInt{}, SortInt{}) : SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), priorities{}(), right{}(), terminals{}("01000"), klabel{}("intBinOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(193,20,193,81)"), left{}(), format{}("%1 %c.%r %2 %3 %4"), function{}()]
  symbol Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(SortIValType{}, SortIRelOp{}, SortInt{}, SortInt{}) : SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), priorities{}(), right{}(), terminals{}("01000"), klabel{}("intRelOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(330,20,330,81)"), left{}(), format{}("%1 %c.%r %2 %3 %4"), function{}()]
  symbol Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(SortIValType{}, SortStoreOp{}, SortInt{}, SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("01000"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(953,22,953,49)"), left{}(), format{}("%1 %c.%r %2 %3 %4"), injective{}()]
  hooked-symbol Lbl'UndsSlsh'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}\\mathrel{\\div_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'Unds'-Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}()), smt-hook{}("(fp.div roundNearestTiesToEven #1 #2)"), right{}(), terminals{}("010"), hook{}("FLOAT.div"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1232,20,1232,184)"), left{}(Lbl'UndsStar'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'UndsSlsh'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'UndsPerc'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}()), format{}("%1 %c/Float%r %2"), function{}()]
  hooked-symbol Lbl'UndsSlsh'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\div_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("div"), right{}(), terminals{}("010"), klabel{}("_/Int_"), hook{}("INT.tdiv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(935,18,935,172)"), left{}(Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}()), format{}("%1 %c/Int%r %2"), function{}()]
  symbol Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(SortVal{}, SortValStack{}) : SortValStack{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(408,25,408,46)"), left{}(), format{}("%1 %c:%r %2"), injective{}()]
  hooked-symbol Lbl'Unds-LT--LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ll_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("shlInt"), terminals{}("010"), klabel{}("_<<Int_"), hook{}("INT.shl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(945,18,945,172)"), left{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}()), format{}("%1 %c<<Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{\\leq_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("fp.leq"), right{}(), terminals{}("010"), hook{}("FLOAT.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1304,19,1304,151)"), left{}(Lbl'Unds-LT-Eqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}()), format{}("%1 %c<=Float%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\leq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), smt-hook{}("<="), right{}(), terminals{}("010"), klabel{}("_<=Int_"), hook{}("INT.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1003,19,1003,176)"), left{}(Lbl'Unds-LT-Eqls'Int'Unds'{}()), format{}("%1 %c<=Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("MAP.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(392,19,392,91)"), left{}(), format{}("%1 %c<=Map%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("SET.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(592,19,592,85)"), left{}(), format{}("%1 %c<=Set%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1532,19,1532,82)"), left{}(), format{}("%1 %c<=String%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{<_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("fp.lt"), right{}(), terminals{}("010"), hook{}("FLOAT.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1305,19,1305,147)"), left{}(Lbl'Unds-LT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}()), format{}("%1 %c<Float%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{<_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), smt-hook{}("<"), right{}(), terminals{}("010"), klabel{}("_<Int_"), hook{}("INT.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1004,19,1004,171)"), left{}(Lbl'Unds-LT-'Int'Unds'{}()), format{}("%1 %c<Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1531,19,1531,82)"), left{}(), format{}("%1 %c<String%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), smt-hook{}("distinct"), right{}(), terminals{}("010"), klabel{}("_=/=Bool_"), hook{}("BOOL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(827,19,827,132)"), left{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}()), format{}("%1 %c=/=Bool%r %2"), function{}()]
  symbol Lbl'UndsEqlsSlshEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{\\neq_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("(not (fp.eq #1 #2))"), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1309,19,1309,148)"), left{}(Lbl'UndsEqlsSlshEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}()), format{}("%1 %c=/=Float%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{/}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), smt-hook{}("distinct"), right{}(), terminals{}("010"), klabel{}("_=/=Int_"), hook{}("INT.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1008,19,1008,188)"), left{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}()), format{}("%1 %c=/=Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{\\neq_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), notEqualEqualK{}(), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),LblnotBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), smt-hook{}("distinct"), right{}(), terminals{}("010"), klabel{}("_=/=K_"), hook{}("KEQUAL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2044,19,2044,170)"), left{}(Lbl'UndsEqlsEqls'K'Unds'{}(),Lbl'UndsEqlsSlshEqls'K'Unds'{}()), format{}("%1 %c=/=K%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1528,19,1528,94)"), left{}(Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}()), format{}("%1 %c=/=String%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), smt-hook{}("="), right{}(), terminals{}("010"), klabel{}("_==Bool_"), hook{}("BOOL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(826,19,826,124)"), left{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), format{}("%1 %c==Bool%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{==_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("fp.eq"), right{}(), terminals{}("010"), klabel{}("_==Float_"), hook{}("FLOAT.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1308,19,1308,167)"), left{}(Lbl'UndsEqlsEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}()), format{}("%1 %c==Float%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), smt-hook{}("="), right{}(), terminals{}("010"), klabel{}("_==Int_"), hook{}("INT.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1007,19,1007,177)"), left{}(Lbl'UndsEqlsEqls'Int'Unds'{}()), format{}("%1 %c==Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{=_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),LblnotBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), smt-hook{}("="), right{}(), terminals{}("010"), equalEqualK{}(), klabel{}("_==K_"), hook{}("KEQUAL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2043,19,2043,156)"), left{}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(),Lbl'UndsEqlsEqls'K'Unds'{}()), format{}("%1 %c==K%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1527,19,1527,88)"), left{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}()), format{}("%1 %c==String%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{\\geq_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("fp.geq"), right{}(), terminals{}("010"), hook{}("FLOAT.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1306,19,1306,151)"), left{}(Lbl'Unds-GT-Eqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}()), format{}("%1 %c>=Float%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\geq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), smt-hook{}(">="), right{}(), terminals{}("010"), klabel{}("_>=Int_"), hook{}("INT.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1005,19,1005,176)"), left{}(Lbl'Unds-GT-Eqls'Int'Unds'{}()), format{}("%1 %c>=Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1534,19,1534,82)"), left{}(), format{}("%1 %c>=String%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT--GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\gg_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("shrInt"), terminals{}("010"), klabel{}("_>>Int_"), hook{}("INT.shr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(944,18,944,172)"), left{}(Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}()), format{}("%1 %c>>Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{>_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("fg.gt"), right{}(), terminals{}("010"), hook{}("FLOAT.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1307,19,1307,147)"), left{}(Lbl'Unds-GT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}()), format{}("%1 %c>Float%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{>_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), smt-hook{}(">"), right{}(), terminals{}("010"), klabel{}("_>Int_"), hook{}("INT.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1006,19,1006,171)"), left{}(Lbl'Unds-GT-'Int'Unds'{}()), format{}("%1 %c>Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1533,19,1533,82)"), left{}(), format{}("%1 %c>String%r %2"), function{}()]
  hooked-symbol Lbl'Unds'FuncDefCellMap'Unds'{}(SortFuncDefCellMap{}, SortFuncDefCellMap{}) : SortFuncDefCellMap{} [unit{}(Lbl'Stop'FuncDefCellMap{}()), element{}(LblFuncDefCellMapItem{}()), comm{}(), priorities{}(), cellCollection{}(), right{}(), assoc{}(), terminals{}("00"), hook{}("MAP.concat"), left{}(), format{}("%1 %2"), avoid{}(), function{}(), wrapElement{}("<funcDef>")]
  hooked-symbol Lbl'Unds'GlobalInstCellMap'Unds'{}(SortGlobalInstCellMap{}, SortGlobalInstCellMap{}) : SortGlobalInstCellMap{} [unit{}(Lbl'Stop'GlobalInstCellMap{}()), element{}(LblGlobalInstCellMapItem{}()), comm{}(), priorities{}(), cellCollection{}(), right{}(), assoc{}(), terminals{}("00"), hook{}("MAP.concat"), left{}(), format{}("%1 %2"), avoid{}(), function{}(), wrapElement{}("<globalInst>")]
  hooked-symbol Lbl'Unds'List'Unds'{}(SortList{}, SortList{}) : SortList{} [unit{}(Lbl'Stop'List{}()), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), element{}(LblListItem{}()), symbol'Kywd'{}(), priorities{}(), right{}(), assoc{}(), smtlib{}("smt_seq_concat"), terminals{}("00"), klabel{}("_List_"), hook{}("LIST.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(647,19,647,192)"), left{}(Lbl'Unds'List'Unds'{}()), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'Map'Unds'{}(SortMap{}, SortMap{}) : SortMap{} [unit{}(Lbl'Stop'Map{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), symbol'Kywd'{}(), comm{}(), priorities{}(), right{}(), assoc{}(), terminals{}("00"), index{}("0"), klabel{}("_Map_"), hook{}("MAP.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(249,18,249,172)"), left{}(Lbl'Unds'Map'Unds'{}()), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'MemInstCellMap'Unds'{}(SortMemInstCellMap{}, SortMemInstCellMap{}) : SortMemInstCellMap{} [unit{}(Lbl'Stop'MemInstCellMap{}()), element{}(LblMemInstCellMapItem{}()), comm{}(), priorities{}(), cellCollection{}(), right{}(), assoc{}(), terminals{}("00"), hook{}("MAP.concat"), left{}(), format{}("%1 %2"), avoid{}(), function{}(), wrapElement{}("<memInst>")]
  hooked-symbol Lbl'Unds'ModuleInstCellMap'Unds'{}(SortModuleInstCellMap{}, SortModuleInstCellMap{}) : SortModuleInstCellMap{} [unit{}(Lbl'Stop'ModuleInstCellMap{}()), element{}(LblModuleInstCellMapItem{}()), comm{}(), priorities{}(), cellCollection{}(), right{}(), assoc{}(), terminals{}("00"), hook{}("MAP.concat"), left{}(), format{}("%1 %2"), avoid{}(), function{}(), wrapElement{}("<moduleInst>")]
  hooked-symbol Lbl'Unds'Set'Unds'{}(SortSet{}, SortSet{}) : SortSet{} [unit{}(Lbl'Stop'Set{}()), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), element{}(LblSetItem{}()), symbol'Kywd'{}(), idem{}(), comm{}(), priorities{}(), right{}(), assoc{}(), terminals{}("00"), klabel{}("_Set_"), hook{}("SET.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(527,18,527,176)"), left{}(Lbl'Unds'Set'Unds'{}()), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'TabInstCellMap'Unds'{}(SortTabInstCellMap{}, SortTabInstCellMap{}) : SortTabInstCellMap{} [unit{}(Lbl'Stop'TabInstCellMap{}()), element{}(LblTabInstCellMapItem{}()), comm{}(), priorities{}(), cellCollection{}(), right{}(), assoc{}(), terminals{}("00"), hook{}("MAP.concat"), left{}(), format{}("%1 %2"), avoid{}(), function{}(), wrapElement{}("<tabInst>")]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(SortBytes{}, SortInt{}, SortInt{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010101"), hook{}("BYTES.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1770,20,1770,90)"), left{}(), format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010101"), klabel{}("List:set"), hook{}("LIST.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(683,19,683,107)"), left{}(), format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(SortMap{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010111"), klabel{}("_[_<-undef]"), hook{}("MAP.remove"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(308,18,308,121)"), left{}(), format{}("%1 %c[%r %2 %c<-%r %cundef%r %c]%r"), function{}()]
  hooked-symbol Lbl'UndsLSqBUndsRSqBUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes'Unds'Int{}(SortBytes{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("0101"), hook{}("BYTES.get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1779,18,1779,62)"), left{}(), format{}("%1 %c[%r %2 %c]%r"), function{}()]
  hooked-symbol Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(SortMap{}, SortKItem{}, SortKItem{}) : SortKItem{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010110"), klabel{}("Map:lookupOrDefault"), hook{}("MAP.lookupOrDefault"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(290,20,290,138)"), left{}(), format{}("%1 %c[%r %2 %c]%r %corDefault%r %3"), function{}()]
  hooked-symbol Lbl'UndsXor-Perc'Int'UndsUnds'{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("(mod (^ #1 #2) #3)"), right{}(), terminals{}("0100"), klabel{}("_^%Int__"), hook{}("INT.powmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(930,18,930,138)"), left{}(Lbl'UndsXor-Perc'Int'UndsUnds'{}(),Lbl'UndsXor-'Int'Unds'{}()), format{}("%1 %c^%%Int%r %2 %3"), function{}()]
  hooked-symbol Lbl'UndsXor-'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}^{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPerc'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'UndsPlus'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'UndsStar'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'Unds'-Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(),Lbl'UndsSlsh'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}()), right{}(), terminals{}("010"), hook{}("FLOAT.pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1229,20,1229,98)"), left{}(Lbl'UndsXor-'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}()), format{}("%1 %c^Float%r %2"), function{}()]
  hooked-symbol Lbl'UndsXor-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{{\\char`\\^}_{\\!\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("^"), right{}(), terminals{}("010"), klabel{}("_^Int_"), hook{}("INT.pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(929,18,929,177)"), left{}(Lbl'UndsXor-'Int'Unds'{}(),Lbl'UndsXor-Perc'Int'UndsUnds'{}()), format{}("%1 %c^Int%r %2"), function{}()]
  symbol Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(SortDefn{}, SortDefns{}) : SortDefns{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), anywhere{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("listStmt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(59,27,59,65)"), left{}(), format{}("%1 %c%r %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(SortInstr{}, SortInstrs{}) : SortInstrs{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), anywhere{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("listStmt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,27,58,65)"), left{}(), format{}("%1 %c%r %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(SortStmt{}, SortStmts{}) : SortStmts{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), anywhere{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("listStmt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(60,27,60,65)"), left{}(), format{}("%1 %c%r %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(SortTypeKeyWord{}, SortValTypes{}) : SortTypeDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(99,28,99,47)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(SortTypeDecl{}, SortTypeDecls{}) : SortTypeDecls{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("010"), klabel{}("listTypeDecl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(101,28,101,69)"), left{}(), format{}("%1 %c%r %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'DataString'Unds'WasmString'Unds'DataString{}(SortWasmString{}, SortDataString{}) : SortDataString{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("010"), klabel{}("listWasmString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(54,27,54,71)"), left{}(), format{}("%1 %c%r %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(SortIndex{}, SortElemSegment{}) : SortElemSegment{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("010"), klabel{}("listIndex"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(75,28,75,62)"), left{}(), format{}("%1 %c%r %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(SortAllocatedKind{}, SortIndex{}) : SortExternval{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(135,30,135,48)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(SortInlineExport{}, SortFuncSpec{}) : SortFuncSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(206,25,206,45)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(SortInlineImport{}, SortTypeUse{}) : SortFuncSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(205,25,205,44)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(SortInlineExport{}, SortGlobalSpec{}) : SortGlobalSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(259,27,259,49)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(SortInlineImport{}, SortTextFormatGlobalType{}) : SortGlobalSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(258,27,258,59)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(SortTextFormatGlobalType{}, SortInstr{}) : SortGlobalSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,27,257,52)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(SortLoadOp{}, SortMemArg{}) : SortLoadOpM{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(108,36,108,48)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(SortLocalDecl{}, SortLocalDecls{}) : SortLocalDecls{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("010"), klabel{}("listLocalDecl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(216,27,216,77)"), left{}(), format{}("%1 %c%r %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(SortOffsetArg{}, SortAlignArg{}) : SortMemArg{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(109,50,109,67)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(SortInlineExport{}, SortMemorySpec{}) : SortMemorySpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(246,27,246,49)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(SortInlineImport{}, SortMemType{}) : SortMemorySpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(245,27,245,46)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(SortStoreOp{}, SortMemArg{}) : SortStoreOpM{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(107,37,107,50)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(SortInlineExport{}, SortTableSpec{}) : SortTableSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(227,26,227,47)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(SortInlineImport{}, SortTableType{}) : SortTableSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(226,26,226,47)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableType'Unds'TextLimits'Unds'TableElemType{}(SortTextLimits{}, SortTableElemType{}) : SortTableType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(230,26,230,49)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TextLimits'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortTextLimits{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(157,33,157,39)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(SortTypeUse{}, SortLocalDecls{}, SortInstrs{}) : SortFuncSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("000"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(204,25,204,49)"), left{}(), format{}("%1 %2 %3"), injective{}()]
  hooked-symbol Lbl'Unds'andBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\wedge_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("and"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_andBool_"), hook{}("BOOL.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(819,19,819,189)"), left{}(Lbl'Unds'andBool'Unds'{}()), format{}("%1 %candBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'andThenBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("and"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_andThenBool_"), hook{}("BOOL.andThen"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(820,19,820,151)"), left{}(Lbl'Unds'andThenBool'Unds'{}()), format{}("%1 %candThenBool%r %2"), function{}()]
  symbol Lbl'Unds'appendDefn'UndsUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Defn{}(SortDefns{}, SortDefn{}) : SortDefns{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(403,22,403,55)"), left{}(), format{}("%1 %cappendDefn%r %2"), function{}()]
  symbol Lbl'Unds'appendInstrs'UndsUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(SortInstrs{}, SortInstrs{}) : SortInstrs{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(565,23,565,66)"), left{}(), format{}("%1 %cappendInstrs%r %2"), function{}()]
  hooked-symbol Lbl'Unds'divInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("div"), right{}(), terminals{}("010"), klabel{}("_divInt_"), hook{}("INT.ediv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(938,18,938,121)"), left{}(Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}()), format{}("%1 %cdivInt%r %2"), function{}()]
  symbol Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1017,19,1017,52)"), left{}(), format{}("%1 %cdividesInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds'impliesBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("=>"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_impliesBool_"), hook{}("BOOL.implies"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(824,19,824,150)"), left{}(Lbl'Unds'impliesBool'Unds'{}()), format{}("%1 %cimpliesBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(SortKItem{}, SortList{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), klabel{}("_inList_"), hook{}("LIST.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(730,19,730,101)"), left{}(), format{}("%1 %cin%r %2"), function{}()]
  hooked-symbol Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(SortKItem{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("01101"), hook{}("MAP.in_keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(366,19,366,93)"), left{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Unds'modInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("mod"), right{}(), terminals{}("010"), klabel{}("_modInt_"), hook{}("INT.emod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(939,18,939,121)"), left{}(Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}()), format{}("%1 %cmodInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds'orBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\vee_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("or"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_orBool_"), hook{}("BOOL.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(822,19,822,184)"), left{}(Lbl'Unds'orBool'Unds'{}()), format{}("%1 %corBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'orElseBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("or"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_orElseBool_"), hook{}("BOOL.orElse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(823,19,823,148)"), left{}(Lbl'Unds'orElseBool'Unds'{}()), format{}("%1 %corElseBool%r %2"), function{}()]
  symbol Lbl'Unds'up'Slsh'Int'UndsUnds'WASM'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1195,20,1195,46)"), left{}(), format{}("%1 %cup/Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds'xorBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("xor"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_xorBool_"), hook{}("BOOL.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(821,19,821,143)"), left{}(Lbl'Unds'xorBool'Unds'{}()), format{}("%1 %cxorBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'xorInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\oplus_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("xorInt"), terminals{}("010"), klabel{}("_xorInt_"), hook{}("INT.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(949,18,949,188)"), left{}(Lbl'Unds'xorInt'Unds'{}()), format{}("%1 %cxorInt%r %2"), function{}()]
  hooked-symbol Lbl'UndsPipe'-'-GT-Unds'{}(SortKItem{}, SortKItem{}) : SortMap{} [latex{}("{#1}\\mapsto{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Stop'Map{}(),Lbl'Unds'Map'Unds'{}()), right{}(Lbl'UndsPipe'-'-GT-Unds'{}()), terminals{}("010"), klabel{}("_|->_"), hook{}("MAP.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(266,18,266,144)"), left{}(Lbl'UndsPipe'-'-GT-Unds'{}()), format{}("%1 %c|->%r %2"), function{}()]
  hooked-symbol Lbl'UndsPipe'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{|_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), smtlib{}("orInt"), terminals{}("010"), klabel{}("_|Int_"), hook{}("INT.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(951,18,951,179)"), left{}(Lbl'UndsPipe'Int'Unds'{}()), format{}("%1 %c|Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), hook{}("SET.union"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(554,18,554,88)"), left{}(Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}()), format{}("%1 %c|Set%r %2"), function{}()]
  symbol LblaAbs{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aAbs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,22,18,57)"), left{}(), format{}("%cabs%r"), injective{}()]
  symbol LblaBlock{}(SortVecType{}, SortInstrs{}, SortBlockMetaData{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("aBlock"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(440,22,440,84)"), left{}(), format{}("%c#block%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  symbol LblaBr{}(SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("aBr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(452,22,452,53)"), left{}(), format{}("%c#br%r %c(%r %1 %c)%r"), injective{}()]
  symbol LblaBr'Unds'if{}(SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("aBr_if"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(460,22,460,66)"), left{}(), format{}("%c#br_if%r %c(%r %1 %c)%r"), injective{}()]
  symbol LblaBr'Unds'table{}(SortInts{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("aBr_table"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(469,22,469,73)"), left{}(), format{}("%c#br_table%r %c(%r %1 %c)%r"), injective{}()]
  symbol LblaCall{}(SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("aCall"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(777,22,777,55)"), left{}(), format{}("%c#call%r %c(%r %1 %c)%r"), injective{}()]
  symbol LblaCall'Unds'indirect{}(SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("aCall_indirect"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(789,22,789,82)"), left{}(), format{}("%c#call_indirect%r %c(%r %1 %c)%r"), injective{}()]
  symbol LblaCeil{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aCeil"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,22,22,57)"), left{}(), format{}("%cceil%r"), injective{}()]
  symbol LblaClz{}() : SortIUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aClz"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,22,13,52)"), left{}(), format{}("%cclz%r"), injective{}()]
  symbol LblaConvert'Unds'i32'Unds's{}() : SortCvti32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aConvert_i32_s"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(81,25,81,72)"), left{}(), format{}("%cconvert_i32_s%r"), injective{}()]
  symbol LblaConvert'Unds'i32'Unds'u{}() : SortCvti32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aConvert_i32_u"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(82,25,82,72)"), left{}(), format{}("%cconvert_i32_u%r"), injective{}()]
  symbol LblaConvert'Unds'i64'Unds's{}() : SortCvti64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aConvert_i64_s"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,25,86,72)"), left{}(), format{}("%cconvert_i64_s%r"), injective{}()]
  symbol LblaConvert'Unds'i64'Unds'u{}() : SortCvti64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aConvert_i64_u"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(87,25,87,72)"), left{}(), format{}("%cconvert_i64_u%r"), injective{}()]
  symbol LblaCtz{}() : SortIUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aCtz"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,22,14,52)"), left{}(), format{}("%cctz%r"), injective{}()]
  symbol LblaCvtOp{}(SortValType{}, SortCvtOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("aCvtOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(83,27,83,82)"), left{}(), format{}("%1 %c.%r %2"), injective{}()]
  symbol LblaDataDefn{}(SortInt{}, SortInstrs{}, SortBytes{}) : SortDataDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("aDataDefn"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1174,25,1174,101)"), left{}(), format{}("%c#data%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  symbol LblaDemote'Unds'f64{}() : SortCvtf64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aDemote_f64"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(95,25,95,66)"), left{}(), format{}("%cdemote_f64%r"), injective{}()]
  symbol LblaDrop{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aDrop"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,27,84,81)"), left{}(), format{}("%cdrop%r"), injective{}()]
  symbol LblaElemDefn{}(SortInt{}, SortInstrs{}, SortInts{}) : SortElemDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("aElemDefn"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1143,25,1143,107)"), left{}(), format{}("%c#elem%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  symbol LblaEqz{}() : SortTestOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aEqz"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,23,53,50)"), left{}(), format{}("%ceqz%r"), injective{}()]
  symbol LblaExportDefn{}(SortWasmString{}, SortInt{}) : SortExportDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("aExportDefn"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1223,27,1223,95)"), left{}(), format{}("%c#export%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol LblaExtend'Unds'i32'Unds's{}() : SortCvti32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aExtend_i32_s"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(80,25,80,70)"), left{}(), format{}("%cextend_i32_s%r"), injective{}()]
  symbol LblaExtend'Unds'i32'Unds'u{}() : SortCvti32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aExtend_i32_u"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(79,25,79,70)"), left{}(), format{}("%cextend_i32_u%r"), injective{}()]
  symbol LblaFBinOp{}(SortFValType{}, SortFBinOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("aFBinOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(79,27,79,83)"), left{}(), format{}("%1 %c.%r %2"), injective{}()]
  symbol LblaFConst{}(SortFValType{}, SortNumber{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("0110"), klabel{}("aFConst"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(75,27,75,83)"), left{}(), format{}("%1 %c.%r %cconst%r %2"), injective{}()]
  symbol LblaFRelOp{}(SortFValType{}, SortFRelOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("aFRelOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(82,27,82,83)"), left{}(), format{}("%1 %c.%r %2"), injective{}()]
  symbol LblaFUnOp{}(SortFValType{}, SortFUnOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("aFUnOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(77,27,77,82)"), left{}(), format{}("%1 %c.%r %2"), injective{}()]
  symbol LblaFloor{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aFloor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,22,21,57)"), left{}(), format{}("%cfloor%r"), injective{}()]
  symbol LblaFuncDefn{}(SortInt{}, SortVecType{}, SortInstrs{}, SortFuncMetadata{}) : SortFuncDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101010101"), klabel{}("aFuncDefn"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(689,25,689,123)"), left{}(), format{}("%c#func%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), injective{}()]
  symbol LblaFuncDesc{}(SortOptionalId{}, SortInt{}) : SortImportDesc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("aFuncDesc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1244,27,1244,112)"), left{}(), format{}("%c#funcDesc%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol LblaFuncType{}(SortVecType{}, SortVecType{}) : SortFuncType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("aFuncType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(247,25,247,72)"), left{}(), format{}("%1 %c->%r %2"), injective{}()]
  symbol LblaGlobal'Stop'get{}(SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("aGlobal.get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(582,22,582,76)"), left{}(), format{}("%c#global.get%r %c(%r %1 %c)%r"), injective{}()]
  symbol LblaGlobal'Stop'set{}(SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("aGlobal.set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(583,22,583,76)"), left{}(), format{}("%c#global.set%r %c(%r %1 %c)%r"), injective{}()]
  symbol LblaGlobalDefn{}(SortGlobalType{}, SortInstrs{}, SortOptionalId{}) : SortGlobalDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("aGlobalDefn"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(551,27,551,117)"), left{}(), format{}("%c#global%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  symbol LblaGlobalDesc{}(SortOptionalId{}, SortGlobalType{}) : SortImportDesc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("aGlobalDesc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1245,27,1245,112)"), left{}(), format{}("%c#globalDesc%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol LblaGlobalType{}(SortMut{}, SortValType{}) : SortGlobalType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("00"), klabel{}("aGlobalType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(548,27,548,67)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol LblaGrow{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aGrow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(90,27,90,81)"), left{}(), format{}("%cmemory.grow%r"), injective{}()]
  symbol LblaIBinOp{}(SortIValType{}, SortIBinOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("aIBinOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(78,27,78,83)"), left{}(), format{}("%1 %c.%r %2"), injective{}()]
  symbol LblaIConst{}(SortIValType{}, SortWasmInt{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("0110"), klabel{}("aIConst"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(74,27,74,83)"), left{}(), format{}("%1 %c.%r %cconst%r %2"), injective{}()]
  symbol LblaIRelOp{}(SortIValType{}, SortIRelOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("aIRelOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(81,27,81,83)"), left{}(), format{}("%1 %c.%r %2"), injective{}()]
  symbol LblaIUnOp{}(SortIValType{}, SortIUnOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("aIUnOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(76,27,76,82)"), left{}(), format{}("%1 %c.%r %2"), injective{}()]
  symbol LblaIf{}(SortVecType{}, SortInstrs{}, SortInstrs{}, SortBlockMetaData{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101010101"), klabel{}("aIf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(478,22,478,112)"), left{}(), format{}("%c#if%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), injective{}()]
  symbol LblaImportDefn{}(SortWasmString{}, SortWasmString{}, SortImportDesc{}) : SortImportDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("aImportDefn"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1243,27,1243,112)"), left{}(), format{}("%c#import%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  symbol LblaLoad{}(SortValType{}, SortLoadOp{}, SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("aLoad"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1001,22,1001,81)"), left{}(), format{}("%c#load%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  symbol LblaLocal'Stop'get{}(SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("aLocal.get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(522,22,522,74)"), left{}(), format{}("%c#local.get%r %c(%r %1 %c)%r"), injective{}()]
  symbol LblaLocal'Stop'set{}(SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("aLocal.set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(523,22,523,74)"), left{}(), format{}("%c#local.set%r %c(%r %1 %c)%r"), injective{}()]
  symbol LblaLocal'Stop'tee{}(SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("aLocal.tee"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(524,22,524,74)"), left{}(), format{}("%c#local.tee%r %c(%r %1 %c)%r"), injective{}()]
  symbol LblaLoop{}(SortVecType{}, SortInstrs{}, SortBlockMetaData{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("aLoop"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(488,22,488,82)"), left{}(), format{}("%c#loop%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  symbol LblaMemoryDefn{}(SortLimits{}, SortOptionalId{}) : SortMemoryDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("aMemoryDefn"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(916,27,916,101)"), left{}(), format{}("%c#memory%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol LblaMemoryDesc{}(SortOptionalId{}, SortLimits{}) : SortImportDesc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("aMemoryDesc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1247,27,1247,112)"), left{}(), format{}("%c#memoryDesc%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol LblaModuleDecl{}(SortDefns{}, SortDefns{}, SortDefns{}, SortDefns{}, SortDefns{}, SortDefns{}, SortDefns{}, SortDefns{}, SortDefns{}, SortDefns{}, SortModuleMetadata{}) : SortModuleDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("110101010101010101010101"), klabel{}("aModuleDecl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1375,27,1375,239)"), left{}(), format{}("%c#module%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c,%r %5 %c,%r %6 %c,%r %7 %c,%r %8 %c,%r %9 %c,%r %10 %c,%r %11 %c)%r"), injective{}()]
  symbol LblaNearest{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aNearest"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,22,24,57)"), left{}(), format{}("%cnearest%r"), injective{}()]
  symbol LblaNeg{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aNeg"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,22,19,57)"), left{}(), format{}("%cneg%r"), injective{}()]
  symbol LblaNop{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aNop"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,27,86,80)"), left{}(), format{}("%cnop%r"), injective{}()]
  symbol LblaPopcnt{}() : SortIUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aPopcnt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(15,22,15,55)"), left{}(), format{}("%cpopcnt%r"), injective{}()]
  symbol LblaPromote'Unds'f32{}() : SortCvtf32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aPromote_f32"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(90,25,90,68)"), left{}(), format{}("%cpromote_f32%r"), injective{}()]
  symbol LblaReturn{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aReturn"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(88,27,88,83)"), left{}(), format{}("%creturn%r"), injective{}()]
  symbol LblaSelect{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aSelect"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(85,27,85,83)"), left{}(), format{}("%cselect%r"), injective{}()]
  symbol LblaSize{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aSize"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(89,27,89,81)"), left{}(), format{}("%cmemory.size%r"), injective{}()]
  symbol LblaSqrt{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aSqrt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,22,20,57)"), left{}(), format{}("%csqrt%r"), injective{}()]
  symbol LblaStartDefn{}(SortInt{}) : SortStartDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("aStartDefn"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1206,26,1206,65)"), left{}(), format{}("%c#start%r %c(%r %1 %c)%r"), injective{}()]
  symbol LblaStore{}(SortValType{}, SortStoreOp{}, SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("aStore"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(952,22,952,84)"), left{}(), format{}("%c#store%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  symbol LblaTableDefn{}(SortLimits{}, SortOptionalId{}) : SortTableDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("aTableDefn"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(873,26,873,99)"), left{}(), format{}("%c#table%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol LblaTableDesc{}(SortOptionalId{}, SortLimits{}) : SortImportDesc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("aTableDesc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1246,27,1246,112)"), left{}(), format{}("%c#tableDesc%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol LblaTestOp{}(SortIValType{}, SortTestOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("aTestOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(80,27,80,83)"), left{}(), format{}("%1 %c.%r %2"), injective{}()]
  symbol LblaTrunc{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aTrunc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,22,23,57)"), left{}(), format{}("%ctrunc%r"), injective{}()]
  symbol LblaTrunc'Unds'f32'Unds's{}() : SortCvtf32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aTrunc_f32_s"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(91,25,91,68)"), left{}(), format{}("%ctrunc_f32_s%r"), injective{}()]
  symbol LblaTrunc'Unds'f32'Unds'u{}() : SortCvtf32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aTrunc_f32_u"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(92,25,92,68)"), left{}(), format{}("%ctrunc_f32_u%r"), injective{}()]
  symbol LblaTrunc'Unds'f64'Unds's{}() : SortCvtf64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aTrunc_f64_s"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(96,25,96,68)"), left{}(), format{}("%ctrunc_f64_s%r"), injective{}()]
  symbol LblaTrunc'Unds'f64'Unds'u{}() : SortCvtf64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aTrunc_f64_u"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,25,97,68)"), left{}(), format{}("%ctrunc_f64_u%r"), injective{}()]
  symbol LblaTypeDefn{}(SortFuncType{}, SortOptionalId{}) : SortTypeDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("aTypeDefn"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(660,25,660,95)"), left{}(), format{}("%c#type%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol LblaUnreachable{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aUnreachable"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(87,27,87,88)"), left{}(), format{}("%cunreachable%r"), injective{}()]
  symbol LblaVecType{}(SortValTypes{}) : SortVecType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("101"), klabel{}("aVecType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(244,25,244,67)"), left{}(), format{}("%c[%r %1 %c]%r"), injective{}()]
  symbol LblaWrap'Unds'i64{}() : SortCvti64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("aWrap_i64"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(85,25,85,62)"), left{}(), format{}("%cwrap_i64%r"), injective{}()]
  hooked-symbol LblabsFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("fp.abs"), right{}(), terminals{}("1101"), klabel{}("absFloat"), hook{}("FLOAT.abs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1272,20,1272,105)"), left{}(), format{}("%cabsFloat%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("(ite (< #1 0) (- 0 #1) #1)"), right{}(), terminals{}("1101"), klabel{}("absInt"), hook{}("INT.abs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(968,18,968,123)"), left{}(), format{}("%cabsInt%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblacosFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("acosFloat"), hook{}("FLOAT.acos"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1282,20,1282,76)"), left{}(), format{}("%cacosFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblalign'EqlsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'AlignArg'Unds'WasmInt{}(SortWasmInt{}) : SortAlignArg{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(111,27,111,43)"), left{}(), format{}("%calign=%r %1"), injective{}()]
  symbol Lblallocfunc'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'Int'Unds'Int'Unds'FuncType'Unds'VecType'Unds'Instrs'Unds'FuncMetadata{}(SortInt{}, SortInt{}, SortFuncType{}, SortVecType{}, SortInstrs{}, SortFuncMetadata{}) : SortAlloc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("11010101010101"), klabel{}("allocfunc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(690,25,690,92)"), left{}(), format{}("%callocfunc%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c,%r %5 %c,%r %6 %c)%r"), injective{}()]
  symbol Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(SortOptionalId{}, SortGlobalType{}) : SortAlloc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("allocglobal"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,27,552,62)"), left{}(), format{}("%callocglobal%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(SortOptionalId{}, SortInt{}, SortOptionalInt{}) : SortAlloc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("allocmemory"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(917,22,917,63)"), left{}(), format{}("%callocmemory%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  symbol Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(SortOptionalId{}, SortInt{}, SortOptionalInt{}) : SortAlloc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("alloctable"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(874,22,874,62)"), left{}(), format{}("%calloctable%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  symbol Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'FuncType{}(SortOptionalId{}, SortFuncType{}) : SortAlloc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("alloctype"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(661,25,661,56)"), left{}(), format{}("%calloctype%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(SortTypeDecls{}) : SortFuncType{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("TypeDeclsAsFuncType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(643,25,643,96)"), left{}(), format{}("%casFuncType%r %c(%r %1 %c)%r"), function{}()]
  symbol LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(SortMap{}, SortMap{}, SortTypeUse{}) : SortFuncType{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("TypeUseAsFuncType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(644,25,644,96)"), left{}(), format{}("%casFuncType%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol LblasGMut'LParUndsRParUnds'WASM-TEXT'Unds'GlobalType'Unds'TextFormatGlobalType{}(SortTextFormatGlobalType{}) : SortGlobalType{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("asGMut"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(519,27,519,66)"), left{}(), format{}("%casGMut%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblasinFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("asinFloat"), hook{}("FLOAT.asin"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1281,20,1281,76)"), left{}(), format{}("%casinFloat%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblatan2Float'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("atan2Float"), hook{}("FLOAT.atan2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1284,20,1284,77)"), left{}(), format{}("%catan2Float%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblatanFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("atanFloat"), hook{}("FLOAT.atan"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1283,20,1283,88)"), left{}(), format{}("%catanFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol LblbigEndianBytes{}() : SortEndianness{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("bigEndianBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1708,25,1708,61)"), left{}(), format{}("%cBE%r"), injective{}()]
  hooked-symbol LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("bitRangeInt"), hook{}("INT.bitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(993,18,993,102)"), left{}(), format{}("%cbitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}, SortOptionalId{}) : SortBlockInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("100010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(121,27,121,78)"), left{}(), format{}("%cblock%r %1 %2 %3 %cend%r %4"), injective{}()]
  symbol Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(92,27,92,36)"), left{}(), format{}("%cbr%r %1"), injective{}()]
  symbol Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(93,27,93,39)"), left{}(), format{}("%cbr_if%r %1"), injective{}()]
  symbol Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(SortElemSegment{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(94,27,94,48)"), left{}(), format{}("%cbr_table%r %1"), injective{}()]
  symbol Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(95,27,95,38)"), left{}(), format{}("%ccall%r %1"), injective{}()]
  symbol Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(SortTypeUse{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(93,28,93,50)"), left{}(), format{}("%ccall_indirect%r %1"), injective{}()]
  hooked-symbol LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("categoryChar"), hook{}("STRING.category"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1544,21,1544,80)"), left{}(), format{}("%ccategoryChar%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblceilFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("ceilFloat"), hook{}("FLOAT.ceil"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1275,20,1275,88)"), left{}(), format{}("%cceilFloat%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Map:choice"), hook{}("MAP.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(402,20,402,100)"), left{}(), format{}("%cchoice%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set{}(SortSet{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Set:choice"), hook{}("SET.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(610,20,610,94)"), left{}(), format{}("%cchoice%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("chrChar"), hook{}("STRING.chr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1404,21,1404,69)"), left{}(), format{}("%cchrChar%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblcosFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("cosFloat"), hook{}("FLOAT.cos"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1279,20,1279,87)"), left{}(), format{}("%ccosFloat%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), hook{}("STRING.countAllOccurrences"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1517,18,1517,150)"), left{}(), format{}("%ccountAllOccurrences%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}, SortMap{}, SortMap{}) : SortContext{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101010101"), klabel{}("ctx"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(704,24,704,85)"), left{}(), format{}("%cctx%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), injective{}()]
  symbol Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Int'Unds'Bytes{}(SortInt{}, SortBytes{}) : SortDataDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("11001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1175,25,1175,48)"), left{}(), format{}("%cdata%r %c{%r %1 %2 %c}%r"), injective{}()]
  hooked-symbol LbldecodeBytes'LParUndsCommUndsRParUnds'BYTES-STRING-ENCODE'Unds'String'Unds'String'Unds'Bytes{}(SortString{}, SortBytes{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("decodeBytes"), hook{}("BYTES.decodeBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1680,23,1680,108)"), left{}(), format{}("%cdecodeBytes%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("directionalityChar"), hook{}("STRING.directionality"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1545,21,1545,86)"), left{}(), format{}("%cdirectionalityChar%r %c(%r %1 %c)%r"), function{}()]
  symbol LblelemSegment2Indices'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'ElemSegment'Unds'ElemSegment'Unds'Int'Unds'Map{}(SortElemSegment{}, SortInt{}, SortMap{}) : SortElemSegment{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("elemSegment2Indices"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(591,28,591,82)"), left{}(), format{}("%celemSegment2Indices%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol LblelemSegment2Ints'LParUndsRParUnds'WASM-DATA'Unds'Ints'Unds'ElemSegment{}(SortElemSegment{}) : SortInts{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("elemSegment2Ints"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(213,21,213,63)"), left{}(), format{}("%celemSegment2Ints%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Int'Unds'Ints{}(SortInt{}, SortInts{}) : SortElemDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("11001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1144,25,1144,54)"), left{}(), format{}("%celem%r %c{%r %1 %2 %c}%r"), injective{}()]
  hooked-symbol LblencodeBytes'LParUndsCommUndsRParUnds'BYTES-STRING-ENCODE'Unds'Bytes'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("encodeBytes"), hook{}("BYTES.encodeBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1681,22,1681,108)"), left{}(), format{}("%cencodeBytes%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblexpFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("expFloat"), hook{}("FLOAT.exp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1276,20,1276,87)"), left{}(), format{}("%cexpFloat%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblexponentBitsFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(SortFloat{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("exponentBitsFloat"), hook{}("FLOAT.exponentBits"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1185,18,1185,90)"), left{}(), format{}("%cexponentBitsFloat%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblexponentFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(SortFloat{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("exponentFloat"), hook{}("FLOAT.exponent"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1193,18,1193,82)"), left{}(), format{}("%cexponentFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblf32{}() : SortFValType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("f32"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(87,25,87,51)"), left{}(), format{}("%cf32%r"), injective{}()]
  symbol Lblf64{}() : SortFValType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("f64"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(87,55,87,81)"), left{}(), format{}("%cf64%r"), injective{}()]
  hooked-symbol LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101010101"), klabel{}("fillList"), hook{}("LIST.fill"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(711,19,711,99)"), left{}(), format{}("%cfillList%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}()]
  hooked-symbol LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("findChar"), hook{}("STRING.findChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1441,18,1441,115)"), left{}(), format{}("%cfindChar%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("findString"), hook{}("STRING.find"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1430,18,1430,110)"), left{}(), format{}("%cfindString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol LblfloatAdd{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("floatAdd"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,23,44,54)"), left{}(), format{}("%cadd%r"), injective{}()]
  symbol LblfloatCopysign{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("floatCopysign"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,23,50,64)"), left{}(), format{}("%ccopysign%r"), injective{}()]
  symbol LblfloatDiv{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("floatDiv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(47,23,47,54)"), left{}(), format{}("%cdiv%r"), injective{}()]
  symbol LblfloatEq{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("floatEq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(72,23,72,52)"), left{}(), format{}("%ceq%r"), injective{}()]
  symbol LblfloatGe{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("floatGe"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(71,23,71,52)"), left{}(), format{}("%cge%r"), injective{}()]
  symbol LblfloatGt{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("floatGt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(69,23,69,52)"), left{}(), format{}("%cgt%r"), injective{}()]
  symbol LblfloatLe{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("floatLe"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(70,23,70,52)"), left{}(), format{}("%cle%r"), injective{}()]
  symbol LblfloatLt{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("floatLt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,23,68,52)"), left{}(), format{}("%clt%r"), injective{}()]
  symbol LblfloatMax{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("floatMax"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,23,49,54)"), left{}(), format{}("%cmax%r"), injective{}()]
  symbol LblfloatMin{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("floatMin"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(48,23,48,54)"), left{}(), format{}("%cmin%r"), injective{}()]
  symbol LblfloatMul{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("floatMul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(46,23,46,54)"), left{}(), format{}("%cmul%r"), injective{}()]
  symbol LblfloatNe{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("floatNe"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(73,23,73,52)"), left{}(), format{}("%cne%r"), injective{}()]
  symbol LblfloatSub{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("floatSub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,23,45,54)"), left{}(), format{}("%csub%r"), injective{}()]
  hooked-symbol LblfloorFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("floorFloat"), hook{}("FLOAT.floor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1274,20,1274,89)"), left{}(), format{}("%cfloorFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblframe'UndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map{}(SortInt{}, SortValTypes{}, SortValStack{}, SortMap{}) : SortFrame{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("10000"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(733,22,733,54)"), left{}(), format{}("%cframe%r %1 %2 %3 %4"), injective{}()]
  symbol LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), freshGenerator{}(), klabel{}("freshInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1119,18,1119,72)"), left{}(), format{}("%cfreshInt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblfuncMeta{}(SortOptionalId{}, SortMap{}) : SortFuncMetadata{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("funcMeta"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(722,29,722,91)"), left{}(), format{}("%c#meta%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol Lblfunc'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}() : SortAllocatedKind{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(134,30,134,35)"), left{}(), format{}("%cfunc%r"), injective{}()]
  symbol Lblfuncref'Unds'WASM-TEXT-COMMON-SYNTAX'Unds'TableElemType{}() : SortTableElemType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(231,30,231,38)"), left{}(), format{}("%cfuncref%r"), injective{}()]
  symbol LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(SortTypeKeyWord{}, SortTypeDecls{}) : SortVecType{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("gatherTypes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(623,25,623,85)"), left{}(), format{}("%cgatherTypes%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblgetGeneratedCounterCell{}(SortGeneratedTopCell{}) : SortGeneratedCounterCell{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cgetGeneratedCounterCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(96,27,96,44)"), left{}(), format{}("%cglobal.get%r %1"), injective{}()]
  symbol Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,27,97,44)"), left{}(), format{}("%cglobal.set%r %1"), injective{}()]
  symbol Lblglobal'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}() : SortAllocatedKind{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(134,60,134,67)"), left{}(), format{}("%cglobal%r"), injective{}()]
  symbol Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1075,22,1075,31)"), left{}(), format{}("%cgrow%r %1"), injective{}()]
  symbol Lbli32{}() : SortIValType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("i32"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,25,86,51)"), left{}(), format{}("%ci32%r"), injective{}()]
  symbol Lbli64{}() : SortIValType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("i64"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,55,86,81)"), left{}(), format{}("%ci64%r"), injective{}()]
  symbol Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}, SortOptionalId{}, SortInstrs{}, SortOptionalId{}) : SortBlockInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("100010010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(123,27,123,100)"), left{}(), format{}("%cif%r %1 %2 %3 %celse%r %4 %5 %cend%r %6"), injective{}()]
  symbol Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}, SortOptionalId{}) : SortBlockInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("100010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(124,27,124,100)"), left{}(), format{}("%cif%r %1 %2 %3 %cend%r %4"), injective{}()]
  symbol LblinitCurFrameCell{}() : SortCurFrameCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitCurFrameCell%r"), function{}()]
  symbol LblinitCurModIdxCell{}() : SortCurModIdxCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitCurModIdxCell%r"), function{}()]
  symbol LblinitDeterministicMemoryGrowthCell{}() : SortDeterministicMemoryGrowthCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitDeterministicMemoryGrowthCell%r"), function{}()]
  symbol LblinitExportsCell{}() : SortExportsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitExportsCell%r"), function{}()]
  symbol LblinitFAddrCell{}() : SortFAddrCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitFAddrCell%r"), function{}()]
  symbol LblinitFCodeCell{}() : SortFCodeCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitFCodeCell%r"), function{}()]
  symbol LblinitFLocalCell{}() : SortFLocalCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitFLocalCell%r"), function{}()]
  symbol LblinitFModInstCell{}() : SortFModInstCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitFModInstCell%r"), function{}()]
  symbol LblinitFTypeCell{}() : SortFTypeCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitFTypeCell%r"), function{}()]
  symbol LblinitFuncAddrsCell{}() : SortFuncAddrsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitFuncAddrsCell%r"), function{}()]
  symbol LblinitFuncDefCell{}() : SortFuncDefCellMap{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitFuncDefCell%r"), function{}()]
  symbol LblinitFuncIdCell{}() : SortFuncIdCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitFuncIdCell%r"), function{}()]
  symbol LblinitFuncIdsCell{}() : SortFuncIdsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitFuncIdsCell%r"), function{}()]
  symbol LblinitFuncMetadataCell{}() : SortFuncMetadataCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitFuncMetadataCell%r"), function{}()]
  symbol LblinitFuncsCell{}() : SortFuncsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitFuncsCell%r"), function{}()]
  symbol LblinitGAddrCell{}() : SortGAddrCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitGAddrCell%r"), function{}()]
  symbol LblinitGMutCell{}() : SortGMutCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitGMutCell%r"), function{}()]
  symbol LblinitGValueCell{}() : SortGValueCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitGValueCell%r"), function{}()]
  symbol LblinitGeneratedCounterCell{}() : SortGeneratedCounterCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitGeneratedCounterCell%r"), function{}()]
  symbol LblinitGeneratedTopCell{}() : SortGeneratedTopCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitGeneratedTopCell%r"), function{}()]
  symbol LblinitGlobIdsCell{}() : SortGlobIdsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitGlobIdsCell%r"), function{}()]
  symbol LblinitGlobalAddrsCell{}() : SortGlobalAddrsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitGlobalAddrsCell%r"), function{}()]
  symbol LblinitGlobalInstCell{}() : SortGlobalInstCellMap{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitGlobalInstCell%r"), function{}()]
  symbol LblinitGlobalsCell{}() : SortGlobalsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitGlobalsCell%r"), function{}()]
  symbol LblinitInstrsCell{}() : SortInstrsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitInstrsCell%r"), function{}()]
  symbol LblinitLocalIdsCell{}() : SortLocalIdsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitLocalIdsCell%r"), function{}()]
  symbol LblinitLocalsCell{}() : SortLocalsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitLocalsCell%r"), function{}()]
  symbol LblinitMAddrCell{}() : SortMAddrCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitMAddrCell%r"), function{}()]
  symbol LblinitMainStoreCell{}() : SortMainStoreCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitMainStoreCell%r"), function{}()]
  symbol LblinitMdataCell{}() : SortMdataCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitMdataCell%r"), function{}()]
  symbol LblinitMemAddrsCell{}() : SortMemAddrsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitMemAddrsCell%r"), function{}()]
  symbol LblinitMemIdsCell{}() : SortMemIdsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitMemIdsCell%r"), function{}()]
  symbol LblinitMemInstCell{}() : SortMemInstCellMap{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitMemInstCell%r"), function{}()]
  symbol LblinitMemsCell{}() : SortMemsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitMemsCell%r"), function{}()]
  symbol LblinitMmaxCell{}() : SortMmaxCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitMmaxCell%r"), function{}()]
  symbol LblinitModIdxCell{}() : SortModIdxCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitModIdxCell%r"), function{}()]
  symbol LblinitModuleFileNameCell{}() : SortModuleFileNameCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitModuleFileNameCell%r"), function{}()]
  symbol LblinitModuleIdCell{}() : SortModuleIdCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitModuleIdCell%r"), function{}()]
  symbol LblinitModuleIdsCell{}() : SortModuleIdsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitModuleIdsCell%r"), function{}()]
  symbol LblinitModuleInstCell{}() : SortModuleInstCellMap{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitModuleInstCell%r"), function{}()]
  symbol LblinitModuleInstancesCell{}() : SortModuleInstancesCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitModuleInstancesCell%r"), function{}()]
  symbol LblinitModuleMetadataCell{}() : SortModuleMetadataCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitModuleMetadataCell%r"), function{}()]
  symbol LblinitModuleRegistryCell{}() : SortModuleRegistryCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitModuleRegistryCell%r"), function{}()]
  symbol LblinitMsizeCell{}() : SortMsizeCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitMsizeCell%r"), function{}()]
  symbol LblinitNextFuncAddrCell{}() : SortNextFuncAddrCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitNextFuncAddrCell%r"), function{}()]
  symbol LblinitNextFuncIdxCell{}() : SortNextFuncIdxCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitNextFuncIdxCell%r"), function{}()]
  symbol LblinitNextGlobAddrCell{}() : SortNextGlobAddrCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitNextGlobAddrCell%r"), function{}()]
  symbol LblinitNextGlobIdxCell{}() : SortNextGlobIdxCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitNextGlobIdxCell%r"), function{}()]
  symbol LblinitNextMemAddrCell{}() : SortNextMemAddrCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitNextMemAddrCell%r"), function{}()]
  symbol LblinitNextModuleIdxCell{}() : SortNextModuleIdxCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitNextModuleIdxCell%r"), function{}()]
  symbol LblinitNextTabAddrCell{}() : SortNextTabAddrCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitNextTabAddrCell%r"), function{}()]
  symbol LblinitNextTypeIdxCell{}() : SortNextTypeIdxCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitNextTypeIdxCell%r"), function{}()]
  symbol LblinitTAddrCell{}() : SortTAddrCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitTAddrCell%r"), function{}()]
  symbol LblinitTabAddrsCell{}() : SortTabAddrsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitTabAddrsCell%r"), function{}()]
  symbol LblinitTabIdsCell{}() : SortTabIdsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitTabIdsCell%r"), function{}()]
  symbol LblinitTabInstCell{}() : SortTabInstCellMap{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitTabInstCell%r"), function{}()]
  symbol LblinitTabsCell{}() : SortTabsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitTabsCell%r"), function{}()]
  symbol LblinitTdataCell{}() : SortTdataCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitTdataCell%r"), function{}()]
  symbol LblinitTmaxCell{}() : SortTmaxCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitTmaxCell%r"), function{}()]
  symbol LblinitTsizeCell{}() : SortTsizeCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitTsizeCell%r"), function{}()]
  symbol LblinitTypeIdsCell{}() : SortTypeIdsCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitTypeIdsCell%r"), function{}()]
  symbol LblinitTypesCell{}() : SortTypesCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitTypesCell%r"), function{}()]
  symbol LblinitValstackCell{}() : SortValstackCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitValstackCell%r"), function{}()]
  symbol LblinitWasmCell{}() : SortWasmCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitWasmCell%r"), function{}()]
  symbol Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(SortInt{}, SortVal{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("100"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(502,23,502,43)"), left{}(), format{}("%cinit_local%r %1 %2"), injective{}()]
  symbol Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(SortValStack{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(503,23,503,48)"), left{}(), format{}("%cinit_locals%r %1"), injective{}()]
  symbol LblintAdd{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intAdd"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,23,27,52)"), left{}(), format{}("%cadd%r"), injective{}()]
  symbol LblintAnd{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intAnd"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,23,34,52)"), left{}(), format{}("%cand%r"), injective{}()]
  symbol LblintDiv'Unds's{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intDiv_s"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,23,32,56)"), left{}(), format{}("%cdiv_s%r"), injective{}()]
  symbol LblintDiv'Unds'u{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intDiv_u"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,23,30,56)"), left{}(), format{}("%cdiv_u%r"), injective{}()]
  symbol LblintEq{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intEq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(56,23,56,50)"), left{}(), format{}("%ceq%r"), injective{}()]
  symbol LblintGe'Unds's{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intGe_s"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(65,23,65,54)"), left{}(), format{}("%cge_s%r"), injective{}()]
  symbol LblintGe'Unds'u{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intGe_u"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,23,63,54)"), left{}(), format{}("%cge_u%r"), injective{}()]
  symbol LblintGt'Unds's{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intGt_s"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(61,23,61,54)"), left{}(), format{}("%cgt_s%r"), injective{}()]
  symbol LblintGt'Unds'u{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intGt_u"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(59,23,59,54)"), left{}(), format{}("%cgt_u%r"), injective{}()]
  symbol LblintLe'Unds's{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intLe_s"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,23,64,54)"), left{}(), format{}("%cle_s%r"), injective{}()]
  symbol LblintLe'Unds'u{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intLe_u"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,23,62,54)"), left{}(), format{}("%cle_u%r"), injective{}()]
  symbol LblintLt'Unds's{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intLt_s"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(60,23,60,54)"), left{}(), format{}("%clt_s%r"), injective{}()]
  symbol LblintLt'Unds'u{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intLt_u"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,23,58,54)"), left{}(), format{}("%clt_u%r"), injective{}()]
  symbol LblintMul{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intMul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,23,29,52)"), left{}(), format{}("%cmul%r"), injective{}()]
  symbol LblintNe{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intNe"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,23,57,50)"), left{}(), format{}("%cne%r"), injective{}()]
  symbol LblintOr{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intOr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,23,35,50)"), left{}(), format{}("%cor%r"), injective{}()]
  symbol LblintRem'Unds's{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intRem_s"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,23,33,56)"), left{}(), format{}("%crem_s%r"), injective{}()]
  symbol LblintRem'Unds'u{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intRem_u"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,23,31,56)"), left{}(), format{}("%crem_u%r"), injective{}()]
  symbol LblintRotl{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intRotl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,23,40,54)"), left{}(), format{}("%crotl%r"), injective{}()]
  symbol LblintRotr{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intRotr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(41,23,41,54)"), left{}(), format{}("%crotr%r"), injective{}()]
  symbol LblintShl{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intShl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,23,37,52)"), left{}(), format{}("%cshl%r"), injective{}()]
  symbol LblintShr'Unds's{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intShr_s"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,23,39,56)"), left{}(), format{}("%cshr_s%r"), injective{}()]
  symbol LblintShr'Unds'u{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intShr_u"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,23,38,56)"), left{}(), format{}("%cshr_u%r"), injective{}()]
  symbol LblintSub{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intSub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,23,28,52)"), left{}(), format{}("%csub%r"), injective{}()]
  symbol LblintXor{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("intXor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,23,36,52)"), left{}(), format{}("%cxor%r"), injective{}()]
  hooked-symbol LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("intersectSet"), hook{}("SET.intersection"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(565,18,565,88)"), left{}(), format{}("%cintersectSet%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lblis'Hash'Layout{}(SortK{}) : SortBool{} [functional{}(), predicate{}("#Layout"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cis#Layout%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisAlignArg{}(SortK{}) : SortBool{} [functional{}(), predicate{}("AlignArg"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisAlignArg%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisAlloc{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Alloc"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisAlloc%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisAllocatedKind{}(SortK{}) : SortBool{} [functional{}(), predicate{}("AllocatedKind"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisAllocatedKind%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBlockInstr{}(SortK{}) : SortBool{} [functional{}(), predicate{}("BlockInstr"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBlockInstr%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBlockMetaData{}(SortK{}) : SortBool{} [functional{}(), predicate{}("BlockMetaData"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBlockMetaData%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBool{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Bool"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBool%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBytes{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Bytes"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBytes%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisContext{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Context"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisContext%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCurFrameCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("CurFrameCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCurFrameCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCurFrameCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("CurFrameCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCurFrameCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCurFrameCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("CurFrameCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCurFrameCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCurModIdxCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("CurModIdxCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCurModIdxCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCurModIdxCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("CurModIdxCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCurModIdxCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCvtOp{}(SortK{}) : SortBool{} [functional{}(), predicate{}("CvtOp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCvtOp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCvtf32Op{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Cvtf32Op"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCvtf32Op%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCvtf64Op{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Cvtf64Op"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCvtf64Op%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCvti32Op{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Cvti32Op"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCvti32Op%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCvti64Op{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Cvti64Op"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCvti64Op%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisDataDefn{}(SortK{}) : SortBool{} [functional{}(), predicate{}("DataDefn"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisDataDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisDataString{}(SortK{}) : SortBool{} [functional{}(), predicate{}("DataString"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisDataString%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisDefn{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Defn"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisDefns{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Defns"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisDefns%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisDeterministicMemoryGrowthCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("DeterministicMemoryGrowthCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisDeterministicMemoryGrowthCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisDeterministicMemoryGrowthCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("DeterministicMemoryGrowthCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisDeterministicMemoryGrowthCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisElemDefn{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ElemDefn"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisElemDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisElemSegment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ElemSegment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisElemSegment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisEmptyStmt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("EmptyStmt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisEmptyStmt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisEmptyStmts{}(SortK{}) : SortBool{} [functional{}(), predicate{}("EmptyStmts"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisEmptyStmts%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisEndianness{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Endianness"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisEndianness%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisExportDefn{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ExportDefn"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisExportDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisExportsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ExportsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisExportsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisExportsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ExportsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisExportsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisExternval{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Externval"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisExternval%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFAddrCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FAddrCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFAddrCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFAddrCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FAddrCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFAddrCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFBinOp{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FBinOp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFBinOp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFCodeCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FCodeCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFCodeCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFCodeCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FCodeCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFCodeCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFLocalCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FLocalCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFLocalCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFLocalCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FLocalCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFLocalCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFModInstCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FModInstCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFModInstCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFModInstCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FModInstCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFModInstCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFRelOp{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FRelOp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFRelOp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFTypeCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FTypeCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFTypeCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFTypeCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FTypeCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFTypeCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFUnOp{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FUnOp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFUnOp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFVal{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FVal"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFVal%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFValType{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FValType"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFValType%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFloat{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Float"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFoldedInstr{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FoldedInstr"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFoldedInstr%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFrame{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Frame"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFrame%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncAddrsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncAddrsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncAddrsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncAddrsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncAddrsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncAddrsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncDefCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncDefCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncDefCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncDefCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncDefCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncDefCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncDefCellMap{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncDefCellMap"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncDefCellMap%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncDefn{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncDefn"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncIdCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncIdCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncIdCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncIdCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncIdCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncIdCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncIdsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncIdsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncIdsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncIdsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncIdsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncIdsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncMetadata{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncMetadata"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncMetadata%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncMetadataCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncMetadataCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncMetadataCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncMetadataCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncMetadataCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncMetadataCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncMetadataCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncMetadataCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncMetadataCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncSpec{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncSpec"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncSpec%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncType{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncType"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncType%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncsCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncsCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncsCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFuncsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("FuncsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFuncsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGAddrCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GAddrCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGAddrCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGAddrCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GAddrCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGAddrCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGMutCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GMutCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGMutCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGMutCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GMutCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGMutCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGValueCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GValueCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGValueCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGValueCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GValueCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGValueCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedCounterCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GeneratedCounterCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedCounterCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedCounterCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GeneratedCounterCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedCounterCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedTopCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GeneratedTopCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedTopCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedTopCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GeneratedTopCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedTopCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGlobIdsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GlobIdsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGlobIdsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGlobIdsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GlobIdsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGlobIdsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGlobalAddrsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GlobalAddrsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGlobalAddrsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGlobalAddrsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GlobalAddrsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGlobalAddrsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGlobalDefn{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GlobalDefn"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGlobalDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGlobalInstCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GlobalInstCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGlobalInstCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGlobalInstCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GlobalInstCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGlobalInstCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGlobalInstCellMap{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GlobalInstCellMap"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGlobalInstCellMap%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGlobalSpec{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GlobalSpec"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGlobalSpec%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGlobalType{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GlobalType"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGlobalType%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGlobalsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GlobalsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGlobalsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGlobalsCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GlobalsCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGlobalsCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGlobalsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("GlobalsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGlobalsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIBinOp{}(SortK{}) : SortBool{} [functional{}(), predicate{}("IBinOp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIBinOp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIRelOp{}(SortK{}) : SortBool{} [functional{}(), predicate{}("IRelOp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIRelOp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIUnOp{}(SortK{}) : SortBool{} [functional{}(), predicate{}("IUnOp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIUnOp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIVal{}(SortK{}) : SortBool{} [functional{}(), predicate{}("IVal"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIVal%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIValType{}(SortK{}) : SortBool{} [functional{}(), predicate{}("IValType"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIValType%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIdentifier{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Identifier"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIdentifier%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIdentifierToken{}(SortK{}) : SortBool{} [functional{}(), predicate{}("IdentifierToken"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIdentifierToken%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisImportDefn{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ImportDefn"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisImportDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisImportDesc{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ImportDesc"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisImportDesc%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIndex{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Index"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIndex%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInfinite'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(SortFloat{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("isInfinite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1211,19,1211,62)"), left{}(), format{}("%cisInfinite%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInlineExport{}(SortK{}) : SortBool{} [functional{}(), predicate{}("InlineExport"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisInlineExport%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInlineImport{}(SortK{}) : SortBool{} [functional{}(), predicate{}("InlineImport"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisInlineImport%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInstr{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Instr"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisInstr%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInstrs{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Instrs"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisInstrs%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInstrsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("InstrsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisInstrsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInstrsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("InstrsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisInstrsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Int"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisInt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInts{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Ints"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisInts%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisK{}(SortK{}) : SortBool{} [functional{}(), predicate{}("K"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisK%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKConfigVar{}(SortK{}) : SortBool{} [functional{}(), predicate{}("KConfigVar"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKConfigVar%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKItem{}(SortK{}) : SortBool{} [functional{}(), predicate{}("KItem"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKItem%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisLabel{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Label"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisLabel%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisLimits{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Limits"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisLimits%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisList{}(SortK{}) : SortBool{} [functional{}(), predicate{}("List"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisList%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisLoadOp{}(SortK{}) : SortBool{} [functional{}(), predicate{}("LoadOp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisLoadOp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisLoadOpM{}(SortK{}) : SortBool{} [functional{}(), predicate{}("LoadOpM"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisLoadOpM%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisLocalDecl{}(SortK{}) : SortBool{} [functional{}(), predicate{}("LocalDecl"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisLocalDecl%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisLocalDecls{}(SortK{}) : SortBool{} [functional{}(), predicate{}("LocalDecls"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisLocalDecls%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisLocalIdsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("LocalIdsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisLocalIdsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisLocalIdsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("LocalIdsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisLocalIdsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisLocalsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("LocalsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisLocalsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisLocalsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("LocalsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisLocalsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMAddrCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MAddrCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMAddrCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMAddrCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MAddrCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMAddrCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMainStoreCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MainStoreCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMainStoreCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMainStoreCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MainStoreCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMainStoreCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMainStoreCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MainStoreCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMainStoreCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMap{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Map"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMap%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMdataCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MdataCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMdataCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMdataCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MdataCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMdataCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMemAddrsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MemAddrsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMemAddrsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMemAddrsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MemAddrsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMemAddrsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMemArg{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MemArg"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMemArg%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMemIdsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MemIdsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMemIdsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMemIdsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MemIdsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMemIdsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMemInstCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MemInstCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMemInstCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMemInstCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MemInstCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMemInstCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMemInstCellMap{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MemInstCellMap"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMemInstCellMap%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMemType{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MemType"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMemType%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMemoryDefn{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MemoryDefn"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMemoryDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMemorySpec{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MemorySpec"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMemorySpec%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMemsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MemsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMemsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMemsCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MemsCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMemsCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMemsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MemsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMemsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMmaxCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MmaxCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMmaxCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMmaxCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MmaxCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMmaxCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModIdxCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModIdxCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModIdxCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModIdxCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModIdxCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModIdxCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleDecl{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleDecl"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleDecl%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleFileNameCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleFileNameCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleFileNameCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleFileNameCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleFileNameCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleFileNameCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleIdCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleIdCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleIdCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleIdCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleIdCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleIdCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleIdsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleIdsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleIdsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleIdsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleIdsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleIdsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleInstCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleInstCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleInstCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleInstCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleInstCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleInstCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleInstCellMap{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleInstCellMap"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleInstCellMap%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleInstancesCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleInstancesCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleInstancesCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleInstancesCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleInstancesCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleInstancesCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleInstancesCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleInstancesCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleInstancesCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleMetadata{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleMetadata"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleMetadata%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleMetadataCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleMetadataCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleMetadataCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleMetadataCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleMetadataCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleMetadataCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleMetadataCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleMetadataCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleMetadataCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleRegistryCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleRegistryCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleRegistryCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisModuleRegistryCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ModuleRegistryCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisModuleRegistryCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMsizeCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MsizeCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMsizeCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMsizeCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("MsizeCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMsizeCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMut{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Mut"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMut%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblisNaN'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(SortFloat{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("fp.isNaN"), right{}(), terminals{}("1101"), klabel{}("isNaN"), hook{}("FLOAT.isNaN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1210,19,1210,101)"), left{}(), format{}("%cisNaN%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextFuncAddrCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("NextFuncAddrCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextFuncAddrCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextFuncAddrCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("NextFuncAddrCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextFuncAddrCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextFuncIdxCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("NextFuncIdxCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextFuncIdxCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextFuncIdxCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("NextFuncIdxCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextFuncIdxCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextGlobAddrCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("NextGlobAddrCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextGlobAddrCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextGlobAddrCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("NextGlobAddrCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextGlobAddrCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextGlobIdxCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("NextGlobIdxCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextGlobIdxCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextGlobIdxCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("NextGlobIdxCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextGlobIdxCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextMemAddrCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("NextMemAddrCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextMemAddrCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextMemAddrCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("NextMemAddrCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextMemAddrCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextModuleIdxCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("NextModuleIdxCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextModuleIdxCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextModuleIdxCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("NextModuleIdxCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextModuleIdxCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextTabAddrCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("NextTabAddrCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextTabAddrCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextTabAddrCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("NextTabAddrCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextTabAddrCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextTypeIdxCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("NextTypeIdxCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextTypeIdxCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNextTypeIdxCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("NextTypeIdxCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNextTypeIdxCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNumber{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Number"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNumber%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisOffset{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Offset"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisOffset%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisOffsetArg{}(SortK{}) : SortBool{} [functional{}(), predicate{}("OffsetArg"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisOffsetArg%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisOptionalId{}(SortK{}) : SortBool{} [functional{}(), predicate{}("OptionalId"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisOptionalId%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisOptionalInt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("OptionalInt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisOptionalInt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisOptionalString{}(SortK{}) : SortBool{} [functional{}(), predicate{}("OptionalString"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisOptionalString%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisPlainInstr{}(SortK{}) : SortBool{} [functional{}(), predicate{}("PlainInstr"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisPlainInstr%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisSet{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Set"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisSet%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisSignedness{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Signedness"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisSignedness%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisStartDefn{}(SortK{}) : SortBool{} [functional{}(), predicate{}("StartDefn"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisStartDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisStmt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Stmt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisStmt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisStmts{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Stmts"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisStmts%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisStoreOp{}(SortK{}) : SortBool{} [functional{}(), predicate{}("StoreOp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisStoreOp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisStoreOpM{}(SortK{}) : SortBool{} [functional{}(), predicate{}("StoreOpM"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisStoreOpM%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisString{}(SortK{}) : SortBool{} [functional{}(), predicate{}("String"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisString%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTAddrCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TAddrCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTAddrCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTAddrCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TAddrCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTAddrCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTabAddrsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TabAddrsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTabAddrsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTabAddrsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TabAddrsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTabAddrsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTabIdsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TabIdsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTabIdsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTabIdsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TabIdsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTabIdsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTabInstCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TabInstCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTabInstCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTabInstCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TabInstCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTabInstCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTabInstCellMap{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TabInstCellMap"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTabInstCellMap%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTableDefn{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TableDefn"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTableDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTableElemType{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TableElemType"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTableElemType%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTableSpec{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TableSpec"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTableSpec%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTableType{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TableType"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTableType%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTabsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TabsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTabsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTabsCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TabsCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTabsCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTabsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TabsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTabsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTdataCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TdataCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTdataCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTdataCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TdataCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTdataCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTestOp{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TestOp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTestOp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTextFormatGlobalType{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TextFormatGlobalType"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTextFormatGlobalType%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTextLimits{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TextLimits"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTextLimits%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTmaxCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TmaxCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTmaxCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTmaxCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TmaxCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTmaxCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTsizeCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TsizeCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTsizeCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTsizeCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TsizeCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTsizeCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisType{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Type"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisType%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTypeDecl{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TypeDecl"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTypeDecl%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTypeDecls{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TypeDecls"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTypeDecls%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTypeDefn{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TypeDefn"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTypeDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTypeIdsCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TypeIdsCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTypeIdsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTypeIdsCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TypeIdsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTypeIdsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTypeKeyWord{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TypeKeyWord"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTypeKeyWord%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTypeUse{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TypeUse"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTypeUse%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTypesCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TypesCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTypesCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTypesCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TypesCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTypesCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTypesInfo{}(SortK{}) : SortBool{} [functional{}(), predicate{}("TypesInfo"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTypesInfo%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisVal{}(SortK{}) : SortBool{} [functional{}(), predicate{}("Val"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisVal%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisValStack{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ValStack"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisValStack%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisValType{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ValType"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisValType%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisValTypes{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ValTypes"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisValTypes%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisValstackCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ValstackCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisValstackCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisValstackCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("ValstackCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisValstackCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisVecType{}(SortK{}) : SortBool{} [functional{}(), predicate{}("VecType"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisVecType%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisWasmCell{}(SortK{}) : SortBool{} [functional{}(), predicate{}("WasmCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisWasmCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisWasmCellFragment{}(SortK{}) : SortBool{} [functional{}(), predicate{}("WasmCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisWasmCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisWasmCellOpt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("WasmCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisWasmCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisWasmInt{}(SortK{}) : SortBool{} [functional{}(), predicate{}("WasmInt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisWasmInt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisWasmIntToken{}(SortK{}) : SortBool{} [functional{}(), predicate{}("WasmIntToken"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisWasmIntToken%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisWasmString{}(SortK{}) : SortBool{} [functional{}(), predicate{}("WasmString"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisWasmString%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisWasmStringToken{}(SortK{}) : SortBool{} [functional{}(), predicate{}("WasmStringToken"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisWasmStringToken%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(SortMap{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("keys"), hook{}("MAP.keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(350,18,350,86)"), left{}(), format{}("%ckeys%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), hook{}("MAP.keys_list"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(358,19,358,79)"), left{}(), format{}("%ckeys_list%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(SortVecType{}, SortInstrs{}, SortValStack{}) : SortLabel{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("101010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(432,22,432,60)"), left{}(), format{}("%clabel%r %1 %c{%r %2 %c}%r %3"), injective{}()]
  hooked-symbol LbllengthBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes{}(SortBytes{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("lengthBytes"), terminals{}("1101"), klabel{}("lengthBytes"), hook{}("BYTES.length"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1834,18,1834,99)"), left{}(), format{}("%clengthBytes%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("lengthString"), hook{}("STRING.length"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1395,18,1395,84)"), left{}(), format{}("%clengthString%r %c(%r %1 %c)%r"), function{}()]
  symbol LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(SortValTypes{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("lengthValTypes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(250,20,250,69)"), left{}(), format{}("%clengthValTypes%r %c(%r %1 %c)%r"), function{}()]
  symbol LbllimitsMin{}(SortInt{}) : SortLimits{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("limitsMin"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(234,23,234,70)"), left{}(), format{}("%c#limitsMin%r %c(%r %1 %c)%r"), injective{}()]
  symbol LbllimitsMinMax{}(SortInt{}, SortInt{}) : SortLimits{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("limitsMinMax"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(235,23,235,70)"), left{}(), format{}("%c#limits%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol LbllistInt{}(SortInt{}, SortInts{}) : SortInts{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("listInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(193,21,193,59)"), left{}(), format{}("%1 %c%r %2"), injective{}()]
  symbol LbllistStmt{}(SortEmptyStmt{}, SortEmptyStmts{}) : SortEmptyStmts{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("listStmt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,27,57,73)"), left{}(), format{}("%1 %c%r %2"), injective{}()]
  symbol LbllistValTypes{}(SortValType{}, SortValTypes{}) : SortValTypes{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("listValTypes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,25,97,72)"), left{}(), format{}("%1 %c%r %2"), injective{}()]
  symbol LbllittleEndianBytes{}() : SortEndianness{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("littleEndianBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1707,25,1707,64)"), left{}(), format{}("%cLE%r"), injective{}()]
  symbol LblloadOpLoad{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("loadOpLoad"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(108,24,108,62)"), left{}(), format{}("%cload%r"), injective{}()]
  symbol LblloadOpLoad16'Unds's{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("loadOpLoad16_s"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(113,24,113,66)"), left{}(), format{}("%cload16_s%r"), injective{}()]
  symbol LblloadOpLoad16'Unds'u{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("loadOpLoad16_u"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(110,24,110,66)"), left{}(), format{}("%cload16_u%r"), injective{}()]
  symbol LblloadOpLoad32'Unds's{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("loadOpLoad32_s"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(114,24,114,66)"), left{}(), format{}("%cload32_s%r"), injective{}()]
  symbol LblloadOpLoad32'Unds'u{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("loadOpLoad32_u"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(111,24,111,66)"), left{}(), format{}("%cload32_u%r"), injective{}()]
  symbol LblloadOpLoad8'Unds's{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("loadOpLoad8_s"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(112,24,112,65)"), left{}(), format{}("%cload8_s%r"), injective{}()]
  symbol LblloadOpLoad8'Unds'u{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("loadOpLoad8_u"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(109,24,109,65)"), left{}(), format{}("%cload8_u%r"), injective{}()]
  symbol Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(SortIValType{}, SortInt{}, SortInt{}, SortSignedness{}, SortBytes{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("11000001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1003,22,1003,68)"), left{}(), format{}("%cload%r %c{%r %1 %2 %3 %4 %5 %c}%r"), injective{}()]
  symbol Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(SortIValType{}, SortInt{}, SortInt{}, SortSignedness{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("1100001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1002,22,1002,62)"), left{}(), format{}("%cload%r %c{%r %1 %2 %3 %4 %c}%r"), injective{}()]
  symbol Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(98,27,98,43)"), left{}(), format{}("%clocal.get%r %1"), injective{}()]
  symbol Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(99,27,99,43)"), left{}(), format{}("%clocal.set%r %1"), injective{}()]
  symbol Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(100,27,100,43)"), left{}(), format{}("%clocal.tee%r %1"), injective{}()]
  symbol Lbllocal'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'ValTypes{}(SortValTypes{}) : SortLocalDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(214,27,214,53)"), left{}(), format{}("%clocal%r %1"), injective{}()]
  symbol Lbllocal'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'Identifier'Unds'ValType{}(SortIdentifier{}, SortValType{}) : SortLocalDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("100"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(215,27,215,52)"), left{}(), format{}("%clocal%r %1 %2"), injective{}()]
  symbol Lbllocals2vectype'LParUndsRParUnds'WASM-TEXT'Unds'VecType'Unds'LocalDecls{}(SortLocalDecls{}) : SortVecType{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("locals2vectype"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(802,25,802,75)"), left{}(), format{}("%clocals2vectype%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("log2Int"), hook{}("INT.log2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(979,18,979,74)"), left{}(), format{}("%clog2Int%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LbllogFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("logFloat"), hook{}("FLOAT.log"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1277,20,1277,75)"), left{}(), format{}("%clogFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}, SortOptionalId{}) : SortBlockInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("100010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(122,27,122,77)"), left{}(), format{}("%cloop%r %1 %2 %3 %cend%r %4"), injective{}()]
  hooked-symbol LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem{}(SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("makeList"), hook{}("LIST.make"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(692,19,692,81)"), left{}(), format{}("%cmakeList%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblmaxFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("fp.max"), right{}(), terminals{}("110101"), klabel{}("maxFloat"), hook{}("FLOAT.max"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1285,20,1285,93)"), left{}(), format{}("%cmaxFloat%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("(ite (< #1 #2) #2 #1)"), right{}(), terminals{}("110101"), hook{}("INT.max"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(960,18,960,118)"), left{}(), format{}("%cmaxInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblmaxValueFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("maxValueFloat"), hook{}("FLOAT.maxValue"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1288,20,1288,105)"), left{}(), format{}("%cmaxValueFloat%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lblmemory'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}() : SortAllocatedKind{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(134,49,134,56)"), left{}(), format{}("%cmemory%r"), injective{}()]
  hooked-symbol LblminFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("fp.min"), right{}(), terminals{}("110101"), klabel{}("minFloat"), hook{}("FLOAT.min"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1286,20,1286,93)"), left{}(), format{}("%cminFloat%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), smt-hook{}("(ite (< #1 #2) #1 #2)"), right{}(), terminals{}("110101"), hook{}("INT.min"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(959,18,959,118)"), left{}(), format{}("%cminInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblminValueFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("minValueFloat"), hook{}("FLOAT.minValue"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1289,20,1289,105)"), left{}(), format{}("%cminValueFloat%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblmoduleMeta{}(SortOptionalId{}, SortMap{}, SortOptionalString{}) : SortModuleMetadata{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("moduleMeta"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1382,31,1382,121)"), left{}(), format{}("%c#meta%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  symbol LblmutConst{}() : SortMut{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("mutConst"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(113,20,113,53)"), left{}(), format{}("%cconst%r"), injective{}()]
  symbol LblmutVar{}() : SortMut{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("mutVar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(114,20,114,51)"), left{}(), format{}("%cvar%r"), injective{}()]
  hooked-symbol LblnewUUID'Unds'STRING-COMMON'Unds'String{}() : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1"), impure{}(), hook{}("STRING.uuid"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1547,21,1547,67)"), left{}(), format{}("%cnewUUID%r"), function{}()]
  symbol LblnoCurFrameCell{}() : SortCurFrameCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("CurFrameCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoCurFrameCell%r"), injective{}()]
  symbol LblnoCurModIdxCell{}() : SortCurModIdxCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("CurModIdxCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoCurModIdxCell%r"), injective{}()]
  symbol LblnoDeterministicMemoryGrowthCell{}() : SortDeterministicMemoryGrowthCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("DeterministicMemoryGrowthCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoDeterministicMemoryGrowthCell%r"), injective{}()]
  symbol LblnoExportsCell{}() : SortExportsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ExportsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoExportsCell%r"), injective{}()]
  symbol LblnoFAddrCell{}() : SortFAddrCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FAddrCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoFAddrCell%r"), injective{}()]
  symbol LblnoFCodeCell{}() : SortFCodeCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FCodeCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoFCodeCell%r"), injective{}()]
  symbol LblnoFLocalCell{}() : SortFLocalCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FLocalCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoFLocalCell%r"), injective{}()]
  symbol LblnoFModInstCell{}() : SortFModInstCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FModInstCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoFModInstCell%r"), injective{}()]
  symbol LblnoFTypeCell{}() : SortFTypeCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FTypeCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoFTypeCell%r"), injective{}()]
  symbol LblnoFuncAddrsCell{}() : SortFuncAddrsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FuncAddrsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoFuncAddrsCell%r"), injective{}()]
  symbol LblnoFuncIdCell{}() : SortFuncIdCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FuncIdCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoFuncIdCell%r"), injective{}()]
  symbol LblnoFuncIdsCell{}() : SortFuncIdsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FuncIdsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoFuncIdsCell%r"), injective{}()]
  symbol LblnoFuncMetadataCell{}() : SortFuncMetadataCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FuncMetadataCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoFuncMetadataCell%r"), injective{}()]
  symbol LblnoFuncsCell{}() : SortFuncsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("FuncsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoFuncsCell%r"), injective{}()]
  symbol LblnoGAddrCell{}() : SortGAddrCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("GAddrCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoGAddrCell%r"), injective{}()]
  symbol LblnoGMutCell{}() : SortGMutCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("GMutCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoGMutCell%r"), injective{}()]
  symbol LblnoGValueCell{}() : SortGValueCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("GValueCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoGValueCell%r"), injective{}()]
  symbol LblnoGeneratedCounterCell{}() : SortGeneratedCounterCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("GeneratedCounterCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoGeneratedCounterCell%r"), injective{}()]
  symbol LblnoGlobIdsCell{}() : SortGlobIdsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("GlobIdsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoGlobIdsCell%r"), injective{}()]
  symbol LblnoGlobalAddrsCell{}() : SortGlobalAddrsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("GlobalAddrsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoGlobalAddrsCell%r"), injective{}()]
  symbol LblnoGlobalsCell{}() : SortGlobalsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("GlobalsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoGlobalsCell%r"), injective{}()]
  symbol LblnoInstrsCell{}() : SortInstrsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("InstrsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoInstrsCell%r"), injective{}()]
  symbol LblnoLocalIdsCell{}() : SortLocalIdsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("LocalIdsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoLocalIdsCell%r"), injective{}()]
  symbol LblnoLocalsCell{}() : SortLocalsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("LocalsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoLocalsCell%r"), injective{}()]
  symbol LblnoMAddrCell{}() : SortMAddrCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("MAddrCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoMAddrCell%r"), injective{}()]
  symbol LblnoMainStoreCell{}() : SortMainStoreCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("MainStoreCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoMainStoreCell%r"), injective{}()]
  symbol LblnoMdataCell{}() : SortMdataCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("MdataCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoMdataCell%r"), injective{}()]
  symbol LblnoMemAddrsCell{}() : SortMemAddrsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("MemAddrsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoMemAddrsCell%r"), injective{}()]
  symbol LblnoMemIdsCell{}() : SortMemIdsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("MemIdsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoMemIdsCell%r"), injective{}()]
  symbol LblnoMemsCell{}() : SortMemsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("MemsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoMemsCell%r"), injective{}()]
  symbol LblnoMmaxCell{}() : SortMmaxCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("MmaxCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoMmaxCell%r"), injective{}()]
  symbol LblnoModIdxCell{}() : SortModIdxCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ModIdxCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoModIdxCell%r"), injective{}()]
  symbol LblnoModuleFileNameCell{}() : SortModuleFileNameCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ModuleFileNameCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoModuleFileNameCell%r"), injective{}()]
  symbol LblnoModuleIdCell{}() : SortModuleIdCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ModuleIdCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoModuleIdCell%r"), injective{}()]
  symbol LblnoModuleIdsCell{}() : SortModuleIdsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ModuleIdsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoModuleIdsCell%r"), injective{}()]
  symbol LblnoModuleInstancesCell{}() : SortModuleInstancesCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ModuleInstancesCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoModuleInstancesCell%r"), injective{}()]
  symbol LblnoModuleMetadataCell{}() : SortModuleMetadataCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ModuleMetadataCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoModuleMetadataCell%r"), injective{}()]
  symbol LblnoModuleRegistryCell{}() : SortModuleRegistryCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ModuleRegistryCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoModuleRegistryCell%r"), injective{}()]
  symbol LblnoMsizeCell{}() : SortMsizeCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("MsizeCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoMsizeCell%r"), injective{}()]
  symbol LblnoNextFuncAddrCell{}() : SortNextFuncAddrCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextFuncAddrCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoNextFuncAddrCell%r"), injective{}()]
  symbol LblnoNextFuncIdxCell{}() : SortNextFuncIdxCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextFuncIdxCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoNextFuncIdxCell%r"), injective{}()]
  symbol LblnoNextGlobAddrCell{}() : SortNextGlobAddrCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextGlobAddrCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoNextGlobAddrCell%r"), injective{}()]
  symbol LblnoNextGlobIdxCell{}() : SortNextGlobIdxCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextGlobIdxCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoNextGlobIdxCell%r"), injective{}()]
  symbol LblnoNextMemAddrCell{}() : SortNextMemAddrCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextMemAddrCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoNextMemAddrCell%r"), injective{}()]
  symbol LblnoNextModuleIdxCell{}() : SortNextModuleIdxCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextModuleIdxCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoNextModuleIdxCell%r"), injective{}()]
  symbol LblnoNextTabAddrCell{}() : SortNextTabAddrCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextTabAddrCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoNextTabAddrCell%r"), injective{}()]
  symbol LblnoNextTypeIdxCell{}() : SortNextTypeIdxCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("NextTypeIdxCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoNextTypeIdxCell%r"), injective{}()]
  symbol LblnoTAddrCell{}() : SortTAddrCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TAddrCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoTAddrCell%r"), injective{}()]
  symbol LblnoTabAddrsCell{}() : SortTabAddrsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TabAddrsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoTabAddrsCell%r"), injective{}()]
  symbol LblnoTabIdsCell{}() : SortTabIdsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TabIdsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoTabIdsCell%r"), injective{}()]
  symbol LblnoTabsCell{}() : SortTabsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TabsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoTabsCell%r"), injective{}()]
  symbol LblnoTdataCell{}() : SortTdataCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TdataCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoTdataCell%r"), injective{}()]
  symbol LblnoTmaxCell{}() : SortTmaxCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TmaxCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoTmaxCell%r"), injective{}()]
  symbol LblnoTsizeCell{}() : SortTsizeCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TsizeCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoTsizeCell%r"), injective{}()]
  symbol LblnoTypeIdsCell{}() : SortTypeIdsCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TypeIdsCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoTypeIdsCell%r"), injective{}()]
  symbol LblnoTypesCell{}() : SortTypesCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TypesCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoTypesCell%r"), injective{}()]
  symbol LblnoValstackCell{}() : SortValstackCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ValstackCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoValstackCell%r"), injective{}()]
  symbol LblnoWasmCell{}() : SortWasmCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("WasmCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoWasmCell%r"), injective{}()]
  hooked-symbol LblnotBool'Unds'{}(SortBool{}) : SortBool{} [latex{}("\\neg_{\\scriptstyle\\it Bool}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), smt-hook{}("not"), boolOperation{}(), right{}(), terminals{}("10"), klabel{}("notBool_"), hook{}("BOOL.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(818,19,818,176)"), left{}(), format{}("%cnotBool%r %1"), function{}()]
  symbol Lbloffset'EqlsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'OffsetArg'Unds'WasmInt{}(SortWasmInt{}) : SortOffsetArg{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(110,27,110,43)"), left{}(), format{}("%coffset=%r %1"), injective{}()]
  hooked-symbol LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("ordChar"), hook{}("STRING.ord"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1405,18,1405,69)"), left{}(), format{}("%cordChar%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblpadLeftBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(SortBytes{}, SortInt{}, SortInt{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("padLeftBytes"), hook{}("BYTES.padLeft"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1817,20,1817,95)"), left{}(), format{}("%cpadLeftBytes%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblpadRightBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(SortBytes{}, SortInt{}, SortInt{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("padRightBytes"), hook{}("BYTES.padRight"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1816,20,1816,97)"), left{}(), format{}("%cpadRightBytes%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lblparam'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}() : SortTypeKeyWord{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,28,97,34)"), left{}(), format{}("%cparam%r"), injective{}()]
  symbol Lblparam'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'Identifier'Unds'ValType{}(SortIdentifier{}, SortValType{}) : SortTypeDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("100"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(100,28,100,53)"), left{}(), format{}("%cparam%r %1 %2"), injective{}()]
  hooked-symbol LblprecisionFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(SortFloat{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("precisionFloat"), hook{}("FLOAT.precision"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1177,18,1177,84)"), left{}(), format{}("%cprecisionFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'ColnHash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int'Coln'count{}(SortTypesInfo{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%ccount%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'ColnHash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int'Coln't2i{}(SortTypesInfo{}) : SortMap{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%ct2i%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'AlignArg{}(SortK{}) : SortAlignArg{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:AlignArg%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Alloc{}(SortK{}) : SortAlloc{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Alloc%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'AllocatedKind{}(SortK{}) : SortAllocatedKind{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:AllocatedKind%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'BlockInstr{}(SortK{}) : SortBlockInstr{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:BlockInstr%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'BlockMetaData{}(SortK{}) : SortBlockMetaData{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:BlockMetaData%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Bool{}(SortK{}) : SortBool{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Bool%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Bytes{}(SortK{}) : SortBytes{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Bytes%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Context{}(SortK{}) : SortContext{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Context%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'CurFrameCell{}(SortK{}) : SortCurFrameCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:CurFrameCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'CurFrameCellFragment{}(SortK{}) : SortCurFrameCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:CurFrameCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'CurFrameCellOpt{}(SortK{}) : SortCurFrameCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:CurFrameCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'CurModIdxCell{}(SortK{}) : SortCurModIdxCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:CurModIdxCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'CurModIdxCellOpt{}(SortK{}) : SortCurModIdxCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:CurModIdxCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'CvtOp{}(SortK{}) : SortCvtOp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:CvtOp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Cvtf32Op{}(SortK{}) : SortCvtf32Op{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Cvtf32Op%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Cvtf64Op{}(SortK{}) : SortCvtf64Op{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Cvtf64Op%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Cvti32Op{}(SortK{}) : SortCvti32Op{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Cvti32Op%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Cvti64Op{}(SortK{}) : SortCvti64Op{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Cvti64Op%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'DataDefn{}(SortK{}) : SortDataDefn{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:DataDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'DataString{}(SortK{}) : SortDataString{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:DataString%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Defn{}(SortK{}) : SortDefn{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Defn%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Defns{}(SortK{}) : SortDefns{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Defns%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'DeterministicMemoryGrowthCell{}(SortK{}) : SortDeterministicMemoryGrowthCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:DeterministicMemoryGrowthCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'DeterministicMemoryGrowthCellOpt{}(SortK{}) : SortDeterministicMemoryGrowthCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:DeterministicMemoryGrowthCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ElemDefn{}(SortK{}) : SortElemDefn{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ElemDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ElemSegment{}(SortK{}) : SortElemSegment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ElemSegment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'EmptyStmt{}(SortK{}) : SortEmptyStmt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:EmptyStmt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'EmptyStmts{}(SortK{}) : SortEmptyStmts{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:EmptyStmts%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Endianness{}(SortK{}) : SortEndianness{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Endianness%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ExportDefn{}(SortK{}) : SortExportDefn{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ExportDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ExportsCell{}(SortK{}) : SortExportsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ExportsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ExportsCellOpt{}(SortK{}) : SortExportsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ExportsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Externval{}(SortK{}) : SortExternval{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Externval%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FAddrCell{}(SortK{}) : SortFAddrCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FAddrCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FAddrCellOpt{}(SortK{}) : SortFAddrCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FAddrCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FBinOp{}(SortK{}) : SortFBinOp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FBinOp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FCodeCell{}(SortK{}) : SortFCodeCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FCodeCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FCodeCellOpt{}(SortK{}) : SortFCodeCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FCodeCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FLocalCell{}(SortK{}) : SortFLocalCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FLocalCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FLocalCellOpt{}(SortK{}) : SortFLocalCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FLocalCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FModInstCell{}(SortK{}) : SortFModInstCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FModInstCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FModInstCellOpt{}(SortK{}) : SortFModInstCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FModInstCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FRelOp{}(SortK{}) : SortFRelOp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FRelOp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FTypeCell{}(SortK{}) : SortFTypeCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FTypeCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FTypeCellOpt{}(SortK{}) : SortFTypeCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FTypeCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FUnOp{}(SortK{}) : SortFUnOp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FUnOp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FVal{}(SortK{}) : SortFVal{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FVal%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FValType{}(SortK{}) : SortFValType{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FValType%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Float{}(SortK{}) : SortFloat{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Float%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FoldedInstr{}(SortK{}) : SortFoldedInstr{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FoldedInstr%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Frame{}(SortK{}) : SortFrame{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Frame%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncAddrsCell{}(SortK{}) : SortFuncAddrsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncAddrsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncAddrsCellOpt{}(SortK{}) : SortFuncAddrsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncAddrsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncDefCell{}(SortK{}) : SortFuncDefCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncDefCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncDefCellFragment{}(SortK{}) : SortFuncDefCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncDefCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncDefCellMap{}(SortK{}) : SortFuncDefCellMap{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncDefCellMap%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncDefn{}(SortK{}) : SortFuncDefn{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncIdCell{}(SortK{}) : SortFuncIdCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncIdCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncIdCellOpt{}(SortK{}) : SortFuncIdCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncIdCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncIdsCell{}(SortK{}) : SortFuncIdsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncIdsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncIdsCellOpt{}(SortK{}) : SortFuncIdsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncIdsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncMetadata{}(SortK{}) : SortFuncMetadata{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncMetadata%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncMetadataCell{}(SortK{}) : SortFuncMetadataCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncMetadataCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncMetadataCellFragment{}(SortK{}) : SortFuncMetadataCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncMetadataCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncMetadataCellOpt{}(SortK{}) : SortFuncMetadataCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncMetadataCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncSpec{}(SortK{}) : SortFuncSpec{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncSpec%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncType{}(SortK{}) : SortFuncType{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncType%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncsCell{}(SortK{}) : SortFuncsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncsCellFragment{}(SortK{}) : SortFuncsCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncsCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FuncsCellOpt{}(SortK{}) : SortFuncsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FuncsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GAddrCell{}(SortK{}) : SortGAddrCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GAddrCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GAddrCellOpt{}(SortK{}) : SortGAddrCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GAddrCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GMutCell{}(SortK{}) : SortGMutCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GMutCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GMutCellOpt{}(SortK{}) : SortGMutCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GMutCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GValueCell{}(SortK{}) : SortGValueCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GValueCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GValueCellOpt{}(SortK{}) : SortGValueCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GValueCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedCounterCell{}(SortK{}) : SortGeneratedCounterCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedCounterCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedCounterCellOpt{}(SortK{}) : SortGeneratedCounterCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedCounterCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedTopCell{}(SortK{}) : SortGeneratedTopCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedTopCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedTopCellFragment{}(SortK{}) : SortGeneratedTopCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedTopCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GlobIdsCell{}(SortK{}) : SortGlobIdsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GlobIdsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GlobIdsCellOpt{}(SortK{}) : SortGlobIdsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GlobIdsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GlobalAddrsCell{}(SortK{}) : SortGlobalAddrsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GlobalAddrsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GlobalAddrsCellOpt{}(SortK{}) : SortGlobalAddrsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GlobalAddrsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GlobalDefn{}(SortK{}) : SortGlobalDefn{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GlobalDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GlobalInstCell{}(SortK{}) : SortGlobalInstCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GlobalInstCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GlobalInstCellFragment{}(SortK{}) : SortGlobalInstCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GlobalInstCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GlobalInstCellMap{}(SortK{}) : SortGlobalInstCellMap{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GlobalInstCellMap%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GlobalSpec{}(SortK{}) : SortGlobalSpec{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GlobalSpec%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GlobalType{}(SortK{}) : SortGlobalType{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GlobalType%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GlobalsCell{}(SortK{}) : SortGlobalsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GlobalsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GlobalsCellFragment{}(SortK{}) : SortGlobalsCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GlobalsCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GlobalsCellOpt{}(SortK{}) : SortGlobalsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GlobalsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IBinOp{}(SortK{}) : SortIBinOp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IBinOp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IRelOp{}(SortK{}) : SortIRelOp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IRelOp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IUnOp{}(SortK{}) : SortIUnOp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IUnOp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IVal{}(SortK{}) : SortIVal{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IVal%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IValType{}(SortK{}) : SortIValType{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IValType%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Identifier{}(SortK{}) : SortIdentifier{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Identifier%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IdentifierToken{}(SortK{}) : SortIdentifierToken{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IdentifierToken%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ImportDefn{}(SortK{}) : SortImportDefn{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ImportDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ImportDesc{}(SortK{}) : SortImportDesc{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ImportDesc%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Index{}(SortK{}) : SortIndex{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Index%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'InlineExport{}(SortK{}) : SortInlineExport{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:InlineExport%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'InlineImport{}(SortK{}) : SortInlineImport{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:InlineImport%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Instr{}(SortK{}) : SortInstr{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Instr%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Instrs{}(SortK{}) : SortInstrs{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Instrs%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'InstrsCell{}(SortK{}) : SortInstrsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:InstrsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'InstrsCellOpt{}(SortK{}) : SortInstrsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:InstrsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Int{}(SortK{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Int%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Ints{}(SortK{}) : SortInts{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Ints%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'K{}(SortK{}) : SortK{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:K%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KItem{}(SortK{}) : SortKItem{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KItem%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Label{}(SortK{}) : SortLabel{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Label%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Limits{}(SortK{}) : SortLimits{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Limits%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'List{}(SortK{}) : SortList{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:List%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'LoadOp{}(SortK{}) : SortLoadOp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:LoadOp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'LoadOpM{}(SortK{}) : SortLoadOpM{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:LoadOpM%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'LocalDecl{}(SortK{}) : SortLocalDecl{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:LocalDecl%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'LocalDecls{}(SortK{}) : SortLocalDecls{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:LocalDecls%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'LocalIdsCell{}(SortK{}) : SortLocalIdsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:LocalIdsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'LocalIdsCellOpt{}(SortK{}) : SortLocalIdsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:LocalIdsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'LocalsCell{}(SortK{}) : SortLocalsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:LocalsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'LocalsCellOpt{}(SortK{}) : SortLocalsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:LocalsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MAddrCell{}(SortK{}) : SortMAddrCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MAddrCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MAddrCellOpt{}(SortK{}) : SortMAddrCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MAddrCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MainStoreCell{}(SortK{}) : SortMainStoreCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MainStoreCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MainStoreCellFragment{}(SortK{}) : SortMainStoreCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MainStoreCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MainStoreCellOpt{}(SortK{}) : SortMainStoreCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MainStoreCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Map{}(SortK{}) : SortMap{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Map%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MdataCell{}(SortK{}) : SortMdataCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MdataCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MdataCellOpt{}(SortK{}) : SortMdataCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MdataCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MemAddrsCell{}(SortK{}) : SortMemAddrsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MemAddrsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MemAddrsCellOpt{}(SortK{}) : SortMemAddrsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MemAddrsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MemArg{}(SortK{}) : SortMemArg{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MemArg%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MemIdsCell{}(SortK{}) : SortMemIdsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MemIdsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MemIdsCellOpt{}(SortK{}) : SortMemIdsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MemIdsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MemInstCell{}(SortK{}) : SortMemInstCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MemInstCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MemInstCellFragment{}(SortK{}) : SortMemInstCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MemInstCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MemInstCellMap{}(SortK{}) : SortMemInstCellMap{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MemInstCellMap%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MemType{}(SortK{}) : SortMemType{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MemType%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MemoryDefn{}(SortK{}) : SortMemoryDefn{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MemoryDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MemorySpec{}(SortK{}) : SortMemorySpec{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MemorySpec%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MemsCell{}(SortK{}) : SortMemsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MemsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MemsCellFragment{}(SortK{}) : SortMemsCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MemsCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MemsCellOpt{}(SortK{}) : SortMemsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MemsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MmaxCell{}(SortK{}) : SortMmaxCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MmaxCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MmaxCellOpt{}(SortK{}) : SortMmaxCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MmaxCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModIdxCell{}(SortK{}) : SortModIdxCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModIdxCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModIdxCellOpt{}(SortK{}) : SortModIdxCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModIdxCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleDecl{}(SortK{}) : SortModuleDecl{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleDecl%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleFileNameCell{}(SortK{}) : SortModuleFileNameCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleFileNameCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleFileNameCellOpt{}(SortK{}) : SortModuleFileNameCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleFileNameCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleIdCell{}(SortK{}) : SortModuleIdCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleIdCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleIdCellOpt{}(SortK{}) : SortModuleIdCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleIdCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleIdsCell{}(SortK{}) : SortModuleIdsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleIdsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleIdsCellOpt{}(SortK{}) : SortModuleIdsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleIdsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleInstCell{}(SortK{}) : SortModuleInstCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleInstCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleInstCellFragment{}(SortK{}) : SortModuleInstCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleInstCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleInstCellMap{}(SortK{}) : SortModuleInstCellMap{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleInstCellMap%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleInstancesCell{}(SortK{}) : SortModuleInstancesCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleInstancesCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleInstancesCellFragment{}(SortK{}) : SortModuleInstancesCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleInstancesCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleInstancesCellOpt{}(SortK{}) : SortModuleInstancesCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleInstancesCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleMetadata{}(SortK{}) : SortModuleMetadata{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleMetadata%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleMetadataCell{}(SortK{}) : SortModuleMetadataCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleMetadataCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleMetadataCellFragment{}(SortK{}) : SortModuleMetadataCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleMetadataCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleMetadataCellOpt{}(SortK{}) : SortModuleMetadataCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleMetadataCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleRegistryCell{}(SortK{}) : SortModuleRegistryCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleRegistryCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ModuleRegistryCellOpt{}(SortK{}) : SortModuleRegistryCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ModuleRegistryCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MsizeCell{}(SortK{}) : SortMsizeCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MsizeCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MsizeCellOpt{}(SortK{}) : SortMsizeCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MsizeCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Mut{}(SortK{}) : SortMut{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Mut%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextFuncAddrCell{}(SortK{}) : SortNextFuncAddrCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextFuncAddrCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextFuncAddrCellOpt{}(SortK{}) : SortNextFuncAddrCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextFuncAddrCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextFuncIdxCell{}(SortK{}) : SortNextFuncIdxCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextFuncIdxCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextFuncIdxCellOpt{}(SortK{}) : SortNextFuncIdxCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextFuncIdxCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextGlobAddrCell{}(SortK{}) : SortNextGlobAddrCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextGlobAddrCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextGlobAddrCellOpt{}(SortK{}) : SortNextGlobAddrCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextGlobAddrCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextGlobIdxCell{}(SortK{}) : SortNextGlobIdxCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextGlobIdxCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextGlobIdxCellOpt{}(SortK{}) : SortNextGlobIdxCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextGlobIdxCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextMemAddrCell{}(SortK{}) : SortNextMemAddrCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextMemAddrCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextMemAddrCellOpt{}(SortK{}) : SortNextMemAddrCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextMemAddrCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextModuleIdxCell{}(SortK{}) : SortNextModuleIdxCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextModuleIdxCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextModuleIdxCellOpt{}(SortK{}) : SortNextModuleIdxCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextModuleIdxCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextTabAddrCell{}(SortK{}) : SortNextTabAddrCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextTabAddrCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextTabAddrCellOpt{}(SortK{}) : SortNextTabAddrCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextTabAddrCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextTypeIdxCell{}(SortK{}) : SortNextTypeIdxCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextTypeIdxCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'NextTypeIdxCellOpt{}(SortK{}) : SortNextTypeIdxCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:NextTypeIdxCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Number{}(SortK{}) : SortNumber{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Number%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Offset{}(SortK{}) : SortOffset{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Offset%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'OffsetArg{}(SortK{}) : SortOffsetArg{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:OffsetArg%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'OptionalId{}(SortK{}) : SortOptionalId{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:OptionalId%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'OptionalInt{}(SortK{}) : SortOptionalInt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:OptionalInt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'OptionalString{}(SortK{}) : SortOptionalString{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:OptionalString%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'PlainInstr{}(SortK{}) : SortPlainInstr{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:PlainInstr%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Set{}(SortK{}) : SortSet{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Set%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Signedness{}(SortK{}) : SortSignedness{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Signedness%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'StartDefn{}(SortK{}) : SortStartDefn{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:StartDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Stmt{}(SortK{}) : SortStmt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Stmt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Stmts{}(SortK{}) : SortStmts{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Stmts%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'StoreOp{}(SortK{}) : SortStoreOp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:StoreOp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'StoreOpM{}(SortK{}) : SortStoreOpM{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:StoreOpM%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'String{}(SortK{}) : SortString{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:String%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TAddrCell{}(SortK{}) : SortTAddrCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TAddrCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TAddrCellOpt{}(SortK{}) : SortTAddrCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TAddrCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TabAddrsCell{}(SortK{}) : SortTabAddrsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TabAddrsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TabAddrsCellOpt{}(SortK{}) : SortTabAddrsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TabAddrsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TabIdsCell{}(SortK{}) : SortTabIdsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TabIdsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TabIdsCellOpt{}(SortK{}) : SortTabIdsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TabIdsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TabInstCell{}(SortK{}) : SortTabInstCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TabInstCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TabInstCellFragment{}(SortK{}) : SortTabInstCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TabInstCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TabInstCellMap{}(SortK{}) : SortTabInstCellMap{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TabInstCellMap%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TableDefn{}(SortK{}) : SortTableDefn{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TableDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TableElemType{}(SortK{}) : SortTableElemType{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TableElemType%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TableSpec{}(SortK{}) : SortTableSpec{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TableSpec%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TableType{}(SortK{}) : SortTableType{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TableType%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TabsCell{}(SortK{}) : SortTabsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TabsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TabsCellFragment{}(SortK{}) : SortTabsCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TabsCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TabsCellOpt{}(SortK{}) : SortTabsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TabsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TdataCell{}(SortK{}) : SortTdataCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TdataCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TdataCellOpt{}(SortK{}) : SortTdataCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TdataCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TestOp{}(SortK{}) : SortTestOp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TestOp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TextFormatGlobalType{}(SortK{}) : SortTextFormatGlobalType{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TextFormatGlobalType%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TextLimits{}(SortK{}) : SortTextLimits{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TextLimits%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TmaxCell{}(SortK{}) : SortTmaxCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TmaxCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TmaxCellOpt{}(SortK{}) : SortTmaxCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TmaxCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TsizeCell{}(SortK{}) : SortTsizeCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TsizeCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TsizeCellOpt{}(SortK{}) : SortTsizeCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TsizeCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Type{}(SortK{}) : SortType{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Type%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TypeDecl{}(SortK{}) : SortTypeDecl{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TypeDecl%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TypeDecls{}(SortK{}) : SortTypeDecls{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TypeDecls%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TypeDefn{}(SortK{}) : SortTypeDefn{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TypeDefn%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TypeIdsCell{}(SortK{}) : SortTypeIdsCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TypeIdsCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TypeIdsCellOpt{}(SortK{}) : SortTypeIdsCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TypeIdsCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TypeKeyWord{}(SortK{}) : SortTypeKeyWord{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TypeKeyWord%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TypeUse{}(SortK{}) : SortTypeUse{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TypeUse%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TypesCell{}(SortK{}) : SortTypesCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TypesCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TypesCellOpt{}(SortK{}) : SortTypesCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TypesCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TypesInfo{}(SortK{}) : SortTypesInfo{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TypesInfo%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Val{}(SortK{}) : SortVal{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Val%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ValStack{}(SortK{}) : SortValStack{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ValStack%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ValType{}(SortK{}) : SortValType{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ValType%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ValTypes{}(SortK{}) : SortValTypes{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ValTypes%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ValstackCell{}(SortK{}) : SortValstackCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ValstackCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ValstackCellOpt{}(SortK{}) : SortValstackCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ValstackCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'VecType{}(SortK{}) : SortVecType{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:VecType%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'WasmCell{}(SortK{}) : SortWasmCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:WasmCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'WasmCellFragment{}(SortK{}) : SortWasmCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:WasmCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'WasmCellOpt{}(SortK{}) : SortWasmCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:WasmCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'WasmInt{}(SortK{}) : SortWasmInt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:WasmInt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'WasmIntToken{}(SortK{}) : SortWasmIntToken{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:WasmIntToken%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'WasmString{}(SortK{}) : SortWasmString{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:WasmString%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'WasmStringToken{}(SortK{}) : SortWasmStringToken{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:WasmStringToken%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aDataDefn'Coln'data{}(SortDataDefn{}) : SortBytes{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cdata%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aDataDefn'Coln'index{}(SortDataDefn{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cindex%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aDataDefn'Coln'offset{}(SortDataDefn{}) : SortInstrs{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%coffset%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aElemDefn'Coln'elemSegment{}(SortElemDefn{}) : SortInts{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%celemSegment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aElemDefn'Coln'index{}(SortElemDefn{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cindex%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aElemDefn'Coln'offset{}(SortElemDefn{}) : SortInstrs{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%coffset%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aExportDefn'Coln'index{}(SortExportDefn{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cindex%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aExportDefn'Coln'name{}(SortExportDefn{}) : SortWasmString{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cname%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aFuncDefn'Coln'body{}(SortFuncDefn{}) : SortInstrs{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cbody%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aFuncDefn'Coln'locals{}(SortFuncDefn{}) : SortVecType{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%clocals%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aFuncDefn'Coln'metadata{}(SortFuncDefn{}) : SortFuncMetadata{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cmetadata%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aFuncDefn'Coln'type{}(SortFuncDefn{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%ctype%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aFuncDesc'Coln'id{}(SortImportDesc{}) : SortOptionalId{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cid%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aFuncDesc'Coln'type{}(SortImportDesc{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%ctype%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aGlobalDefn'Coln'init{}(SortGlobalDefn{}) : SortInstrs{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cinit%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aGlobalDefn'Coln'metadata{}(SortGlobalDefn{}) : SortOptionalId{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cmetadata%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aGlobalDefn'Coln'type{}(SortGlobalDefn{}) : SortGlobalType{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%ctype%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aGlobalDesc'Coln'id{}(SortImportDesc{}) : SortOptionalId{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cid%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aGlobalDesc'Coln'type{}(SortImportDesc{}) : SortGlobalType{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%ctype%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aIf'Coln'blockInfo{}(SortInstr{}) : SortBlockMetaData{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cblockInfo%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aIf'Coln'else{}(SortInstr{}) : SortInstrs{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%celse%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aIf'Coln'then{}(SortInstr{}) : SortInstrs{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cthen%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aImportDefn'Coln'mod{}(SortImportDefn{}) : SortWasmString{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cmod%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aImportDefn'Coln'name{}(SortImportDefn{}) : SortWasmString{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cname%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aLoad'Coln'offset{}(SortInstr{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%coffset%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aMemoryDefn'Coln'limits{}(SortMemoryDefn{}) : SortLimits{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%climits%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aMemoryDefn'Coln'metadata{}(SortMemoryDefn{}) : SortOptionalId{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cmetadata%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aMemoryDesc'Coln'id{}(SortImportDesc{}) : SortOptionalId{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cid%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aMemoryDesc'Coln'type{}(SortImportDesc{}) : SortLimits{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%ctype%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aModuleDecl'Coln'data{}(SortModuleDecl{}) : SortDefns{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cdata%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aModuleDecl'Coln'elem{}(SortModuleDecl{}) : SortDefns{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%celem%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aModuleDecl'Coln'exports{}(SortModuleDecl{}) : SortDefns{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cexports%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aModuleDecl'Coln'funcs{}(SortModuleDecl{}) : SortDefns{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cfuncs%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aModuleDecl'Coln'globals{}(SortModuleDecl{}) : SortDefns{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cglobals%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aModuleDecl'Coln'importDefns{}(SortModuleDecl{}) : SortDefns{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cimportDefns%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aModuleDecl'Coln'mems{}(SortModuleDecl{}) : SortDefns{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cmems%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aModuleDecl'Coln'metadata{}(SortModuleDecl{}) : SortModuleMetadata{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cmetadata%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aModuleDecl'Coln'start{}(SortModuleDecl{}) : SortDefns{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cstart%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aModuleDecl'Coln'tables{}(SortModuleDecl{}) : SortDefns{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%ctables%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aModuleDecl'Coln'types{}(SortModuleDecl{}) : SortDefns{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%ctypes%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aStore'Coln'offset{}(SortInstr{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%coffset%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aTableDefn'Coln'limits{}(SortTableDefn{}) : SortLimits{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%climits%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aTableDefn'Coln'metadata{}(SortTableDefn{}) : SortOptionalId{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cmetadata%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aTableDesc'Coln'id{}(SortImportDesc{}) : SortOptionalId{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cid%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aTableDesc'Coln'type{}(SortImportDesc{}) : SortLimits{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%ctype%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aTypeDefn'Coln'metadata{}(SortTypeDefn{}) : SortOptionalId{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cmetadata%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'aTypeDefn'Coln'type{}(SortTypeDefn{}) : SortFuncType{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%ctype%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map'Coln'funcIds{}(SortContext{}) : SortMap{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cfuncIds%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map'Coln'globalIds{}(SortContext{}) : SortMap{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cglobalIds%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map'Coln'localIds{}(SortContext{}) : SortMap{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%clocalIds%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map'Coln'typeIds{}(SortContext{}) : SortMap{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%ctypeIds%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'funcMeta'Coln'id{}(SortFuncMetadata{}) : SortOptionalId{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cid%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'funcMeta'Coln'localIds{}(SortFuncMetadata{}) : SortMap{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%clocalIds%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'moduleMeta'Coln'filename{}(SortModuleMetadata{}) : SortOptionalString{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cfilename%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'moduleMeta'Coln'funcIds{}(SortModuleMetadata{}) : SortMap{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cfuncIds%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'moduleMeta'Coln'id{}(SortModuleMetadata{}) : SortOptionalId{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cid%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("randInt"), hook{}("INT.rand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1122,18,1122,64)"), left{}(), format{}("%crandInt%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(SortMap{}, SortSet{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("removeAll"), hook{}("MAP.removeAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(342,18,342,91)"), left{}(), format{}("%cremoveAll%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortString{}, SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101010101"), hook{}("STRING.replace"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1515,21,1515,145)"), left{}(), format{}("%creplace%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}()]
  hooked-symbol LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), hook{}("STRING.replaceAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1514,21,1514,153)"), left{}(), format{}("%creplaceAll%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblreplaceAtBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Bytes{}(SortBytes{}, SortInt{}, SortBytes{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("replaceAtBytes"), hook{}("BYTES.replaceAt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1803,20,1803,104)"), left{}(), format{}("%creplaceAtBytes%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), hook{}("STRING.replaceFirst"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1516,21,1516,155)"), left{}(), format{}("%creplaceFirst%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lblresult'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}() : SortTypeKeyWord{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,38,97,45)"), left{}(), format{}("%cresult%r"), injective{}()]
  hooked-symbol LblreverseBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes{}(SortBytes{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("reverseBytes"), hook{}("BYTES.reverse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1826,20,1826,82)"), left{}(), format{}("%creverseBytes%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("rfindChar"), hook{}("STRING.rfindChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1442,18,1442,116)"), left{}(), format{}("%crfindChar%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("rfindString"), hook{}("STRING.rfind"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1431,18,1431,111)"), left{}(), format{}("%crfindString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblrootFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Int{}(SortFloat{}, SortInt{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("rootFloat"), hook{}("FLOAT.root"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1271,20,1271,76)"), left{}(), format{}("%crootFloat%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblroundFloat'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Int'Unds'Int{}(SortFloat{}, SortInt{}, SortInt{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("roundFloat"), hook{}("FLOAT.round"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1273,20,1273,102)"), left{}(), format{}("%croundFloat%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol LblsequenceDefns'LParUndsRParUnds'WASM'Unds'K'Unds'Defns{}(SortDefns{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("sequenceDefns"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(275,18,275,53)"), left{}(), format{}("%csequenceDefns%r %c(%r %1 %c)%r"), function{}()]
  symbol LblsequenceInstrs'LParUndsRParUnds'WASM'Unds'K'Unds'Instrs{}(SortInstrs{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("sequenceInstrs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(276,18,276,53)"), left{}(), format{}("%csequenceInstrs%r %c(%r %1 %c)%r"), function{}()]
  symbol LblsequenceStmts'LParUndsRParUnds'WASM'Unds'K'Unds'Stmts{}(SortStmts{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("sequenceStmts"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(274,18,274,53)"), left{}(), format{}("%csequenceStmts%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("signExtendBitRangeInt"), hook{}("INT.signExtendBitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(994,18,994,112)"), left{}(), format{}("%csignExtendBitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(SortFloat{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("signFloat"), hook{}("FLOAT.sign"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1202,19,1202,80)"), left{}(), format{}("%csignFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol LblsignedBytes{}() : SortSignedness{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("signedBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1717,25,1717,62)"), left{}(), format{}("%cSigned%r"), injective{}()]
  hooked-symbol LblsinFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("sinFloat"), hook{}("FLOAT.sin"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1278,20,1278,87)"), left{}(), format{}("%csinFloat%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(SortList{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("smt_seq_len"), terminals{}("1101"), klabel{}("sizeList"), hook{}("LIST.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(738,18,738,121)"), left{}(), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(SortMap{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("sizeMap"), hook{}("MAP.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(382,18,382,103)"), left{}(), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(SortSet{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("size"), hook{}("SET.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(600,18,600,80)"), left{}(), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  symbol LblsqrtFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("sqrtFloat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1287,20,1287,58)"), left{}(), format{}("%csqrtFloat%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("srandInt"), hook{}("INT.srand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1123,16,1123,64)"), left{}(), format{}("%csrandInt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblstoreOpStore{}() : SortStoreOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("storeOpStore"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(104,24,104,66)"), left{}(), format{}("%cstore%r"), injective{}()]
  symbol LblstoreOpStore16{}() : SortStoreOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("storeOpStore16"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(106,24,106,66)"), left{}(), format{}("%cstore16%r"), injective{}()]
  symbol LblstoreOpStore32{}() : SortStoreOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("storeOpStore32"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(107,24,107,66)"), left{}(), format{}("%cstore32%r"), injective{}()]
  symbol LblstoreOpStore8{}() : SortStoreOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("storeOpStore8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(105,24,105,66)"), left{}(), format{}("%cstore8%r"), injective{}()]
  symbol Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(SortInt{}, SortInt{}, SortNumber{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("110001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(955,22,955,51)"), left{}(), format{}("%cstore%r %c{%r %1 %2 %3 %c}%r"), injective{}()]
  symbol LblstructureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'OptionalId{}(SortDefns{}, SortOptionalId{}) : SortModuleDecl{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("structureModule"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(656,28,656,76)"), left{}(), format{}("%cstructureModule%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblstructureModules'LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Stmts{}(SortStmts{}) : SortStmts{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("structureModules"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(650,22,650,58)"), left{}(), format{}("%cstructureModules%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblsubstrBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(SortBytes{}, SortInt{}, SortInt{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("substrBytes"), hook{}("BYTES.substr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1791,20,1791,100)"), left{}(), format{}("%csubstrBytes%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(SortString{}, SortInt{}, SortInt{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("substrString"), hook{}("STRING.substr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1420,21,1420,121)"), left{}(), format{}("%csubstrString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lblt2aLimits'LParUndsRParUnds'WASM-TEXT'Unds'Limits'Unds'TextLimits{}(SortTextLimits{}) : SortLimits{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("t2aLimits"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(825,23,825,66)"), left{}(), format{}("%ct2aLimits%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbltable'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}() : SortAllocatedKind{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(134,39,134,45)"), left{}(), format{}("%ctable%r"), injective{}()]
  hooked-symbol LbltanFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("tanFloat"), hook{}("FLOAT.tan"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1280,20,1280,75)"), left{}(), format{}("%ctanFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbltext2abstract'LParUndsRParUnds'WASM'Unds'Stmts'Unds'Stmts{}(SortStmts{}) : SortStmts{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("text2abstract"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(264,22,264,55)"), left{}(), format{}("%ctext2abstract%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbltrap'Unds'WASM'Unds'Instr{}() : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(297,22,297,27)"), left{}(), format{}("%ctrap%r"), injective{}()]
  symbol LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("truncFloat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(157,22,157,52)"), left{}(), format{}("%ctruncFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol LbltypeUse2typeIdx'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Int'Unds'TypeUse'Unds'Map{}(SortTypeUse{}, SortMap{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("typeUse2typeIdx"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(795,20,795,63)"), left{}(), format{}("%ctypeUse2typeIdx%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbltypes2indices'LParUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Defns{}(SortDefns{}) : SortTypesInfo{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("types2indices"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(444,27,444,70)"), left{}(), format{}("%ctypes2indices%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblundefined'Unds'WASM-DATA'Unds'Val{}() : SortVal{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(332,20,332,30)"), left{}(), format{}("%cundefined%r"), injective{}()]
  symbol Lblunescape'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("unescape"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(453,23,453,62)"), left{}(), format{}("%cunescape%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(SortString{}, SortInt{}, SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("unescapeAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(454,23,454,83)"), left{}(), format{}("%cunescape%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol LblunfoldDefns'LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns{}(SortDefns{}) : SortDefns{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("unfoldDefns"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(392,22,392,71)"), left{}(), format{}("%cunfoldDefns%r %c(%r %1 %c)%r"), function{}()]
  symbol LblunfoldInstrs'LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs{}(SortInstrs{}) : SortInstrs{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("unfoldInstrs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(558,24,558,67)"), left{}(), format{}("%cunfoldInstrs%r %c(%r %1 %c)%r"), function{}()]
  symbol LblunfoldStmts'LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Stmts{}(SortStmts{}) : SortStmts{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("unfoldStmts"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(391,22,391,71)"), left{}(), format{}("%cunfoldStmts%r %c(%r %1 %c)%r"), function{}()]
  symbol LblunsignedBytes{}() : SortSignedness{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("unsignedBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1718,25,1718,66)"), left{}(), format{}("%cUnsigned%r"), injective{}()]
  hooked-symbol LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List{}(SortList{}, SortInt{}, SortList{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("updateList"), hook{}("LIST.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(702,19,702,96)"), left{}(), format{}("%cupdateList%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("updateMap"), hook{}("MAP.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,18,333,91)"), left{}(), format{}("%cupdateMap%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("values"), hook{}("MAP.values"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(374,19,374,76)"), left{}(), format{}("%cvalues%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Tild'Int'Unds'{}(SortInt{}) : SortInt{} [latex{}("\\mathop{\\sim_{\\scriptstyle\\it Int}}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsXor-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'UndsXor-Perc'Int'UndsUnds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smtlib{}("notInt"), terminals{}("10"), klabel{}("~Int_"), hook{}("INT.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(927,18,927,172)"), left{}(), format{}("%c~Int%r %1"), function{}()]

// generated axioms
  axiom{R} \exists{R} (Val:SortNumber{}, \equals{SortNumber{}, R} (Val:SortNumber{}, inj{SortInt{}, SortNumber{}} (From:SortInt{}))) [subsort{SortInt{}, SortNumber{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncMetadataCellFragment{}, SortKItem{}} (From:SortFuncMetadataCellFragment{}))) [subsort{SortFuncMetadataCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstCellMap{}, SortKItem{}} (From:SortModuleInstCellMap{}))) [subsort{SortModuleInstCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTsizeCellOpt{}, SortKItem{}} (From:SortTsizeCellOpt{}))) [subsort{SortTsizeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncDefCellFragment{}, SortKItem{}} (From:SortFuncDefCellFragment{}))) [subsort{SortFuncDefCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortWasmString{}, \equals{SortWasmString{}, R} (Val:SortWasmString{}, inj{SortWasmStringToken{}, SortWasmString{}} (From:SortWasmStringToken{}))) [subsort{SortWasmStringToken{}, SortWasmString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMmaxCellOpt{}, SortKItem{}} (From:SortMmaxCellOpt{}))) [subsort{SortMmaxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortString{}, SortKItem{}} (From:SortString{}))) [subsort{SortString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOptionalId{}, \equals{SortOptionalId{}, R} (Val:SortOptionalId{}, inj{SortIdentifier{}, SortOptionalId{}} (From:SortIdentifier{}))) [subsort{SortIdentifier{}, SortOptionalId{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDataString{}, SortKItem{}} (From:SortDataString{}))) [subsort{SortDataString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortStartDefn{}, SortDefn{}} (From:SortStartDefn{}))) [subsort{SortStartDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIBinOp{}, SortKItem{}} (From:SortIBinOp{}))) [subsort{SortIBinOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLoadOpM{}, \equals{SortLoadOpM{}, R} (Val:SortLoadOpM{}, inj{SortLoadOp{}, SortLoadOpM{}} (From:SortLoadOp{}))) [subsort{SortLoadOp{}, SortLoadOpM{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTmaxCellOpt{}, \equals{SortTmaxCellOpt{}, R} (Val:SortTmaxCellOpt{}, inj{SortTmaxCell{}, SortTmaxCellOpt{}} (From:SortTmaxCell{}))) [subsort{SortTmaxCell{}, SortTmaxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmts{}, \equals{SortStmts{}, R} (Val:SortStmts{}, inj{SortInstrs{}, SortStmts{}} (From:SortInstrs{}))) [subsort{SortInstrs{}, SortStmts{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCvtf32Op{}, SortKItem{}} (From:SortCvtf32Op{}))) [subsort{SortCvtf32Op{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTextLimits{}, SortKItem{}} (From:SortTextLimits{}))) [subsort{SortTextLimits{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleIdCellOpt{}, \equals{SortModuleIdCellOpt{}, R} (Val:SortModuleIdCellOpt{}, inj{SortModuleIdCell{}, SortModuleIdCellOpt{}} (From:SortModuleIdCell{}))) [subsort{SortModuleIdCell{}, SortModuleIdCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalIdsCellOpt{}, SortKItem{}} (From:SortLocalIdsCellOpt{}))) [subsort{SortLocalIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortAlloc{}, \equals{SortAlloc{}, R} (Val:SortAlloc{}, inj{SortExportDefn{}, SortAlloc{}} (From:SortExportDefn{}))) [subsort{SortExportDefn{}, SortAlloc{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGAddrCellOpt{}, SortKItem{}} (From:SortGAddrCellOpt{}))) [subsort{SortGAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMsizeCellOpt{}, SortKItem{}} (From:SortMsizeCellOpt{}))) [subsort{SortMsizeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIValType{}, SortKItem{}} (From:SortIValType{}))) [subsort{SortIValType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTdataCell{}, SortKItem{}} (From:SortTdataCell{}))) [subsort{SortTdataCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFCodeCellOpt{}, \equals{SortFCodeCellOpt{}, R} (Val:SortFCodeCellOpt{}, inj{SortFCodeCell{}, SortFCodeCellOpt{}} (From:SortFCodeCell{}))) [subsort{SortFCodeCell{}, SortFCodeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIndex{}, \equals{SortIndex{}, R} (Val:SortIndex{}, inj{SortWasmInt{}, SortIndex{}} (From:SortWasmInt{}))) [subsort{SortWasmInt{}, SortIndex{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortValType{}, SortKItem{}} (From:SortValType{}))) [subsort{SortValType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMsizeCellOpt{}, \equals{SortMsizeCellOpt{}, R} (Val:SortMsizeCellOpt{}, inj{SortMsizeCell{}, SortMsizeCellOpt{}} (From:SortMsizeCell{}))) [subsort{SortMsizeCell{}, SortMsizeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCurFrameCellOpt{}, \equals{SortCurFrameCellOpt{}, R} (Val:SortCurFrameCellOpt{}, inj{SortCurFrameCell{}, SortCurFrameCellOpt{}} (From:SortCurFrameCell{}))) [subsort{SortCurFrameCell{}, SortCurFrameCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemType{}, \equals{SortMemType{}, R} (Val:SortMemType{}, inj{SortTextLimits{}, SortMemType{}} (From:SortTextLimits{}))) [subsort{SortTextLimits{}, SortMemType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}} (From:SortDeterministicMemoryGrowthCellOpt{}))) [subsort{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncDefCellMap{}, SortKItem{}} (From:SortFuncDefCellMap{}))) [subsort{SortFuncDefCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemsCellOpt{}, \equals{SortMemsCellOpt{}, R} (Val:SortMemsCellOpt{}, inj{SortMemsCell{}, SortMemsCellOpt{}} (From:SortMemsCell{}))) [subsort{SortMemsCell{}, SortMemsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBytes{}, SortKItem{}} (From:SortBytes{}))) [subsort{SortBytes{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMmaxCell{}, SortKItem{}} (From:SortMmaxCell{}))) [subsort{SortMmaxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleFileNameCell{}, SortKItem{}} (From:SortModuleFileNameCell{}))) [subsort{SortModuleFileNameCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFBinOp{}, SortKItem{}} (From:SortFBinOp{}))) [subsort{SortFBinOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOffset{}, \equals{SortOffset{}, R} (Val:SortOffset{}, inj{SortInstrs{}, SortOffset{}} (From:SortInstrs{}))) [subsort{SortInstrs{}, SortOffset{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDefn{}, SortKItem{}} (From:SortDefn{}))) [subsort{SortDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIdentifier{}, \equals{SortIdentifier{}, R} (Val:SortIdentifier{}, inj{SortIdentifierToken{}, SortIdentifier{}} (From:SortIdentifierToken{}))) [subsort{SortIdentifierToken{}, SortIdentifier{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalsCellOpt{}, SortKItem{}} (From:SortGlobalsCellOpt{}))) [subsort{SortGlobalsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabInstCellFragment{}, SortKItem{}} (From:SortTabInstCellFragment{}))) [subsort{SortTabInstCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmCellFragment{}, SortKItem{}} (From:SortWasmCellFragment{}))) [subsort{SortWasmCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, inj{SortFuncType{}, SortType{}} (From:SortFuncType{}))) [subsort{SortFuncType{}, SortType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIndex{}, \equals{SortIndex{}, R} (Val:SortIndex{}, inj{SortIdentifier{}, SortIndex{}} (From:SortIdentifier{}))) [subsort{SortIdentifier{}, SortIndex{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFLocalCellOpt{}, SortKItem{}} (From:SortFLocalCellOpt{}))) [subsort{SortFLocalCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortType{}, SortKItem{}} (From:SortType{}))) [subsort{SortType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInstr{}, SortKItem{}} (From:SortInstr{}))) [subsort{SortInstr{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStartDefn{}, SortKItem{}} (From:SortStartDefn{}))) [subsort{SortStartDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAllocatedKind{}, SortKItem{}} (From:SortAllocatedKind{}))) [subsort{SortAllocatedKind{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, inj{SortValType{}, SortType{}} (From:SortValType{}))) [subsort{SortValType{}, SortType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmIntToken{}, SortKItem{}} (From:SortWasmIntToken{}))) [subsort{SortWasmIntToken{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextTabAddrCell{}, SortKItem{}} (From:SortNextTabAddrCell{}))) [subsort{SortNextTabAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncMetadata{}, SortKItem{}} (From:SortFuncMetadata{}))) [subsort{SortFuncMetadata{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleRegistryCell{}, SortKItem{}} (From:SortModuleRegistryCell{}))) [subsort{SortModuleRegistryCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextFuncIdxCellOpt{}, \equals{SortNextFuncIdxCellOpt{}, R} (Val:SortNextFuncIdxCellOpt{}, inj{SortNextFuncIdxCell{}, SortNextFuncIdxCellOpt{}} (From:SortNextFuncIdxCell{}))) [subsort{SortNextFuncIdxCell{}, SortNextFuncIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleRegistryCellOpt{}, \equals{SortModuleRegistryCellOpt{}, R} (Val:SortModuleRegistryCellOpt{}, inj{SortModuleRegistryCell{}, SortModuleRegistryCellOpt{}} (From:SortModuleRegistryCell{}))) [subsort{SortModuleRegistryCell{}, SortModuleRegistryCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurModIdxCellOpt{}, SortKItem{}} (From:SortCurModIdxCellOpt{}))) [subsort{SortCurModIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLoadOp{}, SortKItem{}} (From:SortLoadOp{}))) [subsort{SortLoadOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncAddrsCell{}, SortKItem{}} (From:SortFuncAddrsCell{}))) [subsort{SortFuncAddrsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMAddrCellOpt{}, SortKItem{}} (From:SortMAddrCellOpt{}))) [subsort{SortMAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (From:SortGeneratedCounterCellOpt{}))) [subsort{SortGeneratedCounterCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortValType{}, \equals{SortValType{}, R} (Val:SortValType{}, inj{SortFValType{}, SortValType{}} (From:SortFValType{}))) [subsort{SortFValType{}, SortValType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstCellFragment{}, SortKItem{}} (From:SortModuleInstCellFragment{}))) [subsort{SortModuleInstCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemArg{}, \equals{SortMemArg{}, R} (Val:SortMemArg{}, inj{SortAlignArg{}, SortMemArg{}} (From:SortAlignArg{}))) [subsort{SortAlignArg{}, SortMemArg{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTAddrCellOpt{}, \equals{SortTAddrCellOpt{}, R} (Val:SortTAddrCellOpt{}, inj{SortTAddrCell{}, SortTAddrCellOpt{}} (From:SortTAddrCell{}))) [subsort{SortTAddrCell{}, SortTAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOffset{}, SortKItem{}} (From:SortOffset{}))) [subsort{SortOffset{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGlobalInstCellMap{}, \equals{SortGlobalInstCellMap{}, R} (Val:SortGlobalInstCellMap{}, inj{SortGlobalInstCell{}, SortGlobalInstCellMap{}} (From:SortGlobalInstCell{}))) [subsort{SortGlobalInstCell{}, SortGlobalInstCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncIdCellOpt{}, SortKItem{}} (From:SortFuncIdCellOpt{}))) [subsort{SortFuncIdCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemInstCellMap{}, SortKItem{}} (From:SortMemInstCellMap{}))) [subsort{SortMemInstCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFuncIdCellOpt{}, \equals{SortFuncIdCellOpt{}, R} (Val:SortFuncIdCellOpt{}, inj{SortFuncIdCell{}, SortFuncIdCellOpt{}} (From:SortFuncIdCell{}))) [subsort{SortFuncIdCell{}, SortFuncIdCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleMetadataCellFragment{}, SortKItem{}} (From:SortModuleMetadataCellFragment{}))) [subsort{SortModuleMetadataCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGAddrCell{}, SortKItem{}} (From:SortGAddrCell{}))) [subsort{SortGAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStmts{}, SortKItem{}} (From:SortStmts{}))) [subsort{SortStmts{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextFuncAddrCellOpt{}, SortKItem{}} (From:SortNextFuncAddrCellOpt{}))) [subsort{SortNextFuncAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurFrameCellOpt{}, SortKItem{}} (From:SortCurFrameCellOpt{}))) [subsort{SortCurFrameCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortWasmInt{}, \equals{SortWasmInt{}, R} (Val:SortWasmInt{}, inj{SortInt{}, SortWasmInt{}} (From:SortInt{}))) [subsort{SortInt{}, SortWasmInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeDefn{}, SortKItem{}} (From:SortTypeDefn{}))) [subsort{SortTypeDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextMemAddrCellOpt{}, SortKItem{}} (From:SortNextMemAddrCellOpt{}))) [subsort{SortNextMemAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleFileNameCellOpt{}, \equals{SortModuleFileNameCellOpt{}, R} (Val:SortModuleFileNameCellOpt{}, inj{SortModuleFileNameCell{}, SortModuleFileNameCellOpt{}} (From:SortModuleFileNameCell{}))) [subsort{SortModuleFileNameCell{}, SortModuleFileNameCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortValstackCellOpt{}, SortKItem{}} (From:SortValstackCellOpt{}))) [subsort{SortValstackCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextGlobAddrCellOpt{}, SortKItem{}} (From:SortNextGlobAddrCellOpt{}))) [subsort{SortNextGlobAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalType{}, SortKItem{}} (From:SortGlobalType{}))) [subsort{SortGlobalType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortGlobalDefn{}, SortDefn{}} (From:SortGlobalDefn{}))) [subsort{SortGlobalDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGMutCell{}, SortKItem{}} (From:SortGMutCell{}))) [subsort{SortGMutCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncSpec{}, SortKItem{}} (From:SortFuncSpec{}))) [subsort{SortFuncSpec{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncDefn{}, SortKItem{}} (From:SortFuncDefn{}))) [subsort{SortFuncDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleRegistryCellOpt{}, SortKItem{}} (From:SortModuleRegistryCellOpt{}))) [subsort{SortModuleRegistryCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOptionalInt{}, \equals{SortOptionalInt{}, R} (Val:SortOptionalInt{}, inj{SortInt{}, SortOptionalInt{}} (From:SortInt{}))) [subsort{SortInt{}, SortOptionalInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCvtOp{}, \equals{SortCvtOp{}, R} (Val:SortCvtOp{}, inj{SortCvtf32Op{}, SortCvtOp{}} (From:SortCvtf32Op{}))) [subsort{SortCvtf32Op{}, SortCvtOp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstancesCellOpt{}, SortKItem{}} (From:SortModuleInstancesCellOpt{}))) [subsort{SortModuleInstancesCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMdataCellOpt{}, \equals{SortMdataCellOpt{}, R} (Val:SortMdataCellOpt{}, inj{SortMdataCell{}, SortMdataCellOpt{}} (From:SortMdataCell{}))) [subsort{SortMdataCell{}, SortMdataCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmCell{}, SortKItem{}} (From:SortWasmCell{}))) [subsort{SortWasmCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleMetadata{}, SortKItem{}} (From:SortModuleMetadata{}))) [subsort{SortModuleMetadata{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTmaxCellOpt{}, SortKItem{}} (From:SortTmaxCellOpt{}))) [subsort{SortTmaxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModIdxCell{}, SortKItem{}} (From:SortModIdxCell{}))) [subsort{SortModIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextGlobAddrCellOpt{}, \equals{SortNextGlobAddrCellOpt{}, R} (Val:SortNextGlobAddrCellOpt{}, inj{SortNextGlobAddrCell{}, SortNextGlobAddrCellOpt{}} (From:SortNextGlobAddrCell{}))) [subsort{SortNextGlobAddrCell{}, SortNextGlobAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemsCellOpt{}, SortKItem{}} (From:SortMemsCellOpt{}))) [subsort{SortMemsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTextFormatGlobalType{}, SortKItem{}} (From:SortTextFormatGlobalType{}))) [subsort{SortTextFormatGlobalType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalDecl{}, SortKItem{}} (From:SortLocalDecl{}))) [subsort{SortLocalDecl{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTabIdsCellOpt{}, \equals{SortTabIdsCellOpt{}, R} (Val:SortTabIdsCellOpt{}, inj{SortTabIdsCell{}, SortTabIdsCellOpt{}} (From:SortTabIdsCell{}))) [subsort{SortTabIdsCell{}, SortTabIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortAlloc{}, \equals{SortAlloc{}, R} (Val:SortAlloc{}, inj{SortImportDefn{}, SortAlloc{}} (From:SortImportDefn{}))) [subsort{SortImportDefn{}, SortAlloc{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMAddrCell{}, SortKItem{}} (From:SortMAddrCell{}))) [subsort{SortMAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTAddrCellOpt{}, SortKItem{}} (From:SortTAddrCellOpt{}))) [subsort{SortTAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLocalIdsCellOpt{}, \equals{SortLocalIdsCellOpt{}, R} (Val:SortLocalIdsCellOpt{}, inj{SortLocalIdsCell{}, SortLocalIdsCellOpt{}} (From:SortLocalIdsCell{}))) [subsort{SortLocalIdsCell{}, SortLocalIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortEmptyStmt{}, SortDefn{}} (From:SortEmptyStmt{}))) [subsort{SortEmptyStmt{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmCellOpt{}, SortKItem{}} (From:SortWasmCellOpt{}))) [subsort{SortWasmCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleInstancesCellOpt{}, \equals{SortModuleInstancesCellOpt{}, R} (Val:SortModuleInstancesCellOpt{}, inj{SortModuleInstancesCell{}, SortModuleInstancesCellOpt{}} (From:SortModuleInstancesCell{}))) [subsort{SortModuleInstancesCell{}, SortModuleInstancesCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemorySpec{}, SortKItem{}} (From:SortMemorySpec{}))) [subsort{SortMemorySpec{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextTypeIdxCellOpt{}, SortKItem{}} (From:SortNextTypeIdxCellOpt{}))) [subsort{SortNextTypeIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIVal{}, SortKItem{}} (From:SortIVal{}))) [subsort{SortIVal{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabIdsCellOpt{}, SortKItem{}} (From:SortTabIdsCellOpt{}))) [subsort{SortTabIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNumber{}, SortKItem{}} (From:SortNumber{}))) [subsort{SortNumber{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTypeUse{}, \equals{SortTypeUse{}, R} (Val:SortTypeUse{}, inj{SortTypeDecls{}, SortTypeUse{}} (From:SortTypeDecls{}))) [subsort{SortTypeDecls{}, SortTypeUse{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEmptyStmt{}, SortKItem{}} (From:SortEmptyStmt{}))) [subsort{SortEmptyStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmStringToken{}, SortKItem{}} (From:SortWasmStringToken{}))) [subsort{SortWasmStringToken{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExportsCellOpt{}, \equals{SortExportsCellOpt{}, R} (Val:SortExportsCellOpt{}, inj{SortExportsCell{}, SortExportsCellOpt{}} (From:SortExportsCell{}))) [subsort{SortExportsCell{}, SortExportsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortElemDefn{}, SortKItem{}} (From:SortElemDefn{}))) [subsort{SortElemDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortContext{}, SortKItem{}} (From:SortContext{}))) [subsort{SortContext{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFModInstCellOpt{}, \equals{SortFModInstCellOpt{}, R} (Val:SortFModInstCellOpt{}, inj{SortFModInstCell{}, SortFModInstCellOpt{}} (From:SortFModInstCell{}))) [subsort{SortFModInstCell{}, SortFModInstCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGAddrCellOpt{}, \equals{SortGAddrCellOpt{}, R} (Val:SortGAddrCellOpt{}, inj{SortGAddrCell{}, SortGAddrCellOpt{}} (From:SortGAddrCell{}))) [subsort{SortGAddrCell{}, SortGAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleInstCellMap{}, \equals{SortModuleInstCellMap{}, R} (Val:SortModuleInstCellMap{}, inj{SortModuleInstCell{}, SortModuleInstCellMap{}} (From:SortModuleInstCell{}))) [subsort{SortModuleInstCell{}, SortModuleInstCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSet{}, SortKItem{}} (From:SortSet{}))) [subsort{SortSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTableElemType{}, SortKItem{}} (From:SortTableElemType{}))) [subsort{SortTableElemType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCvtOp{}, \equals{SortCvtOp{}, R} (Val:SortCvtOp{}, inj{SortCvtf64Op{}, SortCvtOp{}} (From:SortCvtf64Op{}))) [subsort{SortCvtf64Op{}, SortCvtOp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExportDefn{}, SortKItem{}} (From:SortExportDefn{}))) [subsort{SortExportDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFValType{}, SortKItem{}} (From:SortFValType{}))) [subsort{SortFValType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFModInstCellOpt{}, SortKItem{}} (From:SortFModInstCellOpt{}))) [subsort{SortFModInstCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOptionalInt{}, SortKItem{}} (From:SortOptionalInt{}))) [subsort{SortOptionalInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreOpM{}, SortKItem{}} (From:SortStoreOpM{}))) [subsort{SortStoreOpM{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleMetadataCell{}, SortKItem{}} (From:SortModuleMetadataCell{}))) [subsort{SortModuleMetadataCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextTabAddrCellOpt{}, \equals{SortNextTabAddrCellOpt{}, R} (Val:SortNextTabAddrCellOpt{}, inj{SortNextTabAddrCell{}, SortNextTabAddrCellOpt{}} (From:SortNextTabAddrCell{}))) [subsort{SortNextTabAddrCell{}, SortNextTabAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalInstCell{}, SortKItem{}} (From:SortGlobalInstCell{}))) [subsort{SortGlobalInstCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextGlobIdxCell{}, SortKItem{}} (From:SortNextGlobIdxCell{}))) [subsort{SortNextGlobIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTmaxCell{}, SortKItem{}} (From:SortTmaxCell{}))) [subsort{SortTmaxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFTypeCellOpt{}, \equals{SortFTypeCellOpt{}, R} (Val:SortFTypeCellOpt{}, inj{SortFTypeCell{}, SortFTypeCellOpt{}} (From:SortFTypeCell{}))) [subsort{SortFTypeCell{}, SortFTypeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabsCellOpt{}, SortKItem{}} (From:SortTabsCellOpt{}))) [subsort{SortTabsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleFileNameCellOpt{}, SortKItem{}} (From:SortModuleFileNameCellOpt{}))) [subsort{SortModuleFileNameCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSignedness{}, SortKItem{}} (From:SortSignedness{}))) [subsort{SortSignedness{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortDefn{}, SortStmt{}} (From:SortDefn{}))) [subsort{SortDefn{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCvti32Op{}, SortKItem{}} (From:SortCvti32Op{}))) [subsort{SortCvti32Op{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdentifier{}, SortKItem{}} (From:SortIdentifier{}))) [subsort{SortIdentifier{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEmptyStmts{}, SortKItem{}} (From:SortEmptyStmts{}))) [subsort{SortEmptyStmts{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBlockInstr{}, SortKItem{}} (From:SortBlockInstr{}))) [subsort{SortBlockInstr{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleIdsCellOpt{}, SortKItem{}} (From:SortModuleIdsCellOpt{}))) [subsort{SortModuleIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextFuncAddrCell{}, SortKItem{}} (From:SortNextFuncAddrCell{}))) [subsort{SortNextFuncAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalIdsCell{}, SortKItem{}} (From:SortLocalIdsCell{}))) [subsort{SortLocalIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemInstCellFragment{}, SortKItem{}} (From:SortMemInstCellFragment{}))) [subsort{SortMemInstCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTabAddrsCellOpt{}, \equals{SortTabAddrsCellOpt{}, R} (Val:SortTabAddrsCellOpt{}, inj{SortTabAddrsCell{}, SortTabAddrsCellOpt{}} (From:SortTabAddrsCell{}))) [subsort{SortTabAddrsCell{}, SortTabAddrsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortFuncDefn{}, SortDefn{}} (From:SortFuncDefn{}))) [subsort{SortFuncDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVecType{}, SortKItem{}} (From:SortVecType{}))) [subsort{SortVecType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobIdsCell{}, SortKItem{}} (From:SortGlobIdsCell{}))) [subsort{SortGlobIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortTypeDefn{}, SortDefn{}} (From:SortTypeDefn{}))) [subsort{SortTypeDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortElemDefn{}, SortDefn{}} (From:SortElemDefn{}))) [subsort{SortElemDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleIdsCell{}, SortKItem{}} (From:SortModuleIdsCell{}))) [subsort{SortModuleIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncIdsCell{}, SortKItem{}} (From:SortFuncIdsCell{}))) [subsort{SortFuncIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMainStoreCellOpt{}, SortKItem{}} (From:SortMainStoreCellOpt{}))) [subsort{SortMainStoreCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNumber{}, \equals{SortNumber{}, R} (Val:SortNumber{}, inj{SortFloat{}, SortNumber{}} (From:SortFloat{}))) [subsort{SortFloat{}, SortNumber{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdentifierToken{}, SortKItem{}} (From:SortIdentifierToken{}))) [subsort{SortIdentifierToken{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIRelOp{}, SortKItem{}} (From:SortIRelOp{}))) [subsort{SortIRelOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalInstCellMap{}, SortKItem{}} (From:SortGlobalInstCellMap{}))) [subsort{SortGlobalInstCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOptionalId{}, SortKItem{}} (From:SortOptionalId{}))) [subsort{SortOptionalId{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTableSpec{}, \equals{SortTableSpec{}, R} (Val:SortTableSpec{}, inj{SortTableType{}, SortTableSpec{}} (From:SortTableType{}))) [subsort{SortTableType{}, SortTableSpec{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncsCellFragment{}, SortKItem{}} (From:SortFuncsCellFragment{}))) [subsort{SortFuncsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGlobIdsCellOpt{}, \equals{SortGlobIdsCellOpt{}, R} (Val:SortGlobIdsCellOpt{}, inj{SortGlobIdsCell{}, SortGlobIdsCellOpt{}} (From:SortGlobIdsCell{}))) [subsort{SortGlobIdsCell{}, SortGlobIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, inj{SortBlockInstr{}, SortInstr{}} (From:SortBlockInstr{}))) [subsort{SortBlockInstr{}, SortInstr{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemIdsCellOpt{}, \equals{SortMemIdsCellOpt{}, R} (Val:SortMemIdsCellOpt{}, inj{SortMemIdsCell{}, SortMemIdsCellOpt{}} (From:SortMemIdsCell{}))) [subsort{SortMemIdsCell{}, SortMemIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemAddrsCellOpt{}, SortKItem{}} (From:SortMemAddrsCellOpt{}))) [subsort{SortMemAddrsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLoadOpM{}, SortKItem{}} (From:SortLoadOpM{}))) [subsort{SortLoadOpM{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortPlainInstr{}, SortKItem{}} (From:SortPlainInstr{}))) [subsort{SortPlainInstr{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncAddrsCellOpt{}, SortKItem{}} (From:SortFuncAddrsCellOpt{}))) [subsort{SortFuncAddrsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIndex{}, SortKItem{}} (From:SortIndex{}))) [subsort{SortIndex{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMut{}, SortKItem{}} (From:SortMut{}))) [subsort{SortMut{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleMetadataCellOpt{}, \equals{SortModuleMetadataCellOpt{}, R} (Val:SortModuleMetadataCellOpt{}, inj{SortModuleMetadataCell{}, SortModuleMetadataCellOpt{}} (From:SortModuleMetadataCell{}))) [subsort{SortModuleMetadataCell{}, SortModuleMetadataCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGValueCellOpt{}, \equals{SortGValueCellOpt{}, R} (Val:SortGValueCellOpt{}, inj{SortGValueCell{}, SortGValueCellOpt{}} (From:SortGValueCell{}))) [subsort{SortGValueCell{}, SortGValueCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCvtOp{}, SortKItem{}} (From:SortCvtOp{}))) [subsort{SortCvtOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextFuncIdxCell{}, SortKItem{}} (From:SortNextFuncIdxCell{}))) [subsort{SortNextFuncIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurModIdxCell{}, SortKItem{}} (From:SortCurModIdxCell{}))) [subsort{SortCurModIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalInstCellFragment{}, SortKItem{}} (From:SortGlobalInstCellFragment{}))) [subsort{SortGlobalInstCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExternval{}, SortKItem{}} (From:SortExternval{}))) [subsort{SortExternval{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeDecls{}, SortKItem{}} (From:SortTypeDecls{}))) [subsort{SortTypeDecls{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFUnOp{}, SortKItem{}} (From:SortFUnOp{}))) [subsort{SortFUnOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInts{}, SortKItem{}} (From:SortInts{}))) [subsort{SortInts{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMsizeCell{}, SortKItem{}} (From:SortMsizeCell{}))) [subsort{SortMsizeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCvtf64Op{}, SortKItem{}} (From:SortCvtf64Op{}))) [subsort{SortCvtf64Op{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTdataCellOpt{}, SortKItem{}} (From:SortTdataCellOpt{}))) [subsort{SortTdataCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInstrsCell{}, SortKItem{}} (From:SortInstrsCell{}))) [subsort{SortInstrsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemorySpec{}, \equals{SortMemorySpec{}, R} (Val:SortMemorySpec{}, inj{SortMemType{}, SortMemorySpec{}} (From:SortMemType{}))) [subsort{SortMemType{}, SortMemorySpec{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFAddrCell{}, SortKItem{}} (From:SortFAddrCell{}))) [subsort{SortFAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDeterministicMemoryGrowthCell{}, SortKItem{}} (From:SortDeterministicMemoryGrowthCell{}))) [subsort{SortDeterministicMemoryGrowthCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAlignArg{}, SortKItem{}} (From:SortAlignArg{}))) [subsort{SortAlignArg{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, inj{SortEmptyStmt{}, SortInstr{}} (From:SortEmptyStmt{}))) [subsort{SortEmptyStmt{}, SortInstr{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypesCell{}, SortKItem{}} (From:SortTypesCell{}))) [subsort{SortTypesCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextMemAddrCellOpt{}, \equals{SortNextMemAddrCellOpt{}, R} (Val:SortNextMemAddrCellOpt{}, inj{SortNextMemAddrCell{}, SortNextMemAddrCellOpt{}} (From:SortNextMemAddrCell{}))) [subsort{SortNextMemAddrCell{}, SortNextMemAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstancesCellFragment{}, SortKItem{}} (From:SortModuleInstancesCellFragment{}))) [subsort{SortModuleInstancesCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTypesCellOpt{}, \equals{SortTypesCellOpt{}, R} (Val:SortTypesCellOpt{}, inj{SortTypesCell{}, SortTypesCellOpt{}} (From:SortTypesCell{}))) [subsort{SortTypesCell{}, SortTypesCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCell{}, SortKItem{}} (From:SortGeneratedTopCell{}))) [subsort{SortGeneratedTopCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, inj{SortFoldedInstr{}, SortInstr{}} (From:SortFoldedInstr{}))) [subsort{SortFoldedInstr{}, SortInstr{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabIdsCell{}, SortKItem{}} (From:SortTabIdsCell{}))) [subsort{SortTabIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMainStoreCell{}, SortKItem{}} (From:SortMainStoreCell{}))) [subsort{SortMainStoreCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDeterministicMemoryGrowthCellOpt{}, \equals{SortDeterministicMemoryGrowthCellOpt{}, R} (Val:SortDeterministicMemoryGrowthCellOpt{}, inj{SortDeterministicMemoryGrowthCell{}, SortDeterministicMemoryGrowthCellOpt{}} (From:SortDeterministicMemoryGrowthCell{}))) [subsort{SortDeterministicMemoryGrowthCell{}, SortDeterministicMemoryGrowthCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortValType{}, \equals{SortValType{}, R} (Val:SortValType{}, inj{SortIValType{}, SortValType{}} (From:SortIValType{}))) [subsort{SortIValType{}, SortValType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabInstCellMap{}, SortKItem{}} (From:SortTabInstCellMap{}))) [subsort{SortTabInstCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMdataCellOpt{}, SortKItem{}} (From:SortMdataCellOpt{}))) [subsort{SortMdataCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDataDefn{}, SortKItem{}} (From:SortDataDefn{}))) [subsort{SortDataDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInlineExport{}, SortKItem{}} (From:SortInlineExport{}))) [subsort{SortInlineExport{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalAddrsCell{}, SortKItem{}} (From:SortGlobalAddrsCell{}))) [subsort{SortGlobalAddrsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeDecl{}, SortKItem{}} (From:SortTypeDecl{}))) [subsort{SortTypeDecl{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabsCellFragment{}, SortKItem{}} (From:SortTabsCellFragment{}))) [subsort{SortTabsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortElemSegment{}, SortKItem{}} (From:SortElemSegment{}))) [subsort{SortElemSegment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFAddrCellOpt{}, \equals{SortFAddrCellOpt{}, R} (Val:SortFAddrCellOpt{}, inj{SortFAddrCell{}, SortFAddrCellOpt{}} (From:SortFAddrCell{}))) [subsort{SortFAddrCell{}, SortFAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemsCellFragment{}, SortKItem{}} (From:SortMemsCellFragment{}))) [subsort{SortMemsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLocalsCellOpt{}, \equals{SortLocalsCellOpt{}, R} (Val:SortLocalsCellOpt{}, inj{SortLocalsCell{}, SortLocalsCellOpt{}} (From:SortLocalsCell{}))) [subsort{SortLocalsCell{}, SortLocalsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortDataDefn{}, SortDefn{}} (From:SortDataDefn{}))) [subsort{SortDataDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemArg{}, \equals{SortMemArg{}, R} (Val:SortMemArg{}, inj{SortOffsetArg{}, SortMemArg{}} (From:SortOffsetArg{}))) [subsort{SortOffsetArg{}, SortMemArg{}}()] // subsort
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, inj{SortVecType{}, SortType{}} (From:SortVecType{}))) [subsort{SortVecType{}, SortType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextTypeIdxCellOpt{}, \equals{SortNextTypeIdxCellOpt{}, R} (Val:SortNextTypeIdxCellOpt{}, inj{SortNextTypeIdxCell{}, SortNextTypeIdxCellOpt{}} (From:SortNextTypeIdxCell{}))) [subsort{SortNextTypeIdxCell{}, SortNextTypeIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemsCell{}, SortKItem{}} (From:SortMemsCell{}))) [subsort{SortMemsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortValstackCell{}, SortKItem{}} (From:SortValstackCell{}))) [subsort{SortValstackCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTestOp{}, SortKItem{}} (From:SortTestOp{}))) [subsort{SortTestOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncIdCell{}, SortKItem{}} (From:SortFuncIdCell{}))) [subsort{SortFuncIdCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTsizeCell{}, SortKItem{}} (From:SortTsizeCell{}))) [subsort{SortTsizeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDefns{}, SortKItem{}} (From:SortDefns{}))) [subsort{SortDefns{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabAddrsCell{}, SortKItem{}} (From:SortTabAddrsCell{}))) [subsort{SortTabAddrsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncMetadataCell{}, SortKItem{}} (From:SortFuncMetadataCell{}))) [subsort{SortFuncMetadataCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncType{}, SortKItem{}} (From:SortFuncType{}))) [subsort{SortFuncType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTAddrCell{}, SortKItem{}} (From:SortTAddrCell{}))) [subsort{SortTAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemArg{}, SortKItem{}} (From:SortMemArg{}))) [subsort{SortMemArg{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFrame{}, SortKItem{}} (From:SortFrame{}))) [subsort{SortFrame{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFCodeCellOpt{}, SortKItem{}} (From:SortFCodeCellOpt{}))) [subsort{SortFCodeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFuncIdsCellOpt{}, \equals{SortFuncIdsCellOpt{}, R} (Val:SortFuncIdsCellOpt{}, inj{SortFuncIdsCell{}, SortFuncIdsCellOpt{}} (From:SortFuncIdsCell{}))) [subsort{SortFuncIdsCell{}, SortFuncIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemoryDefn{}, SortKItem{}} (From:SortMemoryDefn{}))) [subsort{SortMemoryDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortModuleDecl{}, SortStmt{}} (From:SortModuleDecl{}))) [subsort{SortModuleDecl{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInstrsCellOpt{}, SortKItem{}} (From:SortInstrsCellOpt{}))) [subsort{SortInstrsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFCodeCell{}, SortKItem{}} (From:SortFCodeCell{}))) [subsort{SortFCodeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextGlobIdxCellOpt{}, SortKItem{}} (From:SortNextGlobIdxCellOpt{}))) [subsort{SortNextGlobIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInstrsCellOpt{}, \equals{SortInstrsCellOpt{}, R} (Val:SortInstrsCellOpt{}, inj{SortInstrsCell{}, SortInstrsCellOpt{}} (From:SortInstrsCell{}))) [subsort{SortInstrsCell{}, SortInstrsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortList{}, SortKItem{}} (From:SortList{}))) [subsort{SortList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStoreOpM{}, \equals{SortStoreOpM{}, R} (Val:SortStoreOpM{}, inj{SortStoreOp{}, SortStoreOpM{}} (From:SortStoreOp{}))) [subsort{SortStoreOp{}, SortStoreOpM{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFLocalCellOpt{}, \equals{SortFLocalCellOpt{}, R} (Val:SortFLocalCellOpt{}, inj{SortFLocalCell{}, SortFLocalCellOpt{}} (From:SortFLocalCell{}))) [subsort{SortFLocalCell{}, SortFLocalCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTypeIdsCellOpt{}, \equals{SortTypeIdsCellOpt{}, R} (Val:SortTypeIdsCellOpt{}, inj{SortTypeIdsCell{}, SortTypeIdsCellOpt{}} (From:SortTypeIdsCell{}))) [subsort{SortTypeIdsCell{}, SortTypeIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextTypeIdxCell{}, SortKItem{}} (From:SortNextTypeIdxCell{}))) [subsort{SortNextTypeIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFuncAddrsCellOpt{}, \equals{SortFuncAddrsCellOpt{}, R} (Val:SortFuncAddrsCellOpt{}, inj{SortFuncAddrsCell{}, SortFuncAddrsCellOpt{}} (From:SortFuncAddrsCell{}))) [subsort{SortFuncAddrsCell{}, SortFuncAddrsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortFVal{}, SortVal{}} (From:SortFVal{}))) [subsort{SortFVal{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemInstCell{}, SortKItem{}} (From:SortMemInstCell{}))) [subsort{SortMemInstCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleIdsCellOpt{}, \equals{SortModuleIdsCellOpt{}, R} (Val:SortModuleIdsCellOpt{}, inj{SortModuleIdsCell{}, SortModuleIdsCellOpt{}} (From:SortModuleIdsCell{}))) [subsort{SortModuleIdsCell{}, SortModuleIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortImportDesc{}, SortKItem{}} (From:SortImportDesc{}))) [subsort{SortImportDesc{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFVal{}, SortKItem{}} (From:SortFVal{}))) [subsort{SortFVal{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLimits{}, SortKItem{}} (From:SortLimits{}))) [subsort{SortLimits{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOffsetArg{}, SortKItem{}} (From:SortOffsetArg{}))) [subsort{SortOffsetArg{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGlobalAddrsCellOpt{}, \equals{SortGlobalAddrsCellOpt{}, R} (Val:SortGlobalAddrsCellOpt{}, inj{SortGlobalAddrsCell{}, SortGlobalAddrsCellOpt{}} (From:SortGlobalAddrsCell{}))) [subsort{SortGlobalAddrsCell{}, SortGlobalAddrsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMdataCell{}, SortKItem{}} (From:SortMdataCell{}))) [subsort{SortMdataCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobIdsCellOpt{}, SortKItem{}} (From:SortGlobIdsCellOpt{}))) [subsort{SortGlobIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextModuleIdxCell{}, SortKItem{}} (From:SortNextModuleIdxCell{}))) [subsort{SortNextModuleIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTsizeCellOpt{}, \equals{SortTsizeCellOpt{}, R} (Val:SortTsizeCellOpt{}, inj{SortTsizeCell{}, SortTsizeCellOpt{}} (From:SortTsizeCell{}))) [subsort{SortTsizeCell{}, SortTsizeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemIdsCellOpt{}, SortKItem{}} (From:SortMemIdsCellOpt{}))) [subsort{SortMemIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortImportDefn{}, SortDefn{}} (From:SortImportDefn{}))) [subsort{SortImportDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeIdsCellOpt{}, SortKItem{}} (From:SortTypeIdsCellOpt{}))) [subsort{SortTypeIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemIdsCell{}, SortKItem{}} (From:SortMemIdsCell{}))) [subsort{SortMemIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabsCell{}, SortKItem{}} (From:SortTabsCell{}))) [subsort{SortTabsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeUse{}, SortKItem{}} (From:SortTypeUse{}))) [subsort{SortTypeUse{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmts{}, \equals{SortStmts{}, R} (Val:SortStmts{}, inj{SortDefns{}, SortStmts{}} (From:SortDefns{}))) [subsort{SortDefns{}, SortStmts{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleIdCell{}, SortKItem{}} (From:SortModuleIdCell{}))) [subsort{SortModuleIdCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstCell{}, SortKItem{}} (From:SortModuleInstCell{}))) [subsort{SortModuleInstCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabAddrsCellOpt{}, SortKItem{}} (From:SortTabAddrsCellOpt{}))) [subsort{SortTabAddrsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFLocalCell{}, SortKItem{}} (From:SortFLocalCell{}))) [subsort{SortFLocalCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortMemoryDefn{}, SortDefn{}} (From:SortMemoryDefn{}))) [subsort{SortMemoryDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCurModIdxCellOpt{}, \equals{SortCurModIdxCellOpt{}, R} (Val:SortCurModIdxCellOpt{}, inj{SortCurModIdxCell{}, SortCurModIdxCellOpt{}} (From:SortCurModIdxCell{}))) [subsort{SortCurModIdxCell{}, SortCurModIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalsCell{}, SortKItem{}} (From:SortGlobalsCell{}))) [subsort{SortGlobalsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFloat{}, SortKItem{}} (From:SortFloat{}))) [subsort{SortFloat{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBool{}, SortKItem{}} (From:SortBool{}))) [subsort{SortBool{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFuncMetadataCellOpt{}, \equals{SortFuncMetadataCellOpt{}, R} (Val:SortFuncMetadataCellOpt{}, inj{SortFuncMetadataCell{}, SortFuncMetadataCellOpt{}} (From:SortFuncMetadataCell{}))) [subsort{SortFuncMetadataCell{}, SortFuncMetadataCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypesCellOpt{}, SortKItem{}} (From:SortTypesCellOpt{}))) [subsort{SortTypesCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeKeyWord{}, SortKItem{}} (From:SortTypeKeyWord{}))) [subsort{SortTypeKeyWord{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleIdCellOpt{}, SortKItem{}} (From:SortModuleIdCellOpt{}))) [subsort{SortModuleIdCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalsCellFragment{}, SortKItem{}} (From:SortGlobalsCellFragment{}))) [subsort{SortGlobalsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortImportDefn{}, SortKItem{}} (From:SortImportDefn{}))) [subsort{SortImportDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIUnOp{}, SortKItem{}} (From:SortIUnOp{}))) [subsort{SortIUnOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGValueCellOpt{}, SortKItem{}} (From:SortGValueCellOpt{}))) [subsort{SortGValueCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortValTypes{}, SortKItem{}} (From:SortValTypes{}))) [subsort{SortValTypes{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurFrameCell{}, SortKItem{}} (From:SortCurFrameCell{}))) [subsort{SortCurFrameCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTdataCellOpt{}, \equals{SortTdataCellOpt{}, R} (Val:SortTdataCellOpt{}, inj{SortTdataCell{}, SortTdataCellOpt{}} (From:SortTdataCell{}))) [subsort{SortTdataCell{}, SortTdataCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCvtOp{}, \equals{SortCvtOp{}, R} (Val:SortCvtOp{}, inj{SortCvti32Op{}, SortCvtOp{}} (From:SortCvti32Op{}))) [subsort{SortCvti32Op{}, SortCvtOp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemInstCellMap{}, \equals{SortMemInstCellMap{}, R} (Val:SortMemInstCellMap{}, inj{SortMemInstCell{}, SortMemInstCellMap{}} (From:SortMemInstCell{}))) [subsort{SortMemInstCell{}, SortMemInstCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTableType{}, SortKItem{}} (From:SortTableType{}))) [subsort{SortTableType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGValueCell{}, SortKItem{}} (From:SortGValueCell{}))) [subsort{SortGValueCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortInstr{}, SortStmt{}} (From:SortInstr{}))) [subsort{SortInstr{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefns{}, \equals{SortDefns{}, R} (Val:SortDefns{}, inj{SortEmptyStmts{}, SortDefns{}} (From:SortEmptyStmts{}))) [subsort{SortEmptyStmts{}, SortDefns{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEndianness{}, SortKItem{}} (From:SortEndianness{}))) [subsort{SortEndianness{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOptionalString{}, \equals{SortOptionalString{}, R} (Val:SortOptionalString{}, inj{SortString{}, SortOptionalString{}} (From:SortString{}))) [subsort{SortString{}, SortOptionalString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurFrameCellFragment{}, SortKItem{}} (From:SortCurFrameCellFragment{}))) [subsort{SortCurFrameCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabInstCell{}, SortKItem{}} (From:SortTabInstCell{}))) [subsort{SortTabInstCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalSpec{}, SortKItem{}} (From:SortGlobalSpec{}))) [subsort{SortGlobalSpec{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFAddrCellOpt{}, SortKItem{}} (From:SortFAddrCellOpt{}))) [subsort{SortFAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFuncsCellOpt{}, \equals{SortFuncsCellOpt{}, R} (Val:SortFuncsCellOpt{}, inj{SortFuncsCell{}, SortFuncsCellOpt{}} (From:SortFuncsCell{}))) [subsort{SortFuncsCell{}, SortFuncsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncIdsCellOpt{}, SortKItem{}} (From:SortFuncIdsCellOpt{}))) [subsort{SortFuncIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortTableDefn{}, SortDefn{}} (From:SortTableDefn{}))) [subsort{SortTableDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortValstackCellOpt{}, \equals{SortValstackCellOpt{}, R} (Val:SortValstackCellOpt{}, inj{SortValstackCell{}, SortValstackCellOpt{}} (From:SortValstackCell{}))) [subsort{SortValstackCell{}, SortValstackCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTabsCellOpt{}, \equals{SortTabsCellOpt{}, R} (Val:SortTabsCellOpt{}, inj{SortTabsCell{}, SortTabsCellOpt{}} (From:SortTabsCell{}))) [subsort{SortTabsCell{}, SortTabsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextGlobIdxCellOpt{}, \equals{SortNextGlobIdxCellOpt{}, R} (Val:SortNextGlobIdxCellOpt{}, inj{SortNextGlobIdxCell{}, SortNextGlobIdxCellOpt{}} (From:SortNextGlobIdxCell{}))) [subsort{SortNextGlobIdxCell{}, SortNextGlobIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVal{}, SortKItem{}} (From:SortVal{}))) [subsort{SortVal{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFuncDefCellMap{}, \equals{SortFuncDefCellMap{}, R} (Val:SortFuncDefCellMap{}, inj{SortFuncDefCell{}, SortFuncDefCellMap{}} (From:SortFuncDefCell{}))) [subsort{SortFuncDefCell{}, SortFuncDefCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemType{}, SortKItem{}} (From:SortMemType{}))) [subsort{SortMemType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOptionalString{}, SortKItem{}} (From:SortOptionalString{}))) [subsort{SortOptionalString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemAddrsCellOpt{}, \equals{SortMemAddrsCellOpt{}, R} (Val:SortMemAddrsCellOpt{}, inj{SortMemAddrsCell{}, SortMemAddrsCellOpt{}} (From:SortMemAddrsCell{}))) [subsort{SortMemAddrsCell{}, SortMemAddrsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTextFormatGlobalType{}, \equals{SortTextFormatGlobalType{}, R} (Val:SortTextFormatGlobalType{}, inj{SortValType{}, SortTextFormatGlobalType{}} (From:SortValType{}))) [subsort{SortValType{}, SortTextFormatGlobalType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalDecls{}, SortKItem{}} (From:SortLocalDecls{}))) [subsort{SortLocalDecls{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInt{}, SortKItem{}} (From:SortInt{}))) [subsort{SortInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalDefn{}, SortKItem{}} (From:SortGlobalDefn{}))) [subsort{SortGlobalDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMainStoreCellOpt{}, \equals{SortMainStoreCellOpt{}, R} (Val:SortMainStoreCellOpt{}, inj{SortMainStoreCell{}, SortMainStoreCellOpt{}} (From:SortMainStoreCell{}))) [subsort{SortMainStoreCell{}, SortMainStoreCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleMetadataCellOpt{}, SortKItem{}} (From:SortModuleMetadataCellOpt{}))) [subsort{SortModuleMetadataCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalAddrsCellOpt{}, SortKItem{}} (From:SortGlobalAddrsCellOpt{}))) [subsort{SortGlobalAddrsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (From:SortGeneratedTopCellFragment{}))) [subsort{SortGeneratedTopCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGMutCellOpt{}, \equals{SortGMutCellOpt{}, R} (Val:SortGMutCellOpt{}, inj{SortGMutCell{}, SortGMutCellOpt{}} (From:SortGMutCell{}))) [subsort{SortGMutCell{}, SortGMutCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLabel{}, SortKItem{}} (From:SortLabel{}))) [subsort{SortLabel{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypesInfo{}, SortKItem{}} (From:SortTypesInfo{}))) [subsort{SortTypesInfo{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, inj{SortPlainInstr{}, SortInstr{}} (From:SortPlainInstr{}))) [subsort{SortPlainInstr{}, SortInstr{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTableDefn{}, SortKItem{}} (From:SortTableDefn{}))) [subsort{SortTableDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFoldedInstr{}, SortKItem{}} (From:SortFoldedInstr{}))) [subsort{SortFoldedInstr{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncsCell{}, SortKItem{}} (From:SortFuncsCell{}))) [subsort{SortFuncsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModIdxCellOpt{}, SortKItem{}} (From:SortModIdxCellOpt{}))) [subsort{SortModIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFRelOp{}, SortKItem{}} (From:SortFRelOp{}))) [subsort{SortFRelOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBlockMetaData{}, SortKItem{}} (From:SortBlockMetaData{}))) [subsort{SortBlockMetaData{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMmaxCellOpt{}, \equals{SortMmaxCellOpt{}, R} (Val:SortMmaxCellOpt{}, inj{SortMmaxCell{}, SortMmaxCellOpt{}} (From:SortMmaxCell{}))) [subsort{SortMmaxCell{}, SortMmaxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextModuleIdxCellOpt{}, \equals{SortNextModuleIdxCellOpt{}, R} (Val:SortNextModuleIdxCellOpt{}, inj{SortNextModuleIdxCell{}, SortNextModuleIdxCellOpt{}} (From:SortNextModuleIdxCell{}))) [subsort{SortNextModuleIdxCell{}, SortNextModuleIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalsCell{}, SortKItem{}} (From:SortLocalsCell{}))) [subsort{SortLocalsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInstrs{}, SortKItem{}} (From:SortInstrs{}))) [subsort{SortInstrs{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAlloc{}, SortKItem{}} (From:SortAlloc{}))) [subsort{SortAlloc{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortWasmCellOpt{}, \equals{SortWasmCellOpt{}, R} (Val:SortWasmCellOpt{}, inj{SortWasmCell{}, SortWasmCellOpt{}} (From:SortWasmCell{}))) [subsort{SortWasmCell{}, SortWasmCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCvti64Op{}, SortKItem{}} (From:SortCvti64Op{}))) [subsort{SortCvti64Op{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTextLimits{}, \equals{SortTextLimits{}, R} (Val:SortTextLimits{}, inj{SortInt{}, SortTextLimits{}} (From:SortInt{}))) [subsort{SortInt{}, SortTextLimits{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFTypeCellOpt{}, SortKItem{}} (From:SortFTypeCellOpt{}))) [subsort{SortFTypeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncsCellOpt{}, SortKItem{}} (From:SortFuncsCellOpt{}))) [subsort{SortFuncsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortIVal{}, SortVal{}} (From:SortIVal{}))) [subsort{SortIVal{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStmt{}, SortKItem{}} (From:SortStmt{}))) [subsort{SortStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextMemAddrCell{}, SortKItem{}} (From:SortNextMemAddrCell{}))) [subsort{SortNextMemAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMainStoreCellFragment{}, SortKItem{}} (From:SortMainStoreCellFragment{}))) [subsort{SortMainStoreCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBlockMetaData{}, \equals{SortBlockMetaData{}, R} (Val:SortBlockMetaData{}, inj{SortOptionalInt{}, SortBlockMetaData{}} (From:SortOptionalInt{}))) [subsort{SortOptionalInt{}, SortBlockMetaData{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextGlobAddrCell{}, SortKItem{}} (From:SortNextGlobAddrCell{}))) [subsort{SortNextGlobAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemAddrsCell{}, SortKItem{}} (From:SortMemAddrsCell{}))) [subsort{SortMemAddrsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExportsCell{}, SortKItem{}} (From:SortExportsCell{}))) [subsort{SortExportsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMap{}, SortKItem{}} (From:SortMap{}))) [subsort{SortMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFTypeCell{}, SortKItem{}} (From:SortFTypeCell{}))) [subsort{SortFTypeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExportsCellOpt{}, SortKItem{}} (From:SortExportsCellOpt{}))) [subsort{SortExportsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTableSpec{}, SortKItem{}} (From:SortTableSpec{}))) [subsort{SortTableSpec{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstancesCell{}, SortKItem{}} (From:SortModuleInstancesCell{}))) [subsort{SortModuleInstancesCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmInt{}, SortKItem{}} (From:SortWasmInt{}))) [subsort{SortWasmInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortExportDefn{}, SortDefn{}} (From:SortExportDefn{}))) [subsort{SortExportDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTabInstCellMap{}, \equals{SortTabInstCellMap{}, R} (Val:SortTabInstCellMap{}, inj{SortTabInstCell{}, SortTabInstCellMap{}} (From:SortTabInstCell{}))) [subsort{SortTabInstCell{}, SortTabInstCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInstrs{}, \equals{SortInstrs{}, R} (Val:SortInstrs{}, inj{SortEmptyStmts{}, SortInstrs{}} (From:SortEmptyStmts{}))) [subsort{SortEmptyStmts{}, SortInstrs{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextFuncIdxCellOpt{}, SortKItem{}} (From:SortNextFuncIdxCellOpt{}))) [subsort{SortNextFuncIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGMutCellOpt{}, SortKItem{}} (From:SortGMutCellOpt{}))) [subsort{SortGMutCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMAddrCellOpt{}, \equals{SortMAddrCellOpt{}, R} (Val:SortMAddrCellOpt{}, inj{SortMAddrCell{}, SortMAddrCellOpt{}} (From:SortMAddrCell{}))) [subsort{SortMAddrCell{}, SortMAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInlineImport{}, SortKItem{}} (From:SortInlineImport{}))) [subsort{SortInlineImport{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModIdxCellOpt{}, \equals{SortModIdxCellOpt{}, R} (Val:SortModIdxCellOpt{}, inj{SortModIdxCell{}, SortModIdxCellOpt{}} (From:SortModIdxCell{}))) [subsort{SortModIdxCell{}, SortModIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextFuncAddrCellOpt{}, \equals{SortNextFuncAddrCellOpt{}, R} (Val:SortNextFuncAddrCellOpt{}, inj{SortNextFuncAddrCell{}, SortNextFuncAddrCellOpt{}} (From:SortNextFuncAddrCell{}))) [subsort{SortNextFuncAddrCell{}, SortNextFuncAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncDefCell{}, SortKItem{}} (From:SortFuncDefCell{}))) [subsort{SortFuncDefCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeIdsCell{}, SortKItem{}} (From:SortTypeIdsCell{}))) [subsort{SortTypeIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextTabAddrCellOpt{}, SortKItem{}} (From:SortNextTabAddrCellOpt{}))) [subsort{SortNextTabAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGlobalsCellOpt{}, \equals{SortGlobalsCellOpt{}, R} (Val:SortGlobalsCellOpt{}, inj{SortGlobalsCell{}, SortGlobalsCellOpt{}} (From:SortGlobalsCell{}))) [subsort{SortGlobalsCell{}, SortGlobalsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFModInstCell{}, SortKItem{}} (From:SortFModInstCell{}))) [subsort{SortFModInstCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortValStack{}, SortKItem{}} (From:SortValStack{}))) [subsort{SortValStack{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmString{}, SortKItem{}} (From:SortWasmString{}))) [subsort{SortWasmString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleDecl{}, SortKItem{}} (From:SortModuleDecl{}))) [subsort{SortModuleDecl{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCvtOp{}, \equals{SortCvtOp{}, R} (Val:SortCvtOp{}, inj{SortCvti64Op{}, SortCvtOp{}} (From:SortCvti64Op{}))) [subsort{SortCvti64Op{}, SortCvtOp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreOp{}, SortKItem{}} (From:SortStoreOp{}))) [subsort{SortStoreOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalsCellOpt{}, SortKItem{}} (From:SortLocalsCellOpt{}))) [subsort{SortLocalsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncMetadataCellOpt{}, SortKItem{}} (From:SortFuncMetadataCellOpt{}))) [subsort{SortFuncMetadataCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextModuleIdxCellOpt{}, SortKItem{}} (From:SortNextModuleIdxCellOpt{}))) [subsort{SortNextModuleIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIVal{}, \equals{SortIVal{}, R} (Val:SortIVal{}, Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(K0:SortIVal{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(K0:SortInt{}, K1:SortValStack{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleDecl{}, \equals{SortModuleDecl{}, R} (Val:SortModuleDecl{}, Lbl'Hash'emptyModule'LParUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId{}(K0:SortOptionalId{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortContext{}, \equals{SortContext{}, R} (Val:SortContext{}, Lbl'Hash'freshCtx'LParRParUnds'WASM-TEXT'Unds'Context{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdentifier{}, \equals{SortIdentifier{}, R} (Val:SortIdentifier{}, Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIdentifier{}} (\and{SortIdentifier{}} (Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(X0:SortInt{}), Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(Y0:SortInt{})), Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, Lbl'Hash'getBytesRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(K0:SortBytes{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'getOffset'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'MemArg{}(K0:SortMemArg{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(K0:SortBytes{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Hash'ids2Idxs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'TypeUse'Unds'LocalDecls{}(K0:SortTypeUse{}, K1:SortLocalDecls{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(K0:SortInt{}, K1:SortTypeUse{}, K2:SortLocalDecls{}))) [functional{}()] // functional
  axiom{R, SortSort} \exists{R} (Val:SortSort, \equals{SortSort, R} (Val:SortSort, Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(K0:SortBool{}, K1:SortSort, K2:SortSort))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Ints{}(K0:SortInt{}, K1:SortInt{}, K2:SortMap{}, K3:SortInts{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Ints{}(X0:SortInt{}, X1:SortInt{}, X2:SortMap{}, X3:SortInts{}), Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Ints{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortMap{}, Y3:SortInts{})), Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Ints{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortMap{}} (X2:SortMap{}, Y2:SortMap{}), \and{SortInts{}} (X3:SortInts{}, Y3:SortInts{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(K0:SortInt{}, K1:SortValStack{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(Y0:SortInt{}, Y1:SortValStack{})), Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortValStack{}} (X1:SortValStack{}, Y1:SortValStack{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Y0:SortIValType{}, Y1:SortStoreOp{}, Y2:SortInt{}, Y3:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), LblaBlock{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), LblaBr{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), LblaBr'Unds'if{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), LblaBr'Unds'table{}(Y0:SortInts{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), LblaCall{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), LblaCall'Unds'indirect{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), LblaGlobal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), LblaGlobal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), LblaIf{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortInstrs{}, Y3:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), LblaLoad{}(Y0:SortValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), LblaLocal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), LblaLocal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), LblaLocal'Stop'tee{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(K0:SortIValType{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'Hash'parseWasmString'LParUndsRParUnds'WASM-DATA-COMMON-SYNTAX'Unds'String'Unds'WasmStringToken{}(K0:SortWasmStringToken{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(K0:SortIValType{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(K0:SortIValType{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'Hash'revs'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack{}(K0:SortValStack{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(K0:SortValStack{}, K1:SortValStack{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValTypes{}, \equals{SortValTypes{}, R} (Val:SortValTypes{}, Lbl'Hash'revt'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(K0:SortValTypes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValTypes{}, \equals{SortValTypes{}, R} (Val:SortValTypes{}, Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(K0:SortValTypes{}, K1:SortValTypes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, Lbl'Hash'setBytesRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Bytes{}(K0:SortBytes{}, K1:SortInt{}, K2:SortBytes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int'Unds'Int{}(K0:SortBytes{}, K1:SortInt{}, K2:SortInt{}, K3:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(K0:SortInt{}, K1:SortValStack{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTypesInfo{}, \equals{SortTypesInfo{}, R} (Val:SortTypesInfo{}, Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(K0:SortMap{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortTypesInfo{}} (\and{SortTypesInfo{}} (Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(X0:SortMap{}, X1:SortInt{}), Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(Y0:SortMap{}, Y1:SortInt{})), Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortContext{}, \equals{SortContext{}, R} (Val:SortContext{}, Lbl'Hash'updateFuncIds'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map{}(K0:SortContext{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortContext{}, \equals{SortContext{}, R} (Val:SortContext{}, Lbl'Hash'updateFuncIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(K0:SortContext{}, K1:SortMap{}, K2:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortContext{}, \equals{SortContext{}, R} (Val:SortContext{}, Lbl'Hash'updateLocalIds'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map{}(K0:SortContext{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortContext{}, \equals{SortContext{}, R} (Val:SortContext{}, Lbl'Hash'updateLocalIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(K0:SortContext{}, K1:SortMap{}, K2:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(K0:SortIValType{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(K0:SortValTypes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LParUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr{}(K0:SortPlainInstr{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LParUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr{}(Y0:SortPlainInstr{})), Lbl'LParUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr{}(\and{SortPlainInstr{}} (X0:SortPlainInstr{}, Y0:SortPlainInstr{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LParUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(Y0:SortPlainInstr{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}, Y4:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LParUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(K0:SortPlainInstr{}, K1:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}), Lbl'LParUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(Y0:SortPlainInstr{}, Y1:SortInstrs{})), Lbl'LParUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(\and{SortPlainInstr{}} (X0:SortPlainInstr{}, Y0:SortPlainInstr{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}), Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}, Y4:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}), Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{})), Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}, Y4:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMemorySpec{}, \equals{SortMemorySpec{}, R} (Val:SortMemorySpec{}, Lbl'LPar'data'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'DataString{}(K0:SortDataString{}))) [functional{}()] // functional
  axiom{}\implies{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'LPar'data'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'DataString{}(X0:SortDataString{}), Lbl'LPar'data'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'DataString{}(Y0:SortDataString{})), Lbl'LPar'data'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'DataString{}(\and{SortDataString{}} (X0:SortDataString{}, Y0:SortDataString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'LPar'data'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'DataString{}(X0:SortDataString{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(Y0:SortInlineExport{}, Y1:SortMemorySpec{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'LPar'data'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'DataString{}(X0:SortDataString{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(Y0:SortInlineImport{}, Y1:SortMemType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortDataDefn{}, \equals{SortDataDefn{}, R} (Val:SortDataDefn{}, Lbl'LPar'data'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Offset'Unds'DataString{}(K0:SortOffset{}, K1:SortDataString{}))) [functional{}()] // functional
  axiom{}\implies{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Offset'Unds'DataString{}(X0:SortOffset{}, X1:SortDataString{}), Lbl'LPar'data'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Offset'Unds'DataString{}(Y0:SortOffset{}, Y1:SortDataString{})), Lbl'LPar'data'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Offset'Unds'DataString{}(\and{SortOffset{}} (X0:SortOffset{}, Y0:SortOffset{}), \and{SortDataString{}} (X1:SortDataString{}, Y1:SortDataString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Offset'Unds'DataString{}(X0:SortOffset{}, X1:SortDataString{}), Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(Y0:SortIndex{}, Y1:SortOffset{}, Y2:SortDataString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Offset'Unds'DataString{}(X0:SortOffset{}, X1:SortDataString{}), LblaDataDefn{}(Y0:SortInt{}, Y1:SortInstrs{}, Y2:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Offset'Unds'DataString{}(X0:SortOffset{}, X1:SortDataString{}), Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Int'Unds'Bytes{}(Y0:SortInt{}, Y1:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortDataDefn{}, \equals{SortDataDefn{}, R} (Val:SortDataDefn{}, Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(K0:SortIndex{}, K1:SortOffset{}, K2:SortDataString{}))) [functional{}()] // functional
  axiom{}\implies{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortDataString{}), Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(Y0:SortIndex{}, Y1:SortOffset{}, Y2:SortDataString{})), Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}), \and{SortOffset{}} (X1:SortOffset{}, Y1:SortOffset{}), \and{SortDataString{}} (X2:SortDataString{}, Y2:SortDataString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortDataString{}), LblaDataDefn{}(Y0:SortInt{}, Y1:SortInstrs{}, Y2:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortDataString{}), Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Int'Unds'Bytes{}(Y0:SortInt{}, Y1:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortElemDefn{}, \equals{SortElemDefn{}, R} (Val:SortElemDefn{}, Lbl'LPar'elem'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(K0:SortOffset{}, K1:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}), Lbl'LPar'elem'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(Y0:SortOffset{}, Y1:SortElemSegment{})), Lbl'LPar'elem'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(\and{SortOffset{}} (X0:SortOffset{}, Y0:SortOffset{}), \and{SortElemSegment{}} (X1:SortElemSegment{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}), Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortOffset{}, Y2:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}), Lbl'LPar'elem'Unds'func'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(Y0:SortOffset{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}), LblaElemDefn{}(Y0:SortInt{}, Y1:SortInstrs{}, Y2:SortInts{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}), Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Int'Unds'Ints{}(Y0:SortInt{}, Y1:SortInts{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortElemDefn{}, \equals{SortElemDefn{}, R} (Val:SortElemDefn{}, Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(K0:SortIndex{}, K1:SortOffset{}, K2:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortElemSegment{}), Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortOffset{}, Y2:SortElemSegment{})), Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}), \and{SortOffset{}} (X1:SortOffset{}, Y1:SortOffset{}), \and{SortElemSegment{}} (X2:SortElemSegment{}, Y2:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortElemSegment{}), Lbl'LPar'elem'Unds'func'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(Y0:SortOffset{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortElemSegment{}), LblaElemDefn{}(Y0:SortInt{}, Y1:SortInstrs{}, Y2:SortInts{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortElemSegment{}), Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Int'Unds'Ints{}(Y0:SortInt{}, Y1:SortInts{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortElemDefn{}, \equals{SortElemDefn{}, R} (Val:SortElemDefn{}, Lbl'LPar'elem'Unds'func'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(K0:SortOffset{}, K1:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'Unds'func'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}), Lbl'LPar'elem'Unds'func'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(Y0:SortOffset{}, Y1:SortElemSegment{})), Lbl'LPar'elem'Unds'func'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(\and{SortOffset{}} (X0:SortOffset{}, Y0:SortOffset{}), \and{SortElemSegment{}} (X1:SortElemSegment{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'Unds'func'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}), LblaElemDefn{}(Y0:SortInt{}, Y1:SortInstrs{}, Y2:SortInts{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'Unds'func'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}), Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Int'Unds'Ints{}(Y0:SortInt{}, Y1:SortInts{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExportDefn{}, \equals{SortExportDefn{}, R} (Val:SortExportDefn{}, Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(K0:SortWasmString{}, K1:SortExternval{}))) [functional{}()] // functional
  axiom{}\implies{SortExportDefn{}} (\and{SortExportDefn{}} (Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(X0:SortWasmString{}, X1:SortExternval{}), Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(Y0:SortWasmString{}, Y1:SortExternval{})), Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}), \and{SortExternval{}} (X1:SortExternval{}, Y1:SortExternval{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExportDefn{}} (\and{SortExportDefn{}} (Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(X0:SortWasmString{}, X1:SortExternval{}), LblaExportDefn{}(Y0:SortWasmString{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInlineExport{}, \equals{SortInlineExport{}, R} (Val:SortInlineExport{}, Lbl'LPar'export'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineExport'Unds'WasmString{}(K0:SortWasmString{}))) [functional{}()] // functional
  axiom{}\implies{SortInlineExport{}} (\and{SortInlineExport{}} (Lbl'LPar'export'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineExport'Unds'WasmString{}(X0:SortWasmString{}), Lbl'LPar'export'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineExport'Unds'WasmString{}(Y0:SortWasmString{})), Lbl'LPar'export'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineExport'Unds'WasmString{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncDefn{}, \equals{SortFuncDefn{}, R} (Val:SortFuncDefn{}, Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(K0:SortOptionalId{}, K1:SortFuncSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncDefn{}} (\and{SortFuncDefn{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(X0:SortOptionalId{}, X1:SortFuncSpec{}), Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Y0:SortOptionalId{}, Y1:SortFuncSpec{})), Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortFuncSpec{}} (X1:SortFuncSpec{}, Y1:SortFuncSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFuncDefn{}} (\and{SortFuncDefn{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(X0:SortOptionalId{}, X1:SortFuncSpec{}), LblaFuncDefn{}(Y0:SortInt{}, Y1:SortVecType{}, Y2:SortInstrs{}, Y3:SortFuncMetadata{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortImportDesc{}, \equals{SortImportDesc{}, R} (Val:SortImportDesc{}, Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(K0:SortOptionalId{}, K1:SortTypeUse{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}), Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(Y0:SortOptionalId{}, Y1:SortTypeUse{})), Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeUse{}} (X1:SortTypeUse{}, Y1:SortTypeUse{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}), Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(Y0:SortOptionalId{}, Y1:SortTextFormatGlobalType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}), Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(Y0:SortOptionalId{}, Y1:SortMemType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}), Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(Y0:SortOptionalId{}, Y1:SortTableType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}), LblaFuncDesc{}(Y0:SortOptionalId{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}), LblaGlobalDesc{}(Y0:SortOptionalId{}, Y1:SortGlobalType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}), LblaMemoryDesc{}(Y0:SortOptionalId{}, Y1:SortLimits{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}), LblaTableDesc{}(Y0:SortOptionalId{}, Y1:SortLimits{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortGlobalDefn{}, \equals{SortGlobalDefn{}, R} (Val:SortGlobalDefn{}, Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(K0:SortOptionalId{}, K1:SortGlobalSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalDefn{}} (\and{SortGlobalDefn{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(X0:SortOptionalId{}, X1:SortGlobalSpec{}), Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(Y0:SortOptionalId{}, Y1:SortGlobalSpec{})), Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortGlobalSpec{}} (X1:SortGlobalSpec{}, Y1:SortGlobalSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortGlobalDefn{}} (\and{SortGlobalDefn{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(X0:SortOptionalId{}, X1:SortGlobalSpec{}), LblaGlobalDefn{}(Y0:SortGlobalType{}, Y1:SortInstrs{}, Y2:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortImportDesc{}, \equals{SortImportDesc{}, R} (Val:SortImportDesc{}, Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(K0:SortOptionalId{}, K1:SortTextFormatGlobalType{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(X0:SortOptionalId{}, X1:SortTextFormatGlobalType{}), Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(Y0:SortOptionalId{}, Y1:SortTextFormatGlobalType{})), Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTextFormatGlobalType{}} (X1:SortTextFormatGlobalType{}, Y1:SortTextFormatGlobalType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(X0:SortOptionalId{}, X1:SortTextFormatGlobalType{}), Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(Y0:SortOptionalId{}, Y1:SortMemType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(X0:SortOptionalId{}, X1:SortTextFormatGlobalType{}), Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(Y0:SortOptionalId{}, Y1:SortTableType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(X0:SortOptionalId{}, X1:SortTextFormatGlobalType{}), LblaFuncDesc{}(Y0:SortOptionalId{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(X0:SortOptionalId{}, X1:SortTextFormatGlobalType{}), LblaGlobalDesc{}(Y0:SortOptionalId{}, Y1:SortGlobalType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(X0:SortOptionalId{}, X1:SortTextFormatGlobalType{}), LblaMemoryDesc{}(Y0:SortOptionalId{}, Y1:SortLimits{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(X0:SortOptionalId{}, X1:SortTextFormatGlobalType{}), LblaTableDesc{}(Y0:SortOptionalId{}, Y1:SortLimits{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortInstrs{}, K4:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}, X4:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}, Y4:SortInstrs{})), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortInstrs{}} (X3:SortInstrs{}, Y3:SortInstrs{}), \and{SortInstrs{}} (X4:SortInstrs{}, Y4:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}, X4:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}, X4:SortInstrs{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{})), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortInstrs{}} (X3:SortInstrs{}, Y3:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInlineImport{}, \equals{SortInlineImport{}, R} (Val:SortInlineImport{}, Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(K0:SortWasmString{}, K1:SortWasmString{}))) [functional{}()] // functional
  axiom{}\implies{SortInlineImport{}} (\and{SortInlineImport{}} (Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(X0:SortWasmString{}, X1:SortWasmString{}), Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(Y0:SortWasmString{}, Y1:SortWasmString{})), Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}), \and{SortWasmString{}} (X1:SortWasmString{}, Y1:SortWasmString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortImportDefn{}, \equals{SortImportDefn{}, R} (Val:SortImportDefn{}, Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(K0:SortWasmString{}, K1:SortWasmString{}, K2:SortImportDesc{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDefn{}} (\and{SortImportDefn{}} (Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(X0:SortWasmString{}, X1:SortWasmString{}, X2:SortImportDesc{}), Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Y0:SortWasmString{}, Y1:SortWasmString{}, Y2:SortImportDesc{})), Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}), \and{SortWasmString{}} (X1:SortWasmString{}, Y1:SortWasmString{}), \and{SortImportDesc{}} (X2:SortImportDesc{}, Y2:SortImportDesc{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortImportDefn{}} (\and{SortImportDefn{}} (Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(X0:SortWasmString{}, X1:SortWasmString{}, X2:SortImportDesc{}), LblaImportDefn{}(Y0:SortWasmString{}, Y1:SortWasmString{}, Y2:SortImportDesc{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{})), Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Y0:SortIValType{}, Y1:SortStoreOp{}, Y2:SortInt{}, Y3:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), LblaBlock{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), LblaBr{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), LblaBr'Unds'if{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), LblaBr'Unds'table{}(Y0:SortInts{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), LblaCall{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), LblaCall'Unds'indirect{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), LblaGlobal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), LblaGlobal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), LblaIf{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortInstrs{}, Y3:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), LblaLoad{}(Y0:SortValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), LblaLocal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), LblaLocal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), LblaLocal'Stop'tee{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{})), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortImportDesc{}, \equals{SortImportDesc{}, R} (Val:SortImportDesc{}, Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(K0:SortOptionalId{}, K1:SortMemType{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(X0:SortOptionalId{}, X1:SortMemType{}), Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(Y0:SortOptionalId{}, Y1:SortMemType{})), Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortMemType{}} (X1:SortMemType{}, Y1:SortMemType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(X0:SortOptionalId{}, X1:SortMemType{}), Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(Y0:SortOptionalId{}, Y1:SortTableType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(X0:SortOptionalId{}, X1:SortMemType{}), LblaFuncDesc{}(Y0:SortOptionalId{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(X0:SortOptionalId{}, X1:SortMemType{}), LblaGlobalDesc{}(Y0:SortOptionalId{}, Y1:SortGlobalType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(X0:SortOptionalId{}, X1:SortMemType{}), LblaMemoryDesc{}(Y0:SortOptionalId{}, Y1:SortLimits{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(X0:SortOptionalId{}, X1:SortMemType{}), LblaTableDesc{}(Y0:SortOptionalId{}, Y1:SortLimits{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMemoryDefn{}, \equals{SortMemoryDefn{}, R} (Val:SortMemoryDefn{}, Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(K0:SortOptionalId{}, K1:SortMemorySpec{}))) [functional{}()] // functional
  axiom{}\implies{SortMemoryDefn{}} (\and{SortMemoryDefn{}} (Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(X0:SortOptionalId{}, X1:SortMemorySpec{}), Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(Y0:SortOptionalId{}, Y1:SortMemorySpec{})), Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortMemorySpec{}} (X1:SortMemorySpec{}, Y1:SortMemorySpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortMemoryDefn{}} (\and{SortMemoryDefn{}} (Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(X0:SortOptionalId{}, X1:SortMemorySpec{}), LblaMemoryDefn{}(Y0:SortLimits{}, Y1:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortModuleDecl{}, \equals{SortModuleDecl{}, R} (Val:SortModuleDecl{}, Lbl'LPar'module'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(K0:SortOptionalId{}, K1:SortDefns{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleDecl{}} (\and{SortModuleDecl{}} (Lbl'LPar'module'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(X0:SortOptionalId{}, X1:SortDefns{}), Lbl'LPar'module'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(Y0:SortOptionalId{}, Y1:SortDefns{})), Lbl'LPar'module'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortDefns{}} (X1:SortDefns{}, Y1:SortDefns{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortModuleDecl{}} (\and{SortModuleDecl{}} (Lbl'LPar'module'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(X0:SortOptionalId{}, X1:SortDefns{}), LblaModuleDecl{}(Y0:SortDefns{}, Y1:SortDefns{}, Y2:SortDefns{}, Y3:SortDefns{}, Y4:SortDefns{}, Y5:SortDefns{}, Y6:SortDefns{}, Y7:SortDefns{}, Y8:SortDefns{}, Y9:SortDefns{}, Y10:SortModuleMetadata{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTextFormatGlobalType{}, \equals{SortTextFormatGlobalType{}, R} (Val:SortTextFormatGlobalType{}, Lbl'LPar'mut'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TextFormatGlobalType'Unds'ValType{}(K0:SortValType{}))) [functional{}()] // functional
  axiom{}\implies{SortTextFormatGlobalType{}} (\and{SortTextFormatGlobalType{}} (Lbl'LPar'mut'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TextFormatGlobalType'Unds'ValType{}(X0:SortValType{}), Lbl'LPar'mut'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TextFormatGlobalType'Unds'ValType{}(Y0:SortValType{})), Lbl'LPar'mut'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TextFormatGlobalType'Unds'ValType{}(\and{SortValType{}} (X0:SortValType{}, Y0:SortValType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortOffset{}, \equals{SortOffset{}, R} (Val:SortOffset{}, Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(K0:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortOffset{}} (\and{SortOffset{}} (Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(X0:SortInstrs{}), Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(Y0:SortInstrs{})), Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(\and{SortInstrs{}} (X0:SortInstrs{}, Y0:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStartDefn{}, \equals{SortStartDefn{}, R} (Val:SortStartDefn{}, Lbl'LPar'start'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StartDefn'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortStartDefn{}} (\and{SortStartDefn{}} (Lbl'LPar'start'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StartDefn'Unds'Index{}(X0:SortIndex{}), Lbl'LPar'start'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StartDefn'Unds'Index{}(Y0:SortIndex{})), Lbl'LPar'start'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StartDefn'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStartDefn{}} (\and{SortStartDefn{}} (Lbl'LPar'start'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StartDefn'Unds'Index{}(X0:SortIndex{}), LblaStartDefn{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortImportDesc{}, \equals{SortImportDesc{}, R} (Val:SortImportDesc{}, Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(K0:SortOptionalId{}, K1:SortTableType{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(X0:SortOptionalId{}, X1:SortTableType{}), Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(Y0:SortOptionalId{}, Y1:SortTableType{})), Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTableType{}} (X1:SortTableType{}, Y1:SortTableType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(X0:SortOptionalId{}, X1:SortTableType{}), LblaFuncDesc{}(Y0:SortOptionalId{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(X0:SortOptionalId{}, X1:SortTableType{}), LblaGlobalDesc{}(Y0:SortOptionalId{}, Y1:SortGlobalType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(X0:SortOptionalId{}, X1:SortTableType{}), LblaMemoryDesc{}(Y0:SortOptionalId{}, Y1:SortLimits{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(X0:SortOptionalId{}, X1:SortTableType{}), LblaTableDesc{}(Y0:SortOptionalId{}, Y1:SortLimits{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTableDefn{}, \equals{SortTableDefn{}, R} (Val:SortTableDefn{}, Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(K0:SortOptionalId{}, K1:SortTableSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortTableDefn{}} (\and{SortTableDefn{}} (Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(X0:SortOptionalId{}, X1:SortTableSpec{}), Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(Y0:SortOptionalId{}, Y1:SortTableSpec{})), Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTableSpec{}} (X1:SortTableSpec{}, Y1:SortTableSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortTableDefn{}} (\and{SortTableDefn{}} (Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(X0:SortOptionalId{}, X1:SortTableSpec{}), LblaTableDefn{}(Y0:SortLimits{}, Y1:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeDefn{}, \equals{SortTypeDefn{}, R} (Val:SortTypeDefn{}, Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(K0:SortOptionalId{}, K1:SortTypeDecls{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeDefn{}} (\and{SortTypeDefn{}} (Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(X0:SortOptionalId{}, X1:SortTypeDecls{}), Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{})), Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortTypeDefn{}} (\and{SortTypeDefn{}} (Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(X0:SortOptionalId{}, X1:SortTypeDecls{}), LblaTypeDefn{}(Y0:SortFuncType{}, Y1:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeUse{}, \equals{SortTypeUse{}, R} (Val:SortTypeUse{}, Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeUse{}} (\and{SortTypeUse{}} (Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(X0:SortIndex{}), Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(Y0:SortIndex{})), Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortTypeUse{}} (\and{SortTypeUse{}} (Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(X0:SortIndex{}), Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(Y0:SortIndex{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeUse{}, \equals{SortTypeUse{}, R} (Val:SortTypeUse{}, Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(K0:SortIndex{}, K1:SortTypeDecls{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeUse{}} (\and{SortTypeUse{}} (Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(X0:SortIndex{}, X1:SortTypeDecls{}), Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(Y0:SortIndex{}, Y1:SortTypeDecls{})), Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, Lbl--Float'UndsUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, Lbl'Stop'Bytes'Unds'BYTES-HOOKED'Unds'Bytes{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOptionalId{}, \equals{SortOptionalId{}, R} (Val:SortOptionalId{}, Lbl'Stop'Identifier{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOptionalInt{}, \equals{SortOptionalInt{}, R} (Val:SortOptionalInt{}, Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Stop'List{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDefns{}, \equals{SortDefns{}, R} (Val:SortDefns{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}())) [functional{}()] // functional
  axiom{}\not{SortDefns{}} (\and{SortDefns{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}(), Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(Y0:SortDefn{}, Y1:SortDefns{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstrs{}, \equals{SortInstrs{}, R} (Val:SortInstrs{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}())) [functional{}()] // functional
  axiom{}\not{SortInstrs{}} (\and{SortInstrs{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}(), Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(Y0:SortInstr{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmts{}, \equals{SortStmts{}, R} (Val:SortStmts{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}())) [functional{}()] // functional
  axiom{}\not{SortStmts{}} (\and{SortStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(Y0:SortStmt{}, Y1:SortStmts{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeDecls{}, \equals{SortTypeDecls{}, R} (Val:SortTypeDecls{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}())) [functional{}()] // functional
  axiom{}\not{SortTypeDecls{}} (\and{SortTypeDecls{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}(), Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Y0:SortTypeDecl{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortDataString{}, \equals{SortDataString{}, R} (Val:SortDataString{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'DataString'Unds'WasmString'Unds'DataString'QuotRBraUnds'DataString{}())) [functional{}()] // functional
  axiom{}\not{SortDataString{}} (\and{SortDataString{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'DataString'Unds'WasmString'Unds'DataString'QuotRBraUnds'DataString{}(), Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'DataString'Unds'WasmString'Unds'DataString{}(Y0:SortWasmString{}, Y1:SortDataString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortElemSegment{}, \equals{SortElemSegment{}, R} (Val:SortElemSegment{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}())) [functional{}()] // functional
  axiom{}\not{SortElemSegment{}} (\and{SortElemSegment{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}(), Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLocalDecls{}, \equals{SortLocalDecls{}, R} (Val:SortLocalDecls{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}())) [functional{}()] // functional
  axiom{}\not{SortLocalDecls{}} (\and{SortLocalDecls{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}(), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Y0:SortLocalDecl{}, Y1:SortLocalDecls{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInts{}, \equals{SortInts{}, R} (Val:SortInts{}, Lbl'Stop'List'LBraQuot'listInt'QuotRBraUnds'Ints{}())) [functional{}()] // functional
  axiom{}\not{SortInts{}} (\and{SortInts{}} (Lbl'Stop'List'LBraQuot'listInt'QuotRBraUnds'Ints{}(), LbllistInt{}(Y0:SortInt{}, Y1:SortInts{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortEmptyStmts{}, \equals{SortEmptyStmts{}, R} (Val:SortEmptyStmts{}, Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())) [functional{}()] // functional
  axiom{}\not{SortEmptyStmts{}} (\and{SortEmptyStmts{}} (Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}(), LbllistStmt{}(Y0:SortEmptyStmt{}, Y1:SortEmptyStmts{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortValTypes{}, \equals{SortValTypes{}, R} (Val:SortValTypes{}, Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}())) [functional{}()] // functional
  axiom{}\not{SortValTypes{}} (\and{SortValTypes{}} (Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}(), LbllistValTypes{}(Y0:SortValType{}, Y1:SortValTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Stop'Map{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMut{}, \equals{SortMut{}, R} (Val:SortMut{}, Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}())) [functional{}()] // functional
  axiom{}\not{SortMut{}} (\and{SortMut{}} (Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}(), LblmutConst{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortMut{}} (\and{SortMut{}} (Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}(), LblmutVar{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Stop'Set{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOptionalString{}, \equals{SortOptionalString{}, R} (Val:SortOptionalString{}, Lbl'Stop'String{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lbl'Stop'Type'Unds'WASM-DATA'Unds'Type{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}())) [functional{}()] // functional
  axiom{}\not{SortValStack{}} (\and{SortValStack{}} (Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}(), Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Y0:SortVal{}, Y1:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortWasmString{}, \equals{SortWasmString{}, R} (Val:SortWasmString{}, Lbl'Stop'WasmString'Unds'WASM-DATA-COMMON-SYNTAX'Unds'WasmString{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFVal{}, \equals{SortFVal{}, R} (Val:SortFVal{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(K0:SortFValType{}, K1:SortFloat{}))) [functional{}()] // functional
  axiom{}\implies{SortFVal{}} (\and{SortFVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(X0:SortFValType{}, X1:SortFloat{}), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(Y0:SortFValType{}, Y1:SortFloat{})), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortFloat{}} (X1:SortFloat{}, Y1:SortFloat{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIVal{}, \equals{SortIVal{}, R} (Val:SortIVal{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(K0:SortIValType{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIVal{}} (\and{SortIVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{})), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(K0:SortValType{}, K1:SortNumber{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(X0:SortValType{}, X1:SortNumber{}), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(Y0:SortValType{}, Y1:SortNumber{})), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(\and{SortValType{}} (X0:SortValType{}, Y0:SortValType{}), \and{SortNumber{}} (X1:SortNumber{}, Y1:SortNumber{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(X0:SortValType{}, X1:SortNumber{}), Lblundefined'Unds'WASM-DATA'Unds'Val{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCurFrameCell{}, \equals{SortCurFrameCell{}, R} (Val:SortCurFrameCell{}, Lbl'-LT-'curFrame'-GT-'{}(K0:SortLocalsCell{}, K1:SortCurModIdxCell{}))) [functional{}()] // functional
  axiom{}\implies{SortCurFrameCell{}} (\and{SortCurFrameCell{}} (Lbl'-LT-'curFrame'-GT-'{}(X0:SortLocalsCell{}, X1:SortCurModIdxCell{}), Lbl'-LT-'curFrame'-GT-'{}(Y0:SortLocalsCell{}, Y1:SortCurModIdxCell{})), Lbl'-LT-'curFrame'-GT-'{}(\and{SortLocalsCell{}} (X0:SortLocalsCell{}, Y0:SortLocalsCell{}), \and{SortCurModIdxCell{}} (X1:SortCurModIdxCell{}, Y1:SortCurModIdxCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCurFrameCellFragment{}, \equals{SortCurFrameCellFragment{}, R} (Val:SortCurFrameCellFragment{}, Lbl'-LT-'curFrame'-GT-'-fragment{}(K0:SortLocalsCellOpt{}, K1:SortCurModIdxCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortCurFrameCellFragment{}} (\and{SortCurFrameCellFragment{}} (Lbl'-LT-'curFrame'-GT-'-fragment{}(X0:SortLocalsCellOpt{}, X1:SortCurModIdxCellOpt{}), Lbl'-LT-'curFrame'-GT-'-fragment{}(Y0:SortLocalsCellOpt{}, Y1:SortCurModIdxCellOpt{})), Lbl'-LT-'curFrame'-GT-'-fragment{}(\and{SortLocalsCellOpt{}} (X0:SortLocalsCellOpt{}, Y0:SortLocalsCellOpt{}), \and{SortCurModIdxCellOpt{}} (X1:SortCurModIdxCellOpt{}, Y1:SortCurModIdxCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCurModIdxCell{}, \equals{SortCurModIdxCell{}, R} (Val:SortCurModIdxCell{}, Lbl'-LT-'curModIdx'-GT-'{}(K0:SortOptionalInt{}))) [functional{}()] // functional
  axiom{}\implies{SortCurModIdxCell{}} (\and{SortCurModIdxCell{}} (Lbl'-LT-'curModIdx'-GT-'{}(X0:SortOptionalInt{}), Lbl'-LT-'curModIdx'-GT-'{}(Y0:SortOptionalInt{})), Lbl'-LT-'curModIdx'-GT-'{}(\and{SortOptionalInt{}} (X0:SortOptionalInt{}, Y0:SortOptionalInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortDeterministicMemoryGrowthCell{}, \equals{SortDeterministicMemoryGrowthCell{}, R} (Val:SortDeterministicMemoryGrowthCell{}, Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{}\implies{SortDeterministicMemoryGrowthCell{}} (\and{SortDeterministicMemoryGrowthCell{}} (Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(X0:SortBool{}), Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(Y0:SortBool{})), Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(\and{SortBool{}} (X0:SortBool{}, Y0:SortBool{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExportsCell{}, \equals{SortExportsCell{}, R} (Val:SortExportsCell{}, Lbl'-LT-'exports'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortExportsCell{}} (\and{SortExportsCell{}} (Lbl'-LT-'exports'-GT-'{}(X0:SortMap{}), Lbl'-LT-'exports'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'exports'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFAddrCell{}, \equals{SortFAddrCell{}, R} (Val:SortFAddrCell{}, Lbl'-LT-'fAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortFAddrCell{}} (\and{SortFAddrCell{}} (Lbl'-LT-'fAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'fAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'fAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFCodeCell{}, \equals{SortFCodeCell{}, R} (Val:SortFCodeCell{}, Lbl'-LT-'fCode'-GT-'{}(K0:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFCodeCell{}} (\and{SortFCodeCell{}} (Lbl'-LT-'fCode'-GT-'{}(X0:SortInstrs{}), Lbl'-LT-'fCode'-GT-'{}(Y0:SortInstrs{})), Lbl'-LT-'fCode'-GT-'{}(\and{SortInstrs{}} (X0:SortInstrs{}, Y0:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFLocalCell{}, \equals{SortFLocalCell{}, R} (Val:SortFLocalCell{}, Lbl'-LT-'fLocal'-GT-'{}(K0:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortFLocalCell{}} (\and{SortFLocalCell{}} (Lbl'-LT-'fLocal'-GT-'{}(X0:SortType{}), Lbl'-LT-'fLocal'-GT-'{}(Y0:SortType{})), Lbl'-LT-'fLocal'-GT-'{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFModInstCell{}, \equals{SortFModInstCell{}, R} (Val:SortFModInstCell{}, Lbl'-LT-'fModInst'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortFModInstCell{}} (\and{SortFModInstCell{}} (Lbl'-LT-'fModInst'-GT-'{}(X0:SortInt{}), Lbl'-LT-'fModInst'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'fModInst'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFTypeCell{}, \equals{SortFTypeCell{}, R} (Val:SortFTypeCell{}, Lbl'-LT-'fType'-GT-'{}(K0:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortFTypeCell{}} (\and{SortFTypeCell{}} (Lbl'-LT-'fType'-GT-'{}(X0:SortType{}), Lbl'-LT-'fType'-GT-'{}(Y0:SortType{})), Lbl'-LT-'fType'-GT-'{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncAddrsCell{}, \equals{SortFuncAddrsCell{}, R} (Val:SortFuncAddrsCell{}, Lbl'-LT-'funcAddrs'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncAddrsCell{}} (\and{SortFuncAddrsCell{}} (Lbl'-LT-'funcAddrs'-GT-'{}(X0:SortMap{}), Lbl'-LT-'funcAddrs'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'funcAddrs'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncDefCell{}, \equals{SortFuncDefCell{}, R} (Val:SortFuncDefCell{}, Lbl'-LT-'funcDef'-GT-'{}(K0:SortFAddrCell{}, K1:SortFCodeCell{}, K2:SortFTypeCell{}, K3:SortFLocalCell{}, K4:SortFModInstCell{}, K5:SortFuncMetadataCell{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncDefCell{}} (\and{SortFuncDefCell{}} (Lbl'-LT-'funcDef'-GT-'{}(X0:SortFAddrCell{}, X1:SortFCodeCell{}, X2:SortFTypeCell{}, X3:SortFLocalCell{}, X4:SortFModInstCell{}, X5:SortFuncMetadataCell{}), Lbl'-LT-'funcDef'-GT-'{}(Y0:SortFAddrCell{}, Y1:SortFCodeCell{}, Y2:SortFTypeCell{}, Y3:SortFLocalCell{}, Y4:SortFModInstCell{}, Y5:SortFuncMetadataCell{})), Lbl'-LT-'funcDef'-GT-'{}(\and{SortFAddrCell{}} (X0:SortFAddrCell{}, Y0:SortFAddrCell{}), \and{SortFCodeCell{}} (X1:SortFCodeCell{}, Y1:SortFCodeCell{}), \and{SortFTypeCell{}} (X2:SortFTypeCell{}, Y2:SortFTypeCell{}), \and{SortFLocalCell{}} (X3:SortFLocalCell{}, Y3:SortFLocalCell{}), \and{SortFModInstCell{}} (X4:SortFModInstCell{}, Y4:SortFModInstCell{}), \and{SortFuncMetadataCell{}} (X5:SortFuncMetadataCell{}, Y5:SortFuncMetadataCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncDefCellFragment{}, \equals{SortFuncDefCellFragment{}, R} (Val:SortFuncDefCellFragment{}, Lbl'-LT-'funcDef'-GT-'-fragment{}(K0:SortFAddrCellOpt{}, K1:SortFCodeCellOpt{}, K2:SortFTypeCellOpt{}, K3:SortFLocalCellOpt{}, K4:SortFModInstCellOpt{}, K5:SortFuncMetadataCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncDefCellFragment{}} (\and{SortFuncDefCellFragment{}} (Lbl'-LT-'funcDef'-GT-'-fragment{}(X0:SortFAddrCellOpt{}, X1:SortFCodeCellOpt{}, X2:SortFTypeCellOpt{}, X3:SortFLocalCellOpt{}, X4:SortFModInstCellOpt{}, X5:SortFuncMetadataCellOpt{}), Lbl'-LT-'funcDef'-GT-'-fragment{}(Y0:SortFAddrCellOpt{}, Y1:SortFCodeCellOpt{}, Y2:SortFTypeCellOpt{}, Y3:SortFLocalCellOpt{}, Y4:SortFModInstCellOpt{}, Y5:SortFuncMetadataCellOpt{})), Lbl'-LT-'funcDef'-GT-'-fragment{}(\and{SortFAddrCellOpt{}} (X0:SortFAddrCellOpt{}, Y0:SortFAddrCellOpt{}), \and{SortFCodeCellOpt{}} (X1:SortFCodeCellOpt{}, Y1:SortFCodeCellOpt{}), \and{SortFTypeCellOpt{}} (X2:SortFTypeCellOpt{}, Y2:SortFTypeCellOpt{}), \and{SortFLocalCellOpt{}} (X3:SortFLocalCellOpt{}, Y3:SortFLocalCellOpt{}), \and{SortFModInstCellOpt{}} (X4:SortFModInstCellOpt{}, Y4:SortFModInstCellOpt{}), \and{SortFuncMetadataCellOpt{}} (X5:SortFuncMetadataCellOpt{}, Y5:SortFuncMetadataCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncIdCell{}, \equals{SortFuncIdCell{}, R} (Val:SortFuncIdCell{}, Lbl'-LT-'funcId'-GT-'{}(K0:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncIdCell{}} (\and{SortFuncIdCell{}} (Lbl'-LT-'funcId'-GT-'{}(X0:SortOptionalId{}), Lbl'-LT-'funcId'-GT-'{}(Y0:SortOptionalId{})), Lbl'-LT-'funcId'-GT-'{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncIdsCell{}, \equals{SortFuncIdsCell{}, R} (Val:SortFuncIdsCell{}, Lbl'-LT-'funcIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncIdsCell{}} (\and{SortFuncIdsCell{}} (Lbl'-LT-'funcIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'funcIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'funcIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncMetadataCell{}, \equals{SortFuncMetadataCell{}, R} (Val:SortFuncMetadataCell{}, Lbl'-LT-'funcMetadata'-GT-'{}(K0:SortFuncIdCell{}, K1:SortLocalIdsCell{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncMetadataCell{}} (\and{SortFuncMetadataCell{}} (Lbl'-LT-'funcMetadata'-GT-'{}(X0:SortFuncIdCell{}, X1:SortLocalIdsCell{}), Lbl'-LT-'funcMetadata'-GT-'{}(Y0:SortFuncIdCell{}, Y1:SortLocalIdsCell{})), Lbl'-LT-'funcMetadata'-GT-'{}(\and{SortFuncIdCell{}} (X0:SortFuncIdCell{}, Y0:SortFuncIdCell{}), \and{SortLocalIdsCell{}} (X1:SortLocalIdsCell{}, Y1:SortLocalIdsCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncMetadataCellFragment{}, \equals{SortFuncMetadataCellFragment{}, R} (Val:SortFuncMetadataCellFragment{}, Lbl'-LT-'funcMetadata'-GT-'-fragment{}(K0:SortFuncIdCellOpt{}, K1:SortLocalIdsCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncMetadataCellFragment{}} (\and{SortFuncMetadataCellFragment{}} (Lbl'-LT-'funcMetadata'-GT-'-fragment{}(X0:SortFuncIdCellOpt{}, X1:SortLocalIdsCellOpt{}), Lbl'-LT-'funcMetadata'-GT-'-fragment{}(Y0:SortFuncIdCellOpt{}, Y1:SortLocalIdsCellOpt{})), Lbl'-LT-'funcMetadata'-GT-'-fragment{}(\and{SortFuncIdCellOpt{}} (X0:SortFuncIdCellOpt{}, Y0:SortFuncIdCellOpt{}), \and{SortLocalIdsCellOpt{}} (X1:SortLocalIdsCellOpt{}, Y1:SortLocalIdsCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncsCell{}, \equals{SortFuncsCell{}, R} (Val:SortFuncsCell{}, Lbl'-LT-'funcs'-GT-'{}(K0:SortFuncDefCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncsCell{}} (\and{SortFuncsCell{}} (Lbl'-LT-'funcs'-GT-'{}(X0:SortFuncDefCellMap{}), Lbl'-LT-'funcs'-GT-'{}(Y0:SortFuncDefCellMap{})), Lbl'-LT-'funcs'-GT-'{}(\and{SortFuncDefCellMap{}} (X0:SortFuncDefCellMap{}, Y0:SortFuncDefCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncsCellFragment{}, \equals{SortFuncsCellFragment{}, R} (Val:SortFuncsCellFragment{}, Lbl'-LT-'funcs'-GT-'-fragment{}(K0:SortFuncDefCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncsCellFragment{}} (\and{SortFuncsCellFragment{}} (Lbl'-LT-'funcs'-GT-'-fragment{}(X0:SortFuncDefCellMap{}), Lbl'-LT-'funcs'-GT-'-fragment{}(Y0:SortFuncDefCellMap{})), Lbl'-LT-'funcs'-GT-'-fragment{}(\and{SortFuncDefCellMap{}} (X0:SortFuncDefCellMap{}, Y0:SortFuncDefCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGAddrCell{}, \equals{SortGAddrCell{}, R} (Val:SortGAddrCell{}, Lbl'-LT-'gAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGAddrCell{}} (\and{SortGAddrCell{}} (Lbl'-LT-'gAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'gAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'gAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGMutCell{}, \equals{SortGMutCell{}, R} (Val:SortGMutCell{}, Lbl'-LT-'gMut'-GT-'{}(K0:SortMut{}))) [functional{}()] // functional
  axiom{}\implies{SortGMutCell{}} (\and{SortGMutCell{}} (Lbl'-LT-'gMut'-GT-'{}(X0:SortMut{}), Lbl'-LT-'gMut'-GT-'{}(Y0:SortMut{})), Lbl'-LT-'gMut'-GT-'{}(\and{SortMut{}} (X0:SortMut{}, Y0:SortMut{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGValueCell{}, \equals{SortGValueCell{}, R} (Val:SortGValueCell{}, Lbl'-LT-'gValue'-GT-'{}(K0:SortVal{}))) [functional{}()] // functional
  axiom{}\implies{SortGValueCell{}} (\and{SortGValueCell{}} (Lbl'-LT-'gValue'-GT-'{}(X0:SortVal{}), Lbl'-LT-'gValue'-GT-'{}(Y0:SortVal{})), Lbl'-LT-'gValue'-GT-'{}(\and{SortVal{}} (X0:SortVal{}, Y0:SortVal{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedCounterCell{}} (\and{SortGeneratedCounterCell{}} (Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{}), Lbl'-LT-'generatedCounter'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'generatedCounter'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R} (Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortWasmCell{}, K1:SortGeneratedCounterCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCell{}} (\and{SortGeneratedTopCell{}} (Lbl'-LT-'generatedTop'-GT-'{}(X0:SortWasmCell{}, X1:SortGeneratedCounterCell{}), Lbl'-LT-'generatedTop'-GT-'{}(Y0:SortWasmCell{}, Y1:SortGeneratedCounterCell{})), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortWasmCell{}} (X0:SortWasmCell{}, Y0:SortWasmCell{}), \and{SortGeneratedCounterCell{}} (X1:SortGeneratedCounterCell{}, Y1:SortGeneratedCounterCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R} (Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortWasmCellOpt{}, K1:SortGeneratedCounterCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCellFragment{}} (\and{SortGeneratedTopCellFragment{}} (Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortWasmCellOpt{}, X1:SortGeneratedCounterCellOpt{}), Lbl'-LT-'generatedTop'-GT-'-fragment{}(Y0:SortWasmCellOpt{}, Y1:SortGeneratedCounterCellOpt{})), Lbl'-LT-'generatedTop'-GT-'-fragment{}(\and{SortWasmCellOpt{}} (X0:SortWasmCellOpt{}, Y0:SortWasmCellOpt{}), \and{SortGeneratedCounterCellOpt{}} (X1:SortGeneratedCounterCellOpt{}, Y1:SortGeneratedCounterCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobIdsCell{}, \equals{SortGlobIdsCell{}, R} (Val:SortGlobIdsCell{}, Lbl'-LT-'globIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobIdsCell{}} (\and{SortGlobIdsCell{}} (Lbl'-LT-'globIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'globIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'globIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalAddrsCell{}, \equals{SortGlobalAddrsCell{}, R} (Val:SortGlobalAddrsCell{}, Lbl'-LT-'globalAddrs'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalAddrsCell{}} (\and{SortGlobalAddrsCell{}} (Lbl'-LT-'globalAddrs'-GT-'{}(X0:SortMap{}), Lbl'-LT-'globalAddrs'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'globalAddrs'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalInstCell{}, \equals{SortGlobalInstCell{}, R} (Val:SortGlobalInstCell{}, Lbl'-LT-'globalInst'-GT-'{}(K0:SortGAddrCell{}, K1:SortGValueCell{}, K2:SortGMutCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalInstCell{}} (\and{SortGlobalInstCell{}} (Lbl'-LT-'globalInst'-GT-'{}(X0:SortGAddrCell{}, X1:SortGValueCell{}, X2:SortGMutCell{}), Lbl'-LT-'globalInst'-GT-'{}(Y0:SortGAddrCell{}, Y1:SortGValueCell{}, Y2:SortGMutCell{})), Lbl'-LT-'globalInst'-GT-'{}(\and{SortGAddrCell{}} (X0:SortGAddrCell{}, Y0:SortGAddrCell{}), \and{SortGValueCell{}} (X1:SortGValueCell{}, Y1:SortGValueCell{}), \and{SortGMutCell{}} (X2:SortGMutCell{}, Y2:SortGMutCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalInstCellFragment{}, \equals{SortGlobalInstCellFragment{}, R} (Val:SortGlobalInstCellFragment{}, Lbl'-LT-'globalInst'-GT-'-fragment{}(K0:SortGAddrCellOpt{}, K1:SortGValueCellOpt{}, K2:SortGMutCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalInstCellFragment{}} (\and{SortGlobalInstCellFragment{}} (Lbl'-LT-'globalInst'-GT-'-fragment{}(X0:SortGAddrCellOpt{}, X1:SortGValueCellOpt{}, X2:SortGMutCellOpt{}), Lbl'-LT-'globalInst'-GT-'-fragment{}(Y0:SortGAddrCellOpt{}, Y1:SortGValueCellOpt{}, Y2:SortGMutCellOpt{})), Lbl'-LT-'globalInst'-GT-'-fragment{}(\and{SortGAddrCellOpt{}} (X0:SortGAddrCellOpt{}, Y0:SortGAddrCellOpt{}), \and{SortGValueCellOpt{}} (X1:SortGValueCellOpt{}, Y1:SortGValueCellOpt{}), \and{SortGMutCellOpt{}} (X2:SortGMutCellOpt{}, Y2:SortGMutCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalsCell{}, \equals{SortGlobalsCell{}, R} (Val:SortGlobalsCell{}, Lbl'-LT-'globals'-GT-'{}(K0:SortGlobalInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalsCell{}} (\and{SortGlobalsCell{}} (Lbl'-LT-'globals'-GT-'{}(X0:SortGlobalInstCellMap{}), Lbl'-LT-'globals'-GT-'{}(Y0:SortGlobalInstCellMap{})), Lbl'-LT-'globals'-GT-'{}(\and{SortGlobalInstCellMap{}} (X0:SortGlobalInstCellMap{}, Y0:SortGlobalInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalsCellFragment{}, \equals{SortGlobalsCellFragment{}, R} (Val:SortGlobalsCellFragment{}, Lbl'-LT-'globals'-GT-'-fragment{}(K0:SortGlobalInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalsCellFragment{}} (\and{SortGlobalsCellFragment{}} (Lbl'-LT-'globals'-GT-'-fragment{}(X0:SortGlobalInstCellMap{}), Lbl'-LT-'globals'-GT-'-fragment{}(Y0:SortGlobalInstCellMap{})), Lbl'-LT-'globals'-GT-'-fragment{}(\and{SortGlobalInstCellMap{}} (X0:SortGlobalInstCellMap{}, Y0:SortGlobalInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInstrsCell{}, \equals{SortInstrsCell{}, R} (Val:SortInstrsCell{}, Lbl'-LT-'instrs'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortInstrsCell{}} (\and{SortInstrsCell{}} (Lbl'-LT-'instrs'-GT-'{}(X0:SortK{}), Lbl'-LT-'instrs'-GT-'{}(Y0:SortK{})), Lbl'-LT-'instrs'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLocalIdsCell{}, \equals{SortLocalIdsCell{}, R} (Val:SortLocalIdsCell{}, Lbl'-LT-'localIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortLocalIdsCell{}} (\and{SortLocalIdsCell{}} (Lbl'-LT-'localIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'localIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'localIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLocalsCell{}, \equals{SortLocalsCell{}, R} (Val:SortLocalsCell{}, Lbl'-LT-'locals'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortLocalsCell{}} (\and{SortLocalsCell{}} (Lbl'-LT-'locals'-GT-'{}(X0:SortMap{}), Lbl'-LT-'locals'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'locals'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMAddrCell{}, \equals{SortMAddrCell{}, R} (Val:SortMAddrCell{}, Lbl'-LT-'mAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortMAddrCell{}} (\and{SortMAddrCell{}} (Lbl'-LT-'mAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'mAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'mAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMainStoreCell{}, \equals{SortMainStoreCell{}, R} (Val:SortMainStoreCell{}, Lbl'-LT-'mainStore'-GT-'{}(K0:SortFuncsCell{}, K1:SortNextFuncAddrCell{}, K2:SortTabsCell{}, K3:SortNextTabAddrCell{}, K4:SortMemsCell{}, K5:SortNextMemAddrCell{}, K6:SortGlobalsCell{}, K7:SortNextGlobAddrCell{}))) [functional{}()] // functional
  axiom{}\implies{SortMainStoreCell{}} (\and{SortMainStoreCell{}} (Lbl'-LT-'mainStore'-GT-'{}(X0:SortFuncsCell{}, X1:SortNextFuncAddrCell{}, X2:SortTabsCell{}, X3:SortNextTabAddrCell{}, X4:SortMemsCell{}, X5:SortNextMemAddrCell{}, X6:SortGlobalsCell{}, X7:SortNextGlobAddrCell{}), Lbl'-LT-'mainStore'-GT-'{}(Y0:SortFuncsCell{}, Y1:SortNextFuncAddrCell{}, Y2:SortTabsCell{}, Y3:SortNextTabAddrCell{}, Y4:SortMemsCell{}, Y5:SortNextMemAddrCell{}, Y6:SortGlobalsCell{}, Y7:SortNextGlobAddrCell{})), Lbl'-LT-'mainStore'-GT-'{}(\and{SortFuncsCell{}} (X0:SortFuncsCell{}, Y0:SortFuncsCell{}), \and{SortNextFuncAddrCell{}} (X1:SortNextFuncAddrCell{}, Y1:SortNextFuncAddrCell{}), \and{SortTabsCell{}} (X2:SortTabsCell{}, Y2:SortTabsCell{}), \and{SortNextTabAddrCell{}} (X3:SortNextTabAddrCell{}, Y3:SortNextTabAddrCell{}), \and{SortMemsCell{}} (X4:SortMemsCell{}, Y4:SortMemsCell{}), \and{SortNextMemAddrCell{}} (X5:SortNextMemAddrCell{}, Y5:SortNextMemAddrCell{}), \and{SortGlobalsCell{}} (X6:SortGlobalsCell{}, Y6:SortGlobalsCell{}), \and{SortNextGlobAddrCell{}} (X7:SortNextGlobAddrCell{}, Y7:SortNextGlobAddrCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMainStoreCellFragment{}, \equals{SortMainStoreCellFragment{}, R} (Val:SortMainStoreCellFragment{}, Lbl'-LT-'mainStore'-GT-'-fragment{}(K0:SortFuncsCellOpt{}, K1:SortNextFuncAddrCellOpt{}, K2:SortTabsCellOpt{}, K3:SortNextTabAddrCellOpt{}, K4:SortMemsCellOpt{}, K5:SortNextMemAddrCellOpt{}, K6:SortGlobalsCellOpt{}, K7:SortNextGlobAddrCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortMainStoreCellFragment{}} (\and{SortMainStoreCellFragment{}} (Lbl'-LT-'mainStore'-GT-'-fragment{}(X0:SortFuncsCellOpt{}, X1:SortNextFuncAddrCellOpt{}, X2:SortTabsCellOpt{}, X3:SortNextTabAddrCellOpt{}, X4:SortMemsCellOpt{}, X5:SortNextMemAddrCellOpt{}, X6:SortGlobalsCellOpt{}, X7:SortNextGlobAddrCellOpt{}), Lbl'-LT-'mainStore'-GT-'-fragment{}(Y0:SortFuncsCellOpt{}, Y1:SortNextFuncAddrCellOpt{}, Y2:SortTabsCellOpt{}, Y3:SortNextTabAddrCellOpt{}, Y4:SortMemsCellOpt{}, Y5:SortNextMemAddrCellOpt{}, Y6:SortGlobalsCellOpt{}, Y7:SortNextGlobAddrCellOpt{})), Lbl'-LT-'mainStore'-GT-'-fragment{}(\and{SortFuncsCellOpt{}} (X0:SortFuncsCellOpt{}, Y0:SortFuncsCellOpt{}), \and{SortNextFuncAddrCellOpt{}} (X1:SortNextFuncAddrCellOpt{}, Y1:SortNextFuncAddrCellOpt{}), \and{SortTabsCellOpt{}} (X2:SortTabsCellOpt{}, Y2:SortTabsCellOpt{}), \and{SortNextTabAddrCellOpt{}} (X3:SortNextTabAddrCellOpt{}, Y3:SortNextTabAddrCellOpt{}), \and{SortMemsCellOpt{}} (X4:SortMemsCellOpt{}, Y4:SortMemsCellOpt{}), \and{SortNextMemAddrCellOpt{}} (X5:SortNextMemAddrCellOpt{}, Y5:SortNextMemAddrCellOpt{}), \and{SortGlobalsCellOpt{}} (X6:SortGlobalsCellOpt{}, Y6:SortGlobalsCellOpt{}), \and{SortNextGlobAddrCellOpt{}} (X7:SortNextGlobAddrCellOpt{}, Y7:SortNextGlobAddrCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMdataCell{}, \equals{SortMdataCell{}, R} (Val:SortMdataCell{}, Lbl'-LT-'mdata'-GT-'{}(K0:SortBytes{}))) [functional{}()] // functional
  axiom{}\implies{SortMdataCell{}} (\and{SortMdataCell{}} (Lbl'-LT-'mdata'-GT-'{}(X0:SortBytes{}), Lbl'-LT-'mdata'-GT-'{}(Y0:SortBytes{})), Lbl'-LT-'mdata'-GT-'{}(\and{SortBytes{}} (X0:SortBytes{}, Y0:SortBytes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemAddrsCell{}, \equals{SortMemAddrsCell{}, R} (Val:SortMemAddrsCell{}, Lbl'-LT-'memAddrs'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortMemAddrsCell{}} (\and{SortMemAddrsCell{}} (Lbl'-LT-'memAddrs'-GT-'{}(X0:SortMap{}), Lbl'-LT-'memAddrs'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'memAddrs'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemIdsCell{}, \equals{SortMemIdsCell{}, R} (Val:SortMemIdsCell{}, Lbl'-LT-'memIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortMemIdsCell{}} (\and{SortMemIdsCell{}} (Lbl'-LT-'memIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'memIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'memIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemInstCell{}, \equals{SortMemInstCell{}, R} (Val:SortMemInstCell{}, Lbl'-LT-'memInst'-GT-'{}(K0:SortMAddrCell{}, K1:SortMmaxCell{}, K2:SortMsizeCell{}, K3:SortMdataCell{}))) [functional{}()] // functional
  axiom{}\implies{SortMemInstCell{}} (\and{SortMemInstCell{}} (Lbl'-LT-'memInst'-GT-'{}(X0:SortMAddrCell{}, X1:SortMmaxCell{}, X2:SortMsizeCell{}, X3:SortMdataCell{}), Lbl'-LT-'memInst'-GT-'{}(Y0:SortMAddrCell{}, Y1:SortMmaxCell{}, Y2:SortMsizeCell{}, Y3:SortMdataCell{})), Lbl'-LT-'memInst'-GT-'{}(\and{SortMAddrCell{}} (X0:SortMAddrCell{}, Y0:SortMAddrCell{}), \and{SortMmaxCell{}} (X1:SortMmaxCell{}, Y1:SortMmaxCell{}), \and{SortMsizeCell{}} (X2:SortMsizeCell{}, Y2:SortMsizeCell{}), \and{SortMdataCell{}} (X3:SortMdataCell{}, Y3:SortMdataCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemInstCellFragment{}, \equals{SortMemInstCellFragment{}, R} (Val:SortMemInstCellFragment{}, Lbl'-LT-'memInst'-GT-'-fragment{}(K0:SortMAddrCellOpt{}, K1:SortMmaxCellOpt{}, K2:SortMsizeCellOpt{}, K3:SortMdataCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortMemInstCellFragment{}} (\and{SortMemInstCellFragment{}} (Lbl'-LT-'memInst'-GT-'-fragment{}(X0:SortMAddrCellOpt{}, X1:SortMmaxCellOpt{}, X2:SortMsizeCellOpt{}, X3:SortMdataCellOpt{}), Lbl'-LT-'memInst'-GT-'-fragment{}(Y0:SortMAddrCellOpt{}, Y1:SortMmaxCellOpt{}, Y2:SortMsizeCellOpt{}, Y3:SortMdataCellOpt{})), Lbl'-LT-'memInst'-GT-'-fragment{}(\and{SortMAddrCellOpt{}} (X0:SortMAddrCellOpt{}, Y0:SortMAddrCellOpt{}), \and{SortMmaxCellOpt{}} (X1:SortMmaxCellOpt{}, Y1:SortMmaxCellOpt{}), \and{SortMsizeCellOpt{}} (X2:SortMsizeCellOpt{}, Y2:SortMsizeCellOpt{}), \and{SortMdataCellOpt{}} (X3:SortMdataCellOpt{}, Y3:SortMdataCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemsCell{}, \equals{SortMemsCell{}, R} (Val:SortMemsCell{}, Lbl'-LT-'mems'-GT-'{}(K0:SortMemInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortMemsCell{}} (\and{SortMemsCell{}} (Lbl'-LT-'mems'-GT-'{}(X0:SortMemInstCellMap{}), Lbl'-LT-'mems'-GT-'{}(Y0:SortMemInstCellMap{})), Lbl'-LT-'mems'-GT-'{}(\and{SortMemInstCellMap{}} (X0:SortMemInstCellMap{}, Y0:SortMemInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemsCellFragment{}, \equals{SortMemsCellFragment{}, R} (Val:SortMemsCellFragment{}, Lbl'-LT-'mems'-GT-'-fragment{}(K0:SortMemInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortMemsCellFragment{}} (\and{SortMemsCellFragment{}} (Lbl'-LT-'mems'-GT-'-fragment{}(X0:SortMemInstCellMap{}), Lbl'-LT-'mems'-GT-'-fragment{}(Y0:SortMemInstCellMap{})), Lbl'-LT-'mems'-GT-'-fragment{}(\and{SortMemInstCellMap{}} (X0:SortMemInstCellMap{}, Y0:SortMemInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMmaxCell{}, \equals{SortMmaxCell{}, R} (Val:SortMmaxCell{}, Lbl'-LT-'mmax'-GT-'{}(K0:SortOptionalInt{}))) [functional{}()] // functional
  axiom{}\implies{SortMmaxCell{}} (\and{SortMmaxCell{}} (Lbl'-LT-'mmax'-GT-'{}(X0:SortOptionalInt{}), Lbl'-LT-'mmax'-GT-'{}(Y0:SortOptionalInt{})), Lbl'-LT-'mmax'-GT-'{}(\and{SortOptionalInt{}} (X0:SortOptionalInt{}, Y0:SortOptionalInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModIdxCell{}, \equals{SortModIdxCell{}, R} (Val:SortModIdxCell{}, Lbl'-LT-'modIdx'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortModIdxCell{}} (\and{SortModIdxCell{}} (Lbl'-LT-'modIdx'-GT-'{}(X0:SortInt{}), Lbl'-LT-'modIdx'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'modIdx'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleFileNameCell{}, \equals{SortModuleFileNameCell{}, R} (Val:SortModuleFileNameCell{}, Lbl'-LT-'moduleFileName'-GT-'{}(K0:SortOptionalString{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleFileNameCell{}} (\and{SortModuleFileNameCell{}} (Lbl'-LT-'moduleFileName'-GT-'{}(X0:SortOptionalString{}), Lbl'-LT-'moduleFileName'-GT-'{}(Y0:SortOptionalString{})), Lbl'-LT-'moduleFileName'-GT-'{}(\and{SortOptionalString{}} (X0:SortOptionalString{}, Y0:SortOptionalString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleIdCell{}, \equals{SortModuleIdCell{}, R} (Val:SortModuleIdCell{}, Lbl'-LT-'moduleId'-GT-'{}(K0:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleIdCell{}} (\and{SortModuleIdCell{}} (Lbl'-LT-'moduleId'-GT-'{}(X0:SortOptionalId{}), Lbl'-LT-'moduleId'-GT-'{}(Y0:SortOptionalId{})), Lbl'-LT-'moduleId'-GT-'{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleIdsCell{}, \equals{SortModuleIdsCell{}, R} (Val:SortModuleIdsCell{}, Lbl'-LT-'moduleIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleIdsCell{}} (\and{SortModuleIdsCell{}} (Lbl'-LT-'moduleIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'moduleIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'moduleIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleInstCell{}, \equals{SortModuleInstCell{}, R} (Val:SortModuleInstCell{}, Lbl'-LT-'moduleInst'-GT-'{}(K0:SortModIdxCell{}, K1:SortExportsCell{}, K2:SortTypesCell{}, K3:SortNextTypeIdxCell{}, K4:SortFuncAddrsCell{}, K5:SortNextFuncIdxCell{}, K6:SortTabIdsCell{}, K7:SortTabAddrsCell{}, K8:SortMemIdsCell{}, K9:SortMemAddrsCell{}, K10:SortGlobIdsCell{}, K11:SortGlobalAddrsCell{}, K12:SortNextGlobIdxCell{}, K13:SortModuleMetadataCell{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleInstCell{}} (\and{SortModuleInstCell{}} (Lbl'-LT-'moduleInst'-GT-'{}(X0:SortModIdxCell{}, X1:SortExportsCell{}, X2:SortTypesCell{}, X3:SortNextTypeIdxCell{}, X4:SortFuncAddrsCell{}, X5:SortNextFuncIdxCell{}, X6:SortTabIdsCell{}, X7:SortTabAddrsCell{}, X8:SortMemIdsCell{}, X9:SortMemAddrsCell{}, X10:SortGlobIdsCell{}, X11:SortGlobalAddrsCell{}, X12:SortNextGlobIdxCell{}, X13:SortModuleMetadataCell{}), Lbl'-LT-'moduleInst'-GT-'{}(Y0:SortModIdxCell{}, Y1:SortExportsCell{}, Y2:SortTypesCell{}, Y3:SortNextTypeIdxCell{}, Y4:SortFuncAddrsCell{}, Y5:SortNextFuncIdxCell{}, Y6:SortTabIdsCell{}, Y7:SortTabAddrsCell{}, Y8:SortMemIdsCell{}, Y9:SortMemAddrsCell{}, Y10:SortGlobIdsCell{}, Y11:SortGlobalAddrsCell{}, Y12:SortNextGlobIdxCell{}, Y13:SortModuleMetadataCell{})), Lbl'-LT-'moduleInst'-GT-'{}(\and{SortModIdxCell{}} (X0:SortModIdxCell{}, Y0:SortModIdxCell{}), \and{SortExportsCell{}} (X1:SortExportsCell{}, Y1:SortExportsCell{}), \and{SortTypesCell{}} (X2:SortTypesCell{}, Y2:SortTypesCell{}), \and{SortNextTypeIdxCell{}} (X3:SortNextTypeIdxCell{}, Y3:SortNextTypeIdxCell{}), \and{SortFuncAddrsCell{}} (X4:SortFuncAddrsCell{}, Y4:SortFuncAddrsCell{}), \and{SortNextFuncIdxCell{}} (X5:SortNextFuncIdxCell{}, Y5:SortNextFuncIdxCell{}), \and{SortTabIdsCell{}} (X6:SortTabIdsCell{}, Y6:SortTabIdsCell{}), \and{SortTabAddrsCell{}} (X7:SortTabAddrsCell{}, Y7:SortTabAddrsCell{}), \and{SortMemIdsCell{}} (X8:SortMemIdsCell{}, Y8:SortMemIdsCell{}), \and{SortMemAddrsCell{}} (X9:SortMemAddrsCell{}, Y9:SortMemAddrsCell{}), \and{SortGlobIdsCell{}} (X10:SortGlobIdsCell{}, Y10:SortGlobIdsCell{}), \and{SortGlobalAddrsCell{}} (X11:SortGlobalAddrsCell{}, Y11:SortGlobalAddrsCell{}), \and{SortNextGlobIdxCell{}} (X12:SortNextGlobIdxCell{}, Y12:SortNextGlobIdxCell{}), \and{SortModuleMetadataCell{}} (X13:SortModuleMetadataCell{}, Y13:SortModuleMetadataCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleInstCellFragment{}, \equals{SortModuleInstCellFragment{}, R} (Val:SortModuleInstCellFragment{}, Lbl'-LT-'moduleInst'-GT-'-fragment{}(K0:SortModIdxCellOpt{}, K1:SortExportsCellOpt{}, K2:SortTypesCellOpt{}, K3:SortNextTypeIdxCellOpt{}, K4:SortFuncAddrsCellOpt{}, K5:SortNextFuncIdxCellOpt{}, K6:SortTabIdsCellOpt{}, K7:SortTabAddrsCellOpt{}, K8:SortMemIdsCellOpt{}, K9:SortMemAddrsCellOpt{}, K10:SortGlobIdsCellOpt{}, K11:SortGlobalAddrsCellOpt{}, K12:SortNextGlobIdxCellOpt{}, K13:SortModuleMetadataCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleInstCellFragment{}} (\and{SortModuleInstCellFragment{}} (Lbl'-LT-'moduleInst'-GT-'-fragment{}(X0:SortModIdxCellOpt{}, X1:SortExportsCellOpt{}, X2:SortTypesCellOpt{}, X3:SortNextTypeIdxCellOpt{}, X4:SortFuncAddrsCellOpt{}, X5:SortNextFuncIdxCellOpt{}, X6:SortTabIdsCellOpt{}, X7:SortTabAddrsCellOpt{}, X8:SortMemIdsCellOpt{}, X9:SortMemAddrsCellOpt{}, X10:SortGlobIdsCellOpt{}, X11:SortGlobalAddrsCellOpt{}, X12:SortNextGlobIdxCellOpt{}, X13:SortModuleMetadataCellOpt{}), Lbl'-LT-'moduleInst'-GT-'-fragment{}(Y0:SortModIdxCellOpt{}, Y1:SortExportsCellOpt{}, Y2:SortTypesCellOpt{}, Y3:SortNextTypeIdxCellOpt{}, Y4:SortFuncAddrsCellOpt{}, Y5:SortNextFuncIdxCellOpt{}, Y6:SortTabIdsCellOpt{}, Y7:SortTabAddrsCellOpt{}, Y8:SortMemIdsCellOpt{}, Y9:SortMemAddrsCellOpt{}, Y10:SortGlobIdsCellOpt{}, Y11:SortGlobalAddrsCellOpt{}, Y12:SortNextGlobIdxCellOpt{}, Y13:SortModuleMetadataCellOpt{})), Lbl'-LT-'moduleInst'-GT-'-fragment{}(\and{SortModIdxCellOpt{}} (X0:SortModIdxCellOpt{}, Y0:SortModIdxCellOpt{}), \and{SortExportsCellOpt{}} (X1:SortExportsCellOpt{}, Y1:SortExportsCellOpt{}), \and{SortTypesCellOpt{}} (X2:SortTypesCellOpt{}, Y2:SortTypesCellOpt{}), \and{SortNextTypeIdxCellOpt{}} (X3:SortNextTypeIdxCellOpt{}, Y3:SortNextTypeIdxCellOpt{}), \and{SortFuncAddrsCellOpt{}} (X4:SortFuncAddrsCellOpt{}, Y4:SortFuncAddrsCellOpt{}), \and{SortNextFuncIdxCellOpt{}} (X5:SortNextFuncIdxCellOpt{}, Y5:SortNextFuncIdxCellOpt{}), \and{SortTabIdsCellOpt{}} (X6:SortTabIdsCellOpt{}, Y6:SortTabIdsCellOpt{}), \and{SortTabAddrsCellOpt{}} (X7:SortTabAddrsCellOpt{}, Y7:SortTabAddrsCellOpt{}), \and{SortMemIdsCellOpt{}} (X8:SortMemIdsCellOpt{}, Y8:SortMemIdsCellOpt{}), \and{SortMemAddrsCellOpt{}} (X9:SortMemAddrsCellOpt{}, Y9:SortMemAddrsCellOpt{}), \and{SortGlobIdsCellOpt{}} (X10:SortGlobIdsCellOpt{}, Y10:SortGlobIdsCellOpt{}), \and{SortGlobalAddrsCellOpt{}} (X11:SortGlobalAddrsCellOpt{}, Y11:SortGlobalAddrsCellOpt{}), \and{SortNextGlobIdxCellOpt{}} (X12:SortNextGlobIdxCellOpt{}, Y12:SortNextGlobIdxCellOpt{}), \and{SortModuleMetadataCellOpt{}} (X13:SortModuleMetadataCellOpt{}, Y13:SortModuleMetadataCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleInstancesCell{}, \equals{SortModuleInstancesCell{}, R} (Val:SortModuleInstancesCell{}, Lbl'-LT-'moduleInstances'-GT-'{}(K0:SortModuleInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleInstancesCell{}} (\and{SortModuleInstancesCell{}} (Lbl'-LT-'moduleInstances'-GT-'{}(X0:SortModuleInstCellMap{}), Lbl'-LT-'moduleInstances'-GT-'{}(Y0:SortModuleInstCellMap{})), Lbl'-LT-'moduleInstances'-GT-'{}(\and{SortModuleInstCellMap{}} (X0:SortModuleInstCellMap{}, Y0:SortModuleInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleInstancesCellFragment{}, \equals{SortModuleInstancesCellFragment{}, R} (Val:SortModuleInstancesCellFragment{}, Lbl'-LT-'moduleInstances'-GT-'-fragment{}(K0:SortModuleInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleInstancesCellFragment{}} (\and{SortModuleInstancesCellFragment{}} (Lbl'-LT-'moduleInstances'-GT-'-fragment{}(X0:SortModuleInstCellMap{}), Lbl'-LT-'moduleInstances'-GT-'-fragment{}(Y0:SortModuleInstCellMap{})), Lbl'-LT-'moduleInstances'-GT-'-fragment{}(\and{SortModuleInstCellMap{}} (X0:SortModuleInstCellMap{}, Y0:SortModuleInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleMetadataCell{}, \equals{SortModuleMetadataCell{}, R} (Val:SortModuleMetadataCell{}, Lbl'-LT-'moduleMetadata'-GT-'{}(K0:SortModuleFileNameCell{}, K1:SortModuleIdCell{}, K2:SortFuncIdsCell{}, K3:SortTypeIdsCell{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleMetadataCell{}} (\and{SortModuleMetadataCell{}} (Lbl'-LT-'moduleMetadata'-GT-'{}(X0:SortModuleFileNameCell{}, X1:SortModuleIdCell{}, X2:SortFuncIdsCell{}, X3:SortTypeIdsCell{}), Lbl'-LT-'moduleMetadata'-GT-'{}(Y0:SortModuleFileNameCell{}, Y1:SortModuleIdCell{}, Y2:SortFuncIdsCell{}, Y3:SortTypeIdsCell{})), Lbl'-LT-'moduleMetadata'-GT-'{}(\and{SortModuleFileNameCell{}} (X0:SortModuleFileNameCell{}, Y0:SortModuleFileNameCell{}), \and{SortModuleIdCell{}} (X1:SortModuleIdCell{}, Y1:SortModuleIdCell{}), \and{SortFuncIdsCell{}} (X2:SortFuncIdsCell{}, Y2:SortFuncIdsCell{}), \and{SortTypeIdsCell{}} (X3:SortTypeIdsCell{}, Y3:SortTypeIdsCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleMetadataCellFragment{}, \equals{SortModuleMetadataCellFragment{}, R} (Val:SortModuleMetadataCellFragment{}, Lbl'-LT-'moduleMetadata'-GT-'-fragment{}(K0:SortModuleFileNameCellOpt{}, K1:SortModuleIdCellOpt{}, K2:SortFuncIdsCellOpt{}, K3:SortTypeIdsCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleMetadataCellFragment{}} (\and{SortModuleMetadataCellFragment{}} (Lbl'-LT-'moduleMetadata'-GT-'-fragment{}(X0:SortModuleFileNameCellOpt{}, X1:SortModuleIdCellOpt{}, X2:SortFuncIdsCellOpt{}, X3:SortTypeIdsCellOpt{}), Lbl'-LT-'moduleMetadata'-GT-'-fragment{}(Y0:SortModuleFileNameCellOpt{}, Y1:SortModuleIdCellOpt{}, Y2:SortFuncIdsCellOpt{}, Y3:SortTypeIdsCellOpt{})), Lbl'-LT-'moduleMetadata'-GT-'-fragment{}(\and{SortModuleFileNameCellOpt{}} (X0:SortModuleFileNameCellOpt{}, Y0:SortModuleFileNameCellOpt{}), \and{SortModuleIdCellOpt{}} (X1:SortModuleIdCellOpt{}, Y1:SortModuleIdCellOpt{}), \and{SortFuncIdsCellOpt{}} (X2:SortFuncIdsCellOpt{}, Y2:SortFuncIdsCellOpt{}), \and{SortTypeIdsCellOpt{}} (X3:SortTypeIdsCellOpt{}, Y3:SortTypeIdsCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleRegistryCell{}, \equals{SortModuleRegistryCell{}, R} (Val:SortModuleRegistryCell{}, Lbl'-LT-'moduleRegistry'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleRegistryCell{}} (\and{SortModuleRegistryCell{}} (Lbl'-LT-'moduleRegistry'-GT-'{}(X0:SortMap{}), Lbl'-LT-'moduleRegistry'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'moduleRegistry'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMsizeCell{}, \equals{SortMsizeCell{}, R} (Val:SortMsizeCell{}, Lbl'-LT-'msize'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortMsizeCell{}} (\and{SortMsizeCell{}} (Lbl'-LT-'msize'-GT-'{}(X0:SortInt{}), Lbl'-LT-'msize'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'msize'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextFuncAddrCell{}, \equals{SortNextFuncAddrCell{}, R} (Val:SortNextFuncAddrCell{}, Lbl'-LT-'nextFuncAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextFuncAddrCell{}} (\and{SortNextFuncAddrCell{}} (Lbl'-LT-'nextFuncAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextFuncAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextFuncAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextFuncIdxCell{}, \equals{SortNextFuncIdxCell{}, R} (Val:SortNextFuncIdxCell{}, Lbl'-LT-'nextFuncIdx'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextFuncIdxCell{}} (\and{SortNextFuncIdxCell{}} (Lbl'-LT-'nextFuncIdx'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextFuncIdx'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextFuncIdx'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextGlobAddrCell{}, \equals{SortNextGlobAddrCell{}, R} (Val:SortNextGlobAddrCell{}, Lbl'-LT-'nextGlobAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextGlobAddrCell{}} (\and{SortNextGlobAddrCell{}} (Lbl'-LT-'nextGlobAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextGlobAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextGlobAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextGlobIdxCell{}, \equals{SortNextGlobIdxCell{}, R} (Val:SortNextGlobIdxCell{}, Lbl'-LT-'nextGlobIdx'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextGlobIdxCell{}} (\and{SortNextGlobIdxCell{}} (Lbl'-LT-'nextGlobIdx'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextGlobIdx'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextGlobIdx'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextMemAddrCell{}, \equals{SortNextMemAddrCell{}, R} (Val:SortNextMemAddrCell{}, Lbl'-LT-'nextMemAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextMemAddrCell{}} (\and{SortNextMemAddrCell{}} (Lbl'-LT-'nextMemAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextMemAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextMemAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextModuleIdxCell{}, \equals{SortNextModuleIdxCell{}, R} (Val:SortNextModuleIdxCell{}, Lbl'-LT-'nextModuleIdx'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextModuleIdxCell{}} (\and{SortNextModuleIdxCell{}} (Lbl'-LT-'nextModuleIdx'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextModuleIdx'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextModuleIdx'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextTabAddrCell{}, \equals{SortNextTabAddrCell{}, R} (Val:SortNextTabAddrCell{}, Lbl'-LT-'nextTabAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextTabAddrCell{}} (\and{SortNextTabAddrCell{}} (Lbl'-LT-'nextTabAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextTabAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextTabAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextTypeIdxCell{}, \equals{SortNextTypeIdxCell{}, R} (Val:SortNextTypeIdxCell{}, Lbl'-LT-'nextTypeIdx'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextTypeIdxCell{}} (\and{SortNextTypeIdxCell{}} (Lbl'-LT-'nextTypeIdx'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextTypeIdx'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextTypeIdx'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTAddrCell{}, \equals{SortTAddrCell{}, R} (Val:SortTAddrCell{}, Lbl'-LT-'tAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortTAddrCell{}} (\and{SortTAddrCell{}} (Lbl'-LT-'tAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'tAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'tAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabAddrsCell{}, \equals{SortTabAddrsCell{}, R} (Val:SortTabAddrsCell{}, Lbl'-LT-'tabAddrs'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTabAddrsCell{}} (\and{SortTabAddrsCell{}} (Lbl'-LT-'tabAddrs'-GT-'{}(X0:SortMap{}), Lbl'-LT-'tabAddrs'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'tabAddrs'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabIdsCell{}, \equals{SortTabIdsCell{}, R} (Val:SortTabIdsCell{}, Lbl'-LT-'tabIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTabIdsCell{}} (\and{SortTabIdsCell{}} (Lbl'-LT-'tabIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'tabIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'tabIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabInstCell{}, \equals{SortTabInstCell{}, R} (Val:SortTabInstCell{}, Lbl'-LT-'tabInst'-GT-'{}(K0:SortTAddrCell{}, K1:SortTmaxCell{}, K2:SortTsizeCell{}, K3:SortTdataCell{}))) [functional{}()] // functional
  axiom{}\implies{SortTabInstCell{}} (\and{SortTabInstCell{}} (Lbl'-LT-'tabInst'-GT-'{}(X0:SortTAddrCell{}, X1:SortTmaxCell{}, X2:SortTsizeCell{}, X3:SortTdataCell{}), Lbl'-LT-'tabInst'-GT-'{}(Y0:SortTAddrCell{}, Y1:SortTmaxCell{}, Y2:SortTsizeCell{}, Y3:SortTdataCell{})), Lbl'-LT-'tabInst'-GT-'{}(\and{SortTAddrCell{}} (X0:SortTAddrCell{}, Y0:SortTAddrCell{}), \and{SortTmaxCell{}} (X1:SortTmaxCell{}, Y1:SortTmaxCell{}), \and{SortTsizeCell{}} (X2:SortTsizeCell{}, Y2:SortTsizeCell{}), \and{SortTdataCell{}} (X3:SortTdataCell{}, Y3:SortTdataCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabInstCellFragment{}, \equals{SortTabInstCellFragment{}, R} (Val:SortTabInstCellFragment{}, Lbl'-LT-'tabInst'-GT-'-fragment{}(K0:SortTAddrCellOpt{}, K1:SortTmaxCellOpt{}, K2:SortTsizeCellOpt{}, K3:SortTdataCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortTabInstCellFragment{}} (\and{SortTabInstCellFragment{}} (Lbl'-LT-'tabInst'-GT-'-fragment{}(X0:SortTAddrCellOpt{}, X1:SortTmaxCellOpt{}, X2:SortTsizeCellOpt{}, X3:SortTdataCellOpt{}), Lbl'-LT-'tabInst'-GT-'-fragment{}(Y0:SortTAddrCellOpt{}, Y1:SortTmaxCellOpt{}, Y2:SortTsizeCellOpt{}, Y3:SortTdataCellOpt{})), Lbl'-LT-'tabInst'-GT-'-fragment{}(\and{SortTAddrCellOpt{}} (X0:SortTAddrCellOpt{}, Y0:SortTAddrCellOpt{}), \and{SortTmaxCellOpt{}} (X1:SortTmaxCellOpt{}, Y1:SortTmaxCellOpt{}), \and{SortTsizeCellOpt{}} (X2:SortTsizeCellOpt{}, Y2:SortTsizeCellOpt{}), \and{SortTdataCellOpt{}} (X3:SortTdataCellOpt{}, Y3:SortTdataCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabsCell{}, \equals{SortTabsCell{}, R} (Val:SortTabsCell{}, Lbl'-LT-'tabs'-GT-'{}(K0:SortTabInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTabsCell{}} (\and{SortTabsCell{}} (Lbl'-LT-'tabs'-GT-'{}(X0:SortTabInstCellMap{}), Lbl'-LT-'tabs'-GT-'{}(Y0:SortTabInstCellMap{})), Lbl'-LT-'tabs'-GT-'{}(\and{SortTabInstCellMap{}} (X0:SortTabInstCellMap{}, Y0:SortTabInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabsCellFragment{}, \equals{SortTabsCellFragment{}, R} (Val:SortTabsCellFragment{}, Lbl'-LT-'tabs'-GT-'-fragment{}(K0:SortTabInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTabsCellFragment{}} (\and{SortTabsCellFragment{}} (Lbl'-LT-'tabs'-GT-'-fragment{}(X0:SortTabInstCellMap{}), Lbl'-LT-'tabs'-GT-'-fragment{}(Y0:SortTabInstCellMap{})), Lbl'-LT-'tabs'-GT-'-fragment{}(\and{SortTabInstCellMap{}} (X0:SortTabInstCellMap{}, Y0:SortTabInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTdataCell{}, \equals{SortTdataCell{}, R} (Val:SortTdataCell{}, Lbl'-LT-'tdata'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTdataCell{}} (\and{SortTdataCell{}} (Lbl'-LT-'tdata'-GT-'{}(X0:SortMap{}), Lbl'-LT-'tdata'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'tdata'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTmaxCell{}, \equals{SortTmaxCell{}, R} (Val:SortTmaxCell{}, Lbl'-LT-'tmax'-GT-'{}(K0:SortOptionalInt{}))) [functional{}()] // functional
  axiom{}\implies{SortTmaxCell{}} (\and{SortTmaxCell{}} (Lbl'-LT-'tmax'-GT-'{}(X0:SortOptionalInt{}), Lbl'-LT-'tmax'-GT-'{}(Y0:SortOptionalInt{})), Lbl'-LT-'tmax'-GT-'{}(\and{SortOptionalInt{}} (X0:SortOptionalInt{}, Y0:SortOptionalInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTsizeCell{}, \equals{SortTsizeCell{}, R} (Val:SortTsizeCell{}, Lbl'-LT-'tsize'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortTsizeCell{}} (\and{SortTsizeCell{}} (Lbl'-LT-'tsize'-GT-'{}(X0:SortInt{}), Lbl'-LT-'tsize'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'tsize'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypeIdsCell{}, \equals{SortTypeIdsCell{}, R} (Val:SortTypeIdsCell{}, Lbl'-LT-'typeIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeIdsCell{}} (\and{SortTypeIdsCell{}} (Lbl'-LT-'typeIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'typeIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'typeIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypesCell{}, \equals{SortTypesCell{}, R} (Val:SortTypesCell{}, Lbl'-LT-'types'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTypesCell{}} (\and{SortTypesCell{}} (Lbl'-LT-'types'-GT-'{}(X0:SortMap{}), Lbl'-LT-'types'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'types'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortValstackCell{}, \equals{SortValstackCell{}, R} (Val:SortValstackCell{}, Lbl'-LT-'valstack'-GT-'{}(K0:SortValStack{}))) [functional{}()] // functional
  axiom{}\implies{SortValstackCell{}} (\and{SortValstackCell{}} (Lbl'-LT-'valstack'-GT-'{}(X0:SortValStack{}), Lbl'-LT-'valstack'-GT-'{}(Y0:SortValStack{})), Lbl'-LT-'valstack'-GT-'{}(\and{SortValStack{}} (X0:SortValStack{}, Y0:SortValStack{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortWasmCell{}, \equals{SortWasmCell{}, R} (Val:SortWasmCell{}, Lbl'-LT-'wasm'-GT-'{}(K0:SortInstrsCell{}, K1:SortValstackCell{}, K2:SortCurFrameCell{}, K3:SortModuleRegistryCell{}, K4:SortModuleIdsCell{}, K5:SortModuleInstancesCell{}, K6:SortNextModuleIdxCell{}, K7:SortMainStoreCell{}, K8:SortDeterministicMemoryGrowthCell{}))) [functional{}()] // functional
  axiom{}\implies{SortWasmCell{}} (\and{SortWasmCell{}} (Lbl'-LT-'wasm'-GT-'{}(X0:SortInstrsCell{}, X1:SortValstackCell{}, X2:SortCurFrameCell{}, X3:SortModuleRegistryCell{}, X4:SortModuleIdsCell{}, X5:SortModuleInstancesCell{}, X6:SortNextModuleIdxCell{}, X7:SortMainStoreCell{}, X8:SortDeterministicMemoryGrowthCell{}), Lbl'-LT-'wasm'-GT-'{}(Y0:SortInstrsCell{}, Y1:SortValstackCell{}, Y2:SortCurFrameCell{}, Y3:SortModuleRegistryCell{}, Y4:SortModuleIdsCell{}, Y5:SortModuleInstancesCell{}, Y6:SortNextModuleIdxCell{}, Y7:SortMainStoreCell{}, Y8:SortDeterministicMemoryGrowthCell{})), Lbl'-LT-'wasm'-GT-'{}(\and{SortInstrsCell{}} (X0:SortInstrsCell{}, Y0:SortInstrsCell{}), \and{SortValstackCell{}} (X1:SortValstackCell{}, Y1:SortValstackCell{}), \and{SortCurFrameCell{}} (X2:SortCurFrameCell{}, Y2:SortCurFrameCell{}), \and{SortModuleRegistryCell{}} (X3:SortModuleRegistryCell{}, Y3:SortModuleRegistryCell{}), \and{SortModuleIdsCell{}} (X4:SortModuleIdsCell{}, Y4:SortModuleIdsCell{}), \and{SortModuleInstancesCell{}} (X5:SortModuleInstancesCell{}, Y5:SortModuleInstancesCell{}), \and{SortNextModuleIdxCell{}} (X6:SortNextModuleIdxCell{}, Y6:SortNextModuleIdxCell{}), \and{SortMainStoreCell{}} (X7:SortMainStoreCell{}, Y7:SortMainStoreCell{}), \and{SortDeterministicMemoryGrowthCell{}} (X8:SortDeterministicMemoryGrowthCell{}, Y8:SortDeterministicMemoryGrowthCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortWasmCellFragment{}, \equals{SortWasmCellFragment{}, R} (Val:SortWasmCellFragment{}, Lbl'-LT-'wasm'-GT-'-fragment{}(K0:SortInstrsCellOpt{}, K1:SortValstackCellOpt{}, K2:SortCurFrameCellOpt{}, K3:SortModuleRegistryCellOpt{}, K4:SortModuleIdsCellOpt{}, K5:SortModuleInstancesCellOpt{}, K6:SortNextModuleIdxCellOpt{}, K7:SortMainStoreCellOpt{}, K8:SortDeterministicMemoryGrowthCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortWasmCellFragment{}} (\and{SortWasmCellFragment{}} (Lbl'-LT-'wasm'-GT-'-fragment{}(X0:SortInstrsCellOpt{}, X1:SortValstackCellOpt{}, X2:SortCurFrameCellOpt{}, X3:SortModuleRegistryCellOpt{}, X4:SortModuleIdsCellOpt{}, X5:SortModuleInstancesCellOpt{}, X6:SortNextModuleIdxCellOpt{}, X7:SortMainStoreCellOpt{}, X8:SortDeterministicMemoryGrowthCellOpt{}), Lbl'-LT-'wasm'-GT-'-fragment{}(Y0:SortInstrsCellOpt{}, Y1:SortValstackCellOpt{}, Y2:SortCurFrameCellOpt{}, Y3:SortModuleRegistryCellOpt{}, Y4:SortModuleIdsCellOpt{}, Y5:SortModuleInstancesCellOpt{}, Y6:SortNextModuleIdxCellOpt{}, Y7:SortMainStoreCellOpt{}, Y8:SortDeterministicMemoryGrowthCellOpt{})), Lbl'-LT-'wasm'-GT-'-fragment{}(\and{SortInstrsCellOpt{}} (X0:SortInstrsCellOpt{}, Y0:SortInstrsCellOpt{}), \and{SortValstackCellOpt{}} (X1:SortValstackCellOpt{}, Y1:SortValstackCellOpt{}), \and{SortCurFrameCellOpt{}} (X2:SortCurFrameCellOpt{}, Y2:SortCurFrameCellOpt{}), \and{SortModuleRegistryCellOpt{}} (X3:SortModuleRegistryCellOpt{}, Y3:SortModuleRegistryCellOpt{}), \and{SortModuleIdsCellOpt{}} (X4:SortModuleIdsCellOpt{}, Y4:SortModuleIdsCellOpt{}), \and{SortModuleInstancesCellOpt{}} (X5:SortModuleInstancesCellOpt{}, Y5:SortModuleInstancesCellOpt{}), \and{SortNextModuleIdxCellOpt{}} (X6:SortNextModuleIdxCellOpt{}, Y6:SortNextModuleIdxCellOpt{}), \and{SortMainStoreCellOpt{}} (X7:SortMainStoreCellOpt{}, Y7:SortMainStoreCellOpt{}), \and{SortDeterministicMemoryGrowthCellOpt{}} (X8:SortDeterministicMemoryGrowthCellOpt{}, Y8:SortDeterministicMemoryGrowthCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblBytes2Int'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes'Unds'Endianness'Unds'Signedness{}(K0:SortBytes{}, K1:SortEndianness{}, K2:SortSignedness{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblBytes2String'LParUndsRParUnds'BYTES-HOOKED'Unds'String'Unds'Bytes{}(K0:SortBytes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblFuncDefCellMap'Coln'in'Unds'keys{}(K0:SortFAddrCell{}, K1:SortFuncDefCellMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblGlobalInstCellMap'Coln'in'Unds'keys{}(K0:SortGAddrCell{}, K1:SortGlobalInstCellMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(K0:SortInt{}, K1:SortEndianness{}, K2:SortSignedness{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(K0:SortInt{}, K1:SortInt{}, K2:SortEndianness{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblListItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblMap'Coln'update{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblMemInstCellMap'Coln'in'Unds'keys{}(K0:SortMAddrCell{}, K1:SortMemInstCellMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblModuleInstCellMap'Coln'in'Unds'keys{}(K0:SortModIdxCell{}, K1:SortModuleInstCellMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSetItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, LblString2Bytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdentifierToken{}, \equals{SortIdentifierToken{}, R} (Val:SortIdentifierToken{}, LblString2Identifier'LParUndsRParUnds'WASM-TEXT'Unds'IdentifierToken'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblTabInstCellMap'Coln'in'Unds'keys{}(K0:SortTAddrCell{}, K1:SortTabInstCellMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblWasmIntToken2String'LParUndsRParUnds'WASM-TEXT'Unds'String'Unds'WasmIntToken{}(K0:SortWasmIntToken{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsAnd-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTableSpec{}, \equals{SortTableSpec{}, R} (Val:SortTableSpec{}, Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(K0:SortTableElemType{}, K1:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(X0:SortTableElemType{}, X1:SortElemSegment{}), Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(Y0:SortTableElemType{}, Y1:SortElemSegment{})), Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(\and{SortTableElemType{}} (X0:SortTableElemType{}, Y0:SortTableElemType{}), \and{SortElemSegment{}} (X1:SortElemSegment{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(X0:SortTableElemType{}, X1:SortElemSegment{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(Y0:SortInlineExport{}, Y1:SortTableSpec{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(X0:SortTableElemType{}, X1:SortElemSegment{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(Y0:SortInlineImport{}, Y1:SortTableType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsStar'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(K0:SortValStack{}, K1:SortValStack{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, Lbl'UndsPlus'Bytes'UndsUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Bytes{}(K0:SortBytes{}, K1:SortBytes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValTypes{}, \equals{SortValTypes{}, R} (Val:SortValTypes{}, Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(K0:SortValTypes{}, K1:SortValTypes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'-Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(K0:SortFValType{}, K1:SortLoadOpM{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(Y0:SortFValType{}, Y1:SortLoadOpM{})), Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortLoadOpM{}} (X1:SortLoadOpM{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(Y0:SortFValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaCvtOp{}(Y0:SortValType{}, Y1:SortCvtOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaDrop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaFBinOp{}(Y0:SortFValType{}, Y1:SortFBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaFConst{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaFRelOp{}(Y0:SortFValType{}, Y1:SortFRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaFUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaGrow{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaIBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaIConst{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaIRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaIUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaNop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaReturn{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(K0:SortFValType{}, K1:SortStoreOpM{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(Y0:SortFValType{}, Y1:SortStoreOpM{})), Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortStoreOpM{}} (X1:SortStoreOpM{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaCvtOp{}(Y0:SortValType{}, Y1:SortCvtOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaDrop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaFBinOp{}(Y0:SortFValType{}, Y1:SortFBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaFConst{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaFRelOp{}(Y0:SortFValType{}, Y1:SortFRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaFUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaGrow{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaIBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaIConst{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaIRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaIUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaNop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaReturn{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(K0:SortIValType{}, K1:SortLoadOpM{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{})), Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortLoadOpM{}} (X1:SortLoadOpM{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaCvtOp{}(Y0:SortValType{}, Y1:SortCvtOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaDrop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaFBinOp{}(Y0:SortFValType{}, Y1:SortFBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaFConst{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaFRelOp{}(Y0:SortFValType{}, Y1:SortFRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaFUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaGrow{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaIBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaIConst{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaIRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaIUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaNop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaReturn{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(K0:SortIValType{}, K1:SortStoreOpM{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{})), Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortStoreOpM{}} (X1:SortStoreOpM{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaCvtOp{}(Y0:SortValType{}, Y1:SortCvtOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaDrop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaFBinOp{}(Y0:SortFValType{}, Y1:SortFBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaFConst{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaFRelOp{}(Y0:SortFValType{}, Y1:SortFRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaFUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaGrow{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaIBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaIConst{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaIRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaIUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaNop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaReturn{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(K0:SortIValType{}, K1:SortLoadOp{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{})), Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortLoadOp{}} (X1:SortLoadOp{}, Y1:SortLoadOp{}), \and{SortInt{}} (X2:SortInt{}, Y2:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Y0:SortIValType{}, Y1:SortStoreOp{}, Y2:SortInt{}, Y3:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaBlock{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaBr{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaBr'Unds'if{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaBr'Unds'table{}(Y0:SortInts{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaCall{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaCall'Unds'indirect{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaGlobal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaGlobal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaIf{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortInstrs{}, Y3:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaLoad{}(Y0:SortValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaLocal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaLocal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaLocal'Stop'tee{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(K0:SortIValType{}, K1:SortStoreOp{}, K2:SortInt{}, K3:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Y0:SortIValType{}, Y1:SortStoreOp{}, Y2:SortInt{}, Y3:SortInt{})), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortStoreOp{}} (X1:SortStoreOp{}, Y1:SortStoreOp{}), \and{SortInt{}} (X2:SortInt{}, Y2:SortInt{}), \and{SortInt{}} (X3:SortInt{}, Y3:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), LblaBlock{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), LblaBr{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), LblaBr'Unds'if{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), LblaBr'Unds'table{}(Y0:SortInts{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), LblaCall{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), LblaCall'Unds'indirect{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), LblaGlobal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), LblaGlobal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), LblaIf{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortInstrs{}, Y3:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), LblaLoad{}(Y0:SortValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), LblaLocal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), LblaLocal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), LblaLocal'Stop'tee{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(K0:SortVal{}, K1:SortValStack{}))) [functional{}()] // functional
  axiom{}\implies{SortValStack{}} (\and{SortValStack{}} (Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(X0:SortVal{}, X1:SortValStack{}), Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Y0:SortVal{}, Y1:SortValStack{})), Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(\and{SortVal{}} (X0:SortVal{}, Y0:SortVal{}), \and{SortValStack{}} (X1:SortValStack{}, Y1:SortValStack{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \equals{SortFuncDefCellMap{}, R} (Lbl'Unds'FuncDefCellMap'Unds'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(K1:SortFuncDefCellMap{},K2:SortFuncDefCellMap{}),K3:SortFuncDefCellMap{}),Lbl'Unds'FuncDefCellMap'Unds'{}(K1:SortFuncDefCellMap{},Lbl'Unds'FuncDefCellMap'Unds'{}(K2:SortFuncDefCellMap{},K3:SortFuncDefCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortFuncDefCellMap{}, R} (Lbl'Unds'FuncDefCellMap'Unds'{}(K1:SortFuncDefCellMap{},K2:SortFuncDefCellMap{}),Lbl'Unds'FuncDefCellMap'Unds'{}(K2:SortFuncDefCellMap{},K1:SortFuncDefCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortFuncDefCellMap{}, R} (Lbl'Unds'FuncDefCellMap'Unds'{}(K:SortFuncDefCellMap{},Lbl'Stop'FuncDefCellMap{}()),K:SortFuncDefCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortFuncDefCellMap{}, R} (Lbl'Unds'FuncDefCellMap'Unds'{}(Lbl'Stop'FuncDefCellMap{}(),K:SortFuncDefCellMap{}),K:SortFuncDefCellMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortGlobalInstCellMap{}, R} (Lbl'Unds'GlobalInstCellMap'Unds'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(K1:SortGlobalInstCellMap{},K2:SortGlobalInstCellMap{}),K3:SortGlobalInstCellMap{}),Lbl'Unds'GlobalInstCellMap'Unds'{}(K1:SortGlobalInstCellMap{},Lbl'Unds'GlobalInstCellMap'Unds'{}(K2:SortGlobalInstCellMap{},K3:SortGlobalInstCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortGlobalInstCellMap{}, R} (Lbl'Unds'GlobalInstCellMap'Unds'{}(K1:SortGlobalInstCellMap{},K2:SortGlobalInstCellMap{}),Lbl'Unds'GlobalInstCellMap'Unds'{}(K2:SortGlobalInstCellMap{},K1:SortGlobalInstCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortGlobalInstCellMap{}, R} (Lbl'Unds'GlobalInstCellMap'Unds'{}(K:SortGlobalInstCellMap{},Lbl'Stop'GlobalInstCellMap{}()),K:SortGlobalInstCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortGlobalInstCellMap{}, R} (Lbl'Unds'GlobalInstCellMap'Unds'{}(Lbl'Stop'GlobalInstCellMap{}(),K:SortGlobalInstCellMap{}),K:SortGlobalInstCellMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(K1:SortList{},K2:SortList{}),K3:SortList{}),Lbl'Unds'List'Unds'{}(K1:SortList{},Lbl'Unds'List'Unds'{}(K2:SortList{},K3:SortList{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(K:SortList{},Lbl'Stop'List{}()),K:SortList{}) [unit{}()] // right unit
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),K:SortList{}),K:SortList{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),K3:SortMap{}),Lbl'Unds'Map'Unds'{}(K1:SortMap{},Lbl'Unds'Map'Unds'{}(K2:SortMap{},K3:SortMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),Lbl'Unds'Map'Unds'{}(K2:SortMap{},K1:SortMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K:SortMap{},Lbl'Stop'Map{}()),K:SortMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),K:SortMap{}),K:SortMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortMemInstCellMap{}, R} (Lbl'Unds'MemInstCellMap'Unds'{}(Lbl'Unds'MemInstCellMap'Unds'{}(K1:SortMemInstCellMap{},K2:SortMemInstCellMap{}),K3:SortMemInstCellMap{}),Lbl'Unds'MemInstCellMap'Unds'{}(K1:SortMemInstCellMap{},Lbl'Unds'MemInstCellMap'Unds'{}(K2:SortMemInstCellMap{},K3:SortMemInstCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortMemInstCellMap{}, R} (Lbl'Unds'MemInstCellMap'Unds'{}(K1:SortMemInstCellMap{},K2:SortMemInstCellMap{}),Lbl'Unds'MemInstCellMap'Unds'{}(K2:SortMemInstCellMap{},K1:SortMemInstCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortMemInstCellMap{}, R} (Lbl'Unds'MemInstCellMap'Unds'{}(K:SortMemInstCellMap{},Lbl'Stop'MemInstCellMap{}()),K:SortMemInstCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMemInstCellMap{}, R} (Lbl'Unds'MemInstCellMap'Unds'{}(Lbl'Stop'MemInstCellMap{}(),K:SortMemInstCellMap{}),K:SortMemInstCellMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortModuleInstCellMap{}, R} (Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(K1:SortModuleInstCellMap{},K2:SortModuleInstCellMap{}),K3:SortModuleInstCellMap{}),Lbl'Unds'ModuleInstCellMap'Unds'{}(K1:SortModuleInstCellMap{},Lbl'Unds'ModuleInstCellMap'Unds'{}(K2:SortModuleInstCellMap{},K3:SortModuleInstCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortModuleInstCellMap{}, R} (Lbl'Unds'ModuleInstCellMap'Unds'{}(K1:SortModuleInstCellMap{},K2:SortModuleInstCellMap{}),Lbl'Unds'ModuleInstCellMap'Unds'{}(K2:SortModuleInstCellMap{},K1:SortModuleInstCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortModuleInstCellMap{}, R} (Lbl'Unds'ModuleInstCellMap'Unds'{}(K:SortModuleInstCellMap{},Lbl'Stop'ModuleInstCellMap{}()),K:SortModuleInstCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortModuleInstCellMap{}, R} (Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Stop'ModuleInstCellMap{}(),K:SortModuleInstCellMap{}),K:SortModuleInstCellMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),K3:SortSet{}),Lbl'Unds'Set'Unds'{}(K1:SortSet{},Lbl'Unds'Set'Unds'{}(K2:SortSet{},K3:SortSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),Lbl'Unds'Set'Unds'{}(K2:SortSet{},K1:SortSet{})) [comm{}()] // commutativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},K:SortSet{}),K:SortSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},Lbl'Stop'Set{}()),K:SortSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),K:SortSet{}),K:SortSet{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Unds'Set'Unds'{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \equals{SortTabInstCellMap{}, R} (Lbl'Unds'TabInstCellMap'Unds'{}(Lbl'Unds'TabInstCellMap'Unds'{}(K1:SortTabInstCellMap{},K2:SortTabInstCellMap{}),K3:SortTabInstCellMap{}),Lbl'Unds'TabInstCellMap'Unds'{}(K1:SortTabInstCellMap{},Lbl'Unds'TabInstCellMap'Unds'{}(K2:SortTabInstCellMap{},K3:SortTabInstCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortTabInstCellMap{}, R} (Lbl'Unds'TabInstCellMap'Unds'{}(K1:SortTabInstCellMap{},K2:SortTabInstCellMap{}),Lbl'Unds'TabInstCellMap'Unds'{}(K2:SortTabInstCellMap{},K1:SortTabInstCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortTabInstCellMap{}, R} (Lbl'Unds'TabInstCellMap'Unds'{}(K:SortTabInstCellMap{},Lbl'Stop'TabInstCellMap{}()),K:SortTabInstCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortTabInstCellMap{}, R} (Lbl'Unds'TabInstCellMap'Unds'{}(Lbl'Stop'TabInstCellMap{}(),K:SortTabInstCellMap{}),K:SortTabInstCellMap{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDefns{}, \equals{SortDefns{}, R} (Val:SortDefns{}, Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(K0:SortDefn{}, K1:SortDefns{}))) [functional{}()] // functional
  axiom{}\implies{SortDefns{}} (\and{SortDefns{}} (Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(X0:SortDefn{}, X1:SortDefns{}), Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(Y0:SortDefn{}, Y1:SortDefns{})), Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}} (X0:SortDefn{}, Y0:SortDefn{}), \and{SortDefns{}} (X1:SortDefns{}, Y1:SortDefns{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInstrs{}, \equals{SortInstrs{}, R} (Val:SortInstrs{}, Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(K0:SortInstr{}, K1:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortInstrs{}} (\and{SortInstrs{}} (Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(X0:SortInstr{}, X1:SortInstrs{}), Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(Y0:SortInstr{}, Y1:SortInstrs{})), Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(\and{SortInstr{}} (X0:SortInstr{}, Y0:SortInstr{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStmts{}, \equals{SortStmts{}, R} (Val:SortStmts{}, Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(K0:SortStmt{}, K1:SortStmts{}))) [functional{}()] // functional
  axiom{}\implies{SortStmts{}} (\and{SortStmts{}} (Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(X0:SortStmt{}, X1:SortStmts{}), Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(Y0:SortStmt{}, Y1:SortStmts{})), Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}), \and{SortStmts{}} (X1:SortStmts{}, Y1:SortStmts{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypeDecl{}, \equals{SortTypeDecl{}, R} (Val:SortTypeDecl{}, Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(K0:SortTypeKeyWord{}, K1:SortValTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeDecl{}} (\and{SortTypeDecl{}} (Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(X0:SortTypeKeyWord{}, X1:SortValTypes{}), Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(Y0:SortTypeKeyWord{}, Y1:SortValTypes{})), Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(\and{SortTypeKeyWord{}} (X0:SortTypeKeyWord{}, Y0:SortTypeKeyWord{}), \and{SortValTypes{}} (X1:SortValTypes{}, Y1:SortValTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortTypeDecl{}} (\and{SortTypeDecl{}} (Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(X0:SortTypeKeyWord{}, X1:SortValTypes{}), Lblparam'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'Identifier'Unds'ValType{}(Y0:SortIdentifier{}, Y1:SortValType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeDecls{}, \equals{SortTypeDecls{}, R} (Val:SortTypeDecls{}, Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(K0:SortTypeDecl{}, K1:SortTypeDecls{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeDecls{}} (\and{SortTypeDecls{}} (Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(X0:SortTypeDecl{}, X1:SortTypeDecls{}), Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Y0:SortTypeDecl{}, Y1:SortTypeDecls{})), Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(\and{SortTypeDecl{}} (X0:SortTypeDecl{}, Y0:SortTypeDecl{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortDataString{}, \equals{SortDataString{}, R} (Val:SortDataString{}, Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'DataString'Unds'WasmString'Unds'DataString{}(K0:SortWasmString{}, K1:SortDataString{}))) [functional{}()] // functional
  axiom{}\implies{SortDataString{}} (\and{SortDataString{}} (Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'DataString'Unds'WasmString'Unds'DataString{}(X0:SortWasmString{}, X1:SortDataString{}), Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'DataString'Unds'WasmString'Unds'DataString{}(Y0:SortWasmString{}, Y1:SortDataString{})), Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'DataString'Unds'WasmString'Unds'DataString{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}), \and{SortDataString{}} (X1:SortDataString{}, Y1:SortDataString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortElemSegment{}, \equals{SortElemSegment{}, R} (Val:SortElemSegment{}, Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(K0:SortIndex{}, K1:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortElemSegment{}} (\and{SortElemSegment{}} (Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortElemSegment{}), Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortElemSegment{})), Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}), \and{SortElemSegment{}} (X1:SortElemSegment{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExternval{}, \equals{SortExternval{}, R} (Val:SortExternval{}, Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(K0:SortAllocatedKind{}, K1:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortExternval{}} (\and{SortExternval{}} (Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(X0:SortAllocatedKind{}, X1:SortIndex{}), Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Y0:SortAllocatedKind{}, Y1:SortIndex{})), Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(\and{SortAllocatedKind{}} (X0:SortAllocatedKind{}, Y0:SortAllocatedKind{}), \and{SortIndex{}} (X1:SortIndex{}, Y1:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncSpec{}, \equals{SortFuncSpec{}, R} (Val:SortFuncSpec{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(K0:SortInlineExport{}, K1:SortFuncSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(X0:SortInlineExport{}, X1:SortFuncSpec{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(Y0:SortInlineExport{}, Y1:SortFuncSpec{})), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(\and{SortInlineExport{}} (X0:SortInlineExport{}, Y0:SortInlineExport{}), \and{SortFuncSpec{}} (X1:SortFuncSpec{}, Y1:SortFuncSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(X0:SortInlineExport{}, X1:SortFuncSpec{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(Y0:SortInlineImport{}, Y1:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(X0:SortInlineExport{}, X1:SortFuncSpec{}), Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(Y0:SortTypeUse{}, Y1:SortLocalDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFuncSpec{}, \equals{SortFuncSpec{}, R} (Val:SortFuncSpec{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(K0:SortInlineImport{}, K1:SortTypeUse{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(X0:SortInlineImport{}, X1:SortTypeUse{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(Y0:SortInlineImport{}, Y1:SortTypeUse{})), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(\and{SortInlineImport{}} (X0:SortInlineImport{}, Y0:SortInlineImport{}), \and{SortTypeUse{}} (X1:SortTypeUse{}, Y1:SortTypeUse{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(X0:SortInlineImport{}, X1:SortTypeUse{}), Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(Y0:SortTypeUse{}, Y1:SortLocalDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortGlobalSpec{}, \equals{SortGlobalSpec{}, R} (Val:SortGlobalSpec{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(K0:SortInlineExport{}, K1:SortGlobalSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(X0:SortInlineExport{}, X1:SortGlobalSpec{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(Y0:SortInlineExport{}, Y1:SortGlobalSpec{})), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(\and{SortInlineExport{}} (X0:SortInlineExport{}, Y0:SortInlineExport{}), \and{SortGlobalSpec{}} (X1:SortGlobalSpec{}, Y1:SortGlobalSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(X0:SortInlineExport{}, X1:SortGlobalSpec{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(Y0:SortInlineImport{}, Y1:SortTextFormatGlobalType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(X0:SortInlineExport{}, X1:SortGlobalSpec{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(Y0:SortTextFormatGlobalType{}, Y1:SortInstr{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortGlobalSpec{}, \equals{SortGlobalSpec{}, R} (Val:SortGlobalSpec{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(K0:SortInlineImport{}, K1:SortTextFormatGlobalType{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(X0:SortInlineImport{}, X1:SortTextFormatGlobalType{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(Y0:SortInlineImport{}, Y1:SortTextFormatGlobalType{})), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(\and{SortInlineImport{}} (X0:SortInlineImport{}, Y0:SortInlineImport{}), \and{SortTextFormatGlobalType{}} (X1:SortTextFormatGlobalType{}, Y1:SortTextFormatGlobalType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(X0:SortInlineImport{}, X1:SortTextFormatGlobalType{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(Y0:SortTextFormatGlobalType{}, Y1:SortInstr{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortGlobalSpec{}, \equals{SortGlobalSpec{}, R} (Val:SortGlobalSpec{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(K0:SortTextFormatGlobalType{}, K1:SortInstr{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(X0:SortTextFormatGlobalType{}, X1:SortInstr{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(Y0:SortTextFormatGlobalType{}, Y1:SortInstr{})), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(\and{SortTextFormatGlobalType{}} (X0:SortTextFormatGlobalType{}, Y0:SortTextFormatGlobalType{}), \and{SortInstr{}} (X1:SortInstr{}, Y1:SortInstr{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLoadOpM{}, \equals{SortLoadOpM{}, R} (Val:SortLoadOpM{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(K0:SortLoadOp{}, K1:SortMemArg{}))) [functional{}()] // functional
  axiom{}\implies{SortLoadOpM{}} (\and{SortLoadOpM{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(X0:SortLoadOp{}, X1:SortMemArg{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(Y0:SortLoadOp{}, Y1:SortMemArg{})), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(\and{SortLoadOp{}} (X0:SortLoadOp{}, Y0:SortLoadOp{}), \and{SortMemArg{}} (X1:SortMemArg{}, Y1:SortMemArg{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLocalDecls{}, \equals{SortLocalDecls{}, R} (Val:SortLocalDecls{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(K0:SortLocalDecl{}, K1:SortLocalDecls{}))) [functional{}()] // functional
  axiom{}\implies{SortLocalDecls{}} (\and{SortLocalDecls{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(X0:SortLocalDecl{}, X1:SortLocalDecls{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Y0:SortLocalDecl{}, Y1:SortLocalDecls{})), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(\and{SortLocalDecl{}} (X0:SortLocalDecl{}, Y0:SortLocalDecl{}), \and{SortLocalDecls{}} (X1:SortLocalDecls{}, Y1:SortLocalDecls{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemArg{}, \equals{SortMemArg{}, R} (Val:SortMemArg{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(K0:SortOffsetArg{}, K1:SortAlignArg{}))) [functional{}()] // functional
  axiom{}\implies{SortMemArg{}} (\and{SortMemArg{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(X0:SortOffsetArg{}, X1:SortAlignArg{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(Y0:SortOffsetArg{}, Y1:SortAlignArg{})), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(\and{SortOffsetArg{}} (X0:SortOffsetArg{}, Y0:SortOffsetArg{}), \and{SortAlignArg{}} (X1:SortAlignArg{}, Y1:SortAlignArg{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemorySpec{}, \equals{SortMemorySpec{}, R} (Val:SortMemorySpec{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(K0:SortInlineExport{}, K1:SortMemorySpec{}))) [functional{}()] // functional
  axiom{}\implies{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(X0:SortInlineExport{}, X1:SortMemorySpec{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(Y0:SortInlineExport{}, Y1:SortMemorySpec{})), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(\and{SortInlineExport{}} (X0:SortInlineExport{}, Y0:SortInlineExport{}), \and{SortMemorySpec{}} (X1:SortMemorySpec{}, Y1:SortMemorySpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(X0:SortInlineExport{}, X1:SortMemorySpec{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(Y0:SortInlineImport{}, Y1:SortMemType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMemorySpec{}, \equals{SortMemorySpec{}, R} (Val:SortMemorySpec{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(K0:SortInlineImport{}, K1:SortMemType{}))) [functional{}()] // functional
  axiom{}\implies{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(X0:SortInlineImport{}, X1:SortMemType{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(Y0:SortInlineImport{}, Y1:SortMemType{})), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(\and{SortInlineImport{}} (X0:SortInlineImport{}, Y0:SortInlineImport{}), \and{SortMemType{}} (X1:SortMemType{}, Y1:SortMemType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStoreOpM{}, \equals{SortStoreOpM{}, R} (Val:SortStoreOpM{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(K0:SortStoreOp{}, K1:SortMemArg{}))) [functional{}()] // functional
  axiom{}\implies{SortStoreOpM{}} (\and{SortStoreOpM{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(X0:SortStoreOp{}, X1:SortMemArg{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(Y0:SortStoreOp{}, Y1:SortMemArg{})), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(\and{SortStoreOp{}} (X0:SortStoreOp{}, Y0:SortStoreOp{}), \and{SortMemArg{}} (X1:SortMemArg{}, Y1:SortMemArg{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTableSpec{}, \equals{SortTableSpec{}, R} (Val:SortTableSpec{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(K0:SortInlineExport{}, K1:SortTableSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(X0:SortInlineExport{}, X1:SortTableSpec{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(Y0:SortInlineExport{}, Y1:SortTableSpec{})), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(\and{SortInlineExport{}} (X0:SortInlineExport{}, Y0:SortInlineExport{}), \and{SortTableSpec{}} (X1:SortTableSpec{}, Y1:SortTableSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(X0:SortInlineExport{}, X1:SortTableSpec{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(Y0:SortInlineImport{}, Y1:SortTableType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTableSpec{}, \equals{SortTableSpec{}, R} (Val:SortTableSpec{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(K0:SortInlineImport{}, K1:SortTableType{}))) [functional{}()] // functional
  axiom{}\implies{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(X0:SortInlineImport{}, X1:SortTableType{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(Y0:SortInlineImport{}, Y1:SortTableType{})), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(\and{SortInlineImport{}} (X0:SortInlineImport{}, Y0:SortInlineImport{}), \and{SortTableType{}} (X1:SortTableType{}, Y1:SortTableType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTableType{}, \equals{SortTableType{}, R} (Val:SortTableType{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableType'Unds'TextLimits'Unds'TableElemType{}(K0:SortTextLimits{}, K1:SortTableElemType{}))) [functional{}()] // functional
  axiom{}\implies{SortTableType{}} (\and{SortTableType{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableType'Unds'TextLimits'Unds'TableElemType{}(X0:SortTextLimits{}, X1:SortTableElemType{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableType'Unds'TextLimits'Unds'TableElemType{}(Y0:SortTextLimits{}, Y1:SortTableElemType{})), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableType'Unds'TextLimits'Unds'TableElemType{}(\and{SortTextLimits{}} (X0:SortTextLimits{}, Y0:SortTextLimits{}), \and{SortTableElemType{}} (X1:SortTableElemType{}, Y1:SortTableElemType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTextLimits{}, \equals{SortTextLimits{}, R} (Val:SortTextLimits{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TextLimits'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortTextLimits{}} (\and{SortTextLimits{}} (Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TextLimits'Unds'Int'Unds'Int{}(X0:SortInt{}, X1:SortInt{}), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TextLimits'Unds'Int'Unds'Int{}(Y0:SortInt{}, Y1:SortInt{})), Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TextLimits'Unds'Int'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncSpec{}, \equals{SortFuncSpec{}, R} (Val:SortFuncSpec{}, Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(K0:SortTypeUse{}, K1:SortLocalDecls{}, K2:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(X0:SortTypeUse{}, X1:SortLocalDecls{}, X2:SortInstrs{}), Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(Y0:SortTypeUse{}, Y1:SortLocalDecls{}, Y2:SortInstrs{})), Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(\and{SortTypeUse{}} (X0:SortTypeUse{}, Y0:SortTypeUse{}), \and{SortLocalDecls{}} (X1:SortLocalDecls{}, Y1:SortLocalDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andThenBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'impliesBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orElseBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'xorBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'xorInt'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPipe'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, LblaAbs{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaAbs{}(), LblaCeil{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaAbs{}(), LblaFloor{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaAbs{}(), LblaNearest{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaAbs{}(), LblaNeg{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaAbs{}(), LblaSqrt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaAbs{}(), LblaTrunc{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, LblaBlock{}(K0:SortVecType{}, K1:SortInstrs{}, K2:SortBlockMetaData{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaBlock{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{})), LblaBlock{}(\and{SortVecType{}} (X0:SortVecType{}, Y0:SortVecType{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}), \and{SortBlockMetaData{}} (X2:SortBlockMetaData{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaBr{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaBr'Unds'if{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaBr'Unds'table{}(Y0:SortInts{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaCall{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaCall'Unds'indirect{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaGlobal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaGlobal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaIf{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortInstrs{}, Y3:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaLoad{}(Y0:SortValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaLocal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaLocal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaLocal'Stop'tee{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, LblaBr{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), LblaBr{}(Y0:SortInt{})), LblaBr{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), LblaBr'Unds'if{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), LblaBr'Unds'table{}(Y0:SortInts{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), LblaCall{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), LblaCall'Unds'indirect{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), LblaGlobal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), LblaGlobal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), LblaIf{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortInstrs{}, Y3:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), LblaLoad{}(Y0:SortValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), LblaLocal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), LblaLocal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), LblaLocal'Stop'tee{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr{}(X0:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, LblaBr'Unds'if{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), LblaBr'Unds'if{}(Y0:SortInt{})), LblaBr'Unds'if{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), LblaBr'Unds'table{}(Y0:SortInts{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), LblaCall{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), LblaCall'Unds'indirect{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), LblaGlobal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), LblaGlobal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), LblaIf{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortInstrs{}, Y3:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), LblaLoad{}(Y0:SortValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), LblaLocal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), LblaLocal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), LblaLocal'Stop'tee{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'if{}(X0:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, LblaBr'Unds'table{}(K0:SortInts{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), LblaBr'Unds'table{}(Y0:SortInts{})), LblaBr'Unds'table{}(\and{SortInts{}} (X0:SortInts{}, Y0:SortInts{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), LblaCall{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), LblaCall'Unds'indirect{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), LblaGlobal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), LblaGlobal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), LblaIf{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortInstrs{}, Y3:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), LblaLoad{}(Y0:SortValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), LblaLocal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), LblaLocal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), LblaLocal'Stop'tee{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaBr'Unds'table{}(X0:SortInts{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, LblaCall{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), LblaCall{}(Y0:SortInt{})), LblaCall{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), LblaCall'Unds'indirect{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), LblaGlobal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), LblaGlobal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), LblaIf{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortInstrs{}, Y3:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), LblaLoad{}(Y0:SortValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), LblaLocal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), LblaLocal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), LblaLocal'Stop'tee{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall{}(X0:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, LblaCall'Unds'indirect{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), LblaCall'Unds'indirect{}(Y0:SortInt{})), LblaCall'Unds'indirect{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), LblaGlobal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), LblaGlobal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), LblaIf{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortInstrs{}, Y3:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), LblaLoad{}(Y0:SortValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), LblaLocal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), LblaLocal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), LblaLocal'Stop'tee{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaCall'Unds'indirect{}(X0:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, LblaCeil{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaCeil{}(), LblaFloor{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaCeil{}(), LblaNearest{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaCeil{}(), LblaNeg{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaCeil{}(), LblaSqrt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaCeil{}(), LblaTrunc{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIUnOp{}, \equals{SortIUnOp{}, R} (Val:SortIUnOp{}, LblaClz{}())) [functional{}()] // functional
  axiom{}\not{SortIUnOp{}} (\and{SortIUnOp{}} (LblaClz{}(), LblaCtz{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIUnOp{}} (\and{SortIUnOp{}} (LblaClz{}(), LblaPopcnt{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvti32Op{}, \equals{SortCvti32Op{}, R} (Val:SortCvti32Op{}, LblaConvert'Unds'i32'Unds's{}())) [functional{}()] // functional
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (LblaConvert'Unds'i32'Unds's{}(), LblaConvert'Unds'i32'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (LblaConvert'Unds'i32'Unds's{}(), LblaExtend'Unds'i32'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (LblaConvert'Unds'i32'Unds's{}(), LblaExtend'Unds'i32'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvti32Op{}, \equals{SortCvti32Op{}, R} (Val:SortCvti32Op{}, LblaConvert'Unds'i32'Unds'u{}())) [functional{}()] // functional
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (LblaConvert'Unds'i32'Unds'u{}(), LblaExtend'Unds'i32'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (LblaConvert'Unds'i32'Unds'u{}(), LblaExtend'Unds'i32'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvti64Op{}, \equals{SortCvti64Op{}, R} (Val:SortCvti64Op{}, LblaConvert'Unds'i64'Unds's{}())) [functional{}()] // functional
  axiom{}\not{SortCvti64Op{}} (\and{SortCvti64Op{}} (LblaConvert'Unds'i64'Unds's{}(), LblaConvert'Unds'i64'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvti64Op{}} (\and{SortCvti64Op{}} (LblaConvert'Unds'i64'Unds's{}(), LblaWrap'Unds'i64{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvti64Op{}, \equals{SortCvti64Op{}, R} (Val:SortCvti64Op{}, LblaConvert'Unds'i64'Unds'u{}())) [functional{}()] // functional
  axiom{}\not{SortCvti64Op{}} (\and{SortCvti64Op{}} (LblaConvert'Unds'i64'Unds'u{}(), LblaWrap'Unds'i64{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIUnOp{}, \equals{SortIUnOp{}, R} (Val:SortIUnOp{}, LblaCtz{}())) [functional{}()] // functional
  axiom{}\not{SortIUnOp{}} (\and{SortIUnOp{}} (LblaCtz{}(), LblaPopcnt{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaCvtOp{}(K0:SortValType{}, K1:SortCvtOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaCvtOp{}(Y0:SortValType{}, Y1:SortCvtOp{})), LblaCvtOp{}(\and{SortValType{}} (X0:SortValType{}, Y0:SortValType{}), \and{SortCvtOp{}} (X1:SortCvtOp{}, Y1:SortCvtOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaDrop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaFBinOp{}(Y0:SortFValType{}, Y1:SortFBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaFConst{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaFRelOp{}(Y0:SortFValType{}, Y1:SortFRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaFUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaGrow{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaIBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaIConst{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaIRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaIUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaNop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaReturn{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortDataDefn{}, \equals{SortDataDefn{}, R} (Val:SortDataDefn{}, LblaDataDefn{}(K0:SortInt{}, K1:SortInstrs{}, K2:SortBytes{}))) [functional{}()] // functional
  axiom{}\implies{SortDataDefn{}} (\and{SortDataDefn{}} (LblaDataDefn{}(X0:SortInt{}, X1:SortInstrs{}, X2:SortBytes{}), LblaDataDefn{}(Y0:SortInt{}, Y1:SortInstrs{}, Y2:SortBytes{})), LblaDataDefn{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}), \and{SortBytes{}} (X2:SortBytes{}, Y2:SortBytes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortDataDefn{}} (\and{SortDataDefn{}} (LblaDataDefn{}(X0:SortInt{}, X1:SortInstrs{}, X2:SortBytes{}), Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Int'Unds'Bytes{}(Y0:SortInt{}, Y1:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvtf64Op{}, \equals{SortCvtf64Op{}, R} (Val:SortCvtf64Op{}, LblaDemote'Unds'f64{}())) [functional{}()] // functional
  axiom{}\not{SortCvtf64Op{}} (\and{SortCvtf64Op{}} (LblaDemote'Unds'f64{}(), LblaTrunc'Unds'f64'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvtf64Op{}} (\and{SortCvtf64Op{}} (LblaDemote'Unds'f64{}(), LblaTrunc'Unds'f64'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaDrop{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), LblaFBinOp{}(Y0:SortFValType{}, Y1:SortFBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), LblaFConst{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), LblaFRelOp{}(Y0:SortFValType{}, Y1:SortFRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), LblaFUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), LblaGrow{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), LblaIBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), LblaIConst{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), LblaIRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), LblaIUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), LblaNop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), LblaReturn{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaDrop{}(), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortElemDefn{}, \equals{SortElemDefn{}, R} (Val:SortElemDefn{}, LblaElemDefn{}(K0:SortInt{}, K1:SortInstrs{}, K2:SortInts{}))) [functional{}()] // functional
  axiom{}\implies{SortElemDefn{}} (\and{SortElemDefn{}} (LblaElemDefn{}(X0:SortInt{}, X1:SortInstrs{}, X2:SortInts{}), LblaElemDefn{}(Y0:SortInt{}, Y1:SortInstrs{}, Y2:SortInts{})), LblaElemDefn{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}), \and{SortInts{}} (X2:SortInts{}, Y2:SortInts{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortElemDefn{}} (\and{SortElemDefn{}} (LblaElemDefn{}(X0:SortInt{}, X1:SortInstrs{}, X2:SortInts{}), Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Int'Unds'Ints{}(Y0:SortInt{}, Y1:SortInts{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTestOp{}, \equals{SortTestOp{}, R} (Val:SortTestOp{}, LblaEqz{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExportDefn{}, \equals{SortExportDefn{}, R} (Val:SortExportDefn{}, LblaExportDefn{}(K0:SortWasmString{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortExportDefn{}} (\and{SortExportDefn{}} (LblaExportDefn{}(X0:SortWasmString{}, X1:SortInt{}), LblaExportDefn{}(Y0:SortWasmString{}, Y1:SortInt{})), LblaExportDefn{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCvti32Op{}, \equals{SortCvti32Op{}, R} (Val:SortCvti32Op{}, LblaExtend'Unds'i32'Unds's{}())) [functional{}()] // functional
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (LblaExtend'Unds'i32'Unds's{}(), LblaExtend'Unds'i32'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvti32Op{}, \equals{SortCvti32Op{}, R} (Val:SortCvti32Op{}, LblaExtend'Unds'i32'Unds'u{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaFBinOp{}(K0:SortFValType{}, K1:SortFBinOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), LblaFBinOp{}(Y0:SortFValType{}, Y1:SortFBinOp{})), LblaFBinOp{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortFBinOp{}} (X1:SortFBinOp{}, Y1:SortFBinOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), LblaFConst{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), LblaFRelOp{}(Y0:SortFValType{}, Y1:SortFRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), LblaFUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), LblaGrow{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), LblaIBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), LblaIConst{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), LblaIRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), LblaIUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), LblaNop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), LblaReturn{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaFConst{}(K0:SortFValType{}, K1:SortNumber{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), LblaFConst{}(Y0:SortFValType{}, Y1:SortNumber{})), LblaFConst{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortNumber{}} (X1:SortNumber{}, Y1:SortNumber{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), LblaFRelOp{}(Y0:SortFValType{}, Y1:SortFRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), LblaFUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), LblaGrow{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), LblaIBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), LblaIConst{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), LblaIRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), LblaIUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), LblaNop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), LblaReturn{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaFRelOp{}(K0:SortFValType{}, K1:SortFRelOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), LblaFRelOp{}(Y0:SortFValType{}, Y1:SortFRelOp{})), LblaFRelOp{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortFRelOp{}} (X1:SortFRelOp{}, Y1:SortFRelOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), LblaFUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), LblaGrow{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), LblaIBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), LblaIConst{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), LblaIRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), LblaIUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), LblaNop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), LblaReturn{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaFUnOp{}(K0:SortFValType{}, K1:SortFUnOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), LblaFUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{})), LblaFUnOp{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortFUnOp{}} (X1:SortFUnOp{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), LblaGrow{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), LblaIBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), LblaIConst{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), LblaIRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), LblaIUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), LblaNop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), LblaReturn{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, LblaFloor{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaFloor{}(), LblaNearest{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaFloor{}(), LblaNeg{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaFloor{}(), LblaSqrt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaFloor{}(), LblaTrunc{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFuncDefn{}, \equals{SortFuncDefn{}, R} (Val:SortFuncDefn{}, LblaFuncDefn{}(K0:SortInt{}, K1:SortVecType{}, K2:SortInstrs{}, K3:SortFuncMetadata{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncDefn{}} (\and{SortFuncDefn{}} (LblaFuncDefn{}(X0:SortInt{}, X1:SortVecType{}, X2:SortInstrs{}, X3:SortFuncMetadata{}), LblaFuncDefn{}(Y0:SortInt{}, Y1:SortVecType{}, Y2:SortInstrs{}, Y3:SortFuncMetadata{})), LblaFuncDefn{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortVecType{}} (X1:SortVecType{}, Y1:SortVecType{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortFuncMetadata{}} (X3:SortFuncMetadata{}, Y3:SortFuncMetadata{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortImportDesc{}, \equals{SortImportDesc{}, R} (Val:SortImportDesc{}, LblaFuncDesc{}(K0:SortOptionalId{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDesc{}} (\and{SortImportDesc{}} (LblaFuncDesc{}(X0:SortOptionalId{}, X1:SortInt{}), LblaFuncDesc{}(Y0:SortOptionalId{}, Y1:SortInt{})), LblaFuncDesc{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (LblaFuncDesc{}(X0:SortOptionalId{}, X1:SortInt{}), LblaGlobalDesc{}(Y0:SortOptionalId{}, Y1:SortGlobalType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (LblaFuncDesc{}(X0:SortOptionalId{}, X1:SortInt{}), LblaMemoryDesc{}(Y0:SortOptionalId{}, Y1:SortLimits{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (LblaFuncDesc{}(X0:SortOptionalId{}, X1:SortInt{}), LblaTableDesc{}(Y0:SortOptionalId{}, Y1:SortLimits{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFuncType{}, \equals{SortFuncType{}, R} (Val:SortFuncType{}, LblaFuncType{}(K0:SortVecType{}, K1:SortVecType{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncType{}} (\and{SortFuncType{}} (LblaFuncType{}(X0:SortVecType{}, X1:SortVecType{}), LblaFuncType{}(Y0:SortVecType{}, Y1:SortVecType{})), LblaFuncType{}(\and{SortVecType{}} (X0:SortVecType{}, Y0:SortVecType{}), \and{SortVecType{}} (X1:SortVecType{}, Y1:SortVecType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, LblaGlobal'Stop'get{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'get{}(X0:SortInt{}), LblaGlobal'Stop'get{}(Y0:SortInt{})), LblaGlobal'Stop'get{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'get{}(X0:SortInt{}), LblaGlobal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'get{}(X0:SortInt{}), LblaIf{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortInstrs{}, Y3:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'get{}(X0:SortInt{}), LblaLoad{}(Y0:SortValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'get{}(X0:SortInt{}), LblaLocal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'get{}(X0:SortInt{}), LblaLocal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'get{}(X0:SortInt{}), LblaLocal'Stop'tee{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'get{}(X0:SortInt{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'get{}(X0:SortInt{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'get{}(X0:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'get{}(X0:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'get{}(X0:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'get{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'get{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'get{}(X0:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'get{}(X0:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, LblaGlobal'Stop'set{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'set{}(X0:SortInt{}), LblaGlobal'Stop'set{}(Y0:SortInt{})), LblaGlobal'Stop'set{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'set{}(X0:SortInt{}), LblaIf{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortInstrs{}, Y3:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'set{}(X0:SortInt{}), LblaLoad{}(Y0:SortValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'set{}(X0:SortInt{}), LblaLocal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'set{}(X0:SortInt{}), LblaLocal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'set{}(X0:SortInt{}), LblaLocal'Stop'tee{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'set{}(X0:SortInt{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'set{}(X0:SortInt{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'set{}(X0:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'set{}(X0:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'set{}(X0:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'set{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'set{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'set{}(X0:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaGlobal'Stop'set{}(X0:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortGlobalDefn{}, \equals{SortGlobalDefn{}, R} (Val:SortGlobalDefn{}, LblaGlobalDefn{}(K0:SortGlobalType{}, K1:SortInstrs{}, K2:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalDefn{}} (\and{SortGlobalDefn{}} (LblaGlobalDefn{}(X0:SortGlobalType{}, X1:SortInstrs{}, X2:SortOptionalId{}), LblaGlobalDefn{}(Y0:SortGlobalType{}, Y1:SortInstrs{}, Y2:SortOptionalId{})), LblaGlobalDefn{}(\and{SortGlobalType{}} (X0:SortGlobalType{}, Y0:SortGlobalType{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}), \and{SortOptionalId{}} (X2:SortOptionalId{}, Y2:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortImportDesc{}, \equals{SortImportDesc{}, R} (Val:SortImportDesc{}, LblaGlobalDesc{}(K0:SortOptionalId{}, K1:SortGlobalType{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDesc{}} (\and{SortImportDesc{}} (LblaGlobalDesc{}(X0:SortOptionalId{}, X1:SortGlobalType{}), LblaGlobalDesc{}(Y0:SortOptionalId{}, Y1:SortGlobalType{})), LblaGlobalDesc{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortGlobalType{}} (X1:SortGlobalType{}, Y1:SortGlobalType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (LblaGlobalDesc{}(X0:SortOptionalId{}, X1:SortGlobalType{}), LblaMemoryDesc{}(Y0:SortOptionalId{}, Y1:SortLimits{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (LblaGlobalDesc{}(X0:SortOptionalId{}, X1:SortGlobalType{}), LblaTableDesc{}(Y0:SortOptionalId{}, Y1:SortLimits{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortGlobalType{}, \equals{SortGlobalType{}, R} (Val:SortGlobalType{}, LblaGlobalType{}(K0:SortMut{}, K1:SortValType{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalType{}} (\and{SortGlobalType{}} (LblaGlobalType{}(X0:SortMut{}, X1:SortValType{}), LblaGlobalType{}(Y0:SortMut{}, Y1:SortValType{})), LblaGlobalType{}(\and{SortMut{}} (X0:SortMut{}, Y0:SortMut{}), \and{SortValType{}} (X1:SortValType{}, Y1:SortValType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaGrow{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), LblaIBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), LblaIConst{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), LblaIRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), LblaIUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), LblaNop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), LblaReturn{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaGrow{}(), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaIBinOp{}(K0:SortIValType{}, K1:SortIBinOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), LblaIBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{})), LblaIBinOp{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortIBinOp{}} (X1:SortIBinOp{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), LblaIConst{}(Y0:SortIValType{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), LblaIRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), LblaIUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), LblaNop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), LblaReturn{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaIConst{}(K0:SortIValType{}, K1:SortWasmInt{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), LblaIConst{}(Y0:SortIValType{}, Y1:SortWasmInt{})), LblaIConst{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortWasmInt{}} (X1:SortWasmInt{}, Y1:SortWasmInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), LblaIRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), LblaIUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), LblaNop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), LblaReturn{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaIRelOp{}(K0:SortIValType{}, K1:SortIRelOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), LblaIRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{})), LblaIRelOp{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortIRelOp{}} (X1:SortIRelOp{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), LblaIUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), LblaNop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), LblaReturn{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaIUnOp{}(K0:SortIValType{}, K1:SortIUnOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), LblaIUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{})), LblaIUnOp{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortIUnOp{}} (X1:SortIUnOp{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), LblaNop{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), LblaReturn{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, LblaIf{}(K0:SortVecType{}, K1:SortInstrs{}, K2:SortInstrs{}, K3:SortBlockMetaData{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (LblaIf{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortInstrs{}, X3:SortBlockMetaData{}), LblaIf{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortInstrs{}, Y3:SortBlockMetaData{})), LblaIf{}(\and{SortVecType{}} (X0:SortVecType{}, Y0:SortVecType{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortBlockMetaData{}} (X3:SortBlockMetaData{}, Y3:SortBlockMetaData{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaIf{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortInstrs{}, X3:SortBlockMetaData{}), LblaLoad{}(Y0:SortValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaIf{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortInstrs{}, X3:SortBlockMetaData{}), LblaLocal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaIf{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortInstrs{}, X3:SortBlockMetaData{}), LblaLocal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaIf{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortInstrs{}, X3:SortBlockMetaData{}), LblaLocal'Stop'tee{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaIf{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortInstrs{}, X3:SortBlockMetaData{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaIf{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortInstrs{}, X3:SortBlockMetaData{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaIf{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortInstrs{}, X3:SortBlockMetaData{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaIf{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortInstrs{}, X3:SortBlockMetaData{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaIf{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortInstrs{}, X3:SortBlockMetaData{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaIf{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortInstrs{}, X3:SortBlockMetaData{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaIf{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortInstrs{}, X3:SortBlockMetaData{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaIf{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortInstrs{}, X3:SortBlockMetaData{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaIf{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortInstrs{}, X3:SortBlockMetaData{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortImportDefn{}, \equals{SortImportDefn{}, R} (Val:SortImportDefn{}, LblaImportDefn{}(K0:SortWasmString{}, K1:SortWasmString{}, K2:SortImportDesc{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDefn{}} (\and{SortImportDefn{}} (LblaImportDefn{}(X0:SortWasmString{}, X1:SortWasmString{}, X2:SortImportDesc{}), LblaImportDefn{}(Y0:SortWasmString{}, Y1:SortWasmString{}, Y2:SortImportDesc{})), LblaImportDefn{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}), \and{SortWasmString{}} (X1:SortWasmString{}, Y1:SortWasmString{}), \and{SortImportDesc{}} (X2:SortImportDesc{}, Y2:SortImportDesc{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, LblaLoad{}(K0:SortValType{}, K1:SortLoadOp{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (LblaLoad{}(X0:SortValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaLoad{}(Y0:SortValType{}, Y1:SortLoadOp{}, Y2:SortInt{})), LblaLoad{}(\and{SortValType{}} (X0:SortValType{}, Y0:SortValType{}), \and{SortLoadOp{}} (X1:SortLoadOp{}, Y1:SortLoadOp{}), \and{SortInt{}} (X2:SortInt{}, Y2:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoad{}(X0:SortValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaLocal'Stop'get{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoad{}(X0:SortValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaLocal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoad{}(X0:SortValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaLocal'Stop'tee{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoad{}(X0:SortValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoad{}(X0:SortValType{}, X1:SortLoadOp{}, X2:SortInt{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoad{}(X0:SortValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoad{}(X0:SortValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoad{}(X0:SortValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoad{}(X0:SortValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoad{}(X0:SortValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoad{}(X0:SortValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoad{}(X0:SortValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, LblaLocal'Stop'get{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'get{}(X0:SortInt{}), LblaLocal'Stop'get{}(Y0:SortInt{})), LblaLocal'Stop'get{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'get{}(X0:SortInt{}), LblaLocal'Stop'set{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'get{}(X0:SortInt{}), LblaLocal'Stop'tee{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'get{}(X0:SortInt{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'get{}(X0:SortInt{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'get{}(X0:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'get{}(X0:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'get{}(X0:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'get{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'get{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'get{}(X0:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'get{}(X0:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, LblaLocal'Stop'set{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'set{}(X0:SortInt{}), LblaLocal'Stop'set{}(Y0:SortInt{})), LblaLocal'Stop'set{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'set{}(X0:SortInt{}), LblaLocal'Stop'tee{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'set{}(X0:SortInt{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'set{}(X0:SortInt{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'set{}(X0:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'set{}(X0:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'set{}(X0:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'set{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'set{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'set{}(X0:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'set{}(X0:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, LblaLocal'Stop'tee{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'tee{}(X0:SortInt{}), LblaLocal'Stop'tee{}(Y0:SortInt{})), LblaLocal'Stop'tee{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'tee{}(X0:SortInt{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'tee{}(X0:SortInt{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'tee{}(X0:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'tee{}(X0:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'tee{}(X0:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'tee{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'tee{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'tee{}(X0:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLocal'Stop'tee{}(X0:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, LblaLoop{}(K0:SortVecType{}, K1:SortInstrs{}, K2:SortBlockMetaData{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (LblaLoop{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaLoop{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortBlockMetaData{})), LblaLoop{}(\and{SortVecType{}} (X0:SortVecType{}, Y0:SortVecType{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}), \and{SortBlockMetaData{}} (X2:SortBlockMetaData{}, Y2:SortBlockMetaData{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoop{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoop{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoop{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoop{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoop{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoop{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoop{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaLoop{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMemoryDefn{}, \equals{SortMemoryDefn{}, R} (Val:SortMemoryDefn{}, LblaMemoryDefn{}(K0:SortLimits{}, K1:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortMemoryDefn{}} (\and{SortMemoryDefn{}} (LblaMemoryDefn{}(X0:SortLimits{}, X1:SortOptionalId{}), LblaMemoryDefn{}(Y0:SortLimits{}, Y1:SortOptionalId{})), LblaMemoryDefn{}(\and{SortLimits{}} (X0:SortLimits{}, Y0:SortLimits{}), \and{SortOptionalId{}} (X1:SortOptionalId{}, Y1:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortImportDesc{}, \equals{SortImportDesc{}, R} (Val:SortImportDesc{}, LblaMemoryDesc{}(K0:SortOptionalId{}, K1:SortLimits{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDesc{}} (\and{SortImportDesc{}} (LblaMemoryDesc{}(X0:SortOptionalId{}, X1:SortLimits{}), LblaMemoryDesc{}(Y0:SortOptionalId{}, Y1:SortLimits{})), LblaMemoryDesc{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortLimits{}} (X1:SortLimits{}, Y1:SortLimits{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (LblaMemoryDesc{}(X0:SortOptionalId{}, X1:SortLimits{}), LblaTableDesc{}(Y0:SortOptionalId{}, Y1:SortLimits{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortModuleDecl{}, \equals{SortModuleDecl{}, R} (Val:SortModuleDecl{}, LblaModuleDecl{}(K0:SortDefns{}, K1:SortDefns{}, K2:SortDefns{}, K3:SortDefns{}, K4:SortDefns{}, K5:SortDefns{}, K6:SortDefns{}, K7:SortDefns{}, K8:SortDefns{}, K9:SortDefns{}, K10:SortModuleMetadata{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleDecl{}} (\and{SortModuleDecl{}} (LblaModuleDecl{}(X0:SortDefns{}, X1:SortDefns{}, X2:SortDefns{}, X3:SortDefns{}, X4:SortDefns{}, X5:SortDefns{}, X6:SortDefns{}, X7:SortDefns{}, X8:SortDefns{}, X9:SortDefns{}, X10:SortModuleMetadata{}), LblaModuleDecl{}(Y0:SortDefns{}, Y1:SortDefns{}, Y2:SortDefns{}, Y3:SortDefns{}, Y4:SortDefns{}, Y5:SortDefns{}, Y6:SortDefns{}, Y7:SortDefns{}, Y8:SortDefns{}, Y9:SortDefns{}, Y10:SortModuleMetadata{})), LblaModuleDecl{}(\and{SortDefns{}} (X0:SortDefns{}, Y0:SortDefns{}), \and{SortDefns{}} (X1:SortDefns{}, Y1:SortDefns{}), \and{SortDefns{}} (X2:SortDefns{}, Y2:SortDefns{}), \and{SortDefns{}} (X3:SortDefns{}, Y3:SortDefns{}), \and{SortDefns{}} (X4:SortDefns{}, Y4:SortDefns{}), \and{SortDefns{}} (X5:SortDefns{}, Y5:SortDefns{}), \and{SortDefns{}} (X6:SortDefns{}, Y6:SortDefns{}), \and{SortDefns{}} (X7:SortDefns{}, Y7:SortDefns{}), \and{SortDefns{}} (X8:SortDefns{}, Y8:SortDefns{}), \and{SortDefns{}} (X9:SortDefns{}, Y9:SortDefns{}), \and{SortModuleMetadata{}} (X10:SortModuleMetadata{}, Y10:SortModuleMetadata{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, LblaNearest{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaNearest{}(), LblaNeg{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaNearest{}(), LblaSqrt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaNearest{}(), LblaTrunc{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, LblaNeg{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaNeg{}(), LblaSqrt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaNeg{}(), LblaTrunc{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaNop{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaNop{}(), LblaReturn{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaNop{}(), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaNop{}(), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaNop{}(), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaNop{}(), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaNop{}(), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaNop{}(), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaNop{}(), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaNop{}(), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaNop{}(), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaNop{}(), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaNop{}(), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaNop{}(), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaNop{}(), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaNop{}(), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIUnOp{}, \equals{SortIUnOp{}, R} (Val:SortIUnOp{}, LblaPopcnt{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCvtf32Op{}, \equals{SortCvtf32Op{}, R} (Val:SortCvtf32Op{}, LblaPromote'Unds'f32{}())) [functional{}()] // functional
  axiom{}\not{SortCvtf32Op{}} (\and{SortCvtf32Op{}} (LblaPromote'Unds'f32{}(), LblaTrunc'Unds'f32'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvtf32Op{}} (\and{SortCvtf32Op{}} (LblaPromote'Unds'f32{}(), LblaTrunc'Unds'f32'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaReturn{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaReturn{}(), LblaSelect{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaReturn{}(), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaReturn{}(), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaReturn{}(), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaReturn{}(), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaReturn{}(), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaReturn{}(), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaReturn{}(), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaReturn{}(), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaReturn{}(), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaReturn{}(), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaReturn{}(), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaReturn{}(), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaReturn{}(), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaSelect{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSelect{}(), LblaSize{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSelect{}(), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSelect{}(), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSelect{}(), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSelect{}(), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSelect{}(), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSelect{}(), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSelect{}(), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSelect{}(), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSelect{}(), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSelect{}(), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSelect{}(), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSelect{}(), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaSize{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSize{}(), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSize{}(), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSize{}(), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSize{}(), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSize{}(), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSize{}(), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSize{}(), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSize{}(), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSize{}(), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSize{}(), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSize{}(), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaSize{}(), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, LblaSqrt{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (LblaSqrt{}(), LblaTrunc{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStartDefn{}, \equals{SortStartDefn{}, R} (Val:SortStartDefn{}, LblaStartDefn{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortStartDefn{}} (\and{SortStartDefn{}} (LblaStartDefn{}(X0:SortInt{}), LblaStartDefn{}(Y0:SortInt{})), LblaStartDefn{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, LblaStore{}(K0:SortValType{}, K1:SortStoreOp{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (LblaStore{}(X0:SortValType{}, X1:SortStoreOp{}, X2:SortInt{}), LblaStore{}(Y0:SortValType{}, Y1:SortStoreOp{}, Y2:SortInt{})), LblaStore{}(\and{SortValType{}} (X0:SortValType{}, Y0:SortValType{}), \and{SortStoreOp{}} (X1:SortStoreOp{}, Y1:SortStoreOp{}), \and{SortInt{}} (X2:SortInt{}, Y2:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaStore{}(X0:SortValType{}, X1:SortStoreOp{}, X2:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaStore{}(X0:SortValType{}, X1:SortStoreOp{}, X2:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaStore{}(X0:SortValType{}, X1:SortStoreOp{}, X2:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaStore{}(X0:SortValType{}, X1:SortStoreOp{}, X2:SortInt{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaStore{}(X0:SortValType{}, X1:SortStoreOp{}, X2:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaStore{}(X0:SortValType{}, X1:SortStoreOp{}, X2:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (LblaStore{}(X0:SortValType{}, X1:SortStoreOp{}, X2:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTableDefn{}, \equals{SortTableDefn{}, R} (Val:SortTableDefn{}, LblaTableDefn{}(K0:SortLimits{}, K1:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortTableDefn{}} (\and{SortTableDefn{}} (LblaTableDefn{}(X0:SortLimits{}, X1:SortOptionalId{}), LblaTableDefn{}(Y0:SortLimits{}, Y1:SortOptionalId{})), LblaTableDefn{}(\and{SortLimits{}} (X0:SortLimits{}, Y0:SortLimits{}), \and{SortOptionalId{}} (X1:SortOptionalId{}, Y1:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortImportDesc{}, \equals{SortImportDesc{}, R} (Val:SortImportDesc{}, LblaTableDesc{}(K0:SortOptionalId{}, K1:SortLimits{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDesc{}} (\and{SortImportDesc{}} (LblaTableDesc{}(X0:SortOptionalId{}, X1:SortLimits{}), LblaTableDesc{}(Y0:SortOptionalId{}, Y1:SortLimits{})), LblaTableDesc{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortLimits{}} (X1:SortLimits{}, Y1:SortLimits{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaTestOp{}(K0:SortIValType{}, K1:SortTestOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaTestOp{}(X0:SortIValType{}, X1:SortTestOp{}), LblaTestOp{}(Y0:SortIValType{}, Y1:SortTestOp{})), LblaTestOp{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortTestOp{}} (X1:SortTestOp{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaTestOp{}(X0:SortIValType{}, X1:SortTestOp{}), LblaUnreachable{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaTestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaTestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaTestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaTestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaTestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaTestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaTestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaTestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaTestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaTestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, LblaTrunc{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCvtf32Op{}, \equals{SortCvtf32Op{}, R} (Val:SortCvtf32Op{}, LblaTrunc'Unds'f32'Unds's{}())) [functional{}()] // functional
  axiom{}\not{SortCvtf32Op{}} (\and{SortCvtf32Op{}} (LblaTrunc'Unds'f32'Unds's{}(), LblaTrunc'Unds'f32'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvtf32Op{}, \equals{SortCvtf32Op{}, R} (Val:SortCvtf32Op{}, LblaTrunc'Unds'f32'Unds'u{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCvtf64Op{}, \equals{SortCvtf64Op{}, R} (Val:SortCvtf64Op{}, LblaTrunc'Unds'f64'Unds's{}())) [functional{}()] // functional
  axiom{}\not{SortCvtf64Op{}} (\and{SortCvtf64Op{}} (LblaTrunc'Unds'f64'Unds's{}(), LblaTrunc'Unds'f64'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvtf64Op{}, \equals{SortCvtf64Op{}, R} (Val:SortCvtf64Op{}, LblaTrunc'Unds'f64'Unds'u{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTypeDefn{}, \equals{SortTypeDefn{}, R} (Val:SortTypeDefn{}, LblaTypeDefn{}(K0:SortFuncType{}, K1:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeDefn{}} (\and{SortTypeDefn{}} (LblaTypeDefn{}(X0:SortFuncType{}, X1:SortOptionalId{}), LblaTypeDefn{}(Y0:SortFuncType{}, Y1:SortOptionalId{})), LblaTypeDefn{}(\and{SortFuncType{}} (X0:SortFuncType{}, Y0:SortFuncType{}), \and{SortOptionalId{}} (X1:SortOptionalId{}, Y1:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, LblaUnreachable{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaUnreachable{}(), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaUnreachable{}(), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaUnreachable{}(), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaUnreachable{}(), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaUnreachable{}(), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaUnreachable{}(), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaUnreachable{}(), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaUnreachable{}(), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaUnreachable{}(), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (LblaUnreachable{}(), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVecType{}, \equals{SortVecType{}, R} (Val:SortVecType{}, LblaVecType{}(K0:SortValTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortVecType{}} (\and{SortVecType{}} (LblaVecType{}(X0:SortValTypes{}), LblaVecType{}(Y0:SortValTypes{})), LblaVecType{}(\and{SortValTypes{}} (X0:SortValTypes{}, Y0:SortValTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCvti64Op{}, \equals{SortCvti64Op{}, R} (Val:SortCvti64Op{}, LblaWrap'Unds'i64{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblabsFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAlignArg{}, \equals{SortAlignArg{}, R} (Val:SortAlignArg{}, Lblalign'EqlsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'AlignArg'Unds'WasmInt{}(K0:SortWasmInt{}))) [functional{}()] // functional
  axiom{}\implies{SortAlignArg{}} (\and{SortAlignArg{}} (Lblalign'EqlsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'AlignArg'Unds'WasmInt{}(X0:SortWasmInt{}), Lblalign'EqlsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'AlignArg'Unds'WasmInt{}(Y0:SortWasmInt{})), Lblalign'EqlsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'AlignArg'Unds'WasmInt{}(\and{SortWasmInt{}} (X0:SortWasmInt{}, Y0:SortWasmInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortAlloc{}, \equals{SortAlloc{}, R} (Val:SortAlloc{}, Lblallocfunc'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'Int'Unds'Int'Unds'FuncType'Unds'VecType'Unds'Instrs'Unds'FuncMetadata{}(K0:SortInt{}, K1:SortInt{}, K2:SortFuncType{}, K3:SortVecType{}, K4:SortInstrs{}, K5:SortFuncMetadata{}))) [functional{}()] // functional
  axiom{}\implies{SortAlloc{}} (\and{SortAlloc{}} (Lblallocfunc'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'Int'Unds'Int'Unds'FuncType'Unds'VecType'Unds'Instrs'Unds'FuncMetadata{}(X0:SortInt{}, X1:SortInt{}, X2:SortFuncType{}, X3:SortVecType{}, X4:SortInstrs{}, X5:SortFuncMetadata{}), Lblallocfunc'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'Int'Unds'Int'Unds'FuncType'Unds'VecType'Unds'Instrs'Unds'FuncMetadata{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortFuncType{}, Y3:SortVecType{}, Y4:SortInstrs{}, Y5:SortFuncMetadata{})), Lblallocfunc'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'Int'Unds'Int'Unds'FuncType'Unds'VecType'Unds'Instrs'Unds'FuncMetadata{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortFuncType{}} (X2:SortFuncType{}, Y2:SortFuncType{}), \and{SortVecType{}} (X3:SortVecType{}, Y3:SortVecType{}), \and{SortInstrs{}} (X4:SortInstrs{}, Y4:SortInstrs{}), \and{SortFuncMetadata{}} (X5:SortFuncMetadata{}, Y5:SortFuncMetadata{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocfunc'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'Int'Unds'Int'Unds'FuncType'Unds'VecType'Unds'Instrs'Unds'FuncMetadata{}(X0:SortInt{}, X1:SortInt{}, X2:SortFuncType{}, X3:SortVecType{}, X4:SortInstrs{}, X5:SortFuncMetadata{}), Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(Y0:SortOptionalId{}, Y1:SortGlobalType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocfunc'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'Int'Unds'Int'Unds'FuncType'Unds'VecType'Unds'Instrs'Unds'FuncMetadata{}(X0:SortInt{}, X1:SortInt{}, X2:SortFuncType{}, X3:SortVecType{}, X4:SortInstrs{}, X5:SortFuncMetadata{}), Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocfunc'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'Int'Unds'Int'Unds'FuncType'Unds'VecType'Unds'Instrs'Unds'FuncMetadata{}(X0:SortInt{}, X1:SortInt{}, X2:SortFuncType{}, X3:SortVecType{}, X4:SortInstrs{}, X5:SortFuncMetadata{}), Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocfunc'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'Int'Unds'Int'Unds'FuncType'Unds'VecType'Unds'Instrs'Unds'FuncMetadata{}(X0:SortInt{}, X1:SortInt{}, X2:SortFuncType{}, X3:SortVecType{}, X4:SortInstrs{}, X5:SortFuncMetadata{}), Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'FuncType{}(Y0:SortOptionalId{}, Y1:SortFuncType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAlloc{}, \equals{SortAlloc{}, R} (Val:SortAlloc{}, Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(K0:SortOptionalId{}, K1:SortGlobalType{}))) [functional{}()] // functional
  axiom{}\implies{SortAlloc{}} (\and{SortAlloc{}} (Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(X0:SortOptionalId{}, X1:SortGlobalType{}), Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(Y0:SortOptionalId{}, Y1:SortGlobalType{})), Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortGlobalType{}} (X1:SortGlobalType{}, Y1:SortGlobalType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(X0:SortOptionalId{}, X1:SortGlobalType{}), Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(X0:SortOptionalId{}, X1:SortGlobalType{}), Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(X0:SortOptionalId{}, X1:SortGlobalType{}), Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'FuncType{}(Y0:SortOptionalId{}, Y1:SortFuncType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAlloc{}, \equals{SortAlloc{}, R} (Val:SortAlloc{}, Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(K0:SortOptionalId{}, K1:SortInt{}, K2:SortOptionalInt{}))) [functional{}()] // functional
  axiom{}\implies{SortAlloc{}} (\and{SortAlloc{}} (Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{}), Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{})), Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortOptionalInt{}} (X2:SortOptionalInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{}), Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{}), Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'FuncType{}(Y0:SortOptionalId{}, Y1:SortFuncType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAlloc{}, \equals{SortAlloc{}, R} (Val:SortAlloc{}, Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(K0:SortOptionalId{}, K1:SortInt{}, K2:SortOptionalInt{}))) [functional{}()] // functional
  axiom{}\implies{SortAlloc{}} (\and{SortAlloc{}} (Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{}), Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{})), Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortOptionalInt{}} (X2:SortOptionalInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAlloc{}} (\and{SortAlloc{}} (Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{}), Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'FuncType{}(Y0:SortOptionalId{}, Y1:SortFuncType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAlloc{}, \equals{SortAlloc{}, R} (Val:SortAlloc{}, Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'FuncType{}(K0:SortOptionalId{}, K1:SortFuncType{}))) [functional{}()] // functional
  axiom{}\implies{SortAlloc{}} (\and{SortAlloc{}} (Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'FuncType{}(X0:SortOptionalId{}, X1:SortFuncType{}), Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'FuncType{}(Y0:SortOptionalId{}, Y1:SortFuncType{})), Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'FuncType{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortFuncType{}} (X1:SortFuncType{}, Y1:SortFuncType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblatanFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortEndianness{}, \equals{SortEndianness{}, R} (Val:SortEndianness{}, LblbigEndianBytes{}())) [functional{}()] // functional
  axiom{}\not{SortEndianness{}} (\and{SortEndianness{}} (LblbigEndianBytes{}(), LbllittleEndianBytes{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBlockInstr{}, \equals{SortBlockInstr{}, R} (Val:SortBlockInstr{}, Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{})), Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortOptionalId{}} (X3:SortOptionalId{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}, Y4:SortInstrs{}, Y5:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(K0:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{})), Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(\and{SortElemSegment{}} (X0:SortElemSegment{}, Y0:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(K0:SortTypeUse{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{})), Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(\and{SortTypeUse{}} (X0:SortTypeUse{}, Y0:SortTypeUse{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblceilFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblcosFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortContext{}, \equals{SortContext{}, R} (Val:SortContext{}, Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}, K2:SortMap{}, K3:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortContext{}} (\and{SortContext{}} (Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(X0:SortMap{}, X1:SortMap{}, X2:SortMap{}, X3:SortMap{}), Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Y0:SortMap{}, Y1:SortMap{}, Y2:SortMap{}, Y3:SortMap{})), Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}), \and{SortMap{}} (X1:SortMap{}, Y1:SortMap{}), \and{SortMap{}} (X2:SortMap{}, Y2:SortMap{}), \and{SortMap{}} (X3:SortMap{}, Y3:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortDataDefn{}, \equals{SortDataDefn{}, R} (Val:SortDataDefn{}, Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Int'Unds'Bytes{}(K0:SortInt{}, K1:SortBytes{}))) [functional{}()] // functional
  axiom{}\implies{SortDataDefn{}} (\and{SortDataDefn{}} (Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Int'Unds'Bytes{}(X0:SortInt{}, X1:SortBytes{}), Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Int'Unds'Bytes{}(Y0:SortInt{}, Y1:SortBytes{})), Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Int'Unds'Bytes{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortBytes{}} (X1:SortBytes{}, Y1:SortBytes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortElemDefn{}, \equals{SortElemDefn{}, R} (Val:SortElemDefn{}, Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Int'Unds'Ints{}(K0:SortInt{}, K1:SortInts{}))) [functional{}()] // functional
  axiom{}\implies{SortElemDefn{}} (\and{SortElemDefn{}} (Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Int'Unds'Ints{}(X0:SortInt{}, X1:SortInts{}), Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Int'Unds'Ints{}(Y0:SortInt{}, Y1:SortInts{})), Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Int'Unds'Ints{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInts{}} (X1:SortInts{}, Y1:SortInts{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblexpFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblexponentBitsFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblexponentFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFValType{}, \equals{SortFValType{}, R} (Val:SortFValType{}, Lblf32{}())) [functional{}()] // functional
  axiom{}\not{SortFValType{}} (\and{SortFValType{}} (Lblf32{}(), Lblf64{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFValType{}, \equals{SortFValType{}, R} (Val:SortFValType{}, Lblf64{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, LblfloatAdd{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatAdd{}(), LblfloatCopysign{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatAdd{}(), LblfloatDiv{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatAdd{}(), LblfloatMax{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatAdd{}(), LblfloatMin{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatAdd{}(), LblfloatMul{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatAdd{}(), LblfloatSub{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, LblfloatCopysign{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatCopysign{}(), LblfloatDiv{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatCopysign{}(), LblfloatMax{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatCopysign{}(), LblfloatMin{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatCopysign{}(), LblfloatMul{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatCopysign{}(), LblfloatSub{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, LblfloatDiv{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatDiv{}(), LblfloatMax{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatDiv{}(), LblfloatMin{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatDiv{}(), LblfloatMul{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatDiv{}(), LblfloatSub{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, LblfloatEq{}())) [functional{}()] // functional
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatEq{}(), LblfloatGe{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatEq{}(), LblfloatGt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatEq{}(), LblfloatLe{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatEq{}(), LblfloatLt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatEq{}(), LblfloatNe{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, LblfloatGe{}())) [functional{}()] // functional
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatGe{}(), LblfloatGt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatGe{}(), LblfloatLe{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatGe{}(), LblfloatLt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatGe{}(), LblfloatNe{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, LblfloatGt{}())) [functional{}()] // functional
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatGt{}(), LblfloatLe{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatGt{}(), LblfloatLt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatGt{}(), LblfloatNe{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, LblfloatLe{}())) [functional{}()] // functional
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatLe{}(), LblfloatLt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatLe{}(), LblfloatNe{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, LblfloatLt{}())) [functional{}()] // functional
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatLt{}(), LblfloatNe{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, LblfloatMax{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatMax{}(), LblfloatMin{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatMax{}(), LblfloatMul{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatMax{}(), LblfloatSub{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, LblfloatMin{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatMin{}(), LblfloatMul{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatMin{}(), LblfloatSub{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, LblfloatMul{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatMul{}(), LblfloatSub{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, LblfloatNe{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, LblfloatSub{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblfloorFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFrame{}, \equals{SortFrame{}, R} (Val:SortFrame{}, Lblframe'UndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map{}(K0:SortInt{}, K1:SortValTypes{}, K2:SortValStack{}, K3:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFrame{}} (\and{SortFrame{}} (Lblframe'UndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map{}(X0:SortInt{}, X1:SortValTypes{}, X2:SortValStack{}, X3:SortMap{}), Lblframe'UndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map{}(Y0:SortInt{}, Y1:SortValTypes{}, Y2:SortValStack{}, Y3:SortMap{})), Lblframe'UndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortValTypes{}} (X1:SortValTypes{}, Y1:SortValTypes{}), \and{SortValStack{}} (X2:SortValStack{}, Y2:SortValStack{}), \and{SortMap{}} (X3:SortMap{}, Y3:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncMetadata{}, \equals{SortFuncMetadata{}, R} (Val:SortFuncMetadata{}, LblfuncMeta{}(K0:SortOptionalId{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncMetadata{}} (\and{SortFuncMetadata{}} (LblfuncMeta{}(X0:SortOptionalId{}, X1:SortMap{}), LblfuncMeta{}(Y0:SortOptionalId{}, Y1:SortMap{})), LblfuncMeta{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortMap{}} (X1:SortMap{}, Y1:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortAllocatedKind{}, \equals{SortAllocatedKind{}, R} (Val:SortAllocatedKind{}, Lblfunc'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}())) [functional{}()] // functional
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblfunc'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(), Lblglobal'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblfunc'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(), Lblmemory'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblfunc'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(), Lbltable'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTableElemType{}, \equals{SortTableElemType{}, R} (Val:SortTableElemType{}, Lblfuncref'Unds'WASM-TEXT-COMMON-SYNTAX'Unds'TableElemType{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAllocatedKind{}, \equals{SortAllocatedKind{}, R} (Val:SortAllocatedKind{}, Lblglobal'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}())) [functional{}()] // functional
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblglobal'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(), Lblmemory'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblglobal'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(), Lbltable'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{})), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIValType{}, \equals{SortIValType{}, R} (Val:SortIValType{}, Lbli32{}())) [functional{}()] // functional
  axiom{}\not{SortIValType{}} (\and{SortIValType{}} (Lbli32{}(), Lbli64{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIValType{}, \equals{SortIValType{}, R} (Val:SortIValType{}, Lbli64{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBlockInstr{}, \equals{SortBlockInstr{}, R} (Val:SortBlockInstr{}, Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortOptionalId{}, K4:SortInstrs{}, K5:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}, X4:SortInstrs{}, X5:SortOptionalId{}), Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}, Y4:SortInstrs{}, Y5:SortOptionalId{})), Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortOptionalId{}} (X3:SortOptionalId{}, Y3:SortOptionalId{}), \and{SortInstrs{}} (X4:SortInstrs{}, Y4:SortInstrs{}), \and{SortOptionalId{}} (X5:SortOptionalId{}, Y5:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}, X4:SortInstrs{}, X5:SortOptionalId{}), Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}, X4:SortInstrs{}, X5:SortOptionalId{}), Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBlockInstr{}, \equals{SortBlockInstr{}, R} (Val:SortBlockInstr{}, Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{})), Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortOptionalId{}} (X3:SortOptionalId{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(K0:SortInt{}, K1:SortVal{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{})), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortVal{}} (X1:SortVal{}, Y1:SortVal{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(K0:SortValStack{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{})), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(\and{SortValStack{}} (X0:SortValStack{}, Y0:SortValStack{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, LblintAdd{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAdd{}(), LblintAnd{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAdd{}(), LblintDiv'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAdd{}(), LblintDiv'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAdd{}(), LblintMul{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAdd{}(), LblintOr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAdd{}(), LblintRem'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAdd{}(), LblintRem'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAdd{}(), LblintRotl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAdd{}(), LblintRotr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAdd{}(), LblintShl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAdd{}(), LblintShr'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAdd{}(), LblintShr'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAdd{}(), LblintSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAdd{}(), LblintXor{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, LblintAnd{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAnd{}(), LblintDiv'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAnd{}(), LblintDiv'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAnd{}(), LblintMul{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAnd{}(), LblintOr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAnd{}(), LblintRem'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAnd{}(), LblintRem'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAnd{}(), LblintRotl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAnd{}(), LblintRotr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAnd{}(), LblintShl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAnd{}(), LblintShr'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAnd{}(), LblintShr'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAnd{}(), LblintSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintAnd{}(), LblintXor{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, LblintDiv'Unds's{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds's{}(), LblintDiv'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds's{}(), LblintMul{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds's{}(), LblintOr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds's{}(), LblintRem'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds's{}(), LblintRem'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds's{}(), LblintRotl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds's{}(), LblintRotr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds's{}(), LblintShl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds's{}(), LblintShr'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds's{}(), LblintShr'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds's{}(), LblintSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds's{}(), LblintXor{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, LblintDiv'Unds'u{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds'u{}(), LblintMul{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds'u{}(), LblintOr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds'u{}(), LblintRem'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds'u{}(), LblintRem'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds'u{}(), LblintRotl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds'u{}(), LblintRotr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds'u{}(), LblintShl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds'u{}(), LblintShr'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds'u{}(), LblintShr'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds'u{}(), LblintSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintDiv'Unds'u{}(), LblintXor{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, LblintEq{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintEq{}(), LblintGe'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintEq{}(), LblintGe'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintEq{}(), LblintGt'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintEq{}(), LblintGt'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintEq{}(), LblintLe'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintEq{}(), LblintLe'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintEq{}(), LblintLt'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintEq{}(), LblintLt'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintEq{}(), LblintNe{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, LblintGe'Unds's{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGe'Unds's{}(), LblintGe'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGe'Unds's{}(), LblintGt'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGe'Unds's{}(), LblintGt'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGe'Unds's{}(), LblintLe'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGe'Unds's{}(), LblintLe'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGe'Unds's{}(), LblintLt'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGe'Unds's{}(), LblintLt'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGe'Unds's{}(), LblintNe{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, LblintGe'Unds'u{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGe'Unds'u{}(), LblintGt'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGe'Unds'u{}(), LblintGt'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGe'Unds'u{}(), LblintLe'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGe'Unds'u{}(), LblintLe'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGe'Unds'u{}(), LblintLt'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGe'Unds'u{}(), LblintLt'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGe'Unds'u{}(), LblintNe{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, LblintGt'Unds's{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGt'Unds's{}(), LblintGt'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGt'Unds's{}(), LblintLe'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGt'Unds's{}(), LblintLe'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGt'Unds's{}(), LblintLt'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGt'Unds's{}(), LblintLt'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGt'Unds's{}(), LblintNe{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, LblintGt'Unds'u{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGt'Unds'u{}(), LblintLe'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGt'Unds'u{}(), LblintLe'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGt'Unds'u{}(), LblintLt'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGt'Unds'u{}(), LblintLt'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintGt'Unds'u{}(), LblintNe{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, LblintLe'Unds's{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintLe'Unds's{}(), LblintLe'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintLe'Unds's{}(), LblintLt'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintLe'Unds's{}(), LblintLt'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintLe'Unds's{}(), LblintNe{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, LblintLe'Unds'u{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintLe'Unds'u{}(), LblintLt'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintLe'Unds'u{}(), LblintLt'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintLe'Unds'u{}(), LblintNe{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, LblintLt'Unds's{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintLt'Unds's{}(), LblintLt'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintLt'Unds's{}(), LblintNe{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, LblintLt'Unds'u{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (LblintLt'Unds'u{}(), LblintNe{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, LblintMul{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintMul{}(), LblintOr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintMul{}(), LblintRem'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintMul{}(), LblintRem'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintMul{}(), LblintRotl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintMul{}(), LblintRotr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintMul{}(), LblintShl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintMul{}(), LblintShr'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintMul{}(), LblintShr'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintMul{}(), LblintSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintMul{}(), LblintXor{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, LblintNe{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, LblintOr{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintOr{}(), LblintRem'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintOr{}(), LblintRem'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintOr{}(), LblintRotl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintOr{}(), LblintRotr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintOr{}(), LblintShl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintOr{}(), LblintShr'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintOr{}(), LblintShr'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintOr{}(), LblintSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintOr{}(), LblintXor{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, LblintRem'Unds's{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRem'Unds's{}(), LblintRem'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRem'Unds's{}(), LblintRotl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRem'Unds's{}(), LblintRotr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRem'Unds's{}(), LblintShl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRem'Unds's{}(), LblintShr'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRem'Unds's{}(), LblintShr'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRem'Unds's{}(), LblintSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRem'Unds's{}(), LblintXor{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, LblintRem'Unds'u{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRem'Unds'u{}(), LblintRotl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRem'Unds'u{}(), LblintRotr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRem'Unds'u{}(), LblintShl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRem'Unds'u{}(), LblintShr'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRem'Unds'u{}(), LblintShr'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRem'Unds'u{}(), LblintSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRem'Unds'u{}(), LblintXor{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, LblintRotl{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRotl{}(), LblintRotr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRotl{}(), LblintShl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRotl{}(), LblintShr'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRotl{}(), LblintShr'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRotl{}(), LblintSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRotl{}(), LblintXor{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, LblintRotr{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRotr{}(), LblintShl{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRotr{}(), LblintShr'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRotr{}(), LblintShr'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRotr{}(), LblintSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintRotr{}(), LblintXor{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, LblintShl{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintShl{}(), LblintShr'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintShl{}(), LblintShr'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintShl{}(), LblintSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintShl{}(), LblintXor{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, LblintShr'Unds's{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintShr'Unds's{}(), LblintShr'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintShr'Unds's{}(), LblintSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintShr'Unds's{}(), LblintXor{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, LblintShr'Unds'u{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintShr'Unds'u{}(), LblintSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintShr'Unds'u{}(), LblintXor{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, LblintSub{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (LblintSub{}(), LblintXor{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, LblintXor{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lblis'Hash'Layout{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisAlignArg{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisAlloc{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisAllocatedKind{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBlockInstr{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBlockMetaData{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBool{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBytes{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisContext{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCurFrameCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCurFrameCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCurFrameCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCurModIdxCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCurModIdxCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCvtOp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCvtf32Op{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCvtf64Op{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCvti32Op{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCvti64Op{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisDataDefn{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisDataString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisDefn{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisDefns{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisDeterministicMemoryGrowthCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisDeterministicMemoryGrowthCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisElemDefn{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisElemSegment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisEmptyStmt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisEmptyStmts{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisEndianness{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExportDefn{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExportsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExportsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExternval{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFAddrCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFAddrCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFBinOp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFCodeCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFCodeCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFLocalCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFLocalCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFModInstCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFModInstCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFRelOp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFTypeCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFTypeCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFUnOp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFVal{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFValType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFloat{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFoldedInstr{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFrame{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncAddrsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncAddrsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncDefCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncDefCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncDefCellMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncDefn{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncIdCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncIdCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncIdsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncIdsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncMetadata{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncMetadataCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncMetadataCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncMetadataCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncSpec{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncsCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFuncsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGAddrCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGAddrCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGMutCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGMutCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGValueCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGValueCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGlobIdsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGlobIdsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGlobalAddrsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGlobalAddrsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGlobalDefn{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGlobalInstCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGlobalInstCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGlobalInstCellMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGlobalSpec{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGlobalType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGlobalsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGlobalsCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGlobalsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIBinOp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIRelOp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIUnOp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIVal{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIValType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIdentifier{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIdentifierToken{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisImportDefn{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisImportDesc{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIndex{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInfinite'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInlineExport{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInlineImport{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInstr{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInstrs{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInstrsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInstrsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInts{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisK{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKConfigVar{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKItem{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisLabel{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisLimits{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisList{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisLoadOp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisLoadOpM{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisLocalDecl{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisLocalDecls{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisLocalIdsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisLocalIdsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisLocalsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisLocalsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMAddrCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMAddrCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMainStoreCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMainStoreCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMainStoreCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMdataCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMdataCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMemAddrsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMemAddrsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMemArg{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMemIdsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMemIdsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMemInstCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMemInstCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMemInstCellMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMemType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMemoryDefn{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMemorySpec{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMemsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMemsCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMemsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMmaxCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMmaxCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModIdxCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModIdxCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleDecl{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleFileNameCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleFileNameCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleIdCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleIdCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleIdsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleIdsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleInstCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleInstCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleInstCellMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleInstancesCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleInstancesCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleInstancesCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleMetadata{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleMetadataCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleMetadataCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleMetadataCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleRegistryCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisModuleRegistryCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMsizeCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMsizeCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMut{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNaN'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextFuncAddrCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextFuncAddrCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextFuncIdxCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextFuncIdxCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextGlobAddrCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextGlobAddrCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextGlobIdxCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextGlobIdxCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextMemAddrCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextMemAddrCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextModuleIdxCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextModuleIdxCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextTabAddrCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextTabAddrCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextTypeIdxCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextTypeIdxCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNumber{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOffset{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOffsetArg{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOptionalId{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOptionalInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOptionalString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisPlainInstr{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisSet{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisSignedness{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStartDefn{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStmt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStmts{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStoreOp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStoreOpM{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTAddrCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTAddrCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTabAddrsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTabAddrsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTabIdsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTabIdsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTabInstCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTabInstCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTabInstCellMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTableDefn{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTableElemType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTableSpec{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTableType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTabsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTabsCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTabsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTdataCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTdataCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTestOp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTextFormatGlobalType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTextLimits{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTmaxCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTmaxCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTsizeCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTsizeCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypeDecl{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypeDecls{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypeDefn{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypeIdsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypeIdsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypeKeyWord{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypeUse{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypesCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypesCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypesInfo{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisVal{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisValStack{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisValType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisValTypes{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisValstackCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisValstackCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisVecType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisWasmCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisWasmCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisWasmCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisWasmInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisWasmIntToken{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisWasmString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisWasmStringToken{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLabel{}, \equals{SortLabel{}, R} (Val:SortLabel{}, Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(K0:SortVecType{}, K1:SortInstrs{}, K2:SortValStack{}))) [functional{}()] // functional
  axiom{}\implies{SortLabel{}} (\and{SortLabel{}} (Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortValStack{}), Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortValStack{})), Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(\and{SortVecType{}} (X0:SortVecType{}, Y0:SortVecType{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}), \and{SortValStack{}} (X2:SortValStack{}, Y2:SortValStack{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes{}(K0:SortBytes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(K0:SortValTypes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLimits{}, \equals{SortLimits{}, R} (Val:SortLimits{}, LbllimitsMin{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortLimits{}} (\and{SortLimits{}} (LbllimitsMin{}(X0:SortInt{}), LbllimitsMin{}(Y0:SortInt{})), LbllimitsMin{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortLimits{}} (\and{SortLimits{}} (LbllimitsMin{}(X0:SortInt{}), LbllimitsMinMax{}(Y0:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLimits{}, \equals{SortLimits{}, R} (Val:SortLimits{}, LbllimitsMinMax{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortLimits{}} (\and{SortLimits{}} (LbllimitsMinMax{}(X0:SortInt{}, X1:SortInt{}), LbllimitsMinMax{}(Y0:SortInt{}, Y1:SortInt{})), LbllimitsMinMax{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInts{}, \equals{SortInts{}, R} (Val:SortInts{}, LbllistInt{}(K0:SortInt{}, K1:SortInts{}))) [functional{}()] // functional
  axiom{}\implies{SortInts{}} (\and{SortInts{}} (LbllistInt{}(X0:SortInt{}, X1:SortInts{}), LbllistInt{}(Y0:SortInt{}, Y1:SortInts{})), LbllistInt{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInts{}} (X1:SortInts{}, Y1:SortInts{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortEmptyStmts{}, \equals{SortEmptyStmts{}, R} (Val:SortEmptyStmts{}, LbllistStmt{}(K0:SortEmptyStmt{}, K1:SortEmptyStmts{}))) [functional{}()] // functional
  axiom{}\implies{SortEmptyStmts{}} (\and{SortEmptyStmts{}} (LbllistStmt{}(X0:SortEmptyStmt{}, X1:SortEmptyStmts{}), LbllistStmt{}(Y0:SortEmptyStmt{}, Y1:SortEmptyStmts{})), LbllistStmt{}(\and{SortEmptyStmt{}} (X0:SortEmptyStmt{}, Y0:SortEmptyStmt{}), \and{SortEmptyStmts{}} (X1:SortEmptyStmts{}, Y1:SortEmptyStmts{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortValTypes{}, \equals{SortValTypes{}, R} (Val:SortValTypes{}, LbllistValTypes{}(K0:SortValType{}, K1:SortValTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortValTypes{}} (\and{SortValTypes{}} (LbllistValTypes{}(X0:SortValType{}, X1:SortValTypes{}), LbllistValTypes{}(Y0:SortValType{}, Y1:SortValTypes{})), LbllistValTypes{}(\and{SortValType{}} (X0:SortValType{}, Y0:SortValType{}), \and{SortValTypes{}} (X1:SortValTypes{}, Y1:SortValTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortEndianness{}, \equals{SortEndianness{}, R} (Val:SortEndianness{}, LbllittleEndianBytes{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, LblloadOpLoad{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad{}(), LblloadOpLoad16'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad{}(), LblloadOpLoad16'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad{}(), LblloadOpLoad32'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad{}(), LblloadOpLoad32'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad{}(), LblloadOpLoad8'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad{}(), LblloadOpLoad8'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, LblloadOpLoad16'Unds's{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad16'Unds's{}(), LblloadOpLoad16'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad16'Unds's{}(), LblloadOpLoad32'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad16'Unds's{}(), LblloadOpLoad32'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad16'Unds's{}(), LblloadOpLoad8'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad16'Unds's{}(), LblloadOpLoad8'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, LblloadOpLoad16'Unds'u{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad16'Unds'u{}(), LblloadOpLoad32'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad16'Unds'u{}(), LblloadOpLoad32'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad16'Unds'u{}(), LblloadOpLoad8'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad16'Unds'u{}(), LblloadOpLoad8'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, LblloadOpLoad32'Unds's{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad32'Unds's{}(), LblloadOpLoad32'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad32'Unds's{}(), LblloadOpLoad8'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad32'Unds's{}(), LblloadOpLoad8'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, LblloadOpLoad32'Unds'u{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad32'Unds'u{}(), LblloadOpLoad8'Unds's{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad32'Unds'u{}(), LblloadOpLoad8'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, LblloadOpLoad8'Unds's{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (LblloadOpLoad8'Unds's{}(), LblloadOpLoad8'Unds'u{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, LblloadOpLoad8'Unds'u{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(K0:SortIValType{}, K1:SortInt{}, K2:SortInt{}, K3:SortSignedness{}, K4:SortBytes{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}, X4:SortBytes{}), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}, Y4:SortBytes{})), Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortInt{}} (X2:SortInt{}, Y2:SortInt{}), \and{SortSignedness{}} (X3:SortSignedness{}, Y3:SortSignedness{}), \and{SortBytes{}} (X4:SortBytes{}, Y4:SortBytes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}, X4:SortBytes{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}, X4:SortBytes{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}, X4:SortBytes{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(K0:SortIValType{}, K1:SortInt{}, K2:SortInt{}, K3:SortSignedness{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{})), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortInt{}} (X2:SortInt{}, Y2:SortInt{}), \and{SortSignedness{}} (X3:SortSignedness{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLocalDecl{}, \equals{SortLocalDecl{}, R} (Val:SortLocalDecl{}, Lbllocal'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'ValTypes{}(K0:SortValTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortLocalDecl{}} (\and{SortLocalDecl{}} (Lbllocal'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'ValTypes{}(X0:SortValTypes{}), Lbllocal'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'ValTypes{}(Y0:SortValTypes{})), Lbllocal'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'ValTypes{}(\and{SortValTypes{}} (X0:SortValTypes{}, Y0:SortValTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortLocalDecl{}} (\and{SortLocalDecl{}} (Lbllocal'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'ValTypes{}(X0:SortValTypes{}), Lbllocal'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'Identifier'Unds'ValType{}(Y0:SortIdentifier{}, Y1:SortValType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLocalDecl{}, \equals{SortLocalDecl{}, R} (Val:SortLocalDecl{}, Lbllocal'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'Identifier'Unds'ValType{}(K0:SortIdentifier{}, K1:SortValType{}))) [functional{}()] // functional
  axiom{}\implies{SortLocalDecl{}} (\and{SortLocalDecl{}} (Lbllocal'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'Identifier'Unds'ValType{}(X0:SortIdentifier{}, X1:SortValType{}), Lbllocal'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'Identifier'Unds'ValType{}(Y0:SortIdentifier{}, Y1:SortValType{})), Lbllocal'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'Identifier'Unds'ValType{}(\and{SortIdentifier{}} (X0:SortIdentifier{}, Y0:SortIdentifier{}), \and{SortValType{}} (X1:SortValType{}, Y1:SortValType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBlockInstr{}, \equals{SortBlockInstr{}, R} (Val:SortBlockInstr{}, Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{})), Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortOptionalId{}} (X3:SortOptionalId{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAllocatedKind{}, \equals{SortAllocatedKind{}, R} (Val:SortAllocatedKind{}, Lblmemory'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}())) [functional{}()] // functional
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblmemory'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(), Lbltable'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleMetadata{}, \equals{SortModuleMetadata{}, R} (Val:SortModuleMetadata{}, LblmoduleMeta{}(K0:SortOptionalId{}, K1:SortMap{}, K2:SortOptionalString{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleMetadata{}} (\and{SortModuleMetadata{}} (LblmoduleMeta{}(X0:SortOptionalId{}, X1:SortMap{}, X2:SortOptionalString{}), LblmoduleMeta{}(Y0:SortOptionalId{}, Y1:SortMap{}, Y2:SortOptionalString{})), LblmoduleMeta{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortMap{}} (X1:SortMap{}, Y1:SortMap{}), \and{SortOptionalString{}} (X2:SortOptionalString{}, Y2:SortOptionalString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMut{}, \equals{SortMut{}, R} (Val:SortMut{}, LblmutConst{}())) [functional{}()] // functional
  axiom{}\not{SortMut{}} (\and{SortMut{}} (LblmutConst{}(), LblmutVar{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMut{}, \equals{SortMut{}, R} (Val:SortMut{}, LblmutVar{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCurFrameCellOpt{}, \equals{SortCurFrameCellOpt{}, R} (Val:SortCurFrameCellOpt{}, LblnoCurFrameCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCurModIdxCellOpt{}, \equals{SortCurModIdxCellOpt{}, R} (Val:SortCurModIdxCellOpt{}, LblnoCurModIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDeterministicMemoryGrowthCellOpt{}, \equals{SortDeterministicMemoryGrowthCellOpt{}, R} (Val:SortDeterministicMemoryGrowthCellOpt{}, LblnoDeterministicMemoryGrowthCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExportsCellOpt{}, \equals{SortExportsCellOpt{}, R} (Val:SortExportsCellOpt{}, LblnoExportsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFAddrCellOpt{}, \equals{SortFAddrCellOpt{}, R} (Val:SortFAddrCellOpt{}, LblnoFAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFCodeCellOpt{}, \equals{SortFCodeCellOpt{}, R} (Val:SortFCodeCellOpt{}, LblnoFCodeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFLocalCellOpt{}, \equals{SortFLocalCellOpt{}, R} (Val:SortFLocalCellOpt{}, LblnoFLocalCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFModInstCellOpt{}, \equals{SortFModInstCellOpt{}, R} (Val:SortFModInstCellOpt{}, LblnoFModInstCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFTypeCellOpt{}, \equals{SortFTypeCellOpt{}, R} (Val:SortFTypeCellOpt{}, LblnoFTypeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncAddrsCellOpt{}, \equals{SortFuncAddrsCellOpt{}, R} (Val:SortFuncAddrsCellOpt{}, LblnoFuncAddrsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncIdCellOpt{}, \equals{SortFuncIdCellOpt{}, R} (Val:SortFuncIdCellOpt{}, LblnoFuncIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncIdsCellOpt{}, \equals{SortFuncIdsCellOpt{}, R} (Val:SortFuncIdsCellOpt{}, LblnoFuncIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncMetadataCellOpt{}, \equals{SortFuncMetadataCellOpt{}, R} (Val:SortFuncMetadataCellOpt{}, LblnoFuncMetadataCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncsCellOpt{}, \equals{SortFuncsCellOpt{}, R} (Val:SortFuncsCellOpt{}, LblnoFuncsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGAddrCellOpt{}, \equals{SortGAddrCellOpt{}, R} (Val:SortGAddrCellOpt{}, LblnoGAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGMutCellOpt{}, \equals{SortGMutCellOpt{}, R} (Val:SortGMutCellOpt{}, LblnoGMutCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGValueCellOpt{}, \equals{SortGValueCellOpt{}, R} (Val:SortGValueCellOpt{}, LblnoGValueCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, LblnoGeneratedCounterCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGlobIdsCellOpt{}, \equals{SortGlobIdsCellOpt{}, R} (Val:SortGlobIdsCellOpt{}, LblnoGlobIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGlobalAddrsCellOpt{}, \equals{SortGlobalAddrsCellOpt{}, R} (Val:SortGlobalAddrsCellOpt{}, LblnoGlobalAddrsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGlobalsCellOpt{}, \equals{SortGlobalsCellOpt{}, R} (Val:SortGlobalsCellOpt{}, LblnoGlobalsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInstrsCellOpt{}, \equals{SortInstrsCellOpt{}, R} (Val:SortInstrsCellOpt{}, LblnoInstrsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLocalIdsCellOpt{}, \equals{SortLocalIdsCellOpt{}, R} (Val:SortLocalIdsCellOpt{}, LblnoLocalIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLocalsCellOpt{}, \equals{SortLocalsCellOpt{}, R} (Val:SortLocalsCellOpt{}, LblnoLocalsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMAddrCellOpt{}, \equals{SortMAddrCellOpt{}, R} (Val:SortMAddrCellOpt{}, LblnoMAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMainStoreCellOpt{}, \equals{SortMainStoreCellOpt{}, R} (Val:SortMainStoreCellOpt{}, LblnoMainStoreCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMdataCellOpt{}, \equals{SortMdataCellOpt{}, R} (Val:SortMdataCellOpt{}, LblnoMdataCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMemAddrsCellOpt{}, \equals{SortMemAddrsCellOpt{}, R} (Val:SortMemAddrsCellOpt{}, LblnoMemAddrsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMemIdsCellOpt{}, \equals{SortMemIdsCellOpt{}, R} (Val:SortMemIdsCellOpt{}, LblnoMemIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMemsCellOpt{}, \equals{SortMemsCellOpt{}, R} (Val:SortMemsCellOpt{}, LblnoMemsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMmaxCellOpt{}, \equals{SortMmaxCellOpt{}, R} (Val:SortMmaxCellOpt{}, LblnoMmaxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModIdxCellOpt{}, \equals{SortModIdxCellOpt{}, R} (Val:SortModIdxCellOpt{}, LblnoModIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleFileNameCellOpt{}, \equals{SortModuleFileNameCellOpt{}, R} (Val:SortModuleFileNameCellOpt{}, LblnoModuleFileNameCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleIdCellOpt{}, \equals{SortModuleIdCellOpt{}, R} (Val:SortModuleIdCellOpt{}, LblnoModuleIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleIdsCellOpt{}, \equals{SortModuleIdsCellOpt{}, R} (Val:SortModuleIdsCellOpt{}, LblnoModuleIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleInstancesCellOpt{}, \equals{SortModuleInstancesCellOpt{}, R} (Val:SortModuleInstancesCellOpt{}, LblnoModuleInstancesCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleMetadataCellOpt{}, \equals{SortModuleMetadataCellOpt{}, R} (Val:SortModuleMetadataCellOpt{}, LblnoModuleMetadataCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleRegistryCellOpt{}, \equals{SortModuleRegistryCellOpt{}, R} (Val:SortModuleRegistryCellOpt{}, LblnoModuleRegistryCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMsizeCellOpt{}, \equals{SortMsizeCellOpt{}, R} (Val:SortMsizeCellOpt{}, LblnoMsizeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextFuncAddrCellOpt{}, \equals{SortNextFuncAddrCellOpt{}, R} (Val:SortNextFuncAddrCellOpt{}, LblnoNextFuncAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextFuncIdxCellOpt{}, \equals{SortNextFuncIdxCellOpt{}, R} (Val:SortNextFuncIdxCellOpt{}, LblnoNextFuncIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextGlobAddrCellOpt{}, \equals{SortNextGlobAddrCellOpt{}, R} (Val:SortNextGlobAddrCellOpt{}, LblnoNextGlobAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextGlobIdxCellOpt{}, \equals{SortNextGlobIdxCellOpt{}, R} (Val:SortNextGlobIdxCellOpt{}, LblnoNextGlobIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextMemAddrCellOpt{}, \equals{SortNextMemAddrCellOpt{}, R} (Val:SortNextMemAddrCellOpt{}, LblnoNextMemAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextModuleIdxCellOpt{}, \equals{SortNextModuleIdxCellOpt{}, R} (Val:SortNextModuleIdxCellOpt{}, LblnoNextModuleIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextTabAddrCellOpt{}, \equals{SortNextTabAddrCellOpt{}, R} (Val:SortNextTabAddrCellOpt{}, LblnoNextTabAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextTypeIdxCellOpt{}, \equals{SortNextTypeIdxCellOpt{}, R} (Val:SortNextTypeIdxCellOpt{}, LblnoNextTypeIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTAddrCellOpt{}, \equals{SortTAddrCellOpt{}, R} (Val:SortTAddrCellOpt{}, LblnoTAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTabAddrsCellOpt{}, \equals{SortTabAddrsCellOpt{}, R} (Val:SortTabAddrsCellOpt{}, LblnoTabAddrsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTabIdsCellOpt{}, \equals{SortTabIdsCellOpt{}, R} (Val:SortTabIdsCellOpt{}, LblnoTabIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTabsCellOpt{}, \equals{SortTabsCellOpt{}, R} (Val:SortTabsCellOpt{}, LblnoTabsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTdataCellOpt{}, \equals{SortTdataCellOpt{}, R} (Val:SortTdataCellOpt{}, LblnoTdataCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTmaxCellOpt{}, \equals{SortTmaxCellOpt{}, R} (Val:SortTmaxCellOpt{}, LblnoTmaxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTsizeCellOpt{}, \equals{SortTsizeCellOpt{}, R} (Val:SortTsizeCellOpt{}, LblnoTsizeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTypeIdsCellOpt{}, \equals{SortTypeIdsCellOpt{}, R} (Val:SortTypeIdsCellOpt{}, LblnoTypeIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTypesCellOpt{}, \equals{SortTypesCellOpt{}, R} (Val:SortTypesCellOpt{}, LblnoTypesCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValstackCellOpt{}, \equals{SortValstackCellOpt{}, R} (Val:SortValstackCellOpt{}, LblnoValstackCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortWasmCellOpt{}, \equals{SortWasmCellOpt{}, R} (Val:SortWasmCellOpt{}, LblnoWasmCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOffsetArg{}, \equals{SortOffsetArg{}, R} (Val:SortOffsetArg{}, Lbloffset'EqlsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'OffsetArg'Unds'WasmInt{}(K0:SortWasmInt{}))) [functional{}()] // functional
  axiom{}\implies{SortOffsetArg{}} (\and{SortOffsetArg{}} (Lbloffset'EqlsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'OffsetArg'Unds'WasmInt{}(X0:SortWasmInt{}), Lbloffset'EqlsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'OffsetArg'Unds'WasmInt{}(Y0:SortWasmInt{})), Lbloffset'EqlsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'OffsetArg'Unds'WasmInt{}(\and{SortWasmInt{}} (X0:SortWasmInt{}, Y0:SortWasmInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypeKeyWord{}, \equals{SortTypeKeyWord{}, R} (Val:SortTypeKeyWord{}, Lblparam'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}())) [functional{}()] // functional
  axiom{}\not{SortTypeKeyWord{}} (\and{SortTypeKeyWord{}} (Lblparam'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}(), Lblresult'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeDecl{}, \equals{SortTypeDecl{}, R} (Val:SortTypeDecl{}, Lblparam'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'Identifier'Unds'ValType{}(K0:SortIdentifier{}, K1:SortValType{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeDecl{}} (\and{SortTypeDecl{}} (Lblparam'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'Identifier'Unds'ValType{}(X0:SortIdentifier{}, X1:SortValType{}), Lblparam'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'Identifier'Unds'ValType{}(Y0:SortIdentifier{}, Y1:SortValType{})), Lblparam'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'Identifier'Unds'ValType{}(\and{SortIdentifier{}} (X0:SortIdentifier{}, Y0:SortIdentifier{}), \and{SortValType{}} (X1:SortValType{}, Y1:SortValType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblprecisionFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTypeKeyWord{}, \equals{SortTypeKeyWord{}, R} (Val:SortTypeKeyWord{}, Lblresult'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, LblreverseBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes{}(K0:SortBytes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSignedness{}, \equals{SortSignedness{}, R} (Val:SortSignedness{}, LblsignedBytes{}())) [functional{}()] // functional
  axiom{}\not{SortSignedness{}} (\and{SortSignedness{}} (LblsignedBytes{}(), LblunsignedBytes{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblsinFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(K0:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStoreOp{}, \equals{SortStoreOp{}, R} (Val:SortStoreOp{}, LblstoreOpStore{}())) [functional{}()] // functional
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (LblstoreOpStore{}(), LblstoreOpStore16{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (LblstoreOpStore{}(), LblstoreOpStore32{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (LblstoreOpStore{}(), LblstoreOpStore8{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStoreOp{}, \equals{SortStoreOp{}, R} (Val:SortStoreOp{}, LblstoreOpStore16{}())) [functional{}()] // functional
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (LblstoreOpStore16{}(), LblstoreOpStore32{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (LblstoreOpStore16{}(), LblstoreOpStore8{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStoreOp{}, \equals{SortStoreOp{}, R} (Val:SortStoreOp{}, LblstoreOpStore32{}())) [functional{}()] // functional
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (LblstoreOpStore32{}(), LblstoreOpStore8{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStoreOp{}, \equals{SortStoreOp{}, R} (Val:SortStoreOp{}, LblstoreOpStore8{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(K0:SortInt{}, K1:SortInt{}, K2:SortNumber{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(X0:SortInt{}, X1:SortInt{}, X2:SortNumber{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{})), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortNumber{}} (X2:SortNumber{}, Y2:SortNumber{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(X0:SortInt{}, X1:SortInt{}, X2:SortNumber{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(K0:SortString{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLimits{}, \equals{SortLimits{}, R} (Val:SortLimits{}, Lblt2aLimits'LParUndsRParUnds'WASM-TEXT'Unds'Limits'Unds'TextLimits{}(K0:SortTextLimits{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAllocatedKind{}, \equals{SortAllocatedKind{}, R} (Val:SortAllocatedKind{}, Lbltable'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbltrap'Unds'WASM'Unds'Instr{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lblundefined'Unds'WASM-DATA'Unds'Val{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSignedness{}, \equals{SortSignedness{}, R} (Val:SortSignedness{}, LblunsignedBytes{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Tild'Int'Unds'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{} \or{SortTmaxCell{}} (\exists{SortTmaxCell{}} (X0:SortOptionalInt{}, Lbl'-LT-'tmax'-GT-'{}(X0:SortOptionalInt{})), \bottom{SortTmaxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncMetadataCell{}} (\exists{SortFuncMetadataCell{}} (X0:SortFuncIdCell{}, \exists{SortFuncMetadataCell{}} (X1:SortLocalIdsCell{}, Lbl'-LT-'funcMetadata'-GT-'{}(X0:SortFuncIdCell{}, X1:SortLocalIdsCell{}))), \bottom{SortFuncMetadataCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncSpec{}} (\exists{SortFuncSpec{}} (X0:SortInlineExport{}, \exists{SortFuncSpec{}} (X1:SortFuncSpec{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(X0:SortInlineExport{}, X1:SortFuncSpec{}))), \or{SortFuncSpec{}} (\exists{SortFuncSpec{}} (X0:SortInlineImport{}, \exists{SortFuncSpec{}} (X1:SortTypeUse{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(X0:SortInlineImport{}, X1:SortTypeUse{}))), \or{SortFuncSpec{}} (\exists{SortFuncSpec{}} (X0:SortTypeUse{}, \exists{SortFuncSpec{}} (X1:SortLocalDecls{}, \exists{SortFuncSpec{}} (X2:SortInstrs{}, Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(X0:SortTypeUse{}, X1:SortLocalDecls{}, X2:SortInstrs{})))), \bottom{SortFuncSpec{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortIVal{}} (\exists{SortIVal{}} (X0:SortIValType{}, \exists{SortIVal{}} (X1:SortInt{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}))), \bottom{SortIVal{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMsizeCell{}} (\exists{SortMsizeCell{}} (X0:SortInt{}, Lbl'-LT-'msize'-GT-'{}(X0:SortInt{})), \bottom{SortMsizeCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMainStoreCellOpt{}} (LblnoMainStoreCell{}(), \or{SortMainStoreCellOpt{}} (\exists{SortMainStoreCellOpt{}} (Val:SortMainStoreCell{}, inj{SortMainStoreCell{}, SortMainStoreCellOpt{}} (Val:SortMainStoreCell{})), \bottom{SortMainStoreCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFLocalCellOpt{}} (LblnoFLocalCell{}(), \or{SortFLocalCellOpt{}} (\exists{SortFLocalCellOpt{}} (Val:SortFLocalCell{}, inj{SortFLocalCell{}, SortFLocalCellOpt{}} (Val:SortFLocalCell{})), \bottom{SortFLocalCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModuleMetadata{}} (\exists{SortModuleMetadata{}} (X0:SortOptionalId{}, \exists{SortModuleMetadata{}} (X1:SortMap{}, \exists{SortModuleMetadata{}} (X2:SortOptionalString{}, LblmoduleMeta{}(X0:SortOptionalId{}, X1:SortMap{}, X2:SortOptionalString{})))), \bottom{SortModuleMetadata{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTableDefn{}} (\exists{SortTableDefn{}} (X0:SortOptionalId{}, \exists{SortTableDefn{}} (X1:SortTableSpec{}, Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(X0:SortOptionalId{}, X1:SortTableSpec{}))), \or{SortTableDefn{}} (\exists{SortTableDefn{}} (X0:SortLimits{}, \exists{SortTableDefn{}} (X1:SortOptionalId{}, LblaTableDefn{}(X0:SortLimits{}, X1:SortOptionalId{}))), \bottom{SortTableDefn{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFCodeCellOpt{}} (LblnoFCodeCell{}(), \or{SortFCodeCellOpt{}} (\exists{SortFCodeCellOpt{}} (Val:SortFCodeCell{}, inj{SortFCodeCell{}, SortFCodeCellOpt{}} (Val:SortFCodeCell{})), \bottom{SortFCodeCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTabInstCellMap{}} (\exists{SortTabInstCellMap{}} (Val:SortTabInstCell{}, inj{SortTabInstCell{}, SortTabInstCellMap{}} (Val:SortTabInstCell{})), \bottom{SortTabInstCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIdentifier{}} (\exists{SortIdentifier{}} (X0:SortInt{}, Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(X0:SortInt{})), \or{SortIdentifier{}} (\exists{SortIdentifier{}} (Val:SortIdentifierToken{}, inj{SortIdentifierToken{}, SortIdentifier{}} (Val:SortIdentifierToken{})), \bottom{SortIdentifier{}}())) [constructor{}()] // no junk
  axiom{} \or{SortIndex{}} (\exists{SortIndex{}} (Val:SortIdentifier{}, inj{SortIdentifier{}, SortIndex{}} (Val:SortIdentifier{})), \or{SortIndex{}} (\exists{SortIndex{}} (Val:SortWasmInt{}, inj{SortWasmInt{}, SortIndex{}} (Val:SortWasmInt{})), \or{SortIndex{}} (\exists{SortIndex{}} (Val:SortInt{}, inj{SortInt{}, SortIndex{}} (Val:SortInt{})), \or{SortIndex{}} (\exists{SortIndex{}} (Val:SortIdentifierToken{}, inj{SortIdentifierToken{}, SortIndex{}} (Val:SortIdentifierToken{})), \bottom{SortIndex{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTmaxCell{}, inj{SortTmaxCell{}, SortKItem{}} (Val:SortTmaxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncMetadataCell{}, inj{SortFuncMetadataCell{}, SortKItem{}} (Val:SortFuncMetadataCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncSpec{}, inj{SortFuncSpec{}, SortKItem{}} (Val:SortFuncSpec{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIVal{}, inj{SortIVal{}, SortKItem{}} (Val:SortIVal{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMsizeCell{}, inj{SortMsizeCell{}, SortKItem{}} (Val:SortMsizeCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMainStoreCellOpt{}, inj{SortMainStoreCellOpt{}, SortKItem{}} (Val:SortMainStoreCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFLocalCellOpt{}, inj{SortFLocalCellOpt{}, SortKItem{}} (Val:SortFLocalCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleMetadata{}, inj{SortModuleMetadata{}, SortKItem{}} (Val:SortModuleMetadata{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTableDefn{}, inj{SortTableDefn{}, SortKItem{}} (Val:SortTableDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFCodeCellOpt{}, inj{SortFCodeCellOpt{}, SortKItem{}} (Val:SortFCodeCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabInstCellMap{}, inj{SortTabInstCellMap{}, SortKItem{}} (Val:SortTabInstCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIdentifier{}, inj{SortIdentifier{}, SortKItem{}} (Val:SortIdentifier{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIndex{}, inj{SortIndex{}, SortKItem{}} (Val:SortIndex{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemAddrsCell{}, inj{SortMemAddrsCell{}, SortKItem{}} (Val:SortMemAddrsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextTypeIdxCellOpt{}, inj{SortNextTypeIdxCellOpt{}, SortKItem{}} (Val:SortNextTypeIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModIdxCellOpt{}, inj{SortModIdxCellOpt{}, SortKItem{}} (Val:SortModIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalsCell{}, inj{SortLocalsCell{}, SortKItem{}} (Val:SortLocalsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExternval{}, inj{SortExternval{}, SortKItem{}} (Val:SortExternval{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalDecls{}, inj{SortLocalDecls{}, SortKItem{}} (Val:SortLocalDecls{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortImportDefn{}, inj{SortImportDefn{}, SortKItem{}} (Val:SortImportDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDataString{}, inj{SortDataString{}, SortKItem{}} (Val:SortDataString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTableElemType{}, inj{SortTableElemType{}, SortKItem{}} (Val:SortTableElemType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExportsCellOpt{}, inj{SortExportsCellOpt{}, SortKItem{}} (Val:SortExportsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGValueCell{}, inj{SortGValueCell{}, SortKItem{}} (Val:SortGValueCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAlloc{}, inj{SortAlloc{}, SortKItem{}} (Val:SortAlloc{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncAddrsCellOpt{}, inj{SortFuncAddrsCellOpt{}, SortKItem{}} (Val:SortFuncAddrsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortElemSegment{}, inj{SortElemSegment{}, SortKItem{}} (Val:SortElemSegment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGAddrCell{}, inj{SortGAddrCell{}, SortKItem{}} (Val:SortGAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGMutCellOpt{}, inj{SortGMutCellOpt{}, SortKItem{}} (Val:SortGMutCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCurFrameCell{}, inj{SortCurFrameCell{}, SortKItem{}} (Val:SortCurFrameCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemIdsCellOpt{}, inj{SortMemIdsCellOpt{}, SortKItem{}} (Val:SortMemIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortList{}, inj{SortList{}, SortKItem{}} (Val:SortList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIUnOp{}, inj{SortIUnOp{}, SortKItem{}} (Val:SortIUnOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncsCellFragment{}, inj{SortFuncsCellFragment{}, SortKItem{}} (Val:SortFuncsCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobIdsCell{}, inj{SortGlobIdsCell{}, SortKItem{}} (Val:SortGlobIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextGlobIdxCell{}, inj{SortNextGlobIdxCell{}, SortKItem{}} (Val:SortNextGlobIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalIdsCell{}, inj{SortLocalIdsCell{}, SortKItem{}} (Val:SortLocalIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOptionalId{}, inj{SortOptionalId{}, SortKItem{}} (Val:SortOptionalId{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemorySpec{}, inj{SortMemorySpec{}, SortKItem{}} (Val:SortMemorySpec{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmCell{}, inj{SortWasmCell{}, SortKItem{}} (Val:SortWasmCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCurFrameCellFragment{}, inj{SortCurFrameCellFragment{}, SortKItem{}} (Val:SortCurFrameCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalsCell{}, inj{SortGlobalsCell{}, SortKItem{}} (Val:SortGlobalsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextMemAddrCellOpt{}, inj{SortNextMemAddrCellOpt{}, SortKItem{}} (Val:SortNextMemAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabAddrsCellOpt{}, inj{SortTabAddrsCellOpt{}, SortKItem{}} (Val:SortTabAddrsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOffset{}, inj{SortOffset{}, SortKItem{}} (Val:SortOffset{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextModuleIdxCellOpt{}, inj{SortNextModuleIdxCellOpt{}, SortKItem{}} (Val:SortNextModuleIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalDefn{}, inj{SortGlobalDefn{}, SortKItem{}} (Val:SortGlobalDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDeterministicMemoryGrowthCell{}, inj{SortDeterministicMemoryGrowthCell{}, SortKItem{}} (Val:SortDeterministicMemoryGrowthCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeDecls{}, inj{SortTypeDecls{}, SortKItem{}} (Val:SortTypeDecls{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTAddrCell{}, inj{SortTAddrCell{}, SortKItem{}} (Val:SortTAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTestOp{}, inj{SortTestOp{}, SortKItem{}} (Val:SortTestOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleMetadataCellFragment{}, inj{SortModuleMetadataCellFragment{}, SortKItem{}} (Val:SortModuleMetadataCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFRelOp{}, inj{SortFRelOp{}, SortKItem{}} (Val:SortFRelOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstancesCell{}, inj{SortModuleInstancesCell{}, SortKItem{}} (Val:SortModuleInstancesCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMAddrCellOpt{}, inj{SortMAddrCellOpt{}, SortKItem{}} (Val:SortMAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCvtOp{}, inj{SortCvtOp{}, SortKItem{}} (Val:SortCvtOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortString{}, inj{SortString{}, SortKItem{}} (Val:SortString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstancesCellOpt{}, inj{SortModuleInstancesCellOpt{}, SortKItem{}} (Val:SortModuleInstancesCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalSpec{}, inj{SortGlobalSpec{}, SortKItem{}} (Val:SortGlobalSpec{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextTypeIdxCell{}, inj{SortNextTypeIdxCell{}, SortKItem{}} (Val:SortNextTypeIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncDefn{}, inj{SortFuncDefn{}, SortKItem{}} (Val:SortFuncDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmCellFragment{}, inj{SortWasmCellFragment{}, SortKItem{}} (Val:SortWasmCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabInstCell{}, inj{SortTabInstCell{}, SortKItem{}} (Val:SortTabInstCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeDefn{}, inj{SortTypeDefn{}, SortKItem{}} (Val:SortTypeDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLoadOp{}, inj{SortLoadOp{}, SortKItem{}} (Val:SortLoadOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInstr{}, inj{SortInstr{}, SortKItem{}} (Val:SortInstr{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortElemDefn{}, inj{SortElemDefn{}, SortKItem{}} (Val:SortElemDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFVal{}, inj{SortFVal{}, SortKItem{}} (Val:SortFVal{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalDecl{}, inj{SortLocalDecl{}, SortKItem{}} (Val:SortLocalDecl{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemInstCellMap{}, inj{SortMemInstCellMap{}, SortKItem{}} (Val:SortMemInstCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextTabAddrCellOpt{}, inj{SortNextTabAddrCellOpt{}, SortKItem{}} (Val:SortNextTabAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemoryDefn{}, inj{SortMemoryDefn{}, SortKItem{}} (Val:SortMemoryDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemArg{}, inj{SortMemArg{}, SortKItem{}} (Val:SortMemArg{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncDefCell{}, inj{SortFuncDefCell{}, SortKItem{}} (Val:SortFuncDefCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmString{}, inj{SortWasmString{}, SortKItem{}} (Val:SortWasmString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCvti32Op{}, inj{SortCvti32Op{}, SortKItem{}} (Val:SortCvti32Op{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextFuncIdxCellOpt{}, inj{SortNextFuncIdxCellOpt{}, SortKItem{}} (Val:SortNextFuncIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemAddrsCellOpt{}, inj{SortMemAddrsCellOpt{}, SortKItem{}} (Val:SortMemAddrsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMAddrCell{}, inj{SortMAddrCell{}, SortKItem{}} (Val:SortMAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextFuncIdxCell{}, inj{SortNextFuncIdxCell{}, SortKItem{}} (Val:SortNextFuncIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCurModIdxCell{}, inj{SortCurModIdxCell{}, SortKItem{}} (Val:SortCurModIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmInt{}, inj{SortWasmInt{}, SortKItem{}} (Val:SortWasmInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleRegistryCellOpt{}, inj{SortModuleRegistryCellOpt{}, SortKItem{}} (Val:SortModuleRegistryCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleRegistryCell{}, inj{SortModuleRegistryCell{}, SortKItem{}} (Val:SortModuleRegistryCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIBinOp{}, inj{SortIBinOp{}, SortKItem{}} (Val:SortIBinOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInstrsCell{}, inj{SortInstrsCell{}, SortKItem{}} (Val:SortInstrsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (Val:SortGeneratedCounterCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStartDefn{}, inj{SortStartDefn{}, SortKItem{}} (Val:SortStartDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncsCellOpt{}, inj{SortFuncsCellOpt{}, SortKItem{}} (Val:SortFuncsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInstrsCellOpt{}, inj{SortInstrsCellOpt{}, SortKItem{}} (Val:SortInstrsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTdataCellOpt{}, inj{SortTdataCellOpt{}, SortKItem{}} (Val:SortTdataCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabInstCellFragment{}, inj{SortTabInstCellFragment{}, SortKItem{}} (Val:SortTabInstCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortContext{}, inj{SortContext{}, SortKItem{}} (Val:SortContext{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStoreOpM{}, inj{SortStoreOpM{}, SortKItem{}} (Val:SortStoreOpM{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStoreOp{}, inj{SortStoreOp{}, SortKItem{}} (Val:SortStoreOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncMetadata{}, inj{SortFuncMetadata{}, SortKItem{}} (Val:SortFuncMetadata{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (Val:SortGeneratedCounterCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncAddrsCell{}, inj{SortFuncAddrsCell{}, SortKItem{}} (Val:SortFuncAddrsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMmaxCellOpt{}, inj{SortMmaxCellOpt{}, SortKItem{}} (Val:SortMmaxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDeterministicMemoryGrowthCellOpt{}, inj{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}} (Val:SortDeterministicMemoryGrowthCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTmaxCellOpt{}, inj{SortTmaxCellOpt{}, SortKItem{}} (Val:SortTmaxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAlignArg{}, inj{SortAlignArg{}, SortKItem{}} (Val:SortAlignArg{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemInstCell{}, inj{SortMemInstCell{}, SortKItem{}} (Val:SortMemInstCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalType{}, inj{SortGlobalType{}, SortKItem{}} (Val:SortGlobalType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleDecl{}, inj{SortModuleDecl{}, SortKItem{}} (Val:SortModuleDecl{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFModInstCellOpt{}, inj{SortFModInstCellOpt{}, SortKItem{}} (Val:SortFModInstCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSignedness{}, inj{SortSignedness{}, SortKItem{}} (Val:SortSignedness{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGValueCellOpt{}, inj{SortGValueCellOpt{}, SortKItem{}} (Val:SortGValueCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmCellOpt{}, inj{SortWasmCellOpt{}, SortKItem{}} (Val:SortWasmCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalInstCellMap{}, inj{SortGlobalInstCellMap{}, SortKItem{}} (Val:SortGlobalInstCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortValType{}, inj{SortValType{}, SortKItem{}} (Val:SortValType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemIdsCell{}, inj{SortMemIdsCell{}, SortKItem{}} (Val:SortMemIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNumber{}, inj{SortNumber{}, SortKItem{}} (Val:SortNumber{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBool{}, inj{SortBool{}, SortKItem{}} (Val:SortBool{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFValType{}, inj{SortFValType{}, SortKItem{}} (Val:SortFValType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeKeyWord{}, inj{SortTypeKeyWord{}, SortKItem{}} (Val:SortTypeKeyWord{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncIdCell{}, inj{SortFuncIdCell{}, SortKItem{}} (Val:SortFuncIdCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortImportDesc{}, inj{SortImportDesc{}, SortKItem{}} (Val:SortImportDesc{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemInstCellFragment{}, inj{SortMemInstCellFragment{}, SortKItem{}} (Val:SortMemInstCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExportsCell{}, inj{SortExportsCell{}, SortKItem{}} (Val:SortExportsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextGlobAddrCellOpt{}, inj{SortNextGlobAddrCellOpt{}, SortKItem{}} (Val:SortNextGlobAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextGlobAddrCell{}, inj{SortNextGlobAddrCell{}, SortKItem{}} (Val:SortNextGlobAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTdataCell{}, inj{SortTdataCell{}, SortKItem{}} (Val:SortTdataCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncDefCellMap{}, inj{SortFuncDefCellMap{}, SortKItem{}} (Val:SortFuncDefCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextModuleIdxCell{}, inj{SortNextModuleIdxCell{}, SortKItem{}} (Val:SortNextModuleIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStmts{}, inj{SortStmts{}, SortKItem{}} (Val:SortStmts{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGAddrCellOpt{}, inj{SortGAddrCellOpt{}, SortKItem{}} (Val:SortGAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextTabAddrCell{}, inj{SortNextTabAddrCell{}, SortKItem{}} (Val:SortNextTabAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEndianness{}, inj{SortEndianness{}, SortKItem{}} (Val:SortEndianness{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFAddrCell{}, inj{SortFAddrCell{}, SortKItem{}} (Val:SortFAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMap{}, inj{SortMap{}, SortKItem{}} (Val:SortMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncMetadataCellOpt{}, inj{SortFuncMetadataCellOpt{}, SortKItem{}} (Val:SortFuncMetadataCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextFuncAddrCell{}, inj{SortNextFuncAddrCell{}, SortKItem{}} (Val:SortNextFuncAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIRelOp{}, inj{SortIRelOp{}, SortKItem{}} (Val:SortIRelOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCvtf64Op{}, inj{SortCvtf64Op{}, SortKItem{}} (Val:SortCvtf64Op{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabsCellFragment{}, inj{SortTabsCellFragment{}, SortKItem{}} (Val:SortTabsCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortValstackCell{}, inj{SortValstackCell{}, SortKItem{}} (Val:SortValstackCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemType{}, inj{SortMemType{}, SortKItem{}} (Val:SortMemType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleMetadataCellOpt{}, inj{SortModuleMetadataCellOpt{}, SortKItem{}} (Val:SortModuleMetadataCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLabel{}, inj{SortLabel{}, SortKItem{}} (Val:SortLabel{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeIdsCellOpt{}, inj{SortTypeIdsCellOpt{}, SortKItem{}} (Val:SortTypeIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstCellMap{}, inj{SortModuleInstCellMap{}, SortKItem{}} (Val:SortModuleInstCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeUse{}, inj{SortTypeUse{}, SortKItem{}} (Val:SortTypeUse{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalsCellFragment{}, inj{SortGlobalsCellFragment{}, SortKItem{}} (Val:SortGlobalsCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabIdsCellOpt{}, inj{SortTabIdsCellOpt{}, SortKItem{}} (Val:SortTabIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOptionalString{}, inj{SortOptionalString{}, SortKItem{}} (Val:SortOptionalString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypesInfo{}, inj{SortTypesInfo{}, SortKItem{}} (Val:SortTypesInfo{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLoadOpM{}, inj{SortLoadOpM{}, SortKItem{}} (Val:SortLoadOpM{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalInstCell{}, inj{SortGlobalInstCell{}, SortKItem{}} (Val:SortGlobalInstCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortPlainInstr{}, inj{SortPlainInstr{}, SortKItem{}} (Val:SortPlainInstr{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCurModIdxCellOpt{}, inj{SortCurModIdxCellOpt{}, SortKItem{}} (Val:SortCurModIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncsCell{}, inj{SortFuncsCell{}, SortKItem{}} (Val:SortFuncsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFTypeCellOpt{}, inj{SortFTypeCellOpt{}, SortKItem{}} (Val:SortFTypeCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleFileNameCell{}, inj{SortModuleFileNameCell{}, SortKItem{}} (Val:SortModuleFileNameCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStmt{}, inj{SortStmt{}, SortKItem{}} (Val:SortStmt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLimits{}, inj{SortLimits{}, SortKItem{}} (Val:SortLimits{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTAddrCellOpt{}, inj{SortTAddrCellOpt{}, SortKItem{}} (Val:SortTAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstCellFragment{}, inj{SortModuleInstCellFragment{}, SortKItem{}} (Val:SortModuleInstCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstancesCellFragment{}, inj{SortModuleInstancesCellFragment{}, SortKItem{}} (Val:SortModuleInstancesCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleIdsCell{}, inj{SortModuleIdsCell{}, SortKItem{}} (Val:SortModuleIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFTypeCell{}, inj{SortFTypeCell{}, SortKItem{}} (Val:SortFTypeCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMainStoreCell{}, inj{SortMainStoreCell{}, SortKItem{}} (Val:SortMainStoreCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTsizeCell{}, inj{SortTsizeCell{}, SortKItem{}} (Val:SortTsizeCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMainStoreCellFragment{}, inj{SortMainStoreCellFragment{}, SortKItem{}} (Val:SortMainStoreCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncIdsCell{}, inj{SortFuncIdsCell{}, SortKItem{}} (Val:SortFuncIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFLocalCell{}, inj{SortFLocalCell{}, SortKItem{}} (Val:SortFLocalCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabsCell{}, inj{SortTabsCell{}, SortKItem{}} (Val:SortTabsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmStringToken{}, inj{SortWasmStringToken{}, SortKItem{}} (Val:SortWasmStringToken{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextMemAddrCell{}, inj{SortNextMemAddrCell{}, SortKItem{}} (Val:SortNextMemAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIValType{}, inj{SortIValType{}, SortKItem{}} (Val:SortIValType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInt{}, inj{SortInt{}, SortKItem{}} (Val:SortInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemsCellOpt{}, inj{SortMemsCellOpt{}, SortKItem{}} (Val:SortMemsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobIdsCellOpt{}, inj{SortGlobIdsCellOpt{}, SortKItem{}} (Val:SortGlobIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMdataCell{}, inj{SortMdataCell{}, SortKItem{}} (Val:SortMdataCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTableSpec{}, inj{SortTableSpec{}, SortKItem{}} (Val:SortTableSpec{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFCodeCell{}, inj{SortFCodeCell{}, SortKItem{}} (Val:SortFCodeCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCurFrameCellOpt{}, inj{SortCurFrameCellOpt{}, SortKItem{}} (Val:SortCurFrameCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFModInstCell{}, inj{SortFModInstCell{}, SortKItem{}} (Val:SortFModInstCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabAddrsCell{}, inj{SortTabAddrsCell{}, SortKItem{}} (Val:SortTabAddrsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDefn{}, inj{SortDefn{}, SortKItem{}} (Val:SortDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFloat{}, inj{SortFloat{}, SortKItem{}} (Val:SortFloat{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleIdCellOpt{}, inj{SortModuleIdCellOpt{}, SortKItem{}} (Val:SortModuleIdCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFoldedInstr{}, inj{SortFoldedInstr{}, SortKItem{}} (Val:SortFoldedInstr{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInlineImport{}, inj{SortInlineImport{}, SortKItem{}} (Val:SortInlineImport{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortValstackCellOpt{}, inj{SortValstackCellOpt{}, SortKItem{}} (Val:SortValstackCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncIdsCellOpt{}, inj{SortFuncIdsCellOpt{}, SortKItem{}} (Val:SortFuncIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAllocatedKind{}, inj{SortAllocatedKind{}, SortKItem{}} (Val:SortAllocatedKind{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEmptyStmts{}, inj{SortEmptyStmts{}, SortKItem{}} (Val:SortEmptyStmts{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBlockMetaData{}, inj{SortBlockMetaData{}, SortKItem{}} (Val:SortBlockMetaData{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemsCellFragment{}, inj{SortMemsCellFragment{}, SortKItem{}} (Val:SortMemsCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFBinOp{}, inj{SortFBinOp{}, SortKItem{}} (Val:SortFBinOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortType{}, inj{SortType{}, SortKItem{}} (Val:SortType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncMetadataCellFragment{}, inj{SortFuncMetadataCellFragment{}, SortKItem{}} (Val:SortFuncMetadataCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleFileNameCellOpt{}, inj{SortModuleFileNameCellOpt{}, SortKItem{}} (Val:SortModuleFileNameCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalsCellOpt{}, inj{SortLocalsCellOpt{}, SortKItem{}} (Val:SortLocalsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCell{}, inj{SortGeneratedTopCell{}, SortKItem{}} (Val:SortGeneratedTopCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDataDefn{}, inj{SortDataDefn{}, SortKItem{}} (Val:SortDataDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncType{}, inj{SortFuncType{}, SortKItem{}} (Val:SortFuncType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeIdsCell{}, inj{SortTypeIdsCell{}, SortKItem{}} (Val:SortTypeIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortVal{}, inj{SortVal{}, SortKItem{}} (Val:SortVal{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabsCellOpt{}, inj{SortTabsCellOpt{}, SortKItem{}} (Val:SortTabsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGMutCell{}, inj{SortGMutCell{}, SortKItem{}} (Val:SortGMutCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabIdsCell{}, inj{SortTabIdsCell{}, SortKItem{}} (Val:SortTabIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSet{}, inj{SortSet{}, SortKItem{}} (Val:SortSet{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFrame{}, inj{SortFrame{}, SortKItem{}} (Val:SortFrame{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInstrs{}, inj{SortInstrs{}, SortKItem{}} (Val:SortInstrs{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModIdxCell{}, inj{SortModIdxCell{}, SortKItem{}} (Val:SortModIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncIdCellOpt{}, inj{SortFuncIdCellOpt{}, SortKItem{}} (Val:SortFuncIdCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFAddrCellOpt{}, inj{SortFAddrCellOpt{}, SortKItem{}} (Val:SortFAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBlockInstr{}, inj{SortBlockInstr{}, SortKItem{}} (Val:SortBlockInstr{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalAddrsCellOpt{}, inj{SortGlobalAddrsCellOpt{}, SortKItem{}} (Val:SortGlobalAddrsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortVecType{}, inj{SortVecType{}, SortKItem{}} (Val:SortVecType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIdentifierToken{}, inj{SortIdentifierToken{}, SortKItem{}} (Val:SortIdentifierToken{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextGlobIdxCellOpt{}, inj{SortNextGlobIdxCellOpt{}, SortKItem{}} (Val:SortNextGlobIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortValStack{}, inj{SortValStack{}, SortKItem{}} (Val:SortValStack{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMut{}, inj{SortMut{}, SortKItem{}} (Val:SortMut{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstCell{}, inj{SortModuleInstCell{}, SortKItem{}} (Val:SortModuleInstCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmIntToken{}, inj{SortWasmIntToken{}, SortKItem{}} (Val:SortWasmIntToken{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInts{}, inj{SortInts{}, SortKItem{}} (Val:SortInts{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncDefCellFragment{}, inj{SortFuncDefCellFragment{}, SortKItem{}} (Val:SortFuncDefCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOffsetArg{}, inj{SortOffsetArg{}, SortKItem{}} (Val:SortOffsetArg{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTsizeCellOpt{}, inj{SortTsizeCellOpt{}, SortKItem{}} (Val:SortTsizeCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalInstCellFragment{}, inj{SortGlobalInstCellFragment{}, SortKItem{}} (Val:SortGlobalInstCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeDecl{}, inj{SortTypeDecl{}, SortKItem{}} (Val:SortTypeDecl{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCvtf32Op{}, inj{SortCvtf32Op{}, SortKItem{}} (Val:SortCvtf32Op{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDefns{}, inj{SortDefns{}, SortKItem{}} (Val:SortDefns{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMsizeCellOpt{}, inj{SortMsizeCellOpt{}, SortKItem{}} (Val:SortMsizeCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemsCell{}, inj{SortMemsCell{}, SortKItem{}} (Val:SortMemsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFUnOp{}, inj{SortFUnOp{}, SortKItem{}} (Val:SortFUnOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalIdsCellOpt{}, inj{SortLocalIdsCellOpt{}, SortKItem{}} (Val:SortLocalIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInlineExport{}, inj{SortInlineExport{}, SortKItem{}} (Val:SortInlineExport{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortValTypes{}, inj{SortValTypes{}, SortKItem{}} (Val:SortValTypes{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCellFragment{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (Val:SortGeneratedTopCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypesCell{}, inj{SortTypesCell{}, SortKItem{}} (Val:SortTypesCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalAddrsCell{}, inj{SortGlobalAddrsCell{}, SortKItem{}} (Val:SortGlobalAddrsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBytes{}, inj{SortBytes{}, SortKItem{}} (Val:SortBytes{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMdataCellOpt{}, inj{SortMdataCellOpt{}, SortKItem{}} (Val:SortMdataCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEmptyStmt{}, inj{SortEmptyStmt{}, SortKItem{}} (Val:SortEmptyStmt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleMetadataCell{}, inj{SortModuleMetadataCell{}, SortKItem{}} (Val:SortModuleMetadataCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExportDefn{}, inj{SortExportDefn{}, SortKItem{}} (Val:SortExportDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleIdsCellOpt{}, inj{SortModuleIdsCellOpt{}, SortKItem{}} (Val:SortModuleIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalsCellOpt{}, inj{SortGlobalsCellOpt{}, SortKItem{}} (Val:SortGlobalsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextFuncAddrCellOpt{}, inj{SortNextFuncAddrCellOpt{}, SortKItem{}} (Val:SortNextFuncAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTextLimits{}, inj{SortTextLimits{}, SortKItem{}} (Val:SortTextLimits{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTableType{}, inj{SortTableType{}, SortKItem{}} (Val:SortTableType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOptionalInt{}, inj{SortOptionalInt{}, SortKItem{}} (Val:SortOptionalInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleIdCell{}, inj{SortModuleIdCell{}, SortKItem{}} (Val:SortModuleIdCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypesCellOpt{}, inj{SortTypesCellOpt{}, SortKItem{}} (Val:SortTypesCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCvti64Op{}, inj{SortCvti64Op{}, SortKItem{}} (Val:SortCvti64Op{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMmaxCell{}, inj{SortMmaxCell{}, SortKItem{}} (Val:SortMmaxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTextFormatGlobalType{}, inj{SortTextFormatGlobalType{}, SortKItem{}} (Val:SortTextFormatGlobalType{})), \bottom{SortKItem{}}()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortMemAddrsCell{}} (\exists{SortMemAddrsCell{}} (X0:SortMap{}, Lbl'-LT-'memAddrs'-GT-'{}(X0:SortMap{})), \bottom{SortMemAddrsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextTypeIdxCellOpt{}} (LblnoNextTypeIdxCell{}(), \or{SortNextTypeIdxCellOpt{}} (\exists{SortNextTypeIdxCellOpt{}} (Val:SortNextTypeIdxCell{}, inj{SortNextTypeIdxCell{}, SortNextTypeIdxCellOpt{}} (Val:SortNextTypeIdxCell{})), \bottom{SortNextTypeIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModIdxCellOpt{}} (LblnoModIdxCell{}(), \or{SortModIdxCellOpt{}} (\exists{SortModIdxCellOpt{}} (Val:SortModIdxCell{}, inj{SortModIdxCell{}, SortModIdxCellOpt{}} (Val:SortModIdxCell{})), \bottom{SortModIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortLocalsCell{}} (\exists{SortLocalsCell{}} (X0:SortMap{}, Lbl'-LT-'locals'-GT-'{}(X0:SortMap{})), \bottom{SortLocalsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExternval{}} (\exists{SortExternval{}} (X0:SortAllocatedKind{}, \exists{SortExternval{}} (X1:SortIndex{}, Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(X0:SortAllocatedKind{}, X1:SortIndex{}))), \bottom{SortExternval{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLocalDecls{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}(), \or{SortLocalDecls{}} (\exists{SortLocalDecls{}} (X0:SortLocalDecl{}, \exists{SortLocalDecls{}} (X1:SortLocalDecls{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(X0:SortLocalDecl{}, X1:SortLocalDecls{}))), \bottom{SortLocalDecls{}}())) [constructor{}()] // no junk
  axiom{} \or{SortImportDefn{}} (\exists{SortImportDefn{}} (X0:SortWasmString{}, \exists{SortImportDefn{}} (X1:SortWasmString{}, \exists{SortImportDefn{}} (X2:SortImportDesc{}, Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(X0:SortWasmString{}, X1:SortWasmString{}, X2:SortImportDesc{})))), \or{SortImportDefn{}} (\exists{SortImportDefn{}} (X0:SortWasmString{}, \exists{SortImportDefn{}} (X1:SortWasmString{}, \exists{SortImportDefn{}} (X2:SortImportDesc{}, LblaImportDefn{}(X0:SortWasmString{}, X1:SortWasmString{}, X2:SortImportDesc{})))), \bottom{SortImportDefn{}}())) [constructor{}()] // no junk
  axiom{} \or{SortDataString{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'DataString'Unds'WasmString'Unds'DataString'QuotRBraUnds'DataString{}(), \or{SortDataString{}} (\exists{SortDataString{}} (X0:SortWasmString{}, \exists{SortDataString{}} (X1:SortDataString{}, Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'DataString'Unds'WasmString'Unds'DataString{}(X0:SortWasmString{}, X1:SortDataString{}))), \bottom{SortDataString{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTableElemType{}} (Lblfuncref'Unds'WASM-TEXT-COMMON-SYNTAX'Unds'TableElemType{}(), \bottom{SortTableElemType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExportsCellOpt{}} (LblnoExportsCell{}(), \or{SortExportsCellOpt{}} (\exists{SortExportsCellOpt{}} (Val:SortExportsCell{}, inj{SortExportsCell{}, SortExportsCellOpt{}} (Val:SortExportsCell{})), \bottom{SortExportsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGValueCell{}} (\exists{SortGValueCell{}} (X0:SortVal{}, Lbl'-LT-'gValue'-GT-'{}(X0:SortVal{})), \bottom{SortGValueCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortAlloc{}} (\exists{SortAlloc{}} (X0:SortInt{}, \exists{SortAlloc{}} (X1:SortInt{}, \exists{SortAlloc{}} (X2:SortFuncType{}, \exists{SortAlloc{}} (X3:SortVecType{}, \exists{SortAlloc{}} (X4:SortInstrs{}, \exists{SortAlloc{}} (X5:SortFuncMetadata{}, Lblallocfunc'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'Int'Unds'Int'Unds'FuncType'Unds'VecType'Unds'Instrs'Unds'FuncMetadata{}(X0:SortInt{}, X1:SortInt{}, X2:SortFuncType{}, X3:SortVecType{}, X4:SortInstrs{}, X5:SortFuncMetadata{}))))))), \or{SortAlloc{}} (\exists{SortAlloc{}} (X0:SortOptionalId{}, \exists{SortAlloc{}} (X1:SortGlobalType{}, Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(X0:SortOptionalId{}, X1:SortGlobalType{}))), \or{SortAlloc{}} (\exists{SortAlloc{}} (X0:SortOptionalId{}, \exists{SortAlloc{}} (X1:SortInt{}, \exists{SortAlloc{}} (X2:SortOptionalInt{}, Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{})))), \or{SortAlloc{}} (\exists{SortAlloc{}} (X0:SortOptionalId{}, \exists{SortAlloc{}} (X1:SortInt{}, \exists{SortAlloc{}} (X2:SortOptionalInt{}, Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{})))), \or{SortAlloc{}} (\exists{SortAlloc{}} (X0:SortOptionalId{}, \exists{SortAlloc{}} (X1:SortFuncType{}, Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'FuncType{}(X0:SortOptionalId{}, X1:SortFuncType{}))), \or{SortAlloc{}} (\exists{SortAlloc{}} (Val:SortImportDefn{}, inj{SortImportDefn{}, SortAlloc{}} (Val:SortImportDefn{})), \or{SortAlloc{}} (\exists{SortAlloc{}} (Val:SortExportDefn{}, inj{SortExportDefn{}, SortAlloc{}} (Val:SortExportDefn{})), \bottom{SortAlloc{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortFuncAddrsCellOpt{}} (LblnoFuncAddrsCell{}(), \or{SortFuncAddrsCellOpt{}} (\exists{SortFuncAddrsCellOpt{}} (Val:SortFuncAddrsCell{}, inj{SortFuncAddrsCell{}, SortFuncAddrsCellOpt{}} (Val:SortFuncAddrsCell{})), \bottom{SortFuncAddrsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortElemSegment{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}(), \or{SortElemSegment{}} (\exists{SortElemSegment{}} (X0:SortIndex{}, \exists{SortElemSegment{}} (X1:SortElemSegment{}, Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortElemSegment{}))), \bottom{SortElemSegment{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGAddrCell{}} (\exists{SortGAddrCell{}} (X0:SortInt{}, Lbl'-LT-'gAddr'-GT-'{}(X0:SortInt{})), \bottom{SortGAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGMutCellOpt{}} (LblnoGMutCell{}(), \or{SortGMutCellOpt{}} (\exists{SortGMutCellOpt{}} (Val:SortGMutCell{}, inj{SortGMutCell{}, SortGMutCellOpt{}} (Val:SortGMutCell{})), \bottom{SortGMutCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCurFrameCell{}} (\exists{SortCurFrameCell{}} (X0:SortLocalsCell{}, \exists{SortCurFrameCell{}} (X1:SortCurModIdxCell{}, Lbl'-LT-'curFrame'-GT-'{}(X0:SortLocalsCell{}, X1:SortCurModIdxCell{}))), \bottom{SortCurFrameCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMemIdsCellOpt{}} (LblnoMemIdsCell{}(), \or{SortMemIdsCellOpt{}} (\exists{SortMemIdsCellOpt{}} (Val:SortMemIdsCell{}, inj{SortMemIdsCell{}, SortMemIdsCellOpt{}} (Val:SortMemIdsCell{})), \bottom{SortMemIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \bottom{SortList{}}() [constructor{}()] // no junk
  axiom{} \or{SortIUnOp{}} (LblaClz{}(), \or{SortIUnOp{}} (LblaCtz{}(), \or{SortIUnOp{}} (LblaPopcnt{}(), \bottom{SortIUnOp{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortFuncsCellFragment{}} (\exists{SortFuncsCellFragment{}} (X0:SortFuncDefCellMap{}, Lbl'-LT-'funcs'-GT-'-fragment{}(X0:SortFuncDefCellMap{})), \bottom{SortFuncsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGlobIdsCell{}} (\exists{SortGlobIdsCell{}} (X0:SortMap{}, Lbl'-LT-'globIds'-GT-'{}(X0:SortMap{})), \bottom{SortGlobIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextGlobIdxCell{}} (\exists{SortNextGlobIdxCell{}} (X0:SortInt{}, Lbl'-LT-'nextGlobIdx'-GT-'{}(X0:SortInt{})), \bottom{SortNextGlobIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLocalIdsCell{}} (\exists{SortLocalIdsCell{}} (X0:SortMap{}, Lbl'-LT-'localIds'-GT-'{}(X0:SortMap{})), \bottom{SortLocalIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOptionalId{}} (Lbl'Stop'Identifier{}(), \or{SortOptionalId{}} (\exists{SortOptionalId{}} (Val:SortIdentifier{}, inj{SortIdentifier{}, SortOptionalId{}} (Val:SortIdentifier{})), \or{SortOptionalId{}} (\exists{SortOptionalId{}} (Val:SortIdentifierToken{}, inj{SortIdentifierToken{}, SortOptionalId{}} (Val:SortIdentifierToken{})), \bottom{SortOptionalId{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (X0:SortDataString{}, Lbl'LPar'data'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'DataString{}(X0:SortDataString{})), \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (X0:SortInlineExport{}, \exists{SortMemorySpec{}} (X1:SortMemorySpec{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(X0:SortInlineExport{}, X1:SortMemorySpec{}))), \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (X0:SortInlineImport{}, \exists{SortMemorySpec{}} (X1:SortMemType{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(X0:SortInlineImport{}, X1:SortMemType{}))), \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (Val:SortMemType{}, inj{SortMemType{}, SortMemorySpec{}} (Val:SortMemType{})), \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (Val:SortInt{}, inj{SortInt{}, SortMemorySpec{}} (Val:SortInt{})), \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (Val:SortTextLimits{}, inj{SortTextLimits{}, SortMemorySpec{}} (Val:SortTextLimits{})), \bottom{SortMemorySpec{}}())))))) [constructor{}()] // no junk
  axiom{} \or{SortWasmCell{}} (\exists{SortWasmCell{}} (X0:SortInstrsCell{}, \exists{SortWasmCell{}} (X1:SortValstackCell{}, \exists{SortWasmCell{}} (X2:SortCurFrameCell{}, \exists{SortWasmCell{}} (X3:SortModuleRegistryCell{}, \exists{SortWasmCell{}} (X4:SortModuleIdsCell{}, \exists{SortWasmCell{}} (X5:SortModuleInstancesCell{}, \exists{SortWasmCell{}} (X6:SortNextModuleIdxCell{}, \exists{SortWasmCell{}} (X7:SortMainStoreCell{}, \exists{SortWasmCell{}} (X8:SortDeterministicMemoryGrowthCell{}, Lbl'-LT-'wasm'-GT-'{}(X0:SortInstrsCell{}, X1:SortValstackCell{}, X2:SortCurFrameCell{}, X3:SortModuleRegistryCell{}, X4:SortModuleIdsCell{}, X5:SortModuleInstancesCell{}, X6:SortNextModuleIdxCell{}, X7:SortMainStoreCell{}, X8:SortDeterministicMemoryGrowthCell{})))))))))), \bottom{SortWasmCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCurFrameCellFragment{}} (\exists{SortCurFrameCellFragment{}} (X0:SortLocalsCellOpt{}, \exists{SortCurFrameCellFragment{}} (X1:SortCurModIdxCellOpt{}, Lbl'-LT-'curFrame'-GT-'-fragment{}(X0:SortLocalsCellOpt{}, X1:SortCurModIdxCellOpt{}))), \bottom{SortCurFrameCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGlobalsCell{}} (\exists{SortGlobalsCell{}} (X0:SortGlobalInstCellMap{}, Lbl'-LT-'globals'-GT-'{}(X0:SortGlobalInstCellMap{})), \bottom{SortGlobalsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextMemAddrCellOpt{}} (LblnoNextMemAddrCell{}(), \or{SortNextMemAddrCellOpt{}} (\exists{SortNextMemAddrCellOpt{}} (Val:SortNextMemAddrCell{}, inj{SortNextMemAddrCell{}, SortNextMemAddrCellOpt{}} (Val:SortNextMemAddrCell{})), \bottom{SortNextMemAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTabAddrsCellOpt{}} (LblnoTabAddrsCell{}(), \or{SortTabAddrsCellOpt{}} (\exists{SortTabAddrsCellOpt{}} (Val:SortTabAddrsCell{}, inj{SortTabAddrsCell{}, SortTabAddrsCellOpt{}} (Val:SortTabAddrsCell{})), \bottom{SortTabAddrsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortOffset{}} (\exists{SortOffset{}} (X0:SortInstrs{}, Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(X0:SortInstrs{})), \or{SortOffset{}} (\exists{SortOffset{}} (Val:SortEmptyStmts{}, inj{SortEmptyStmts{}, SortOffset{}} (Val:SortEmptyStmts{})), \or{SortOffset{}} (\exists{SortOffset{}} (Val:SortInstrs{}, inj{SortInstrs{}, SortOffset{}} (Val:SortInstrs{})), \bottom{SortOffset{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortNextModuleIdxCellOpt{}} (LblnoNextModuleIdxCell{}(), \or{SortNextModuleIdxCellOpt{}} (\exists{SortNextModuleIdxCellOpt{}} (Val:SortNextModuleIdxCell{}, inj{SortNextModuleIdxCell{}, SortNextModuleIdxCellOpt{}} (Val:SortNextModuleIdxCell{})), \bottom{SortNextModuleIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobalDefn{}} (\exists{SortGlobalDefn{}} (X0:SortOptionalId{}, \exists{SortGlobalDefn{}} (X1:SortGlobalSpec{}, Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(X0:SortOptionalId{}, X1:SortGlobalSpec{}))), \or{SortGlobalDefn{}} (\exists{SortGlobalDefn{}} (X0:SortGlobalType{}, \exists{SortGlobalDefn{}} (X1:SortInstrs{}, \exists{SortGlobalDefn{}} (X2:SortOptionalId{}, LblaGlobalDefn{}(X0:SortGlobalType{}, X1:SortInstrs{}, X2:SortOptionalId{})))), \bottom{SortGlobalDefn{}}())) [constructor{}()] // no junk
  axiom{} \or{SortDeterministicMemoryGrowthCell{}} (\exists{SortDeterministicMemoryGrowthCell{}} (X0:SortBool{}, Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(X0:SortBool{})), \bottom{SortDeterministicMemoryGrowthCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeDecls{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}(), \or{SortTypeDecls{}} (\exists{SortTypeDecls{}} (X0:SortTypeDecl{}, \exists{SortTypeDecls{}} (X1:SortTypeDecls{}, Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(X0:SortTypeDecl{}, X1:SortTypeDecls{}))), \bottom{SortTypeDecls{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTAddrCell{}} (\exists{SortTAddrCell{}} (X0:SortInt{}, Lbl'-LT-'tAddr'-GT-'{}(X0:SortInt{})), \bottom{SortTAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTestOp{}} (LblaEqz{}(), \bottom{SortTestOp{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleMetadataCellFragment{}} (\exists{SortModuleMetadataCellFragment{}} (X0:SortModuleFileNameCellOpt{}, \exists{SortModuleMetadataCellFragment{}} (X1:SortModuleIdCellOpt{}, \exists{SortModuleMetadataCellFragment{}} (X2:SortFuncIdsCellOpt{}, \exists{SortModuleMetadataCellFragment{}} (X3:SortTypeIdsCellOpt{}, Lbl'-LT-'moduleMetadata'-GT-'-fragment{}(X0:SortModuleFileNameCellOpt{}, X1:SortModuleIdCellOpt{}, X2:SortFuncIdsCellOpt{}, X3:SortTypeIdsCellOpt{}))))), \bottom{SortModuleMetadataCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFRelOp{}} (LblfloatEq{}(), \or{SortFRelOp{}} (LblfloatGe{}(), \or{SortFRelOp{}} (LblfloatGt{}(), \or{SortFRelOp{}} (LblfloatLe{}(), \or{SortFRelOp{}} (LblfloatLt{}(), \or{SortFRelOp{}} (LblfloatNe{}(), \bottom{SortFRelOp{}}())))))) [constructor{}()] // no junk
  axiom{} \or{SortModuleInstancesCell{}} (\exists{SortModuleInstancesCell{}} (X0:SortModuleInstCellMap{}, Lbl'-LT-'moduleInstances'-GT-'{}(X0:SortModuleInstCellMap{})), \bottom{SortModuleInstancesCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMAddrCellOpt{}} (LblnoMAddrCell{}(), \or{SortMAddrCellOpt{}} (\exists{SortMAddrCellOpt{}} (Val:SortMAddrCell{}, inj{SortMAddrCell{}, SortMAddrCellOpt{}} (Val:SortMAddrCell{})), \bottom{SortMAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCvtOp{}} (\exists{SortCvtOp{}} (Val:SortCvti32Op{}, inj{SortCvti32Op{}, SortCvtOp{}} (Val:SortCvti32Op{})), \or{SortCvtOp{}} (\exists{SortCvtOp{}} (Val:SortCvtf64Op{}, inj{SortCvtf64Op{}, SortCvtOp{}} (Val:SortCvtf64Op{})), \or{SortCvtOp{}} (\exists{SortCvtOp{}} (Val:SortCvtf32Op{}, inj{SortCvtf32Op{}, SortCvtOp{}} (Val:SortCvtf32Op{})), \or{SortCvtOp{}} (\exists{SortCvtOp{}} (Val:SortCvti64Op{}, inj{SortCvti64Op{}, SortCvtOp{}} (Val:SortCvti64Op{})), \bottom{SortCvtOp{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortString{}} (\top{SortString{}}(), \bottom{SortString{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortModuleInstancesCellOpt{}} (LblnoModuleInstancesCell{}(), \or{SortModuleInstancesCellOpt{}} (\exists{SortModuleInstancesCellOpt{}} (Val:SortModuleInstancesCell{}, inj{SortModuleInstancesCell{}, SortModuleInstancesCellOpt{}} (Val:SortModuleInstancesCell{})), \bottom{SortModuleInstancesCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobalSpec{}} (\exists{SortGlobalSpec{}} (X0:SortInlineExport{}, \exists{SortGlobalSpec{}} (X1:SortGlobalSpec{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(X0:SortInlineExport{}, X1:SortGlobalSpec{}))), \or{SortGlobalSpec{}} (\exists{SortGlobalSpec{}} (X0:SortInlineImport{}, \exists{SortGlobalSpec{}} (X1:SortTextFormatGlobalType{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(X0:SortInlineImport{}, X1:SortTextFormatGlobalType{}))), \or{SortGlobalSpec{}} (\exists{SortGlobalSpec{}} (X0:SortTextFormatGlobalType{}, \exists{SortGlobalSpec{}} (X1:SortInstr{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(X0:SortTextFormatGlobalType{}, X1:SortInstr{}))), \bottom{SortGlobalSpec{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortNextTypeIdxCell{}} (\exists{SortNextTypeIdxCell{}} (X0:SortInt{}, Lbl'-LT-'nextTypeIdx'-GT-'{}(X0:SortInt{})), \bottom{SortNextTypeIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncDefn{}} (\exists{SortFuncDefn{}} (X0:SortOptionalId{}, \exists{SortFuncDefn{}} (X1:SortFuncSpec{}, Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(X0:SortOptionalId{}, X1:SortFuncSpec{}))), \or{SortFuncDefn{}} (\exists{SortFuncDefn{}} (X0:SortInt{}, \exists{SortFuncDefn{}} (X1:SortVecType{}, \exists{SortFuncDefn{}} (X2:SortInstrs{}, \exists{SortFuncDefn{}} (X3:SortFuncMetadata{}, LblaFuncDefn{}(X0:SortInt{}, X1:SortVecType{}, X2:SortInstrs{}, X3:SortFuncMetadata{}))))), \bottom{SortFuncDefn{}}())) [constructor{}()] // no junk
  axiom{} \or{SortWasmCellFragment{}} (\exists{SortWasmCellFragment{}} (X0:SortInstrsCellOpt{}, \exists{SortWasmCellFragment{}} (X1:SortValstackCellOpt{}, \exists{SortWasmCellFragment{}} (X2:SortCurFrameCellOpt{}, \exists{SortWasmCellFragment{}} (X3:SortModuleRegistryCellOpt{}, \exists{SortWasmCellFragment{}} (X4:SortModuleIdsCellOpt{}, \exists{SortWasmCellFragment{}} (X5:SortModuleInstancesCellOpt{}, \exists{SortWasmCellFragment{}} (X6:SortNextModuleIdxCellOpt{}, \exists{SortWasmCellFragment{}} (X7:SortMainStoreCellOpt{}, \exists{SortWasmCellFragment{}} (X8:SortDeterministicMemoryGrowthCellOpt{}, Lbl'-LT-'wasm'-GT-'-fragment{}(X0:SortInstrsCellOpt{}, X1:SortValstackCellOpt{}, X2:SortCurFrameCellOpt{}, X3:SortModuleRegistryCellOpt{}, X4:SortModuleIdsCellOpt{}, X5:SortModuleInstancesCellOpt{}, X6:SortNextModuleIdxCellOpt{}, X7:SortMainStoreCellOpt{}, X8:SortDeterministicMemoryGrowthCellOpt{})))))))))), \bottom{SortWasmCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTabInstCell{}} (\exists{SortTabInstCell{}} (X0:SortTAddrCell{}, \exists{SortTabInstCell{}} (X1:SortTmaxCell{}, \exists{SortTabInstCell{}} (X2:SortTsizeCell{}, \exists{SortTabInstCell{}} (X3:SortTdataCell{}, Lbl'-LT-'tabInst'-GT-'{}(X0:SortTAddrCell{}, X1:SortTmaxCell{}, X2:SortTsizeCell{}, X3:SortTdataCell{}))))), \bottom{SortTabInstCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeDefn{}} (\exists{SortTypeDefn{}} (X0:SortOptionalId{}, \exists{SortTypeDefn{}} (X1:SortTypeDecls{}, Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(X0:SortOptionalId{}, X1:SortTypeDecls{}))), \or{SortTypeDefn{}} (\exists{SortTypeDefn{}} (X0:SortFuncType{}, \exists{SortTypeDefn{}} (X1:SortOptionalId{}, LblaTypeDefn{}(X0:SortFuncType{}, X1:SortOptionalId{}))), \bottom{SortTypeDefn{}}())) [constructor{}()] // no junk
  axiom{} \or{SortLoadOp{}} (LblloadOpLoad{}(), \or{SortLoadOp{}} (LblloadOpLoad16'Unds's{}(), \or{SortLoadOp{}} (LblloadOpLoad16'Unds'u{}(), \or{SortLoadOp{}} (LblloadOpLoad32'Unds's{}(), \or{SortLoadOp{}} (LblloadOpLoad32'Unds'u{}(), \or{SortLoadOp{}} (LblloadOpLoad8'Unds's{}(), \or{SortLoadOp{}} (LblloadOpLoad8'Unds'u{}(), \bottom{SortLoadOp{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortKConfigVar{}} (\top{SortKConfigVar{}}(), \bottom{SortKConfigVar{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, \exists{SortInstr{}} (X1:SortValStack{}, Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortIValType{}, \exists{SortInstr{}} (X1:SortLoadOp{}, \exists{SortInstr{}} (X2:SortInt{}, Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{})))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortIValType{}, \exists{SortInstr{}} (X1:SortStoreOp{}, \exists{SortInstr{}} (X2:SortInt{}, \exists{SortInstr{}} (X3:SortInt{}, Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}))))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortVecType{}, \exists{SortInstr{}} (X1:SortInstrs{}, \exists{SortInstr{}} (X2:SortBlockMetaData{}, LblaBlock{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{})))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, LblaBr{}(X0:SortInt{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, LblaBr'Unds'if{}(X0:SortInt{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInts{}, LblaBr'Unds'table{}(X0:SortInts{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, LblaCall{}(X0:SortInt{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, LblaCall'Unds'indirect{}(X0:SortInt{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, LblaGlobal'Stop'get{}(X0:SortInt{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, LblaGlobal'Stop'set{}(X0:SortInt{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortVecType{}, \exists{SortInstr{}} (X1:SortInstrs{}, \exists{SortInstr{}} (X2:SortInstrs{}, \exists{SortInstr{}} (X3:SortBlockMetaData{}, LblaIf{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortInstrs{}, X3:SortBlockMetaData{}))))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortValType{}, \exists{SortInstr{}} (X1:SortLoadOp{}, \exists{SortInstr{}} (X2:SortInt{}, LblaLoad{}(X0:SortValType{}, X1:SortLoadOp{}, X2:SortInt{})))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, LblaLocal'Stop'get{}(X0:SortInt{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, LblaLocal'Stop'set{}(X0:SortInt{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, LblaLocal'Stop'tee{}(X0:SortInt{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortVecType{}, \exists{SortInstr{}} (X1:SortInstrs{}, \exists{SortInstr{}} (X2:SortBlockMetaData{}, LblaLoop{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortBlockMetaData{})))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortValType{}, \exists{SortInstr{}} (X1:SortStoreOp{}, \exists{SortInstr{}} (X2:SortInt{}, LblaStore{}(X0:SortValType{}, X1:SortStoreOp{}, X2:SortInt{})))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, \exists{SortInstr{}} (X1:SortVal{}, Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortValStack{}, Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortIValType{}, \exists{SortInstr{}} (X1:SortInt{}, \exists{SortInstr{}} (X2:SortInt{}, \exists{SortInstr{}} (X3:SortSignedness{}, \exists{SortInstr{}} (X4:SortBytes{}, Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}, X4:SortBytes{})))))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortIValType{}, \exists{SortInstr{}} (X1:SortInt{}, \exists{SortInstr{}} (X2:SortInt{}, \exists{SortInstr{}} (X3:SortSignedness{}, Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}))))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, \exists{SortInstr{}} (X1:SortInt{}, \exists{SortInstr{}} (X2:SortNumber{}, Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(X0:SortInt{}, X1:SortInt{}, X2:SortNumber{})))), \or{SortInstr{}} (Lbltrap'Unds'WASM'Unds'Instr{}(), \or{SortInstr{}} (\exists{SortInstr{}} (Val:SortPlainInstr{}, inj{SortPlainInstr{}, SortInstr{}} (Val:SortPlainInstr{})), \or{SortInstr{}} (\exists{SortInstr{}} (Val:SortFoldedInstr{}, inj{SortFoldedInstr{}, SortInstr{}} (Val:SortFoldedInstr{})), \or{SortInstr{}} (\exists{SortInstr{}} (Val:SortBlockInstr{}, inj{SortBlockInstr{}, SortInstr{}} (Val:SortBlockInstr{})), \or{SortInstr{}} (\exists{SortInstr{}} (Val:SortEmptyStmt{}, inj{SortEmptyStmt{}, SortInstr{}} (Val:SortEmptyStmt{})), \bottom{SortInstr{}}())))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortElemDefn{}} (\exists{SortElemDefn{}} (X0:SortOffset{}, \exists{SortElemDefn{}} (X1:SortElemSegment{}, Lbl'LPar'elem'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}))), \or{SortElemDefn{}} (\exists{SortElemDefn{}} (X0:SortIndex{}, \exists{SortElemDefn{}} (X1:SortOffset{}, \exists{SortElemDefn{}} (X2:SortElemSegment{}, Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortElemSegment{})))), \or{SortElemDefn{}} (\exists{SortElemDefn{}} (X0:SortOffset{}, \exists{SortElemDefn{}} (X1:SortElemSegment{}, Lbl'LPar'elem'Unds'func'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}))), \or{SortElemDefn{}} (\exists{SortElemDefn{}} (X0:SortInt{}, \exists{SortElemDefn{}} (X1:SortInstrs{}, \exists{SortElemDefn{}} (X2:SortInts{}, LblaElemDefn{}(X0:SortInt{}, X1:SortInstrs{}, X2:SortInts{})))), \or{SortElemDefn{}} (\exists{SortElemDefn{}} (X0:SortInt{}, \exists{SortElemDefn{}} (X1:SortInts{}, Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Int'Unds'Ints{}(X0:SortInt{}, X1:SortInts{}))), \bottom{SortElemDefn{}}()))))) [constructor{}()] // no junk
  axiom{} \or{SortFVal{}} (\exists{SortFVal{}} (X0:SortFValType{}, \exists{SortFVal{}} (X1:SortFloat{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(X0:SortFValType{}, X1:SortFloat{}))), \bottom{SortFVal{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLocalDecl{}} (\exists{SortLocalDecl{}} (X0:SortValTypes{}, Lbllocal'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'ValTypes{}(X0:SortValTypes{})), \or{SortLocalDecl{}} (\exists{SortLocalDecl{}} (X0:SortIdentifier{}, \exists{SortLocalDecl{}} (X1:SortValType{}, Lbllocal'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'Identifier'Unds'ValType{}(X0:SortIdentifier{}, X1:SortValType{}))), \bottom{SortLocalDecl{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemInstCellMap{}} (\exists{SortMemInstCellMap{}} (Val:SortMemInstCell{}, inj{SortMemInstCell{}, SortMemInstCellMap{}} (Val:SortMemInstCell{})), \bottom{SortMemInstCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextTabAddrCellOpt{}} (LblnoNextTabAddrCell{}(), \or{SortNextTabAddrCellOpt{}} (\exists{SortNextTabAddrCellOpt{}} (Val:SortNextTabAddrCell{}, inj{SortNextTabAddrCell{}, SortNextTabAddrCellOpt{}} (Val:SortNextTabAddrCell{})), \bottom{SortNextTabAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemoryDefn{}} (\exists{SortMemoryDefn{}} (X0:SortOptionalId{}, \exists{SortMemoryDefn{}} (X1:SortMemorySpec{}, Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(X0:SortOptionalId{}, X1:SortMemorySpec{}))), \or{SortMemoryDefn{}} (\exists{SortMemoryDefn{}} (X0:SortLimits{}, \exists{SortMemoryDefn{}} (X1:SortOptionalId{}, LblaMemoryDefn{}(X0:SortLimits{}, X1:SortOptionalId{}))), \bottom{SortMemoryDefn{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemArg{}} (\exists{SortMemArg{}} (X0:SortOffsetArg{}, \exists{SortMemArg{}} (X1:SortAlignArg{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(X0:SortOffsetArg{}, X1:SortAlignArg{}))), \or{SortMemArg{}} (\exists{SortMemArg{}} (Val:SortAlignArg{}, inj{SortAlignArg{}, SortMemArg{}} (Val:SortAlignArg{})), \or{SortMemArg{}} (\exists{SortMemArg{}} (Val:SortOffsetArg{}, inj{SortOffsetArg{}, SortMemArg{}} (Val:SortOffsetArg{})), \bottom{SortMemArg{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortFuncDefCell{}} (\exists{SortFuncDefCell{}} (X0:SortFAddrCell{}, \exists{SortFuncDefCell{}} (X1:SortFCodeCell{}, \exists{SortFuncDefCell{}} (X2:SortFTypeCell{}, \exists{SortFuncDefCell{}} (X3:SortFLocalCell{}, \exists{SortFuncDefCell{}} (X4:SortFModInstCell{}, \exists{SortFuncDefCell{}} (X5:SortFuncMetadataCell{}, Lbl'-LT-'funcDef'-GT-'{}(X0:SortFAddrCell{}, X1:SortFCodeCell{}, X2:SortFTypeCell{}, X3:SortFLocalCell{}, X4:SortFModInstCell{}, X5:SortFuncMetadataCell{}))))))), \bottom{SortFuncDefCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortWasmString{}} (Lbl'Stop'WasmString'Unds'WASM-DATA-COMMON-SYNTAX'Unds'WasmString{}(), \or{SortWasmString{}} (\exists{SortWasmString{}} (Val:SortWasmStringToken{}, inj{SortWasmStringToken{}, SortWasmString{}} (Val:SortWasmStringToken{})), \bottom{SortWasmString{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCvti32Op{}} (LblaConvert'Unds'i32'Unds's{}(), \or{SortCvti32Op{}} (LblaConvert'Unds'i32'Unds'u{}(), \or{SortCvti32Op{}} (LblaExtend'Unds'i32'Unds's{}(), \or{SortCvti32Op{}} (LblaExtend'Unds'i32'Unds'u{}(), \bottom{SortCvti32Op{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortNextFuncIdxCellOpt{}} (LblnoNextFuncIdxCell{}(), \or{SortNextFuncIdxCellOpt{}} (\exists{SortNextFuncIdxCellOpt{}} (Val:SortNextFuncIdxCell{}, inj{SortNextFuncIdxCell{}, SortNextFuncIdxCellOpt{}} (Val:SortNextFuncIdxCell{})), \bottom{SortNextFuncIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemAddrsCellOpt{}} (LblnoMemAddrsCell{}(), \or{SortMemAddrsCellOpt{}} (\exists{SortMemAddrsCellOpt{}} (Val:SortMemAddrsCell{}, inj{SortMemAddrsCell{}, SortMemAddrsCellOpt{}} (Val:SortMemAddrsCell{})), \bottom{SortMemAddrsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMAddrCell{}} (\exists{SortMAddrCell{}} (X0:SortInt{}, Lbl'-LT-'mAddr'-GT-'{}(X0:SortInt{})), \bottom{SortMAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextFuncIdxCell{}} (\exists{SortNextFuncIdxCell{}} (X0:SortInt{}, Lbl'-LT-'nextFuncIdx'-GT-'{}(X0:SortInt{})), \bottom{SortNextFuncIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCurModIdxCell{}} (\exists{SortCurModIdxCell{}} (X0:SortOptionalInt{}, Lbl'-LT-'curModIdx'-GT-'{}(X0:SortOptionalInt{})), \bottom{SortCurModIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortWasmInt{}} (\exists{SortWasmInt{}} (Val:SortInt{}, inj{SortInt{}, SortWasmInt{}} (Val:SortInt{})), \bottom{SortWasmInt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleRegistryCellOpt{}} (LblnoModuleRegistryCell{}(), \or{SortModuleRegistryCellOpt{}} (\exists{SortModuleRegistryCellOpt{}} (Val:SortModuleRegistryCell{}, inj{SortModuleRegistryCell{}, SortModuleRegistryCellOpt{}} (Val:SortModuleRegistryCell{})), \bottom{SortModuleRegistryCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModuleRegistryCell{}} (\exists{SortModuleRegistryCell{}} (X0:SortMap{}, Lbl'-LT-'moduleRegistry'-GT-'{}(X0:SortMap{})), \bottom{SortModuleRegistryCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIBinOp{}} (LblintAdd{}(), \or{SortIBinOp{}} (LblintAnd{}(), \or{SortIBinOp{}} (LblintDiv'Unds's{}(), \or{SortIBinOp{}} (LblintDiv'Unds'u{}(), \or{SortIBinOp{}} (LblintMul{}(), \or{SortIBinOp{}} (LblintOr{}(), \or{SortIBinOp{}} (LblintRem'Unds's{}(), \or{SortIBinOp{}} (LblintRem'Unds'u{}(), \or{SortIBinOp{}} (LblintRotl{}(), \or{SortIBinOp{}} (LblintRotr{}(), \or{SortIBinOp{}} (LblintShl{}(), \or{SortIBinOp{}} (LblintShr'Unds's{}(), \or{SortIBinOp{}} (LblintShr'Unds'u{}(), \or{SortIBinOp{}} (LblintSub{}(), \or{SortIBinOp{}} (LblintXor{}(), \bottom{SortIBinOp{}}()))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortInstrsCell{}} (\exists{SortInstrsCell{}} (X0:SortK{}, Lbl'-LT-'instrs'-GT-'{}(X0:SortK{})), \bottom{SortInstrsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCellOpt{}} (LblnoGeneratedCounterCell{}(), \or{SortGeneratedCounterCellOpt{}} (\exists{SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{})), \bottom{SortGeneratedCounterCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortStartDefn{}} (\exists{SortStartDefn{}} (X0:SortIndex{}, Lbl'LPar'start'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StartDefn'Unds'Index{}(X0:SortIndex{})), \or{SortStartDefn{}} (\exists{SortStartDefn{}} (X0:SortInt{}, LblaStartDefn{}(X0:SortInt{})), \bottom{SortStartDefn{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFuncsCellOpt{}} (LblnoFuncsCell{}(), \or{SortFuncsCellOpt{}} (\exists{SortFuncsCellOpt{}} (Val:SortFuncsCell{}, inj{SortFuncsCell{}, SortFuncsCellOpt{}} (Val:SortFuncsCell{})), \bottom{SortFuncsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortInstrsCellOpt{}} (LblnoInstrsCell{}(), \or{SortInstrsCellOpt{}} (\exists{SortInstrsCellOpt{}} (Val:SortInstrsCell{}, inj{SortInstrsCell{}, SortInstrsCellOpt{}} (Val:SortInstrsCell{})), \bottom{SortInstrsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTdataCellOpt{}} (LblnoTdataCell{}(), \or{SortTdataCellOpt{}} (\exists{SortTdataCellOpt{}} (Val:SortTdataCell{}, inj{SortTdataCell{}, SortTdataCellOpt{}} (Val:SortTdataCell{})), \bottom{SortTdataCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTabInstCellFragment{}} (\exists{SortTabInstCellFragment{}} (X0:SortTAddrCellOpt{}, \exists{SortTabInstCellFragment{}} (X1:SortTmaxCellOpt{}, \exists{SortTabInstCellFragment{}} (X2:SortTsizeCellOpt{}, \exists{SortTabInstCellFragment{}} (X3:SortTdataCellOpt{}, Lbl'-LT-'tabInst'-GT-'-fragment{}(X0:SortTAddrCellOpt{}, X1:SortTmaxCellOpt{}, X2:SortTsizeCellOpt{}, X3:SortTdataCellOpt{}))))), \bottom{SortTabInstCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortContext{}} (\exists{SortContext{}} (X0:SortMap{}, \exists{SortContext{}} (X1:SortMap{}, \exists{SortContext{}} (X2:SortMap{}, \exists{SortContext{}} (X3:SortMap{}, Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(X0:SortMap{}, X1:SortMap{}, X2:SortMap{}, X3:SortMap{}))))), \bottom{SortContext{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStoreOpM{}} (\exists{SortStoreOpM{}} (X0:SortStoreOp{}, \exists{SortStoreOpM{}} (X1:SortMemArg{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(X0:SortStoreOp{}, X1:SortMemArg{}))), \or{SortStoreOpM{}} (\exists{SortStoreOpM{}} (Val:SortStoreOp{}, inj{SortStoreOp{}, SortStoreOpM{}} (Val:SortStoreOp{})), \bottom{SortStoreOpM{}}())) [constructor{}()] // no junk
  axiom{} \or{SortStoreOp{}} (LblstoreOpStore{}(), \or{SortStoreOp{}} (LblstoreOpStore16{}(), \or{SortStoreOp{}} (LblstoreOpStore32{}(), \or{SortStoreOp{}} (LblstoreOpStore8{}(), \bottom{SortStoreOp{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortFuncMetadata{}} (\exists{SortFuncMetadata{}} (X0:SortOptionalId{}, \exists{SortFuncMetadata{}} (X1:SortMap{}, LblfuncMeta{}(X0:SortOptionalId{}, X1:SortMap{}))), \bottom{SortFuncMetadata{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCell{}} (\exists{SortGeneratedCounterCell{}} (X0:SortInt{}, Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{})), \bottom{SortGeneratedCounterCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncAddrsCell{}} (\exists{SortFuncAddrsCell{}} (X0:SortMap{}, Lbl'-LT-'funcAddrs'-GT-'{}(X0:SortMap{})), \bottom{SortFuncAddrsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMmaxCellOpt{}} (LblnoMmaxCell{}(), \or{SortMmaxCellOpt{}} (\exists{SortMmaxCellOpt{}} (Val:SortMmaxCell{}, inj{SortMmaxCell{}, SortMmaxCellOpt{}} (Val:SortMmaxCell{})), \bottom{SortMmaxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortDeterministicMemoryGrowthCellOpt{}} (LblnoDeterministicMemoryGrowthCell{}(), \or{SortDeterministicMemoryGrowthCellOpt{}} (\exists{SortDeterministicMemoryGrowthCellOpt{}} (Val:SortDeterministicMemoryGrowthCell{}, inj{SortDeterministicMemoryGrowthCell{}, SortDeterministicMemoryGrowthCellOpt{}} (Val:SortDeterministicMemoryGrowthCell{})), \bottom{SortDeterministicMemoryGrowthCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTmaxCellOpt{}} (LblnoTmaxCell{}(), \or{SortTmaxCellOpt{}} (\exists{SortTmaxCellOpt{}} (Val:SortTmaxCell{}, inj{SortTmaxCell{}, SortTmaxCellOpt{}} (Val:SortTmaxCell{})), \bottom{SortTmaxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortAlignArg{}} (\exists{SortAlignArg{}} (X0:SortWasmInt{}, Lblalign'EqlsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'AlignArg'Unds'WasmInt{}(X0:SortWasmInt{})), \bottom{SortAlignArg{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMemInstCell{}} (\exists{SortMemInstCell{}} (X0:SortMAddrCell{}, \exists{SortMemInstCell{}} (X1:SortMmaxCell{}, \exists{SortMemInstCell{}} (X2:SortMsizeCell{}, \exists{SortMemInstCell{}} (X3:SortMdataCell{}, Lbl'-LT-'memInst'-GT-'{}(X0:SortMAddrCell{}, X1:SortMmaxCell{}, X2:SortMsizeCell{}, X3:SortMdataCell{}))))), \bottom{SortMemInstCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGlobalType{}} (\exists{SortGlobalType{}} (X0:SortMut{}, \exists{SortGlobalType{}} (X1:SortValType{}, LblaGlobalType{}(X0:SortMut{}, X1:SortValType{}))), \bottom{SortGlobalType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleDecl{}} (\exists{SortModuleDecl{}} (X0:SortOptionalId{}, \exists{SortModuleDecl{}} (X1:SortDefns{}, Lbl'LPar'module'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(X0:SortOptionalId{}, X1:SortDefns{}))), \or{SortModuleDecl{}} (\exists{SortModuleDecl{}} (X0:SortDefns{}, \exists{SortModuleDecl{}} (X1:SortDefns{}, \exists{SortModuleDecl{}} (X2:SortDefns{}, \exists{SortModuleDecl{}} (X3:SortDefns{}, \exists{SortModuleDecl{}} (X4:SortDefns{}, \exists{SortModuleDecl{}} (X5:SortDefns{}, \exists{SortModuleDecl{}} (X6:SortDefns{}, \exists{SortModuleDecl{}} (X7:SortDefns{}, \exists{SortModuleDecl{}} (X8:SortDefns{}, \exists{SortModuleDecl{}} (X9:SortDefns{}, \exists{SortModuleDecl{}} (X10:SortModuleMetadata{}, LblaModuleDecl{}(X0:SortDefns{}, X1:SortDefns{}, X2:SortDefns{}, X3:SortDefns{}, X4:SortDefns{}, X5:SortDefns{}, X6:SortDefns{}, X7:SortDefns{}, X8:SortDefns{}, X9:SortDefns{}, X10:SortModuleMetadata{})))))))))))), \bottom{SortModuleDecl{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFModInstCellOpt{}} (LblnoFModInstCell{}(), \or{SortFModInstCellOpt{}} (\exists{SortFModInstCellOpt{}} (Val:SortFModInstCell{}, inj{SortFModInstCell{}, SortFModInstCellOpt{}} (Val:SortFModInstCell{})), \bottom{SortFModInstCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortSignedness{}} (LblsignedBytes{}(), \or{SortSignedness{}} (LblunsignedBytes{}(), \bottom{SortSignedness{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGValueCellOpt{}} (LblnoGValueCell{}(), \or{SortGValueCellOpt{}} (\exists{SortGValueCellOpt{}} (Val:SortGValueCell{}, inj{SortGValueCell{}, SortGValueCellOpt{}} (Val:SortGValueCell{})), \bottom{SortGValueCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortWasmCellOpt{}} (LblnoWasmCell{}(), \or{SortWasmCellOpt{}} (\exists{SortWasmCellOpt{}} (Val:SortWasmCell{}, inj{SortWasmCell{}, SortWasmCellOpt{}} (Val:SortWasmCell{})), \bottom{SortWasmCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobalInstCellMap{}} (\exists{SortGlobalInstCellMap{}} (Val:SortGlobalInstCell{}, inj{SortGlobalInstCell{}, SortGlobalInstCellMap{}} (Val:SortGlobalInstCell{})), \bottom{SortGlobalInstCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortValType{}} (\exists{SortValType{}} (Val:SortFValType{}, inj{SortFValType{}, SortValType{}} (Val:SortFValType{})), \or{SortValType{}} (\exists{SortValType{}} (Val:SortIValType{}, inj{SortIValType{}, SortValType{}} (Val:SortIValType{})), \bottom{SortValType{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemIdsCell{}} (\exists{SortMemIdsCell{}} (X0:SortMap{}, Lbl'-LT-'memIds'-GT-'{}(X0:SortMap{})), \bottom{SortMemIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNumber{}} (\exists{SortNumber{}} (Val:SortInt{}, inj{SortInt{}, SortNumber{}} (Val:SortInt{})), \or{SortNumber{}} (\exists{SortNumber{}} (Val:SortFloat{}, inj{SortFloat{}, SortNumber{}} (Val:SortFloat{})), \bottom{SortNumber{}}())) [constructor{}()] // no junk
  axiom{} \or{SortBool{}} (\top{SortBool{}}(), \bottom{SortBool{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortFValType{}} (Lblf32{}(), \or{SortFValType{}} (Lblf64{}(), \bottom{SortFValType{}}())) [constructor{}()] // no junk
  axiom{} \bottom{SortK{}}() [constructor{}()] // no junk
  axiom{} \or{SortTypeKeyWord{}} (Lblparam'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}(), \or{SortTypeKeyWord{}} (Lblresult'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}(), \bottom{SortTypeKeyWord{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFuncIdCell{}} (\exists{SortFuncIdCell{}} (X0:SortOptionalId{}, Lbl'-LT-'funcId'-GT-'{}(X0:SortOptionalId{})), \bottom{SortFuncIdCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortImportDesc{}} (\exists{SortImportDesc{}} (X0:SortOptionalId{}, \exists{SortImportDesc{}} (X1:SortTypeUse{}, Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}))), \or{SortImportDesc{}} (\exists{SortImportDesc{}} (X0:SortOptionalId{}, \exists{SortImportDesc{}} (X1:SortTextFormatGlobalType{}, Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(X0:SortOptionalId{}, X1:SortTextFormatGlobalType{}))), \or{SortImportDesc{}} (\exists{SortImportDesc{}} (X0:SortOptionalId{}, \exists{SortImportDesc{}} (X1:SortMemType{}, Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(X0:SortOptionalId{}, X1:SortMemType{}))), \or{SortImportDesc{}} (\exists{SortImportDesc{}} (X0:SortOptionalId{}, \exists{SortImportDesc{}} (X1:SortTableType{}, Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(X0:SortOptionalId{}, X1:SortTableType{}))), \or{SortImportDesc{}} (\exists{SortImportDesc{}} (X0:SortOptionalId{}, \exists{SortImportDesc{}} (X1:SortInt{}, LblaFuncDesc{}(X0:SortOptionalId{}, X1:SortInt{}))), \or{SortImportDesc{}} (\exists{SortImportDesc{}} (X0:SortOptionalId{}, \exists{SortImportDesc{}} (X1:SortGlobalType{}, LblaGlobalDesc{}(X0:SortOptionalId{}, X1:SortGlobalType{}))), \or{SortImportDesc{}} (\exists{SortImportDesc{}} (X0:SortOptionalId{}, \exists{SortImportDesc{}} (X1:SortLimits{}, LblaMemoryDesc{}(X0:SortOptionalId{}, X1:SortLimits{}))), \or{SortImportDesc{}} (\exists{SortImportDesc{}} (X0:SortOptionalId{}, \exists{SortImportDesc{}} (X1:SortLimits{}, LblaTableDesc{}(X0:SortOptionalId{}, X1:SortLimits{}))), \bottom{SortImportDesc{}}())))))))) [constructor{}()] // no junk
  axiom{} \or{SortMemInstCellFragment{}} (\exists{SortMemInstCellFragment{}} (X0:SortMAddrCellOpt{}, \exists{SortMemInstCellFragment{}} (X1:SortMmaxCellOpt{}, \exists{SortMemInstCellFragment{}} (X2:SortMsizeCellOpt{}, \exists{SortMemInstCellFragment{}} (X3:SortMdataCellOpt{}, Lbl'-LT-'memInst'-GT-'-fragment{}(X0:SortMAddrCellOpt{}, X1:SortMmaxCellOpt{}, X2:SortMsizeCellOpt{}, X3:SortMdataCellOpt{}))))), \bottom{SortMemInstCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExportsCell{}} (\exists{SortExportsCell{}} (X0:SortMap{}, Lbl'-LT-'exports'-GT-'{}(X0:SortMap{})), \bottom{SortExportsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextGlobAddrCellOpt{}} (LblnoNextGlobAddrCell{}(), \or{SortNextGlobAddrCellOpt{}} (\exists{SortNextGlobAddrCellOpt{}} (Val:SortNextGlobAddrCell{}, inj{SortNextGlobAddrCell{}, SortNextGlobAddrCellOpt{}} (Val:SortNextGlobAddrCell{})), \bottom{SortNextGlobAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortNextGlobAddrCell{}} (\exists{SortNextGlobAddrCell{}} (X0:SortInt{}, Lbl'-LT-'nextGlobAddr'-GT-'{}(X0:SortInt{})), \bottom{SortNextGlobAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTdataCell{}} (\exists{SortTdataCell{}} (X0:SortMap{}, Lbl'-LT-'tdata'-GT-'{}(X0:SortMap{})), \bottom{SortTdataCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncDefCellMap{}} (\exists{SortFuncDefCellMap{}} (Val:SortFuncDefCell{}, inj{SortFuncDefCell{}, SortFuncDefCellMap{}} (Val:SortFuncDefCell{})), \bottom{SortFuncDefCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextModuleIdxCell{}} (\exists{SortNextModuleIdxCell{}} (X0:SortInt{}, Lbl'-LT-'nextModuleIdx'-GT-'{}(X0:SortInt{})), \bottom{SortNextModuleIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), \or{SortStmts{}} (\exists{SortStmts{}} (X0:SortStmt{}, \exists{SortStmts{}} (X1:SortStmts{}, Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(X0:SortStmt{}, X1:SortStmts{}))), \or{SortStmts{}} (\exists{SortStmts{}} (Val:SortEmptyStmts{}, inj{SortEmptyStmts{}, SortStmts{}} (Val:SortEmptyStmts{})), \or{SortStmts{}} (\exists{SortStmts{}} (Val:SortInstrs{}, inj{SortInstrs{}, SortStmts{}} (Val:SortInstrs{})), \or{SortStmts{}} (\exists{SortStmts{}} (Val:SortDefns{}, inj{SortDefns{}, SortStmts{}} (Val:SortDefns{})), \bottom{SortStmts{}}()))))) [constructor{}()] // no junk
  axiom{} \or{SortGAddrCellOpt{}} (LblnoGAddrCell{}(), \or{SortGAddrCellOpt{}} (\exists{SortGAddrCellOpt{}} (Val:SortGAddrCell{}, inj{SortGAddrCell{}, SortGAddrCellOpt{}} (Val:SortGAddrCell{})), \bottom{SortGAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortNextTabAddrCell{}} (\exists{SortNextTabAddrCell{}} (X0:SortInt{}, Lbl'-LT-'nextTabAddr'-GT-'{}(X0:SortInt{})), \bottom{SortNextTabAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortEndianness{}} (LblbigEndianBytes{}(), \or{SortEndianness{}} (LbllittleEndianBytes{}(), \bottom{SortEndianness{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFAddrCell{}} (\exists{SortFAddrCell{}} (X0:SortInt{}, Lbl'-LT-'fAddr'-GT-'{}(X0:SortInt{})), \bottom{SortFAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortMap{}}() [constructor{}()] // no junk
  axiom{} \or{SortFuncMetadataCellOpt{}} (LblnoFuncMetadataCell{}(), \or{SortFuncMetadataCellOpt{}} (\exists{SortFuncMetadataCellOpt{}} (Val:SortFuncMetadataCell{}, inj{SortFuncMetadataCell{}, SortFuncMetadataCellOpt{}} (Val:SortFuncMetadataCell{})), \bottom{SortFuncMetadataCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortNextFuncAddrCell{}} (\exists{SortNextFuncAddrCell{}} (X0:SortInt{}, Lbl'-LT-'nextFuncAddr'-GT-'{}(X0:SortInt{})), \bottom{SortNextFuncAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIRelOp{}} (LblintEq{}(), \or{SortIRelOp{}} (LblintGe'Unds's{}(), \or{SortIRelOp{}} (LblintGe'Unds'u{}(), \or{SortIRelOp{}} (LblintGt'Unds's{}(), \or{SortIRelOp{}} (LblintGt'Unds'u{}(), \or{SortIRelOp{}} (LblintLe'Unds's{}(), \or{SortIRelOp{}} (LblintLe'Unds'u{}(), \or{SortIRelOp{}} (LblintLt'Unds's{}(), \or{SortIRelOp{}} (LblintLt'Unds'u{}(), \or{SortIRelOp{}} (LblintNe{}(), \bottom{SortIRelOp{}}())))))))))) [constructor{}()] // no junk
  axiom{} \or{SortCvtf64Op{}} (LblaDemote'Unds'f64{}(), \or{SortCvtf64Op{}} (LblaTrunc'Unds'f64'Unds's{}(), \or{SortCvtf64Op{}} (LblaTrunc'Unds'f64'Unds'u{}(), \bottom{SortCvtf64Op{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortTabsCellFragment{}} (\exists{SortTabsCellFragment{}} (X0:SortTabInstCellMap{}, Lbl'-LT-'tabs'-GT-'-fragment{}(X0:SortTabInstCellMap{})), \bottom{SortTabsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortValstackCell{}} (\exists{SortValstackCell{}} (X0:SortValStack{}, Lbl'-LT-'valstack'-GT-'{}(X0:SortValStack{})), \bottom{SortValstackCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMemType{}} (\exists{SortMemType{}} (Val:SortInt{}, inj{SortInt{}, SortMemType{}} (Val:SortInt{})), \or{SortMemType{}} (\exists{SortMemType{}} (Val:SortTextLimits{}, inj{SortTextLimits{}, SortMemType{}} (Val:SortTextLimits{})), \bottom{SortMemType{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModuleMetadataCellOpt{}} (LblnoModuleMetadataCell{}(), \or{SortModuleMetadataCellOpt{}} (\exists{SortModuleMetadataCellOpt{}} (Val:SortModuleMetadataCell{}, inj{SortModuleMetadataCell{}, SortModuleMetadataCellOpt{}} (Val:SortModuleMetadataCell{})), \bottom{SortModuleMetadataCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortLabel{}} (\exists{SortLabel{}} (X0:SortVecType{}, \exists{SortLabel{}} (X1:SortInstrs{}, \exists{SortLabel{}} (X2:SortValStack{}, Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortValStack{})))), \bottom{SortLabel{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeIdsCellOpt{}} (LblnoTypeIdsCell{}(), \or{SortTypeIdsCellOpt{}} (\exists{SortTypeIdsCellOpt{}} (Val:SortTypeIdsCell{}, inj{SortTypeIdsCell{}, SortTypeIdsCellOpt{}} (Val:SortTypeIdsCell{})), \bottom{SortTypeIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModuleInstCellMap{}} (\exists{SortModuleInstCellMap{}} (Val:SortModuleInstCell{}, inj{SortModuleInstCell{}, SortModuleInstCellMap{}} (Val:SortModuleInstCell{})), \bottom{SortModuleInstCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeUse{}} (\exists{SortTypeUse{}} (X0:SortIndex{}, Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(X0:SortIndex{})), \or{SortTypeUse{}} (\exists{SortTypeUse{}} (X0:SortIndex{}, \exists{SortTypeUse{}} (X1:SortTypeDecls{}, Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(X0:SortIndex{}, X1:SortTypeDecls{}))), \or{SortTypeUse{}} (\exists{SortTypeUse{}} (Val:SortTypeDecls{}, inj{SortTypeDecls{}, SortTypeUse{}} (Val:SortTypeDecls{})), \bottom{SortTypeUse{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortGlobalsCellFragment{}} (\exists{SortGlobalsCellFragment{}} (X0:SortGlobalInstCellMap{}, Lbl'-LT-'globals'-GT-'-fragment{}(X0:SortGlobalInstCellMap{})), \bottom{SortGlobalsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTabIdsCellOpt{}} (LblnoTabIdsCell{}(), \or{SortTabIdsCellOpt{}} (\exists{SortTabIdsCellOpt{}} (Val:SortTabIdsCell{}, inj{SortTabIdsCell{}, SortTabIdsCellOpt{}} (Val:SortTabIdsCell{})), \bottom{SortTabIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortOptionalString{}} (Lbl'Stop'String{}(), \or{SortOptionalString{}} (\exists{SortOptionalString{}} (Val:SortString{}, inj{SortString{}, SortOptionalString{}} (Val:SortString{})), \bottom{SortOptionalString{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTypesInfo{}} (\exists{SortTypesInfo{}} (X0:SortMap{}, \exists{SortTypesInfo{}} (X1:SortInt{}, Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(X0:SortMap{}, X1:SortInt{}))), \bottom{SortTypesInfo{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLoadOpM{}} (\exists{SortLoadOpM{}} (X0:SortLoadOp{}, \exists{SortLoadOpM{}} (X1:SortMemArg{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(X0:SortLoadOp{}, X1:SortMemArg{}))), \or{SortLoadOpM{}} (\exists{SortLoadOpM{}} (Val:SortLoadOp{}, inj{SortLoadOp{}, SortLoadOpM{}} (Val:SortLoadOp{})), \bottom{SortLoadOpM{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobalInstCell{}} (\exists{SortGlobalInstCell{}} (X0:SortGAddrCell{}, \exists{SortGlobalInstCell{}} (X1:SortGValueCell{}, \exists{SortGlobalInstCell{}} (X2:SortGMutCell{}, Lbl'-LT-'globalInst'-GT-'{}(X0:SortGAddrCell{}, X1:SortGValueCell{}, X2:SortGMutCell{})))), \bottom{SortGlobalInstCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortLoadOpM{}, Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortStoreOpM{}, Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortLoadOpM{}, Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortStoreOpM{}, Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortValType{}, \exists{SortPlainInstr{}} (X1:SortCvtOp{}, LblaCvtOp{}(X0:SortValType{}, X1:SortCvtOp{}))), \or{SortPlainInstr{}} (LblaDrop{}(), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortFBinOp{}, LblaFBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortNumber{}, LblaFConst{}(X0:SortFValType{}, X1:SortNumber{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortFRelOp{}, LblaFRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortFUnOp{}, LblaFUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}))), \or{SortPlainInstr{}} (LblaGrow{}(), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortIBinOp{}, LblaIBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortWasmInt{}, LblaIConst{}(X0:SortIValType{}, X1:SortWasmInt{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortIRelOp{}, LblaIRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortIUnOp{}, LblaIUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}))), \or{SortPlainInstr{}} (LblaNop{}(), \or{SortPlainInstr{}} (LblaReturn{}(), \or{SortPlainInstr{}} (LblaSelect{}(), \or{SortPlainInstr{}} (LblaSize{}(), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortTestOp{}, LblaTestOp{}(X0:SortIValType{}, X1:SortTestOp{}))), \or{SortPlainInstr{}} (LblaUnreachable{}(), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortElemSegment{}, Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortTypeUse{}, Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \bottom{SortPlainInstr{}}()))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortCurModIdxCellOpt{}} (LblnoCurModIdxCell{}(), \or{SortCurModIdxCellOpt{}} (\exists{SortCurModIdxCellOpt{}} (Val:SortCurModIdxCell{}, inj{SortCurModIdxCell{}, SortCurModIdxCellOpt{}} (Val:SortCurModIdxCell{})), \bottom{SortCurModIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFuncsCell{}} (\exists{SortFuncsCell{}} (X0:SortFuncDefCellMap{}, Lbl'-LT-'funcs'-GT-'{}(X0:SortFuncDefCellMap{})), \bottom{SortFuncsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFTypeCellOpt{}} (LblnoFTypeCell{}(), \or{SortFTypeCellOpt{}} (\exists{SortFTypeCellOpt{}} (Val:SortFTypeCell{}, inj{SortFTypeCell{}, SortFTypeCellOpt{}} (Val:SortFTypeCell{})), \bottom{SortFTypeCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModuleFileNameCell{}} (\exists{SortModuleFileNameCell{}} (X0:SortOptionalString{}, Lbl'-LT-'moduleFileName'-GT-'{}(X0:SortOptionalString{})), \bottom{SortModuleFileNameCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortInt{}, \exists{SortStmt{}} (X1:SortInt{}, \exists{SortStmt{}} (X2:SortMap{}, \exists{SortStmt{}} (X3:SortInts{}, Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Ints{}(X0:SortInt{}, X1:SortInt{}, X2:SortMap{}, X3:SortInts{}))))), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortTableDefn{}, inj{SortTableDefn{}, SortStmt{}} (Val:SortTableDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortImportDefn{}, inj{SortImportDefn{}, SortStmt{}} (Val:SortImportDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortGlobalDefn{}, inj{SortGlobalDefn{}, SortStmt{}} (Val:SortGlobalDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortFuncDefn{}, inj{SortFuncDefn{}, SortStmt{}} (Val:SortFuncDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortTypeDefn{}, inj{SortTypeDefn{}, SortStmt{}} (Val:SortTypeDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortInstr{}, inj{SortInstr{}, SortStmt{}} (Val:SortInstr{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortElemDefn{}, inj{SortElemDefn{}, SortStmt{}} (Val:SortElemDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortMemoryDefn{}, inj{SortMemoryDefn{}, SortStmt{}} (Val:SortMemoryDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortStartDefn{}, inj{SortStartDefn{}, SortStmt{}} (Val:SortStartDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortModuleDecl{}, inj{SortModuleDecl{}, SortStmt{}} (Val:SortModuleDecl{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortPlainInstr{}, inj{SortPlainInstr{}, SortStmt{}} (Val:SortPlainInstr{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortDefn{}, inj{SortDefn{}, SortStmt{}} (Val:SortDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortFoldedInstr{}, inj{SortFoldedInstr{}, SortStmt{}} (Val:SortFoldedInstr{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortDataDefn{}, inj{SortDataDefn{}, SortStmt{}} (Val:SortDataDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortBlockInstr{}, inj{SortBlockInstr{}, SortStmt{}} (Val:SortBlockInstr{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortEmptyStmt{}, inj{SortEmptyStmt{}, SortStmt{}} (Val:SortEmptyStmt{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortExportDefn{}, inj{SortExportDefn{}, SortStmt{}} (Val:SortExportDefn{})), \bottom{SortStmt{}}())))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortLimits{}} (\exists{SortLimits{}} (X0:SortInt{}, LbllimitsMin{}(X0:SortInt{})), \or{SortLimits{}} (\exists{SortLimits{}} (X0:SortInt{}, \exists{SortLimits{}} (X1:SortInt{}, LbllimitsMinMax{}(X0:SortInt{}, X1:SortInt{}))), \bottom{SortLimits{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTAddrCellOpt{}} (LblnoTAddrCell{}(), \or{SortTAddrCellOpt{}} (\exists{SortTAddrCellOpt{}} (Val:SortTAddrCell{}, inj{SortTAddrCell{}, SortTAddrCellOpt{}} (Val:SortTAddrCell{})), \bottom{SortTAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModuleInstCellFragment{}} (\exists{SortModuleInstCellFragment{}} (X0:SortModIdxCellOpt{}, \exists{SortModuleInstCellFragment{}} (X1:SortExportsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X2:SortTypesCellOpt{}, \exists{SortModuleInstCellFragment{}} (X3:SortNextTypeIdxCellOpt{}, \exists{SortModuleInstCellFragment{}} (X4:SortFuncAddrsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X5:SortNextFuncIdxCellOpt{}, \exists{SortModuleInstCellFragment{}} (X6:SortTabIdsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X7:SortTabAddrsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X8:SortMemIdsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X9:SortMemAddrsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X10:SortGlobIdsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X11:SortGlobalAddrsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X12:SortNextGlobIdxCellOpt{}, \exists{SortModuleInstCellFragment{}} (X13:SortModuleMetadataCellOpt{}, Lbl'-LT-'moduleInst'-GT-'-fragment{}(X0:SortModIdxCellOpt{}, X1:SortExportsCellOpt{}, X2:SortTypesCellOpt{}, X3:SortNextTypeIdxCellOpt{}, X4:SortFuncAddrsCellOpt{}, X5:SortNextFuncIdxCellOpt{}, X6:SortTabIdsCellOpt{}, X7:SortTabAddrsCellOpt{}, X8:SortMemIdsCellOpt{}, X9:SortMemAddrsCellOpt{}, X10:SortGlobIdsCellOpt{}, X11:SortGlobalAddrsCellOpt{}, X12:SortNextGlobIdxCellOpt{}, X13:SortModuleMetadataCellOpt{}))))))))))))))), \bottom{SortModuleInstCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleInstancesCellFragment{}} (\exists{SortModuleInstancesCellFragment{}} (X0:SortModuleInstCellMap{}, Lbl'-LT-'moduleInstances'-GT-'-fragment{}(X0:SortModuleInstCellMap{})), \bottom{SortModuleInstancesCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleIdsCell{}} (\exists{SortModuleIdsCell{}} (X0:SortMap{}, Lbl'-LT-'moduleIds'-GT-'{}(X0:SortMap{})), \bottom{SortModuleIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFTypeCell{}} (\exists{SortFTypeCell{}} (X0:SortType{}, Lbl'-LT-'fType'-GT-'{}(X0:SortType{})), \bottom{SortFTypeCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMainStoreCell{}} (\exists{SortMainStoreCell{}} (X0:SortFuncsCell{}, \exists{SortMainStoreCell{}} (X1:SortNextFuncAddrCell{}, \exists{SortMainStoreCell{}} (X2:SortTabsCell{}, \exists{SortMainStoreCell{}} (X3:SortNextTabAddrCell{}, \exists{SortMainStoreCell{}} (X4:SortMemsCell{}, \exists{SortMainStoreCell{}} (X5:SortNextMemAddrCell{}, \exists{SortMainStoreCell{}} (X6:SortGlobalsCell{}, \exists{SortMainStoreCell{}} (X7:SortNextGlobAddrCell{}, Lbl'-LT-'mainStore'-GT-'{}(X0:SortFuncsCell{}, X1:SortNextFuncAddrCell{}, X2:SortTabsCell{}, X3:SortNextTabAddrCell{}, X4:SortMemsCell{}, X5:SortNextMemAddrCell{}, X6:SortGlobalsCell{}, X7:SortNextGlobAddrCell{}))))))))), \bottom{SortMainStoreCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTsizeCell{}} (\exists{SortTsizeCell{}} (X0:SortInt{}, Lbl'-LT-'tsize'-GT-'{}(X0:SortInt{})), \bottom{SortTsizeCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMainStoreCellFragment{}} (\exists{SortMainStoreCellFragment{}} (X0:SortFuncsCellOpt{}, \exists{SortMainStoreCellFragment{}} (X1:SortNextFuncAddrCellOpt{}, \exists{SortMainStoreCellFragment{}} (X2:SortTabsCellOpt{}, \exists{SortMainStoreCellFragment{}} (X3:SortNextTabAddrCellOpt{}, \exists{SortMainStoreCellFragment{}} (X4:SortMemsCellOpt{}, \exists{SortMainStoreCellFragment{}} (X5:SortNextMemAddrCellOpt{}, \exists{SortMainStoreCellFragment{}} (X6:SortGlobalsCellOpt{}, \exists{SortMainStoreCellFragment{}} (X7:SortNextGlobAddrCellOpt{}, Lbl'-LT-'mainStore'-GT-'-fragment{}(X0:SortFuncsCellOpt{}, X1:SortNextFuncAddrCellOpt{}, X2:SortTabsCellOpt{}, X3:SortNextTabAddrCellOpt{}, X4:SortMemsCellOpt{}, X5:SortNextMemAddrCellOpt{}, X6:SortGlobalsCellOpt{}, X7:SortNextGlobAddrCellOpt{}))))))))), \bottom{SortMainStoreCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncIdsCell{}} (\exists{SortFuncIdsCell{}} (X0:SortMap{}, Lbl'-LT-'funcIds'-GT-'{}(X0:SortMap{})), \bottom{SortFuncIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{Sort'Hash'Layout{}} (\top{Sort'Hash'Layout{}}(), \bottom{Sort'Hash'Layout{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortFLocalCell{}} (\exists{SortFLocalCell{}} (X0:SortType{}, Lbl'-LT-'fLocal'-GT-'{}(X0:SortType{})), \bottom{SortFLocalCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTabsCell{}} (\exists{SortTabsCell{}} (X0:SortTabInstCellMap{}, Lbl'-LT-'tabs'-GT-'{}(X0:SortTabInstCellMap{})), \bottom{SortTabsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortWasmStringToken{}} (\top{SortWasmStringToken{}}(), \bottom{SortWasmStringToken{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortNextMemAddrCell{}} (\exists{SortNextMemAddrCell{}} (X0:SortInt{}, Lbl'-LT-'nextMemAddr'-GT-'{}(X0:SortInt{})), \bottom{SortNextMemAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIValType{}} (Lbli32{}(), \or{SortIValType{}} (Lbli64{}(), \bottom{SortIValType{}}())) [constructor{}()] // no junk
  axiom{} \or{SortInt{}} (\top{SortInt{}}(), \bottom{SortInt{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortMemsCellOpt{}} (LblnoMemsCell{}(), \or{SortMemsCellOpt{}} (\exists{SortMemsCellOpt{}} (Val:SortMemsCell{}, inj{SortMemsCell{}, SortMemsCellOpt{}} (Val:SortMemsCell{})), \bottom{SortMemsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobIdsCellOpt{}} (LblnoGlobIdsCell{}(), \or{SortGlobIdsCellOpt{}} (\exists{SortGlobIdsCellOpt{}} (Val:SortGlobIdsCell{}, inj{SortGlobIdsCell{}, SortGlobIdsCellOpt{}} (Val:SortGlobIdsCell{})), \bottom{SortGlobIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMdataCell{}} (\exists{SortMdataCell{}} (X0:SortBytes{}, Lbl'-LT-'mdata'-GT-'{}(X0:SortBytes{})), \bottom{SortMdataCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTableSpec{}} (\exists{SortTableSpec{}} (X0:SortTableElemType{}, \exists{SortTableSpec{}} (X1:SortElemSegment{}, Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(X0:SortTableElemType{}, X1:SortElemSegment{}))), \or{SortTableSpec{}} (\exists{SortTableSpec{}} (X0:SortInlineExport{}, \exists{SortTableSpec{}} (X1:SortTableSpec{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(X0:SortInlineExport{}, X1:SortTableSpec{}))), \or{SortTableSpec{}} (\exists{SortTableSpec{}} (X0:SortInlineImport{}, \exists{SortTableSpec{}} (X1:SortTableType{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(X0:SortInlineImport{}, X1:SortTableType{}))), \or{SortTableSpec{}} (\exists{SortTableSpec{}} (Val:SortTableType{}, inj{SortTableType{}, SortTableSpec{}} (Val:SortTableType{})), \bottom{SortTableSpec{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortFCodeCell{}} (\exists{SortFCodeCell{}} (X0:SortInstrs{}, Lbl'-LT-'fCode'-GT-'{}(X0:SortInstrs{})), \bottom{SortFCodeCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCurFrameCellOpt{}} (LblnoCurFrameCell{}(), \or{SortCurFrameCellOpt{}} (\exists{SortCurFrameCellOpt{}} (Val:SortCurFrameCell{}, inj{SortCurFrameCell{}, SortCurFrameCellOpt{}} (Val:SortCurFrameCell{})), \bottom{SortCurFrameCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFModInstCell{}} (\exists{SortFModInstCell{}} (X0:SortInt{}, Lbl'-LT-'fModInst'-GT-'{}(X0:SortInt{})), \bottom{SortFModInstCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTabAddrsCell{}} (\exists{SortTabAddrsCell{}} (X0:SortMap{}, Lbl'-LT-'tabAddrs'-GT-'{}(X0:SortMap{})), \bottom{SortTabAddrsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortTableDefn{}, inj{SortTableDefn{}, SortDefn{}} (Val:SortTableDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortImportDefn{}, inj{SortImportDefn{}, SortDefn{}} (Val:SortImportDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortGlobalDefn{}, inj{SortGlobalDefn{}, SortDefn{}} (Val:SortGlobalDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortFuncDefn{}, inj{SortFuncDefn{}, SortDefn{}} (Val:SortFuncDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortTypeDefn{}, inj{SortTypeDefn{}, SortDefn{}} (Val:SortTypeDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortElemDefn{}, inj{SortElemDefn{}, SortDefn{}} (Val:SortElemDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortMemoryDefn{}, inj{SortMemoryDefn{}, SortDefn{}} (Val:SortMemoryDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortStartDefn{}, inj{SortStartDefn{}, SortDefn{}} (Val:SortStartDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortDataDefn{}, inj{SortDataDefn{}, SortDefn{}} (Val:SortDataDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortEmptyStmt{}, inj{SortEmptyStmt{}, SortDefn{}} (Val:SortEmptyStmt{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortExportDefn{}, inj{SortExportDefn{}, SortDefn{}} (Val:SortExportDefn{})), \bottom{SortDefn{}}()))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortFloat{}} (\top{SortFloat{}}(), \bottom{SortFloat{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortModuleIdCellOpt{}} (LblnoModuleIdCell{}(), \or{SortModuleIdCellOpt{}} (\exists{SortModuleIdCellOpt{}} (Val:SortModuleIdCell{}, inj{SortModuleIdCell{}, SortModuleIdCellOpt{}} (Val:SortModuleIdCell{})), \bottom{SortModuleIdCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortPlainInstr{}, Lbl'LParUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{})), \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortPlainInstr{}, \exists{SortFoldedInstr{}} (X1:SortInstrs{}, Lbl'LParUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}))), \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortOptionalId{}, \exists{SortFoldedInstr{}} (X1:SortTypeDecls{}, \exists{SortFoldedInstr{}} (X2:SortInstrs{}, Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{})))), \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortOptionalId{}, \exists{SortFoldedInstr{}} (X1:SortTypeDecls{}, \exists{SortFoldedInstr{}} (X2:SortInstrs{}, \exists{SortFoldedInstr{}} (X3:SortInstrs{}, \exists{SortFoldedInstr{}} (X4:SortInstrs{}, Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}, X4:SortInstrs{})))))), \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortOptionalId{}, \exists{SortFoldedInstr{}} (X1:SortTypeDecls{}, \exists{SortFoldedInstr{}} (X2:SortInstrs{}, \exists{SortFoldedInstr{}} (X3:SortInstrs{}, Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}))))), \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortOptionalId{}, \exists{SortFoldedInstr{}} (X1:SortTypeDecls{}, \exists{SortFoldedInstr{}} (X2:SortInstrs{}, Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{})))), \bottom{SortFoldedInstr{}}())))))) [constructor{}()] // no junk
  axiom{} \or{SortInlineImport{}} (\exists{SortInlineImport{}} (X0:SortWasmString{}, \exists{SortInlineImport{}} (X1:SortWasmString{}, Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(X0:SortWasmString{}, X1:SortWasmString{}))), \bottom{SortInlineImport{}}()) [constructor{}()] // no junk
  axiom{} \or{SortValstackCellOpt{}} (LblnoValstackCell{}(), \or{SortValstackCellOpt{}} (\exists{SortValstackCellOpt{}} (Val:SortValstackCell{}, inj{SortValstackCell{}, SortValstackCellOpt{}} (Val:SortValstackCell{})), \bottom{SortValstackCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFuncIdsCellOpt{}} (LblnoFuncIdsCell{}(), \or{SortFuncIdsCellOpt{}} (\exists{SortFuncIdsCellOpt{}} (Val:SortFuncIdsCell{}, inj{SortFuncIdsCell{}, SortFuncIdsCellOpt{}} (Val:SortFuncIdsCell{})), \bottom{SortFuncIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortAllocatedKind{}} (Lblfunc'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(), \or{SortAllocatedKind{}} (Lblglobal'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(), \or{SortAllocatedKind{}} (Lblmemory'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(), \or{SortAllocatedKind{}} (Lbltable'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(), \bottom{SortAllocatedKind{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortEmptyStmts{}} (Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}(), \or{SortEmptyStmts{}} (\exists{SortEmptyStmts{}} (X0:SortEmptyStmt{}, \exists{SortEmptyStmts{}} (X1:SortEmptyStmts{}, LbllistStmt{}(X0:SortEmptyStmt{}, X1:SortEmptyStmts{}))), \bottom{SortEmptyStmts{}}())) [constructor{}()] // no junk
  axiom{} \or{SortBlockMetaData{}} (\exists{SortBlockMetaData{}} (Val:SortInt{}, inj{SortInt{}, SortBlockMetaData{}} (Val:SortInt{})), \or{SortBlockMetaData{}} (\exists{SortBlockMetaData{}} (Val:SortOptionalInt{}, inj{SortOptionalInt{}, SortBlockMetaData{}} (Val:SortOptionalInt{})), \bottom{SortBlockMetaData{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemsCellFragment{}} (\exists{SortMemsCellFragment{}} (X0:SortMemInstCellMap{}, Lbl'-LT-'mems'-GT-'-fragment{}(X0:SortMemInstCellMap{})), \bottom{SortMemsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFBinOp{}} (LblfloatAdd{}(), \or{SortFBinOp{}} (LblfloatCopysign{}(), \or{SortFBinOp{}} (LblfloatDiv{}(), \or{SortFBinOp{}} (LblfloatMax{}(), \or{SortFBinOp{}} (LblfloatMin{}(), \or{SortFBinOp{}} (LblfloatMul{}(), \or{SortFBinOp{}} (LblfloatSub{}(), \bottom{SortFBinOp{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortType{}} (Lbl'Stop'Type'Unds'WASM-DATA'Unds'Type{}(), \or{SortType{}} (\exists{SortType{}} (Val:SortValType{}, inj{SortValType{}, SortType{}} (Val:SortValType{})), \or{SortType{}} (\exists{SortType{}} (Val:SortFValType{}, inj{SortFValType{}, SortType{}} (Val:SortFValType{})), \or{SortType{}} (\exists{SortType{}} (Val:SortIValType{}, inj{SortIValType{}, SortType{}} (Val:SortIValType{})), \or{SortType{}} (\exists{SortType{}} (Val:SortFuncType{}, inj{SortFuncType{}, SortType{}} (Val:SortFuncType{})), \or{SortType{}} (\exists{SortType{}} (Val:SortVecType{}, inj{SortVecType{}, SortType{}} (Val:SortVecType{})), \bottom{SortType{}}())))))) [constructor{}()] // no junk
  axiom{} \or{SortFuncMetadataCellFragment{}} (\exists{SortFuncMetadataCellFragment{}} (X0:SortFuncIdCellOpt{}, \exists{SortFuncMetadataCellFragment{}} (X1:SortLocalIdsCellOpt{}, Lbl'-LT-'funcMetadata'-GT-'-fragment{}(X0:SortFuncIdCellOpt{}, X1:SortLocalIdsCellOpt{}))), \bottom{SortFuncMetadataCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleFileNameCellOpt{}} (LblnoModuleFileNameCell{}(), \or{SortModuleFileNameCellOpt{}} (\exists{SortModuleFileNameCellOpt{}} (Val:SortModuleFileNameCell{}, inj{SortModuleFileNameCell{}, SortModuleFileNameCellOpt{}} (Val:SortModuleFileNameCell{})), \bottom{SortModuleFileNameCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortLocalsCellOpt{}} (LblnoLocalsCell{}(), \or{SortLocalsCellOpt{}} (\exists{SortLocalsCellOpt{}} (Val:SortLocalsCell{}, inj{SortLocalsCell{}, SortLocalsCellOpt{}} (Val:SortLocalsCell{})), \bottom{SortLocalsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCell{}} (\exists{SortGeneratedTopCell{}} (X0:SortWasmCell{}, \exists{SortGeneratedTopCell{}} (X1:SortGeneratedCounterCell{}, Lbl'-LT-'generatedTop'-GT-'{}(X0:SortWasmCell{}, X1:SortGeneratedCounterCell{}))), \bottom{SortGeneratedTopCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortDataDefn{}} (\exists{SortDataDefn{}} (X0:SortOffset{}, \exists{SortDataDefn{}} (X1:SortDataString{}, Lbl'LPar'data'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Offset'Unds'DataString{}(X0:SortOffset{}, X1:SortDataString{}))), \or{SortDataDefn{}} (\exists{SortDataDefn{}} (X0:SortIndex{}, \exists{SortDataDefn{}} (X1:SortOffset{}, \exists{SortDataDefn{}} (X2:SortDataString{}, Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortDataString{})))), \or{SortDataDefn{}} (\exists{SortDataDefn{}} (X0:SortInt{}, \exists{SortDataDefn{}} (X1:SortInstrs{}, \exists{SortDataDefn{}} (X2:SortBytes{}, LblaDataDefn{}(X0:SortInt{}, X1:SortInstrs{}, X2:SortBytes{})))), \or{SortDataDefn{}} (\exists{SortDataDefn{}} (X0:SortInt{}, \exists{SortDataDefn{}} (X1:SortBytes{}, Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Int'Unds'Bytes{}(X0:SortInt{}, X1:SortBytes{}))), \bottom{SortDataDefn{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortFuncType{}} (\exists{SortFuncType{}} (X0:SortVecType{}, \exists{SortFuncType{}} (X1:SortVecType{}, LblaFuncType{}(X0:SortVecType{}, X1:SortVecType{}))), \bottom{SortFuncType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeIdsCell{}} (\exists{SortTypeIdsCell{}} (X0:SortMap{}, Lbl'-LT-'typeIds'-GT-'{}(X0:SortMap{})), \bottom{SortTypeIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortVal{}} (\exists{SortVal{}} (X0:SortValType{}, \exists{SortVal{}} (X1:SortNumber{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(X0:SortValType{}, X1:SortNumber{}))), \or{SortVal{}} (Lblundefined'Unds'WASM-DATA'Unds'Val{}(), \or{SortVal{}} (\exists{SortVal{}} (Val:SortIVal{}, inj{SortIVal{}, SortVal{}} (Val:SortIVal{})), \or{SortVal{}} (\exists{SortVal{}} (Val:SortFVal{}, inj{SortFVal{}, SortVal{}} (Val:SortFVal{})), \bottom{SortVal{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortTabsCellOpt{}} (LblnoTabsCell{}(), \or{SortTabsCellOpt{}} (\exists{SortTabsCellOpt{}} (Val:SortTabsCell{}, inj{SortTabsCell{}, SortTabsCellOpt{}} (Val:SortTabsCell{})), \bottom{SortTabsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGMutCell{}} (\exists{SortGMutCell{}} (X0:SortMut{}, Lbl'-LT-'gMut'-GT-'{}(X0:SortMut{})), \bottom{SortGMutCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTabIdsCell{}} (\exists{SortTabIdsCell{}} (X0:SortMap{}, Lbl'-LT-'tabIds'-GT-'{}(X0:SortMap{})), \bottom{SortTabIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortSet{}}() [constructor{}()] // no junk
  axiom{} \or{SortFrame{}} (\exists{SortFrame{}} (X0:SortInt{}, \exists{SortFrame{}} (X1:SortValTypes{}, \exists{SortFrame{}} (X2:SortValStack{}, \exists{SortFrame{}} (X3:SortMap{}, Lblframe'UndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map{}(X0:SortInt{}, X1:SortValTypes{}, X2:SortValStack{}, X3:SortMap{}))))), \bottom{SortFrame{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInstrs{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}(), \or{SortInstrs{}} (\exists{SortInstrs{}} (X0:SortInstr{}, \exists{SortInstrs{}} (X1:SortInstrs{}, Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(X0:SortInstr{}, X1:SortInstrs{}))), \or{SortInstrs{}} (\exists{SortInstrs{}} (Val:SortEmptyStmts{}, inj{SortEmptyStmts{}, SortInstrs{}} (Val:SortEmptyStmts{})), \bottom{SortInstrs{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortModIdxCell{}} (\exists{SortModIdxCell{}} (X0:SortInt{}, Lbl'-LT-'modIdx'-GT-'{}(X0:SortInt{})), \bottom{SortModIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncIdCellOpt{}} (LblnoFuncIdCell{}(), \or{SortFuncIdCellOpt{}} (\exists{SortFuncIdCellOpt{}} (Val:SortFuncIdCell{}, inj{SortFuncIdCell{}, SortFuncIdCellOpt{}} (Val:SortFuncIdCell{})), \bottom{SortFuncIdCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFAddrCellOpt{}} (LblnoFAddrCell{}(), \or{SortFAddrCellOpt{}} (\exists{SortFAddrCellOpt{}} (Val:SortFAddrCell{}, inj{SortFAddrCell{}, SortFAddrCellOpt{}} (Val:SortFAddrCell{})), \bottom{SortFAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortBlockInstr{}} (\exists{SortBlockInstr{}} (X0:SortOptionalId{}, \exists{SortBlockInstr{}} (X1:SortTypeDecls{}, \exists{SortBlockInstr{}} (X2:SortInstrs{}, \exists{SortBlockInstr{}} (X3:SortOptionalId{}, Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}))))), \or{SortBlockInstr{}} (\exists{SortBlockInstr{}} (X0:SortOptionalId{}, \exists{SortBlockInstr{}} (X1:SortTypeDecls{}, \exists{SortBlockInstr{}} (X2:SortInstrs{}, \exists{SortBlockInstr{}} (X3:SortOptionalId{}, \exists{SortBlockInstr{}} (X4:SortInstrs{}, \exists{SortBlockInstr{}} (X5:SortOptionalId{}, Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}, X4:SortInstrs{}, X5:SortOptionalId{}))))))), \or{SortBlockInstr{}} (\exists{SortBlockInstr{}} (X0:SortOptionalId{}, \exists{SortBlockInstr{}} (X1:SortTypeDecls{}, \exists{SortBlockInstr{}} (X2:SortInstrs{}, \exists{SortBlockInstr{}} (X3:SortOptionalId{}, Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}))))), \or{SortBlockInstr{}} (\exists{SortBlockInstr{}} (X0:SortOptionalId{}, \exists{SortBlockInstr{}} (X1:SortTypeDecls{}, \exists{SortBlockInstr{}} (X2:SortInstrs{}, \exists{SortBlockInstr{}} (X3:SortOptionalId{}, Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}))))), \bottom{SortBlockInstr{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortGlobalAddrsCellOpt{}} (LblnoGlobalAddrsCell{}(), \or{SortGlobalAddrsCellOpt{}} (\exists{SortGlobalAddrsCellOpt{}} (Val:SortGlobalAddrsCell{}, inj{SortGlobalAddrsCell{}, SortGlobalAddrsCellOpt{}} (Val:SortGlobalAddrsCell{})), \bottom{SortGlobalAddrsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortVecType{}} (\exists{SortVecType{}} (X0:SortValTypes{}, LblaVecType{}(X0:SortValTypes{})), \bottom{SortVecType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIdentifierToken{}} (\top{SortIdentifierToken{}}(), \bottom{SortIdentifierToken{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortNextGlobIdxCellOpt{}} (LblnoNextGlobIdxCell{}(), \or{SortNextGlobIdxCellOpt{}} (\exists{SortNextGlobIdxCellOpt{}} (Val:SortNextGlobIdxCell{}, inj{SortNextGlobIdxCell{}, SortNextGlobIdxCellOpt{}} (Val:SortNextGlobIdxCell{})), \bottom{SortNextGlobIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortValStack{}} (Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}(), \or{SortValStack{}} (\exists{SortValStack{}} (X0:SortVal{}, \exists{SortValStack{}} (X1:SortValStack{}, Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(X0:SortVal{}, X1:SortValStack{}))), \bottom{SortValStack{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMut{}} (Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}(), \or{SortMut{}} (LblmutConst{}(), \or{SortMut{}} (LblmutVar{}(), \bottom{SortMut{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortModuleInstCell{}} (\exists{SortModuleInstCell{}} (X0:SortModIdxCell{}, \exists{SortModuleInstCell{}} (X1:SortExportsCell{}, \exists{SortModuleInstCell{}} (X2:SortTypesCell{}, \exists{SortModuleInstCell{}} (X3:SortNextTypeIdxCell{}, \exists{SortModuleInstCell{}} (X4:SortFuncAddrsCell{}, \exists{SortModuleInstCell{}} (X5:SortNextFuncIdxCell{}, \exists{SortModuleInstCell{}} (X6:SortTabIdsCell{}, \exists{SortModuleInstCell{}} (X7:SortTabAddrsCell{}, \exists{SortModuleInstCell{}} (X8:SortMemIdsCell{}, \exists{SortModuleInstCell{}} (X9:SortMemAddrsCell{}, \exists{SortModuleInstCell{}} (X10:SortGlobIdsCell{}, \exists{SortModuleInstCell{}} (X11:SortGlobalAddrsCell{}, \exists{SortModuleInstCell{}} (X12:SortNextGlobIdxCell{}, \exists{SortModuleInstCell{}} (X13:SortModuleMetadataCell{}, Lbl'-LT-'moduleInst'-GT-'{}(X0:SortModIdxCell{}, X1:SortExportsCell{}, X2:SortTypesCell{}, X3:SortNextTypeIdxCell{}, X4:SortFuncAddrsCell{}, X5:SortNextFuncIdxCell{}, X6:SortTabIdsCell{}, X7:SortTabAddrsCell{}, X8:SortMemIdsCell{}, X9:SortMemAddrsCell{}, X10:SortGlobIdsCell{}, X11:SortGlobalAddrsCell{}, X12:SortNextGlobIdxCell{}, X13:SortModuleMetadataCell{}))))))))))))))), \bottom{SortModuleInstCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortWasmIntToken{}} (\top{SortWasmIntToken{}}(), \bottom{SortWasmIntToken{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortInts{}} (Lbl'Stop'List'LBraQuot'listInt'QuotRBraUnds'Ints{}(), \or{SortInts{}} (\exists{SortInts{}} (X0:SortInt{}, \exists{SortInts{}} (X1:SortInts{}, LbllistInt{}(X0:SortInt{}, X1:SortInts{}))), \bottom{SortInts{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFuncDefCellFragment{}} (\exists{SortFuncDefCellFragment{}} (X0:SortFAddrCellOpt{}, \exists{SortFuncDefCellFragment{}} (X1:SortFCodeCellOpt{}, \exists{SortFuncDefCellFragment{}} (X2:SortFTypeCellOpt{}, \exists{SortFuncDefCellFragment{}} (X3:SortFLocalCellOpt{}, \exists{SortFuncDefCellFragment{}} (X4:SortFModInstCellOpt{}, \exists{SortFuncDefCellFragment{}} (X5:SortFuncMetadataCellOpt{}, Lbl'-LT-'funcDef'-GT-'-fragment{}(X0:SortFAddrCellOpt{}, X1:SortFCodeCellOpt{}, X2:SortFTypeCellOpt{}, X3:SortFLocalCellOpt{}, X4:SortFModInstCellOpt{}, X5:SortFuncMetadataCellOpt{}))))))), \bottom{SortFuncDefCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOffsetArg{}} (\exists{SortOffsetArg{}} (X0:SortWasmInt{}, Lbloffset'EqlsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'OffsetArg'Unds'WasmInt{}(X0:SortWasmInt{})), \bottom{SortOffsetArg{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTsizeCellOpt{}} (LblnoTsizeCell{}(), \or{SortTsizeCellOpt{}} (\exists{SortTsizeCellOpt{}} (Val:SortTsizeCell{}, inj{SortTsizeCell{}, SortTsizeCellOpt{}} (Val:SortTsizeCell{})), \bottom{SortTsizeCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobalInstCellFragment{}} (\exists{SortGlobalInstCellFragment{}} (X0:SortGAddrCellOpt{}, \exists{SortGlobalInstCellFragment{}} (X1:SortGValueCellOpt{}, \exists{SortGlobalInstCellFragment{}} (X2:SortGMutCellOpt{}, Lbl'-LT-'globalInst'-GT-'-fragment{}(X0:SortGAddrCellOpt{}, X1:SortGValueCellOpt{}, X2:SortGMutCellOpt{})))), \bottom{SortGlobalInstCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeDecl{}} (\exists{SortTypeDecl{}} (X0:SortTypeKeyWord{}, \exists{SortTypeDecl{}} (X1:SortValTypes{}, Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(X0:SortTypeKeyWord{}, X1:SortValTypes{}))), \or{SortTypeDecl{}} (\exists{SortTypeDecl{}} (X0:SortIdentifier{}, \exists{SortTypeDecl{}} (X1:SortValType{}, Lblparam'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'Identifier'Unds'ValType{}(X0:SortIdentifier{}, X1:SortValType{}))), \bottom{SortTypeDecl{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCvtf32Op{}} (LblaPromote'Unds'f32{}(), \or{SortCvtf32Op{}} (LblaTrunc'Unds'f32'Unds's{}(), \or{SortCvtf32Op{}} (LblaTrunc'Unds'f32'Unds'u{}(), \bottom{SortCvtf32Op{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortDefns{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}(), \or{SortDefns{}} (\exists{SortDefns{}} (X0:SortDefn{}, \exists{SortDefns{}} (X1:SortDefns{}, Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(X0:SortDefn{}, X1:SortDefns{}))), \or{SortDefns{}} (\exists{SortDefns{}} (Val:SortEmptyStmts{}, inj{SortEmptyStmts{}, SortDefns{}} (Val:SortEmptyStmts{})), \bottom{SortDefns{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortMsizeCellOpt{}} (LblnoMsizeCell{}(), \or{SortMsizeCellOpt{}} (\exists{SortMsizeCellOpt{}} (Val:SortMsizeCell{}, inj{SortMsizeCell{}, SortMsizeCellOpt{}} (Val:SortMsizeCell{})), \bottom{SortMsizeCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemsCell{}} (\exists{SortMemsCell{}} (X0:SortMemInstCellMap{}, Lbl'-LT-'mems'-GT-'{}(X0:SortMemInstCellMap{})), \bottom{SortMemsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFUnOp{}} (LblaAbs{}(), \or{SortFUnOp{}} (LblaCeil{}(), \or{SortFUnOp{}} (LblaFloor{}(), \or{SortFUnOp{}} (LblaNearest{}(), \or{SortFUnOp{}} (LblaNeg{}(), \or{SortFUnOp{}} (LblaSqrt{}(), \or{SortFUnOp{}} (LblaTrunc{}(), \bottom{SortFUnOp{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortLocalIdsCellOpt{}} (LblnoLocalIdsCell{}(), \or{SortLocalIdsCellOpt{}} (\exists{SortLocalIdsCellOpt{}} (Val:SortLocalIdsCell{}, inj{SortLocalIdsCell{}, SortLocalIdsCellOpt{}} (Val:SortLocalIdsCell{})), \bottom{SortLocalIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortInlineExport{}} (\exists{SortInlineExport{}} (X0:SortWasmString{}, Lbl'LPar'export'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineExport'Unds'WasmString{}(X0:SortWasmString{})), \bottom{SortInlineExport{}}()) [constructor{}()] // no junk
  axiom{} \or{SortValTypes{}} (Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}(), \or{SortValTypes{}} (\exists{SortValTypes{}} (X0:SortValType{}, \exists{SortValTypes{}} (X1:SortValTypes{}, LbllistValTypes{}(X0:SortValType{}, X1:SortValTypes{}))), \bottom{SortValTypes{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCellFragment{}} (\exists{SortGeneratedTopCellFragment{}} (X0:SortWasmCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X1:SortGeneratedCounterCellOpt{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortWasmCellOpt{}, X1:SortGeneratedCounterCellOpt{}))), \bottom{SortGeneratedTopCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypesCell{}} (\exists{SortTypesCell{}} (X0:SortMap{}, Lbl'-LT-'types'-GT-'{}(X0:SortMap{})), \bottom{SortTypesCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGlobalAddrsCell{}} (\exists{SortGlobalAddrsCell{}} (X0:SortMap{}, Lbl'-LT-'globalAddrs'-GT-'{}(X0:SortMap{})), \bottom{SortGlobalAddrsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBytes{}} (\top{SortBytes{}}(), \bottom{SortBytes{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortMdataCellOpt{}} (LblnoMdataCell{}(), \or{SortMdataCellOpt{}} (\exists{SortMdataCellOpt{}} (Val:SortMdataCell{}, inj{SortMdataCell{}, SortMdataCellOpt{}} (Val:SortMdataCell{})), \bottom{SortMdataCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \bottom{SortEmptyStmt{}}() [constructor{}()] // no junk
  axiom{} \or{SortModuleMetadataCell{}} (\exists{SortModuleMetadataCell{}} (X0:SortModuleFileNameCell{}, \exists{SortModuleMetadataCell{}} (X1:SortModuleIdCell{}, \exists{SortModuleMetadataCell{}} (X2:SortFuncIdsCell{}, \exists{SortModuleMetadataCell{}} (X3:SortTypeIdsCell{}, Lbl'-LT-'moduleMetadata'-GT-'{}(X0:SortModuleFileNameCell{}, X1:SortModuleIdCell{}, X2:SortFuncIdsCell{}, X3:SortTypeIdsCell{}))))), \bottom{SortModuleMetadataCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExportDefn{}} (\exists{SortExportDefn{}} (X0:SortWasmString{}, \exists{SortExportDefn{}} (X1:SortExternval{}, Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(X0:SortWasmString{}, X1:SortExternval{}))), \or{SortExportDefn{}} (\exists{SortExportDefn{}} (X0:SortWasmString{}, \exists{SortExportDefn{}} (X1:SortInt{}, LblaExportDefn{}(X0:SortWasmString{}, X1:SortInt{}))), \bottom{SortExportDefn{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModuleIdsCellOpt{}} (LblnoModuleIdsCell{}(), \or{SortModuleIdsCellOpt{}} (\exists{SortModuleIdsCellOpt{}} (Val:SortModuleIdsCell{}, inj{SortModuleIdsCell{}, SortModuleIdsCellOpt{}} (Val:SortModuleIdsCell{})), \bottom{SortModuleIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobalsCellOpt{}} (LblnoGlobalsCell{}(), \or{SortGlobalsCellOpt{}} (\exists{SortGlobalsCellOpt{}} (Val:SortGlobalsCell{}, inj{SortGlobalsCell{}, SortGlobalsCellOpt{}} (Val:SortGlobalsCell{})), \bottom{SortGlobalsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortNextFuncAddrCellOpt{}} (LblnoNextFuncAddrCell{}(), \or{SortNextFuncAddrCellOpt{}} (\exists{SortNextFuncAddrCellOpt{}} (Val:SortNextFuncAddrCell{}, inj{SortNextFuncAddrCell{}, SortNextFuncAddrCellOpt{}} (Val:SortNextFuncAddrCell{})), \bottom{SortNextFuncAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTextLimits{}} (\exists{SortTextLimits{}} (X0:SortInt{}, \exists{SortTextLimits{}} (X1:SortInt{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TextLimits'Unds'Int'Unds'Int{}(X0:SortInt{}, X1:SortInt{}))), \or{SortTextLimits{}} (\exists{SortTextLimits{}} (Val:SortInt{}, inj{SortInt{}, SortTextLimits{}} (Val:SortInt{})), \bottom{SortTextLimits{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTableType{}} (\exists{SortTableType{}} (X0:SortTextLimits{}, \exists{SortTableType{}} (X1:SortTableElemType{}, Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableType'Unds'TextLimits'Unds'TableElemType{}(X0:SortTextLimits{}, X1:SortTableElemType{}))), \bottom{SortTableType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOptionalInt{}} (Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}(), \or{SortOptionalInt{}} (\exists{SortOptionalInt{}} (Val:SortInt{}, inj{SortInt{}, SortOptionalInt{}} (Val:SortInt{})), \bottom{SortOptionalInt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModuleIdCell{}} (\exists{SortModuleIdCell{}} (X0:SortOptionalId{}, Lbl'-LT-'moduleId'-GT-'{}(X0:SortOptionalId{})), \bottom{SortModuleIdCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypesCellOpt{}} (LblnoTypesCell{}(), \or{SortTypesCellOpt{}} (\exists{SortTypesCellOpt{}} (Val:SortTypesCell{}, inj{SortTypesCell{}, SortTypesCellOpt{}} (Val:SortTypesCell{})), \bottom{SortTypesCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCvti64Op{}} (LblaConvert'Unds'i64'Unds's{}(), \or{SortCvti64Op{}} (LblaConvert'Unds'i64'Unds'u{}(), \or{SortCvti64Op{}} (LblaWrap'Unds'i64{}(), \bottom{SortCvti64Op{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortMmaxCell{}} (\exists{SortMmaxCell{}} (X0:SortOptionalInt{}, Lbl'-LT-'mmax'-GT-'{}(X0:SortOptionalInt{})), \bottom{SortMmaxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTextFormatGlobalType{}} (\exists{SortTextFormatGlobalType{}} (X0:SortValType{}, Lbl'LPar'mut'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TextFormatGlobalType'Unds'ValType{}(X0:SortValType{})), \or{SortTextFormatGlobalType{}} (\exists{SortTextFormatGlobalType{}} (Val:SortValType{}, inj{SortValType{}, SortTextFormatGlobalType{}} (Val:SortValType{})), \or{SortTextFormatGlobalType{}} (\exists{SortTextFormatGlobalType{}} (Val:SortFValType{}, inj{SortFValType{}, SortTextFormatGlobalType{}} (Val:SortFValType{})), \or{SortTextFormatGlobalType{}} (\exists{SortTextFormatGlobalType{}} (Val:SortIValType{}, inj{SortIValType{}, SortTextFormatGlobalType{}} (Val:SortIValType{})), \bottom{SortTextFormatGlobalType{}}())))) [constructor{}()] // no junk
  axiom{R} \equals{SortStmts{}, R} (Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(inj{SortInstr{}, SortStmt{}} (K0:SortInstr{}),inj{SortInstrs{}, SortStmts{}} (K1:SortInstrs{})), inj{SortInstrs{}, SortStmts{}} (Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(K0:SortInstr{},K1:SortInstrs{}))) [overload{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(), Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), inj{SortDefns{}, SortStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}())] // overloaded production
  axiom{R} \equals{SortDefns{}, R} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}(), inj{SortEmptyStmts{}, SortDefns{}} (Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}(), Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())] // overloaded production
  axiom{R} \equals{SortInstrs{}, R} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}(), inj{SortEmptyStmts{}, SortInstrs{}} (Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}(), Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), inj{SortEmptyStmts{}, SortStmts{}} (Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())] // overloaded production
  axiom{R} \equals{SortVal{}, R} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(inj{SortFValType{}, SortValType{}} (K0:SortFValType{}),inj{SortFloat{}, SortNumber{}} (K1:SortFloat{})), inj{SortFVal{}, SortVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(K0:SortFValType{},K1:SortFloat{}))) [overload{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), inj{SortInstrs{}, SortStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}())] // overloaded production
  axiom{R} \equals{SortInstrs{}, R} (Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortEmptyStmt{}, SortInstr{}} (K0:SortEmptyStmt{}),inj{SortEmptyStmts{}, SortInstrs{}} (K1:SortEmptyStmts{})), inj{SortEmptyStmts{}, SortInstrs{}} (LbllistStmt{}(K0:SortEmptyStmt{},K1:SortEmptyStmts{}))) [overload{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(), LbllistStmt{}())] // overloaded production
  axiom{R} \equals{SortDefns{}, R} (Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortEmptyStmt{}, SortDefn{}} (K0:SortEmptyStmt{}),inj{SortEmptyStmts{}, SortDefns{}} (K1:SortEmptyStmts{})), inj{SortEmptyStmts{}, SortDefns{}} (LbllistStmt{}(K0:SortEmptyStmt{},K1:SortEmptyStmts{}))) [overload{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(), LbllistStmt{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(inj{SortEmptyStmt{}, SortStmt{}} (K0:SortEmptyStmt{}),inj{SortEmptyStmts{}, SortStmts{}} (K1:SortEmptyStmts{})), inj{SortEmptyStmts{}, SortStmts{}} (LbllistStmt{}(K0:SortEmptyStmt{},K1:SortEmptyStmts{}))) [overload{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(), LbllistStmt{}())] // overloaded production
  axiom{R} \equals{SortVal{}, R} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(inj{SortIValType{}, SortValType{}} (K0:SortIValType{}),inj{SortInt{}, SortNumber{}} (K1:SortInt{})), inj{SortIVal{}, SortVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(K0:SortIValType{},K1:SortInt{}))) [overload{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(inj{SortDefn{}, SortStmt{}} (K0:SortDefn{}),inj{SortDefns{}, SortStmts{}} (K1:SortDefns{})), inj{SortDefns{}, SortStmts{}} (Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(K0:SortDefn{},K1:SortDefns{}))) [overload{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(), Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}())] // overloaded production

// rules
// rule #Ceil{Int,#SortParam}(`_%Int_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_=/=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(277564ad2537209fd698729ceaa01973f97125176cf1078f98e2edb7cc190f34), org.kframework.attributes.Location(Location(1055,8,1055,102)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortInt{}, Q0}(Lbl'UndsPerc'Int'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
        \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{}))),
      \top{R}()))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1055,8,1055,102)"), simplification{}(""), UNIQUE'Unds'ID{}("277564ad2537209fd698729ceaa01973f97125176cf1078f98e2edb7cc190f34")]

// rule #Ceil{Int,#SortParam}(`_/Int_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_=/=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1eefe48360417c30b8e5f115a539adbc38e337fa903d6c589811e7b619f8d1cd), org.kframework.attributes.Location(Location(1054,8,1054,102)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortInt{}, Q0}(Lbl'UndsSlsh'Int'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
        \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{}))),
      \top{R}()))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1054,8,1054,102)"), simplification{}(""), UNIQUE'Unds'ID{}("1eefe48360417c30b8e5f115a539adbc38e337fa903d6c589811e7b619f8d1cd")]

// rule #Ceil{Int,#SortParam}(`_<<Int_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_>=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0b052005b3756fb7082a3e365e1de3b170b4b0d828aab504a9ec2cfd19666528), org.kframework.attributes.Location(Location(1058,8,1058,102)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortInt{}, Q0}(Lbl'Unds-LT--LT-'Int'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
        \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'Unds-GT-Eqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{}))),
      \top{R}()))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1058,8,1058,102)"), simplification{}(""), UNIQUE'Unds'ID{}("0b052005b3756fb7082a3e365e1de3b170b4b0d828aab504a9ec2cfd19666528")]

// rule #Ceil{Int,#SortParam}(`_>>Int_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_>=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8504798d0c71a9c32788426e50147e59ac302592e16aa6bae4511370fd436af8), org.kframework.attributes.Location(Location(1057,8,1057,102)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortInt{}, Q0}(Lbl'Unds-GT--GT-'Int'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
        \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'Unds-GT-Eqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{}))),
      \top{R}()))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1057,8,1057,102)"), simplification{}(""), UNIQUE'Unds'ID{}("8504798d0c71a9c32788426e50147e59ac302592e16aa6bae4511370fd436af8")]

// rule #Ceil{Int,#SortParam}(`_modInt_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_=/=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f864cd1e17e48500bc78b5fa83b901031cdbfd8f0575388667ce1475a2a7f532), org.kframework.attributes.Location(Location(1056,8,1056,102)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortInt{}, Q0}(Lbl'Unds'modInt'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
        \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{}))),
      \top{R}()))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1056,8,1056,102)"), simplification{}(""), UNIQUE'Unds'ID{}("f864cd1e17e48500bc78b5fa83b901031cdbfd8f0575388667ce1475a2a7f532")]

// rule #Ceil{Bytes,#SortParam}(`padLeftBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Int`(_0,LEN,VAL))=>#Equals{Bool,#SortParam}(`_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),LEN),`_<=Int_`(#token("0","Int"),VAL)),`_<Int_`(VAL,#token("256","Int"))),#token("true","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9909b1d82901b76d92ee6e5718024d2bba4659e07f954a2a0adf3a504ed01f87), org.kframework.attributes.Location(Location(1952,8,1952,114)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortBytes{}, Q0}(LblpadLeftBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(Var'Unds'0:SortBytes{},VarLEN:SortInt{},VarVAL:SortInt{})),
        \equals{SortBool{}, Q0}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarLEN:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarVAL:SortInt{})),Lbl'Unds-LT-'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("256"))),\dv{SortBool{}}("true"))),
      \top{R}()))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1952,8,1952,114)"), simplification{}(""), UNIQUE'Unds'ID{}("9909b1d82901b76d92ee6e5718024d2bba4659e07f954a2a0adf3a504ed01f87")]

// rule #Ceil{Bytes,#SortParam}(`padRightBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Int`(_0,LEN,VAL))=>#Equals{Bool,#SortParam}(`_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),LEN),`_<=Int_`(#token("0","Int"),VAL)),`_<Int_`(VAL,#token("256","Int"))),#token("true","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a9795bf6ebcb5772e37096fe45d1c1fa0f2e97df96728dc1bc3da52af98ac10), org.kframework.attributes.Location(Location(1951,8,1951,114)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortBytes{}, Q0}(LblpadRightBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(Var'Unds'0:SortBytes{},VarLEN:SortInt{},VarVAL:SortInt{})),
        \equals{SortBool{}, Q0}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarLEN:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarVAL:SortInt{})),Lbl'Unds-LT-'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("256"))),\dv{SortBool{}}("true"))),
      \top{R}()))
  [sortParams{}("{Q0}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1951,8,1951,114)"), simplification{}(""), UNIQUE'Unds'ID{}("9a9795bf6ebcb5772e37096fe45d1c1fa0f2e97df96728dc1bc3da52af98ac10")]

// rule `#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,inj{Identifier,Index}(ID))=>`project:Int`(`Map:lookup`(IDS,inj{Identifier,KItem}(ID))) requires `_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),IDS) ensures #token("true","Bool") [UNIQUE_ID(fe974a5febf8c8a9cbe3fda608f423fbb6279d1ec26d7059387d402414901ea7), org.kframework.attributes.Location(Location(374,10,375,31)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarIDS:SortMap{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarIDS:SortMap{}
          ),\and{R} (
          \in{SortIndex{}, R} (
            X1:SortIndex{},
            inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(X0:SortMap{},X1:SortIndex{}),
        Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(374,10,375,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("fe974a5febf8c8a9cbe3fda608f423fbb6279d1ec26d7059387d402414901ea7")]

// rule `#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(_IDS,inj{Int,Index}(I))=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bc05657ff92cc6b66df3ee5d5c5bc50853b3f587c0b8ca1e005f9aa76f6b37be), org.kframework.attributes.Location(Location(187,10,187,46)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            Var'Unds'IDS:SortMap{}
          ),\and{R} (
          \in{SortIndex{}, R} (
            X1:SortIndex{},
            inj{SortInt{}, SortIndex{}}(VarI:SortInt{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(X0:SortMap{},X1:SortIndex{}),
        VarI:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(187,10,187,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("bc05657ff92cc6b66df3ee5d5c5bc50853b3f587c0b8ca1e005f9aa76f6b37be")]

// rule `#DS2Bytes(_)_WASM-DATA_Bytes_DataString`(DS)=>`String2Bytes(_)_BYTES-HOOKED_Bytes_String`(`#concatDS(_)_WASM-DATA_String_DataString`(DS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b127959d1ceb0fec17e112d36b1e801fb80c1b619a973385f0f0ad7bac349699), org.kframework.attributes.Location(Location(544,10,544,54)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDataString{}, R} (
            X0:SortDataString{},
            VarDS:SortDataString{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'DS2Bytes'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'DataString{}(X0:SortDataString{}),
        LblString2Bytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'String{}(Lbl'Hash'concatDS'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString{}(VarDS:SortDataString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(544,10,544,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b127959d1ceb0fec17e112d36b1e801fb80c1b619a973385f0f0ad7bac349699")]

// rule `#appendInstrs(_,_)_WASM-TEXT_Instrs_Instrs_Instrs`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(I,IS),IS')=>`#appendInstrs(_,_)_WASM-TEXT_Instrs_Instrs_Instrs`(IS,`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(I,IS')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2872263e036852ab86ab09faf8a919357a1d4fa74bb652facec84f2c067abf5f), org.kframework.attributes.Location(Location(571,10,571,49)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(VarI:SortInstr{},VarIS:SortInstrs{})
          ),\and{R} (
          \in{SortInstrs{}, R} (
            X1:SortInstrs{},
            VarIS'Apos':SortInstrs{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'appendInstrs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortInstrs{},X1:SortInstrs{}),
        Lbl'Hash'appendInstrs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(VarIS:SortInstrs{},Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(VarI:SortInstr{},VarIS'Apos':SortInstrs{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(571,10,571,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2872263e036852ab86ab09faf8a919357a1d4fa74bb652facec84f2c067abf5f")]

// rule `#appendInstrs(_,_)_WASM-TEXT_Instrs_Instrs_Instrs`(inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList)),IS')=>IS' requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d6e47d2ca634ed8e60507002b739661cf704f5c0903dc16ab2a83d03a48ef859), org.kframework.attributes.Location(Location(572,10,572,47)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
          ),\and{R} (
          \in{SortInstrs{}, R} (
            X1:SortInstrs{},
            VarIS'Apos':SortInstrs{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'appendInstrs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortInstrs{},X1:SortInstrs{}),
        VarIS'Apos':SortInstrs{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(572,10,572,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d6e47d2ca634ed8e60507002b739661cf704f5c0903dc16ab2a83d03a48ef859")]

// rule `#bool(_)_WASM-DATA_Int_Bool`(B)=>#token("0","Int") requires `notBool_`(B) ensures #token("true","Bool") [UNIQUE_ID(8256ae36fcfaf4fad38ae83cb8e2fda0ea98291a25b6cad4b02538a261e206c9), org.kframework.attributes.Location(Location(398,10,398,49)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarB:SortBool{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(X0:SortBool{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(398,10,398,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("8256ae36fcfaf4fad38ae83cb8e2fda0ea98291a25b6cad4b02538a261e206c9")]

// rule `#bool(_)_WASM-DATA_Int_Bool`(B)=>#token("1","Int") requires B ensures #token("true","Bool") [UNIQUE_ID(3f2c49e94fe97d6c8d1dbf4a4906fde1219e009e925b498bf34cd2e48d3f7a7b), org.kframework.attributes.Location(Location(397,10,397,49)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        VarB:SortBool{},
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(X0:SortBool{}),
        \dv{SortInt{}}("1")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(397,10,397,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("3f2c49e94fe97d6c8d1dbf4a4906fde1219e009e925b498bf34cd2e48d3f7a7b")]

// rule `#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,N))=>`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_modInt_`(N,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2ac5f46092f344ae11ac12e5cf4dca222de05b17eaaa41d74034cc04421a515b), org.kframework.attributes.Location(Location(344,10,344,64)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIVal{}, R} (
            X0:SortIVal{},
            Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarN:SortInt{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortIVal{},R} (
        Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(X0:SortIVal{}),
        Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds'modInt'Unds'{}(VarN:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(344,10,344,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2ac5f46092f344ae11ac12e5cf4dca222de05b17eaaa41d74034cc04421a515b")]

// rule `#concatDS(_)_WASM-DATA_String_DataString`(DS)=>`#concatDS(_,_)_WASM-DATA_String_DataString_String`(DS,#token("\"\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a5d6d0a82ef4efa834ceb5ba7a5ced4c5b18a95c1eddc228afc265c59532d42a), org.kframework.attributes.Location(Location(534,10,534,50)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDataString{}, R} (
            X0:SortDataString{},
            VarDS:SortDataString{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortString{},R} (
        Lbl'Hash'concatDS'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString{}(X0:SortDataString{}),
        Lbl'Hash'concatDS'LParUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString'Unds'String{}(VarDS:SortDataString{},\dv{SortString{}}(""))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(534,10,534,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a5d6d0a82ef4efa834ceb5ba7a5ced4c5b18a95c1eddc228afc265c59532d42a")]

// rule `#concatDS(_,_)_WASM-DATA_String_DataString_String`(`.List{"___WASM-DATA-COMMON-SYNTAX_DataString_WasmString_DataString"}_DataString`(.KList),S)=>S requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0f7805e06bbd2ddb8a19758a00e857f7b92c9cbbecc0368db2461fcba51c983e), org.kframework.attributes.Location(Location(535,10,535,55)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDataString{}, R} (
            X0:SortDataString{},
            Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'DataString'Unds'WasmString'Unds'DataString'QuotRBraUnds'DataString{}()
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS:SortString{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortString{},R} (
        Lbl'Hash'concatDS'LParUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString'Unds'String{}(X0:SortDataString{},X1:SortString{}),
        VarS:SortString{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(535,10,535,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("0f7805e06bbd2ddb8a19758a00e857f7b92c9cbbecc0368db2461fcba51c983e")]

// rule `#concatDS(_,_)_WASM-DATA_String_DataString_String`(`___WASM-DATA-COMMON-SYNTAX_DataString_WasmString_DataString`(inj{WasmStringToken,WasmString}(WS),DS),S)=>`#concatDS(_,_)_WASM-DATA_String_DataString_String`(DS,`_+String__STRING-COMMON_String_String_String`(S,`unescape(_)_WASM-DATA_String_String`(`#parseWasmString(_)_WASM-DATA-COMMON-SYNTAX_String_WasmStringToken`(WS)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f7642cb0065c2265e3a2f151557fafb92e1c5f25d7613337d8ca711cb2f49c42), org.kframework.attributes.Location(Location(536,10,536,113)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDataString{}, R} (
            X0:SortDataString{},
            Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'DataString'Unds'WasmString'Unds'DataString{}(inj{SortWasmStringToken{}, SortWasmString{}}(VarWS:SortWasmStringToken{}),VarDS:SortDataString{})
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS:SortString{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortString{},R} (
        Lbl'Hash'concatDS'LParUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString'Unds'String{}(X0:SortDataString{},X1:SortString{}),
        Lbl'Hash'concatDS'LParUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString'Unds'String{}(VarDS:SortDataString{},Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarS:SortString{},Lblunescape'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'String{}(Lbl'Hash'parseWasmString'LParUndsRParUnds'WASM-DATA-COMMON-SYNTAX'Unds'String'Unds'WasmStringToken{}(VarWS:SortWasmStringToken{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(536,10,536,113)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f7642cb0065c2265e3a2f151557fafb92e1c5f25d7613337d8ca711cb2f49c42")]

// rule `#ctz(_)_WASM-NUMERIC_Int_Int`(#token("0","Int") #as _0)=>_0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aa89ff8167d9b27e9f2929243b40651d00202c433d2bd578a8231ea48ff495f9), org.kframework.attributes.Location(Location(140,10,140,22)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            \and{SortInt{}}(\dv{SortInt{}}("0"),Var'Unds'0:SortInt{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'ctz'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(X0:SortInt{}),
        Var'Unds'0:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(140,10,140,22)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("aa89ff8167d9b27e9f2929243b40651d00202c433d2bd578a8231ea48ff495f9")]

// rule `#ctz(_)_WASM-NUMERIC_Int_Int`(N)=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`_modInt_`(N,#token("2","Int")),#token("1","Int")),#token("0","Int"),`_+Int_`(#token("1","Int"),`#ctz(_)_WASM-NUMERIC_Int_Int`(`_>>Int_`(N,#token("1","Int"))))) requires `_=/=Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(2cbf87f2c95e110e241d76d0e65c4bb59b6de6f42a57b4ba26b3ccc6b97700df), org.kframework.attributes.Location(Location(141,10,141,105)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'ctz'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(X0:SortInt{}),
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("2")),\dv{SortInt{}}("1")),\dv{SortInt{}}("0"),Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Hash'ctz'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(141,10,141,105)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("2cbf87f2c95e110e241d76d0e65c4bb59b6de6f42a57b4ba26b3ccc6b97700df")]

// rule `#distinctBits(_,_)_KWASM-LEMMAS_Bool_Int_Int`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(_0,_1,WIDTH),`_<<Int_`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(_2,_3,_4),SHIFT))=>#token("true","Bool") requires `_<=Int_`(`_*Int_`(WIDTH,#token("8","Int")),SHIFT) ensures #token("true","Bool") [UNIQUE_ID(a508fb00491094a2f56b925d2134c1bd86c04bee52b6e421665d8778be8a4c5d), org.kframework.attributes.Location(Location(290,10,290,121)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsStar'Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("8")),VarSHIFT:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'distinctBits'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'Int'Unds'Int{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Var'Unds'0:SortBytes{},Var'Unds'1:SortInt{},VarWIDTH:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Var'Unds'2:SortBytes{},Var'Unds'3:SortInt{},Var'Unds'4:SortInt{}),VarSHIFT:SortInt{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(290,10,290,121)"), simplification{}(""), UNIQUE'Unds'ID{}("a508fb00491094a2f56b925d2134c1bd86c04bee52b6e421665d8778be8a4c5d")]

// rule `#drop(_,_)_WASM-DATA_ValStack_Int_ValStack`(N,`.ValStack_WASM-DATA_ValStack`(.KList) #as _0)=>_0 requires `_>Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(042dd97aac4f1bfd219be78582b61a03554486c002056f0739f1f3fa6c44771b), org.kframework.attributes.Location(Location(439,10,439,78)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortValStack{}, R} (
            X1:SortValStack{},
            \and{SortValStack{}}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}(),Var'Unds'0:SortValStack{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(X0:SortInt{},X1:SortValStack{}),
        Var'Unds'0:SortValStack{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(439,10,439,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("042dd97aac4f1bfd219be78582b61a03554486c002056f0739f1f3fa6c44771b")]

// rule `#drop(_,_)_WASM-DATA_ValStack_Int_ValStack`(N,VS)=>VS requires `notBool_`(`_>Int_`(N,#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(1663d5fa9ac3aac508bb8eab1a6e90bb1b5103fc716ae3040b70346764ba0852), org.kframework.attributes.Location(Location(438,10,438,78)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortValStack{}, R} (
            X1:SortValStack{},
            VarVS:SortValStack{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(X0:SortInt{},X1:SortValStack{}),
        VarVS:SortValStack{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(438,10,438,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("1663d5fa9ac3aac508bb8eab1a6e90bb1b5103fc716ae3040b70346764ba0852")]

// rule `#drop(_,_)_WASM-DATA_ValStack_Int_ValStack`(N,`_:__WASM-DATA_ValStack_Val_ValStack`(_0,VS))=>`#drop(_,_)_WASM-DATA_ValStack_Int_ValStack`(`_-Int_`(N,#token("1","Int")),VS) requires `_>Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(5242a5d132cf16a9b4a1b60f1f59a6ca089d708760acc25e1000982d45a2e90d), org.kframework.attributes.Location(Location(440,10,440,78)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortValStack{}, R} (
            X1:SortValStack{},
            Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Var'Unds'0:SortVal{},VarVS:SortValStack{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(X0:SortInt{},X1:SortValStack{}),
        Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),VarVS:SortValStack{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(440,10,440,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("5242a5d132cf16a9b4a1b60f1f59a6ca089d708760acc25e1000982d45a2e90d")]

// rule `#emptyModule(_)_WASM_ModuleDecl_OptionalId`(OID)=>aModuleDecl(inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),moduleMeta(OID,`.Map`(.KList),`.String`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c80adfd96e2d958b2b31caabd7c00cd7fa7938445bd0cebe8cfc13f683e2eef7), org.kframework.attributes.Location(Location(1380,10,1380,266)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortOptionalId{}, R} (
            X0:SortOptionalId{},
            VarOID:SortOptionalId{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'emptyModule'LParUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId{}(X0:SortOptionalId{}),
        LblaModuleDecl{}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),LblmoduleMeta{}(VarOID:SortOptionalId{},Lbl'Stop'Map{}(),Lbl'Stop'String{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1380,10,1380,266)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c80adfd96e2d958b2b31caabd7c00cd7fa7938445bd0cebe8cfc13f683e2eef7")]

// rule `#encodeUTF8(_)_WASM-DATA_Bytes_Int`(I)=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(I,bigEndianBytes(.KList),unsignedBytes(.KList)) requires `_<=Int_`(I,#token("127","Int")) ensures #token("true","Bool") [UNIQUE_ID(50b8fef3b20a2b7a9d70cc791a770c4d8df7c0f923a8b2cc6fa37941e063408f), org.kframework.attributes.Location(Location(513,10,513,76)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("127")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'encodeUTF8'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int{}(X0:SortInt{}),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(VarI:SortInt{},LblbigEndianBytes{}(),LblunsignedBytes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(513,10,513,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("50b8fef3b20a2b7a9d70cc791a770c4d8df7c0f923a8b2cc6fa37941e063408f")]

// rule `#encodeUTF8(_)_WASM-DATA_Bytes_Int`(I)=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(`_+Int_`(`_+Int_`(`_+Int_`(`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("1835008","Int")),#token("18","Int")),#token("240","Int")),#token("24","Int")),`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("258048","Int")),#token("12","Int")),#token("128","Int")),#token("16","Int"))),`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("4032","Int")),#token("6","Int")),#token("128","Int")),#token("8","Int"))),`_+Int_`(`_&Int_`(I,#token("63","Int")),#token("128","Int"))),bigEndianBytes(.KList),unsignedBytes(.KList)) requires `_andBool_`(`_>=Int_`(I,#token("65536","Int")),`_<=Int_`(I,#token("1114111","Int"))) ensures #token("true","Bool") [UNIQUE_ID(c2168e756d88a09f98df6a556a3edac90a60b8291e47608deb3527fd7c19af65), org.kframework.attributes.Location(Location(518,10,519,53)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("65536")),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1114111"))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'encodeUTF8'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int{}(X0:SortInt{}),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1835008")),\dv{SortInt{}}("18")),\dv{SortInt{}}("240")),\dv{SortInt{}}("24")),Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("258048")),\dv{SortInt{}}("12")),\dv{SortInt{}}("128")),\dv{SortInt{}}("16"))),Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("4032")),\dv{SortInt{}}("6")),\dv{SortInt{}}("128")),\dv{SortInt{}}("8"))),Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("63")),\dv{SortInt{}}("128"))),LblbigEndianBytes{}(),LblunsignedBytes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(518,10,519,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("c2168e756d88a09f98df6a556a3edac90a60b8291e47608deb3527fd7c19af65")]

// rule `#encodeUTF8(_)_WASM-DATA_Bytes_Int`(I)=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(`_+Int_`(`_+Int_`(`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("61440","Int")),#token("12","Int")),#token("224","Int")),#token("16","Int")),`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("4032","Int")),#token("6","Int")),#token("128","Int")),#token("8","Int"))),`_+Int_`(`_&Int_`(I,#token("63","Int")),#token("128","Int"))),bigEndianBytes(.KList),unsignedBytes(.KList)) requires `_andBool_`(`_>=Int_`(I,#token("2048","Int")),`_<=Int_`(I,#token("65535","Int"))) ensures #token("true","Bool") [UNIQUE_ID(a7be8cf2f9c775dd813ba61b47e627fba288aafa0748fbb1fcd32142f53fecf2), org.kframework.attributes.Location(Location(516,10,517,51)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("2048")),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("65535"))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'encodeUTF8'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int{}(X0:SortInt{}),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("61440")),\dv{SortInt{}}("12")),\dv{SortInt{}}("224")),\dv{SortInt{}}("16")),Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("4032")),\dv{SortInt{}}("6")),\dv{SortInt{}}("128")),\dv{SortInt{}}("8"))),Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("63")),\dv{SortInt{}}("128"))),LblbigEndianBytes{}(),LblunsignedBytes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(516,10,517,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("a7be8cf2f9c775dd813ba61b47e627fba288aafa0748fbb1fcd32142f53fecf2")]

// rule `#encodeUTF8(_)_WASM-DATA_Bytes_Int`(I)=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(`_+Int_`(`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("1984","Int")),#token("6","Int")),#token("192","Int")),#token("8","Int")),`_+Int_`(`_&Int_`(I,#token("63","Int")),#token("128","Int"))),bigEndianBytes(.KList),unsignedBytes(.KList)) requires `_andBool_`(`_>=Int_`(I,#token("128","Int")),`_<=Int_`(I,#token("2047","Int"))) ensures #token("true","Bool") [UNIQUE_ID(56226010a9b62ce7cbf3b03d8f92b41cc809b0debd538dee3bbb6cfda758b11b), org.kframework.attributes.Location(Location(514,10,515,50)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("128")),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("2047"))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'encodeUTF8'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int{}(X0:SortInt{}),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1984")),\dv{SortInt{}}("6")),\dv{SortInt{}}("192")),\dv{SortInt{}}("8")),Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("63")),\dv{SortInt{}}("128"))),LblbigEndianBytes{}(),LblunsignedBytes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(514,10,515,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("56226010a9b62ce7cbf3b03d8f92b41cc809b0debd538dee3bbb6cfda758b11b")]

// rule `#freshCtx()_WASM-TEXT_Context`(.KList)=>`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(`.Map`(.KList),`.Map`(.KList),`.Map`(.KList),`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(33dc407754207db3458b702f6532775b5b152e513b2fb2f0d014104d9f2a9e7b), org.kframework.attributes.Location(Location(711,10,711,97)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortContext{},R} (
        Lbl'Hash'freshCtx'LParRParUnds'WASM-TEXT'Unds'Context{}(),
        Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Lbl'Stop'Map{}(),Lbl'Stop'Map{}(),Lbl'Stop'Map{}(),Lbl'Stop'Map{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(711,10,711,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("33dc407754207db3458b702f6532775b5b152e513b2fb2f0d014104d9f2a9e7b")]

// rule `#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(`param_WASM-COMMON-SYNTAX_TypeKeyWord`(.KList) #as _0,`___WASM-COMMON-SYNTAX_TypeDecls_TypeDecl_TypeDecls`(`param___WASM-COMMON-SYNTAX_TypeDecl_Identifier_ValType`(_ID,VTYPE),TDECLS),TYPES)=>`#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(_0,TDECLS,`_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(TYPES,listValTypes(VTYPE,`.List{"listValTypes"}_ValTypes`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ef9b5b2f59dbf1b2a84c31dc1415284dae6708029270b1dbecd012db043980de), org.kframework.attributes.Location(Location(633,10,633,151)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTypeKeyWord{}, R} (
            X0:SortTypeKeyWord{},
            \and{SortTypeKeyWord{}}(Lblparam'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}(),Var'Unds'0:SortTypeKeyWord{})
          ),\and{R} (
          \in{SortTypeDecls{}, R} (
            X1:SortTypeDecls{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lblparam'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'Identifier'Unds'ValType{}(Var'Unds'ID:SortIdentifier{},VarVTYPE:SortValType{}),VarTDECLS:SortTypeDecls{})
          ),\and{R} (
          \in{SortValTypes{}, R} (
            X2:SortValTypes{},
            VarTYPES:SortValTypes{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(X0:SortTypeKeyWord{},X1:SortTypeDecls{},X2:SortValTypes{}),
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(Var'Unds'0:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{},Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarTYPES:SortValTypes{},LbllistValTypes{}(VarVTYPE:SortValType{},Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(633,10,633,151)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ef9b5b2f59dbf1b2a84c31dc1415284dae6708029270b1dbecd012db043980de")]

// rule `#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(`result_WASM-COMMON-SYNTAX_TypeKeyWord`(.KList) #as _1,`___WASM-COMMON-SYNTAX_TypeDecls_TypeDecl_TypeDecls`(`param___WASM-COMMON-SYNTAX_TypeDecl_Identifier_ValType`(_ID,_0),TDECLS),TYPES)=>`#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(_1,TDECLS,TYPES) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(808c2bc1015e34451ed7e41eeb2c4d2f3c88d541302a4f6eaaf85860636cf856), org.kframework.attributes.Location(Location(632,10,632,133)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTypeKeyWord{}, R} (
            X0:SortTypeKeyWord{},
            \and{SortTypeKeyWord{}}(Lblresult'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}(),Var'Unds'1:SortTypeKeyWord{})
          ),\and{R} (
          \in{SortTypeDecls{}, R} (
            X1:SortTypeDecls{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lblparam'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'Identifier'Unds'ValType{}(Var'Unds'ID:SortIdentifier{},Var'Unds'0:SortValType{}),VarTDECLS:SortTypeDecls{})
          ),\and{R} (
          \in{SortValTypes{}, R} (
            X2:SortValTypes{},
            VarTYPES:SortValTypes{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(X0:SortTypeKeyWord{},X1:SortTypeDecls{},X2:SortValTypes{}),
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(Var'Unds'1:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{},VarTYPES:SortValTypes{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(632,10,632,133)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("808c2bc1015e34451ed7e41eeb2c4d2f3c88d541302a4f6eaaf85860636cf856")]

// rule `#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(TKW,`___WASM-COMMON-SYNTAX_TypeDecls_TypeDecl_TypeDecls`(`___WASM-COMMON-SYNTAX_TypeDecl_TypeKeyWord_ValTypes`(TKW,TYPES'),TDECLS),TYPES)=>`#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(TKW,TDECLS,`_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(TYPES,TYPES')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(425921002e2f01bafdb0c0b7a01926376bd1676d9a90fff39f6ef089a879cd8f), org.kframework.attributes.Location(Location(630,10,631,91)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTypeKeyWord{}, R} (
            X0:SortTypeKeyWord{},
            VarTKW:SortTypeKeyWord{}
          ),\and{R} (
          \in{SortTypeDecls{}, R} (
            X1:SortTypeDecls{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(VarTKW:SortTypeKeyWord{},VarTYPES'Apos':SortValTypes{}),VarTDECLS:SortTypeDecls{})
          ),\and{R} (
          \in{SortValTypes{}, R} (
            X2:SortValTypes{},
            VarTYPES:SortValTypes{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(X0:SortTypeKeyWord{},X1:SortTypeDecls{},X2:SortValTypes{}),
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(VarTKW:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{},Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarTYPES:SortValTypes{},VarTYPES'Apos':SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(630,10,631,91)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("425921002e2f01bafdb0c0b7a01926376bd1676d9a90fff39f6ef089a879cd8f")]

// rule `#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(TKW,`___WASM-COMMON-SYNTAX_TypeDecls_TypeDecl_TypeDecls`(`___WASM-COMMON-SYNTAX_TypeDecl_TypeKeyWord_ValTypes`(TKW',_0),TDECLS),TYPES)=>`#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(TKW,TDECLS,TYPES) requires `_=/=K_`(inj{TypeKeyWord,KItem}(TKW),inj{TypeKeyWord,KItem}(TKW')) ensures #token("true","Bool") [UNIQUE_ID(06a736505cc2b57db4ae34674c21c009c523ea8a0ca4e823b657c7fbdfe1ee38), org.kframework.attributes.Location(Location(629,10,629,141)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortTypeKeyWord{}, SortKItem{}}(VarTKW:SortTypeKeyWord{}),dotk{}()),kseq{}(inj{SortTypeKeyWord{}, SortKItem{}}(VarTKW'Apos':SortTypeKeyWord{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortTypeKeyWord{}, R} (
            X0:SortTypeKeyWord{},
            VarTKW:SortTypeKeyWord{}
          ),\and{R} (
          \in{SortTypeDecls{}, R} (
            X1:SortTypeDecls{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(VarTKW'Apos':SortTypeKeyWord{},Var'Unds'0:SortValTypes{}),VarTDECLS:SortTypeDecls{})
          ),\and{R} (
          \in{SortValTypes{}, R} (
            X2:SortValTypes{},
            VarTYPES:SortValTypes{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(X0:SortTypeKeyWord{},X1:SortTypeDecls{},X2:SortValTypes{}),
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(VarTKW:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{},VarTYPES:SortValTypes{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(629,10,629,141)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("06a736505cc2b57db4ae34674c21c009c523ea8a0ca4e823b657c7fbdfe1ee38")]

// rule `#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(_0,`.List{"___WASM-COMMON-SYNTAX_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList),TYPES)=>aVecType(TYPES) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5abbe8a4f56973c65ca0d15b0cebe207ba95de75175f98e5d49739281ccc195b), org.kframework.attributes.Location(Location(628,10,628,95)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTypeKeyWord{}, R} (
            X0:SortTypeKeyWord{},
            Var'Unds'0:SortTypeKeyWord{}
          ),\and{R} (
          \in{SortTypeDecls{}, R} (
            X1:SortTypeDecls{},
            Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()
          ),\and{R} (
          \in{SortValTypes{}, R} (
            X2:SortValTypes{},
            VarTYPES:SortValTypes{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(X0:SortTypeKeyWord{},X1:SortTypeDecls{},X2:SortValTypes{}),
        LblaVecType{}(VarTYPES:SortValTypes{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(628,10,628,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5abbe8a4f56973c65ca0d15b0cebe207ba95de75175f98e5d49739281ccc195b")]

// rule `#getBytesRange(_,_,_)_WASM-DATA_Bytes_Bytes_Int_Int`(BM,START,WIDTH)=>`padRightBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Int`(`.Bytes_BYTES-HOOKED_Bytes`(.KList),WIDTH,#token("0","Int")) requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),START),`_<=Int_`(#token("0","Int"),WIDTH)),`notBool_`(`_<Int_`(START,`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(BM)))) ensures #token("true","Bool") [UNIQUE_ID(62d1c194dc1eab8723d0401fb81f305d4a8bcc62ef598e9d51d6186ea218f493), org.kframework.attributes.Location(Location(585,10,587,52)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarSTART:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{})),LblnotBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarSTART:SortInt{},LbllengthBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes{}(VarBM:SortBytes{})))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBytes{}, R} (
            X0:SortBytes{},
            VarBM:SortBytes{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarSTART:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarWIDTH:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'getBytesRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(X0:SortBytes{},X1:SortInt{},X2:SortInt{}),
        LblpadRightBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(Lbl'Stop'Bytes'Unds'BYTES-HOOKED'Unds'Bytes{}(),VarWIDTH:SortInt{},\dv{SortInt{}}("0"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(585,10,587,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("62d1c194dc1eab8723d0401fb81f305d4a8bcc62ef598e9d51d6186ea218f493")]

// rule `#getBytesRange(_,_,_)_WASM-DATA_Bytes_Bytes_Int_Int`(BM,START,WIDTH)=>`substrBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Int`(`padRightBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Int`(BM,`_+Int_`(START,WIDTH),#token("0","Int")),START,`_+Int_`(START,WIDTH)) requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),START),`_<=Int_`(#token("0","Int"),WIDTH)),`_<Int_`(START,`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(BM))) ensures #token("true","Bool") [UNIQUE_ID(35d92ec28c75be30ce53423337a16d470dfa6041ea178b8334d89aeda2517ad1), org.kframework.attributes.Location(Location(581,10,583,50)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarSTART:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{})),Lbl'Unds-LT-'Int'Unds'{}(VarSTART:SortInt{},LbllengthBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes{}(VarBM:SortBytes{}))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBytes{}, R} (
            X0:SortBytes{},
            VarBM:SortBytes{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarSTART:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarWIDTH:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'getBytesRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(X0:SortBytes{},X1:SortInt{},X2:SortInt{}),
        LblsubstrBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(LblpadRightBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarSTART:SortInt{},VarWIDTH:SortInt{}),\dv{SortInt{}}("0")),VarSTART:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarSTART:SortInt{},VarWIDTH:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(581,10,583,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("35d92ec28c75be30ce53423337a16d470dfa6041ea178b8334d89aeda2517ad1")]

// rule `#getBytesRange(_,_,_)_WASM-DATA_Bytes_Bytes_Int_Int`(_0,START,WIDTH)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires `notBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),START),`_<=Int_`(#token("0","Int"),WIDTH))) ensures #token("true","Bool") [UNIQUE_ID(b451a704e493c7c476515b65e2067636884f82cfd2d8a920d11d939e70b2ffc1), org.kframework.attributes.Location(Location(578,10,579,61)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarSTART:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{}))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBytes{}, R} (
            X0:SortBytes{},
            Var'Unds'0:SortBytes{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarSTART:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarWIDTH:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'getBytesRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(X0:SortBytes{},X1:SortInt{},X2:SortInt{}),
        Lbl'Stop'Bytes'Unds'BYTES-HOOKED'Unds'Bytes{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(578,10,579,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("b451a704e493c7c476515b65e2067636884f82cfd2d8a920d11d939e70b2ffc1")]

// rule `#getElemSegment(_,_)_WASM-DATA_Index_ElemSegment_Int`(`___WASM-DATA-COMMON-SYNTAX_ElemSegment_Index_ElemSegment`(E,_ES),#token("0","Int"))=>E requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a61824121dc8cb92104de8deef2086729cf19dd333c743ba6443358b1e0a0705), org.kframework.attributes.Location(Location(204,10,204,40)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortElemSegment{}, R} (
            X0:SortElemSegment{},
            Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(VarE:SortIndex{},Var'Unds'ES:SortElemSegment{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            \dv{SortInt{}}("0")
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortIndex{},R} (
        Lbl'Hash'getElemSegment'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Index'Unds'ElemSegment'Unds'Int{}(X0:SortElemSegment{},X1:SortInt{}),
        VarE:SortIndex{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(204,10,204,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a61824121dc8cb92104de8deef2086729cf19dd333c743ba6443358b1e0a0705")]

// rule `#getElemSegment(_,_)_WASM-DATA_Index_ElemSegment_Int`(`___WASM-DATA-COMMON-SYNTAX_ElemSegment_Index_ElemSegment`(_E,ES),I)=>`#getElemSegment(_,_)_WASM-DATA_Index_ElemSegment_Int`(ES,`_-Int_`(I,#token("1","Int"))) requires `_>Int_`(I,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(2d427062ca563d00da766a899db4fefb2c406d039d94a017addfe6f91e391b26), org.kframework.attributes.Location(Location(205,10,205,86)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortElemSegment{}, R} (
            X0:SortElemSegment{},
            Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(Var'Unds'E:SortIndex{},VarES:SortElemSegment{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortIndex{},R} (
        Lbl'Hash'getElemSegment'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Index'Unds'ElemSegment'Unds'Int{}(X0:SortElemSegment{},X1:SortInt{}),
        Lbl'Hash'getElemSegment'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Index'Unds'ElemSegment'Unds'Int{}(VarES:SortElemSegment{},Lbl'Unds'-Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(205,10,205,86)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("2d427062ca563d00da766a899db4fefb2c406d039d94a017addfe6f91e391b26")]

// rule `#getInts(_,_)_WASM-DATA_Int_Ints_Int`(listInt(E,_ES),#token("0","Int"))=>E requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ac719936300b065c2b8f868ec12d9ed8e5bd6737dae00241f34759ffa068f468), org.kframework.attributes.Location(Location(210,10,210,33)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInts{}, R} (
            X0:SortInts{},
            LbllistInt{}(VarE:SortInt{},Var'Unds'ES:SortInts{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            \dv{SortInt{}}("0")
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getInts'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Ints'Unds'Int{}(X0:SortInts{},X1:SortInt{}),
        VarE:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(210,10,210,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ac719936300b065c2b8f868ec12d9ed8e5bd6737dae00241f34759ffa068f468")]

// rule `#getInts(_,_)_WASM-DATA_Int_Ints_Int`(listInt(_E,ES),I)=>`#getInts(_,_)_WASM-DATA_Int_Ints_Int`(ES,`_-Int_`(I,#token("1","Int"))) requires `_>Int_`(I,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(3f316a89425d4cdff19a75137aa9ddbc8135ef47575dde081f93ecd3cd7791c7), org.kframework.attributes.Location(Location(211,10,211,72)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInts{}, R} (
            X0:SortInts{},
            LbllistInt{}(Var'Unds'E:SortInt{},VarES:SortInts{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getInts'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Ints'Unds'Int{}(X0:SortInts{},X1:SortInt{}),
        Lbl'Hash'getInts'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Ints'Unds'Int{}(VarES:SortInts{},Lbl'Unds'-Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(211,10,211,72)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("3f316a89425d4cdff19a75137aa9ddbc8135ef47575dde081f93ecd3cd7791c7")]

// rule `#getOffset(_)_WASM-TEXT_Int_MemArg`(`___WASM-TEXT-COMMON-SYNTAX_MemArg_OffsetArg_AlignArg`(`offset=__WASM-TEXT-COMMON-SYNTAX_OffsetArg_WasmInt`(inj{Int,WasmInt}(OS)),_0))=>OS requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d0b5f69539088268bc1632d5efc0daa8f9b75ce161343787cd991984f71ab582), org.kframework.attributes.Location(Location(958,10,958,49)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMemArg{}, R} (
            X0:SortMemArg{},
            Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(Lbloffset'EqlsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'OffsetArg'Unds'WasmInt{}(inj{SortInt{}, SortWasmInt{}}(VarOS:SortInt{})),Var'Unds'0:SortAlignArg{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getOffset'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'MemArg{}(X0:SortMemArg{}),
        VarOS:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(958,10,958,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d0b5f69539088268bc1632d5efc0daa8f9b75ce161343787cd991984f71ab582")]

// rule `#getOffset(_)_WASM-TEXT_Int_MemArg`(inj{AlignArg,MemArg}(_0))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(35ae581e39fcf923bee10da5b377ea58148f20b0ae24c1c3ec9fddc54b3960ca), org.kframework.attributes.Location(Location(956,10,956,48)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMemArg{}, R} (
            X0:SortMemArg{},
            inj{SortAlignArg{}, SortMemArg{}}(Var'Unds'0:SortAlignArg{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getOffset'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'MemArg{}(X0:SortMemArg{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(956,10,956,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("35ae581e39fcf923bee10da5b377ea58148f20b0ae24c1c3ec9fddc54b3960ca")]

// rule `#getOffset(_)_WASM-TEXT_Int_MemArg`(inj{OffsetArg,MemArg}(`offset=__WASM-TEXT-COMMON-SYNTAX_OffsetArg_WasmInt`(inj{Int,WasmInt}(OS))))=>OS requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a3a9d51b1b46fda2da13200222a1bf1879856d744363849ff225f4c34d33116f), org.kframework.attributes.Location(Location(957,10,957,49)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMemArg{}, R} (
            X0:SortMemArg{},
            inj{SortOffsetArg{}, SortMemArg{}}(Lbloffset'EqlsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'OffsetArg'Unds'WasmInt{}(inj{SortInt{}, SortWasmInt{}}(VarOS:SortInt{})))
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getOffset'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'MemArg{}(X0:SortMemArg{}),
        VarOS:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(957,10,957,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a3a9d51b1b46fda2da13200222a1bf1879856d744363849ff225f4c34d33116f")]

// rule `#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,ADDR,WIDTH)=>`Bytes2Int(_,_,_)_BYTES-HOOKED_Int_Bytes_Endianness_Signedness`(`#getBytesRange(_,_,_)_WASM-DATA_Bytes_Bytes_Int_Int`(BM,ADDR,WIDTH),littleEndianBytes(.KList),unsignedBytes(.KList)) requires `_andBool_`(`_<Int_`(#token("0","Int"),WIDTH),`_<=Int_`(#token("0","Int"),ADDR)) ensures #token("true","Bool") [UNIQUE_ID(72c9ad4b259f4829edc54ee4ba29c19913c1f5797b8663e094a57bce86d76a38), concrete, label(WASM-DATA.getRange-Positive), org.kframework.attributes.Location(Location(594,32,595,58)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarADDR:SortInt{})),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBytes{}, R} (
            X0:SortBytes{},
            VarBM:SortBytes{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarADDR:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarWIDTH:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(X0:SortBytes{},X1:SortInt{},X2:SortInt{}),
        LblBytes2Int'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes'Unds'Endianness'Unds'Signedness{}(Lbl'Hash'getBytesRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},VarADDR:SortInt{},VarWIDTH:SortInt{}),LbllittleEndianBytes{}(),LblunsignedBytes{}())),
      \top{R}()))
  [label{}("WASM-DATA.getRange-Positive"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(594,32,595,58)"), UNIQUE'Unds'ID{}("72c9ad4b259f4829edc54ee4ba29c19913c1f5797b8663e094a57bce86d76a38")]

// rule `#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(_0,ADDR,WIDTH)=>#token("0","Int") requires `notBool_`(`_andBool_`(`_<Int_`(#token("0","Int"),WIDTH),`_<=Int_`(#token("0","Int"),ADDR))) ensures #token("true","Bool") [UNIQUE_ID(c15a602aa8f2d322dc4246bd4a7f128bdc67c5971a0efa7e6bc924a4cd5ae884), org.kframework.attributes.Location(Location(591,32,592,59)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarADDR:SortInt{}))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBytes{}, R} (
            X0:SortBytes{},
            Var'Unds'0:SortBytes{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarADDR:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarWIDTH:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(X0:SortBytes{},X1:SortInt{},X2:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(591,32,592,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("c15a602aa8f2d322dc4246bd4a7f128bdc67c5971a0efa7e6bc924a4cd5ae884")]

// rule `#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(`#setRange(_,_,_,_)_WASM-DATA_Bytes_Bytes_Int_Int_Int`(BM,ADDR,_VAL,WIDTH),ADDR',WIDTH')=>`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,ADDR',WIDTH') requires `_<=Int_`(`_+Int_`(ADDR,WIDTH),ADDR') ensures #token("true","Bool") [UNIQUE_ID(7c69dcb623cfb706e42c1667d82cda22e2540d3754276343fabe0e2e09c035ca), org.kframework.attributes.Location(Location(320,10,320,140)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},VarWIDTH:SortInt{}),VarADDR'Apos':SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int'Unds'Int{}(VarBM:SortBytes{},VarADDR:SortInt{},Var'Unds'VAL:SortInt{},VarWIDTH:SortInt{}),VarADDR'Apos':SortInt{},VarWIDTH'Apos':SortInt{}),
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},VarADDR'Apos':SortInt{},VarWIDTH'Apos':SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(320,10,320,140)"), simplification{}(""), UNIQUE'Unds'ID{}("7c69dcb623cfb706e42c1667d82cda22e2540d3754276343fabe0e2e09c035ca")]

// rule `#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(`#setRange(_,_,_,_)_WASM-DATA_Bytes_Bytes_Int_Int_Int`(BM,ADDR,_VAL,_WIDTH),ADDR',WIDTH')=>`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,ADDR',WIDTH') requires `_<=Int_`(`_+Int_`(ADDR',WIDTH'),ADDR) ensures #token("true","Bool") [UNIQUE_ID(29f1e6492d75d91a049a62265e9fa215aeccac97f1cd1f0c89027d8a0e8afe5f), org.kframework.attributes.Location(Location(319,10,319,139)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarADDR'Apos':SortInt{},VarWIDTH'Apos':SortInt{}),VarADDR:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int'Unds'Int{}(VarBM:SortBytes{},VarADDR:SortInt{},Var'Unds'VAL:SortInt{},Var'Unds'WIDTH:SortInt{}),VarADDR'Apos':SortInt{},VarWIDTH'Apos':SortInt{}),
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},VarADDR'Apos':SortInt{},VarWIDTH'Apos':SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(319,10,319,139)"), simplification{}(""), UNIQUE'Unds'ID{}("29f1e6492d75d91a049a62265e9fa215aeccac97f1cd1f0c89027d8a0e8afe5f")]

// rule `#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(`#setRange(_,_,_,_)_WASM-DATA_Bytes_Bytes_Int_Int_Int`(_BM,ADDR,VAL,WIDTH),ADDR',WIDTH')=>VAL requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),ADDR),`_<Int_`(#token("0","Int"),WIDTH)),`_<=Int_`(#token("0","Int"),VAL)),`_<Int_`(VAL,`_^Int_`(#token("2","Int"),`_*Int_`(#token("8","Int"),WIDTH)))),`_==Int_`(ADDR',ADDR)),`_==Int_`(WIDTH',WIDTH)) ensures #token("true","Bool") [UNIQUE_ID(2a8b7564a988b41dd7309819ac71370e15e2c2916c013b119adb154789ad0eea), org.kframework.attributes.Location(Location(321,10,326,34)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarADDR:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{})),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarVAL:SortInt{})),Lbl'Unds-LT-'Int'Unds'{}(VarVAL:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),Lbl'UndsStar'Int'Unds'{}(\dv{SortInt{}}("8"),VarWIDTH:SortInt{})))),Lbl'UndsEqlsEqls'Int'Unds'{}(VarADDR'Apos':SortInt{},VarADDR:SortInt{})),Lbl'UndsEqlsEqls'Int'Unds'{}(VarWIDTH'Apos':SortInt{},VarWIDTH:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int'Unds'Int{}(Var'Unds'BM:SortBytes{},VarADDR:SortInt{},VarVAL:SortInt{},VarWIDTH:SortInt{}),VarADDR'Apos':SortInt{},VarWIDTH'Apos':SortInt{}),
        VarVAL:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(321,10,326,34)"), simplification{}(""), UNIQUE'Unds'ID{}("2a8b7564a988b41dd7309819ac71370e15e2c2916c013b119adb154789ad0eea")]

// rule `#growthAllowed(_,_)_WASM_Bool_Int_OptionalInt`(SIZE,`.Int_WASM-DATA_OptionalInt`(.KList))=>`_<=Int_`(SIZE,`#maxMemorySize()_WASM_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b43060194e57cd43e073ee33e92088710724fdfd6cf882aeb534ac164e714413), org.kframework.attributes.Location(Location(1114,10,1114,68)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarSIZE:SortInt{}
          ),\and{R} (
          \in{SortOptionalInt{}, R} (
            X1:SortOptionalInt{},
            Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}()
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(X0:SortInt{},X1:SortOptionalInt{}),
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1114,10,1114,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b43060194e57cd43e073ee33e92088710724fdfd6cf882aeb534ac164e714413")]

// rule `#growthAllowed(_,_)_WASM_Bool_Int_OptionalInt`(SIZE,inj{Int,OptionalInt}(I))=>`_andBool_`(`#growthAllowed(_,_)_WASM_Bool_Int_OptionalInt`(SIZE,`.Int_WASM-DATA_OptionalInt`(.KList)),`_<=Int_`(SIZE,I)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dc62ed0511054cff828dd705fc8d0745c2f0c2301e97cf3962d938c20c6306c7), org.kframework.attributes.Location(Location(1115,10,1115,88)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarSIZE:SortInt{}
          ),\and{R} (
          \in{SortOptionalInt{}, R} (
            X1:SortOptionalInt{},
            inj{SortInt{}, SortOptionalInt{}}(VarI:SortInt{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(X0:SortInt{},X1:SortOptionalInt{}),
        Lbl'Unds'andBool'Unds'{}(Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(VarSIZE:SortInt{},Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}()),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarSIZE:SortInt{},VarI:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1115,10,1115,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("dc62ed0511054cff828dd705fc8d0745c2f0c2301e97cf3962d938c20c6306c7")]

// rule `#idcFuncs(_,_)_WASM-TEXT_Map_Defns_Defns`(IMPORTS,DEFNS)=>`#idcFuncsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(IMPORTS,DEFNS,#token("0","Int"),`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2495ae251add079b2e7374e59e80152e09d10b9aa7512991e800b58b85f47d53), org.kframework.attributes.Location(Location(1038,10,1038,76)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            VarIMPORTS:SortDefns{}
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            VarDEFNS:SortDefns{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcFuncs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns{}(X0:SortDefns{},X1:SortDefns{}),
        Lbl'Hash'idcFuncsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(VarIMPORTS:SortDefns{},VarDEFNS:SortDefns{},\dv{SortInt{}}("0"),Lbl'Stop'Map{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1038,10,1038,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2495ae251add079b2e7374e59e80152e09d10b9aa7512991e800b58b85f47d53")]

// rule `#idcFuncsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)) #as _1,`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM-TEXT-COMMON-SYNTAX_FuncDefn_OptionalId_FuncSpec`(`.Identifier`(.KList),_0)),FS),IDX,_ACC)=>`#idcFuncsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(_1,FS,`_+Int_`(IDX,#token("1","Int")),_ACC) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(63a54e426c1088aba1c2901a13b859ee70297794d687fc1960a4682c051f60ea), org.kframework.attributes.Location(Location(1045,10,1045,88)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            \and{SortDefns{}}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'1:SortDefns{})
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Lbl'Stop'Identifier{}(),Var'Unds'0:SortFuncSpec{})),VarFS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X3:SortMap{},
            Var'Unds'ACC:SortMap{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcFuncsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(X0:SortDefns{},X1:SortDefns{},X2:SortInt{},X3:SortMap{}),
        Lbl'Hash'idcFuncsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(Var'Unds'1:SortDefns{},VarFS:SortDefns{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Var'Unds'ACC:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1045,10,1045,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("63a54e426c1088aba1c2901a13b859ee70297794d687fc1960a4682c051f60ea")]

// rule `#idcFuncsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)) #as _1,`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM-TEXT-COMMON-SYNTAX_FuncDefn_OptionalId_FuncSpec`(inj{Identifier,OptionalId}(ID),_0)),FS),IDX,ACC)=>`#idcFuncsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(_1,FS,`_+Int_`(IDX,#token("1","Int")),`Map:update`(ACC,inj{Identifier,KItem}(ID),inj{Int,KItem}(IDX))) requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),ACC)) ensures #token("true","Bool") [UNIQUE_ID(626ae4d02d8c65e2fe59dd45c1b75df0f5cb22f4ab09c00469ed7340f16bf5f2), org.kframework.attributes.Location(Location(1044,10,1044,142)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarACC:SortMap{})),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            \and{SortDefns{}}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'1:SortDefns{})
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'0:SortFuncSpec{})),VarFS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X3:SortMap{},
            VarACC:SortMap{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcFuncsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(X0:SortDefns{},X1:SortDefns{},X2:SortInt{},X3:SortMap{}),
        Lbl'Hash'idcFuncsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(Var'Unds'1:SortDefns{},VarFS:SortDefns{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),LblMap'Coln'update{}(VarACC:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarIDX:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1044,10,1044,142)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("626ae4d02d8c65e2fe59dd45c1b75df0f5cb22f4ab09c00469ed7340f16bf5f2")]

// rule `#idcFuncsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(_I,IS),_FS,_IDX,_ACC)=>`#idcFuncsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(IS,_FS,_IDX,_ACC) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(719a043874c0c4ebecd4b9c0746408e0348230a21b43fb53e601d9609e8ad15f), org.kframework.attributes.Location(Location(1042,10,1042,99)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMap{},
          \exists{R} (Var'Unds'0:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
                ),\and{R} (
                \in{SortDefns{}, R} (
                  X1:SortDefns{},
                  inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
                ),\and{R} (
                \in{SortInt{}, R} (
                  X2:SortInt{},
                  Var'Unds'0:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X3:SortMap{},
                  Var'Unds'1:SortMap{}
                ),
                \top{R} ()
              ))))
          ))),
          \or{R} (
          \exists{R} (Var'Unds'2:SortDefns{},
          \exists{R} (Var'Unds'3:SortFuncSpec{},
          \exists{R} (Var'Unds'6:SortMap{},
          \exists{R} (Var'Unds'5:SortInt{},
          \exists{R} (Var'Unds'4:SortDefns{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  \and{SortDefns{}}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'2:SortDefns{})
                ),\and{R} (
                \in{SortDefns{}, R} (
                  X1:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Lbl'Stop'Identifier{}(),Var'Unds'3:SortFuncSpec{})),Var'Unds'4:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X2:SortInt{},
                  Var'Unds'5:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X3:SortMap{},
                  Var'Unds'6:SortMap{}
                ),
                \top{R} ()
              ))))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'8:SortWasmString{},
          \exists{R} (Var'Unds'13:SortMap{},
          \exists{R} (Var'Unds'11:SortDefns{},
          \exists{R} (Var'Unds'7:SortWasmString{},
          \exists{R} (Var'Unds'12:SortInt{},
          \exists{R} (Var'Unds'10:SortDefns{},
          \exists{R} (Var'Unds'9:SortTypeUse{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'7:SortWasmString{},Var'Unds'8:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(Lbl'Stop'Identifier{}(),Var'Unds'9:SortTypeUse{}))),Var'Unds'10:SortDefns{})
                ),\and{R} (
                \in{SortDefns{}, R} (
                  X1:SortDefns{},
                  Var'Unds'11:SortDefns{}
                ),\and{R} (
                \in{SortInt{}, R} (
                  X2:SortInt{},
                  Var'Unds'12:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X3:SortMap{},
                  Var'Unds'13:SortMap{}
                ),
                \top{R} ()
              ))))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'18:SortDefns{},
          \exists{R} (Var'Unds'17:SortTypeUse{},
          \exists{R} (Var'Unds'21:SortMap{},
          \exists{R} (Var'Unds'15:SortWasmString{},
          \exists{R} (Var'Unds'16:SortIdentifier{},
          \exists{R} (Var'Unds'14:SortWasmString{},
          \exists{R} (Var'Unds'19:SortDefns{},
          \exists{R} (Var'Unds'20:SortInt{},
            \and{R} (
              \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(Var'Unds'16:SortIdentifier{}),Var'Unds'21:SortMap{})),
        \dv{SortBool{}}("true")),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'14:SortWasmString{},Var'Unds'15:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'16:SortIdentifier{}),Var'Unds'17:SortTypeUse{}))),Var'Unds'18:SortDefns{})
                ),\and{R} (
                \in{SortDefns{}, R} (
                  X1:SortDefns{},
                  Var'Unds'19:SortDefns{}
                ),\and{R} (
                \in{SortInt{}, R} (
                  X2:SortInt{},
                  Var'Unds'20:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X3:SortMap{},
                  Var'Unds'21:SortMap{}
                ),
                \top{R} ()
              ))))
          ))))))))),
          \or{R} (
          \exists{R} (Var'Unds'24:SortFuncSpec{},
          \exists{R} (Var'Unds'22:SortDefns{},
          \exists{R} (Var'Unds'23:SortIdentifier{},
          \exists{R} (Var'Unds'26:SortInt{},
          \exists{R} (Var'Unds'27:SortMap{},
          \exists{R} (Var'Unds'25:SortDefns{},
            \and{R} (
              \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(Var'Unds'23:SortIdentifier{}),Var'Unds'27:SortMap{})),
        \dv{SortBool{}}("true")),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  \and{SortDefns{}}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'22:SortDefns{})
                ),\and{R} (
                \in{SortDefns{}, R} (
                  X1:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'23:SortIdentifier{}),Var'Unds'24:SortFuncSpec{})),Var'Unds'25:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X2:SortInt{},
                  Var'Unds'26:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X3:SortMap{},
                  Var'Unds'27:SortMap{}
                ),
                \top{R} ()
              ))))
          ))))))),
          \bottom{R}()
        )))))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'I:SortDefn{},VarIS:SortDefns{})
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            Var'Unds'FS:SortDefns{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'IDX:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X3:SortMap{},
            Var'Unds'ACC:SortMap{}
          ),
          \top{R} ()
        ))))
    )),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcFuncsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(X0:SortDefns{},X1:SortDefns{},X2:SortInt{},X3:SortMap{}),
        Lbl'Hash'idcFuncsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(VarIS:SortDefns{},Var'Unds'FS:SortDefns{},Var'Unds'IDX:SortInt{},Var'Unds'ACC:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1042,10,1042,99)"), owise{}(), UNIQUE'Unds'ID{}("719a043874c0c4ebecd4b9c0746408e0348230a21b43fb53e601d9609e8ad15f")]

// rule `#idcFuncsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(_0,_1,`(func__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TypeUse`(`.Identifier`(.KList),_2))),IS),_FS,IDX,_ACC)=>`#idcFuncsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(IS,_FS,`_+Int_`(IDX,#token("1","Int")),_ACC) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b849bfd506cd3417a04001c39348a3e68aa731e4a93fdd068c23dc935148c252), org.kframework.attributes.Location(Location(1041,10,1041,99)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'0:SortWasmString{},Var'Unds'1:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(Lbl'Stop'Identifier{}(),Var'Unds'2:SortTypeUse{}))),VarIS:SortDefns{})
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            Var'Unds'FS:SortDefns{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X3:SortMap{},
            Var'Unds'ACC:SortMap{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcFuncsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(X0:SortDefns{},X1:SortDefns{},X2:SortInt{},X3:SortMap{}),
        Lbl'Hash'idcFuncsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(VarIS:SortDefns{},Var'Unds'FS:SortDefns{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Var'Unds'ACC:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1041,10,1041,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b849bfd506cd3417a04001c39348a3e68aa731e4a93fdd068c23dc935148c252")]

// rule `#idcFuncsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(_0,_1,`(func__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TypeUse`(inj{Identifier,OptionalId}(ID),_2))),IS),_FS,IDX,ACC)=>`#idcFuncsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(IS,_FS,`_+Int_`(IDX,#token("1","Int")),`Map:update`(ACC,inj{Identifier,KItem}(ID),inj{Int,KItem}(IDX))) requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),ACC)) ensures #token("true","Bool") [UNIQUE_ID(9d98a5fc607a25f47ffb9f96e9da25f3a7489a1dac2db29bf4e9a29af1047307), org.kframework.attributes.Location(Location(1040,10,1040,152)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarACC:SortMap{})),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'0:SortWasmString{},Var'Unds'1:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'2:SortTypeUse{}))),VarIS:SortDefns{})
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            Var'Unds'FS:SortDefns{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X3:SortMap{},
            VarACC:SortMap{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcFuncsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(X0:SortDefns{},X1:SortDefns{},X2:SortInt{},X3:SortMap{}),
        Lbl'Hash'idcFuncsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(VarIS:SortDefns{},Var'Unds'FS:SortDefns{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),LblMap'Coln'update{}(VarACC:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarIDX:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1040,10,1040,152)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("9d98a5fc607a25f47ffb9f96e9da25f3a7489a1dac2db29bf4e9a29af1047307")]

// rule `#idcFuncsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),_0,ACC)=>ACC requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4dc34ba388e0dc324a37baccfee8277d9ce983eb205e19127742b22a165bb122), org.kframework.attributes.Location(Location(1046,10,1046,53)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'0:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X3:SortMap{},
            VarACC:SortMap{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcFuncsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(X0:SortDefns{},X1:SortDefns{},X2:SortInt{},X3:SortMap{}),
        VarACC:SortMap{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1046,10,1046,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4dc34ba388e0dc324a37baccfee8277d9ce983eb205e19127742b22a165bb122")]

// rule `#idcGlobals(_,_)_WASM-TEXT_Map_Defns_Defns`(IMPORTS,DEFNS)=>`#idcGlobalsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(IMPORTS,DEFNS,#token("0","Int"),`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6d461896fd11be0e5df3a492893868b923cd7f90b6a924ff06f0277b6a8da448), org.kframework.attributes.Location(Location(1051,10,1051,80)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            VarIMPORTS:SortDefns{}
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            VarDEFNS:SortDefns{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcGlobals'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns{}(X0:SortDefns{},X1:SortDefns{}),
        Lbl'Hash'idcGlobalsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(VarIMPORTS:SortDefns{},VarDEFNS:SortDefns{},\dv{SortInt{}}("0"),Lbl'Stop'Map{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1051,10,1051,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6d461896fd11be0e5df3a492893868b923cd7f90b6a924ff06f0277b6a8da448")]

// rule `#idcGlobalsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)) #as _0,`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{GlobalDefn,Defn}(aGlobalDefn(_type0,_init1,_metadata2)),GS),IDX,_ACC)=>`#idcGlobalsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(_0,GS,`_+Int_`(IDX,#token("1","Int")),_ACC) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c58269283a861c867a6bbe83be34b476d989844634c0411c05e77099646b8ef6), org.kframework.attributes.Location(Location(1058,10,1058,80)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortGlobalType{},
          \exists{R} (Var'Unds'3:SortInstrs{},
          \exists{R} (Var'Unds'1:SortDefns{},
          \exists{R} (Var'Unds'6:SortInt{},
          \exists{R} (Var'Unds'7:SortMap{},
          \exists{R} (Var'Unds'5:SortDefns{},
          \exists{R} (Var'Unds'4:SortIdentifier{},
            \and{R} (
              \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(Var'Unds'4:SortIdentifier{}),Var'Unds'7:SortMap{})),
        \dv{SortBool{}}("true")),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  \and{SortDefns{}}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'1:SortDefns{})
                ),\and{R} (
                \in{SortDefns{}, R} (
                  X1:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortGlobalDefn{}, SortDefn{}}(LblaGlobalDefn{}(Var'Unds'2:SortGlobalType{},Var'Unds'3:SortInstrs{},inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'4:SortIdentifier{}))),Var'Unds'5:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X2:SortInt{},
                  Var'Unds'6:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X3:SortMap{},
                  Var'Unds'7:SortMap{}
                ),
                \top{R} ()
              ))))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'8:SortInt{},
          \exists{R} (Var'Unds'9:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
                ),\and{R} (
                \in{SortDefns{}, R} (
                  X1:SortDefns{},
                  inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
                ),\and{R} (
                \in{SortInt{}, R} (
                  X2:SortInt{},
                  Var'Unds'8:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X3:SortMap{},
                  Var'Unds'9:SortMap{}
                ),
                \top{R} ()
              ))))
          ))),
          \or{R} (
          \exists{R} (Var'Unds'18:SortDefns{},
          \exists{R} (Var'Unds'17:SortTextFormatGlobalType{},
          \exists{R} (Var'Unds'21:SortMap{},
          \exists{R} (Var'Unds'15:SortWasmString{},
          \exists{R} (Var'Unds'16:SortWasmString{},
          \exists{R} (Var'Unds'19:SortDefns{},
          \exists{R} (Var'Unds'20:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'15:SortWasmString{},Var'Unds'16:SortWasmString{},Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(Lbl'Stop'Identifier{}(),Var'Unds'17:SortTextFormatGlobalType{}))),Var'Unds'18:SortDefns{})
                ),\and{R} (
                \in{SortDefns{}, R} (
                  X1:SortDefns{},
                  Var'Unds'19:SortDefns{}
                ),\and{R} (
                \in{SortInt{}, R} (
                  X2:SortInt{},
                  Var'Unds'20:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X3:SortMap{},
                  Var'Unds'21:SortMap{}
                ),
                \top{R} ()
              ))))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'29:SortMap{},
          \exists{R} (Var'Unds'24:SortIdentifier{},
          \exists{R} (Var'Unds'22:SortWasmString{},
          \exists{R} (Var'Unds'23:SortWasmString{},
          \exists{R} (Var'Unds'28:SortInt{},
          \exists{R} (Var'Unds'26:SortDefns{},
          \exists{R} (Var'Unds'27:SortDefns{},
          \exists{R} (Var'Unds'25:SortTextFormatGlobalType{},
            \and{R} (
              \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(Var'Unds'24:SortIdentifier{}),Var'Unds'29:SortMap{})),
        \dv{SortBool{}}("true")),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'22:SortWasmString{},Var'Unds'23:SortWasmString{},Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'24:SortIdentifier{}),Var'Unds'25:SortTextFormatGlobalType{}))),Var'Unds'26:SortDefns{})
                ),\and{R} (
                \in{SortDefns{}, R} (
                  X1:SortDefns{},
                  Var'Unds'27:SortDefns{}
                ),\and{R} (
                \in{SortInt{}, R} (
                  X2:SortInt{},
                  Var'Unds'28:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X3:SortMap{},
                  Var'Unds'29:SortMap{}
                ),
                \top{R} ()
              ))))
          ))))))))),
          \bottom{R}()
        ))))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            \and{SortDefns{}}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'0:SortDefns{})
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortGlobalDefn{}, SortDefn{}}(LblaGlobalDefn{}(Var'Unds'type0:SortGlobalType{},Var'Unds'init1:SortInstrs{},Var'Unds'metadata2:SortOptionalId{})),VarGS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X3:SortMap{},
            Var'Unds'ACC:SortMap{}
          ),
          \top{R} ()
        ))))
    )),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcGlobalsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(X0:SortDefns{},X1:SortDefns{},X2:SortInt{},X3:SortMap{}),
        Lbl'Hash'idcGlobalsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(Var'Unds'0:SortDefns{},VarGS:SortDefns{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Var'Unds'ACC:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1058,10,1058,80)"), owise{}(), UNIQUE'Unds'ID{}("c58269283a861c867a6bbe83be34b476d989844634c0411c05e77099646b8ef6")]

// rule `#idcGlobalsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)) #as _0,`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{GlobalDefn,Defn}(aGlobalDefn(_type0,_init1,inj{Identifier,OptionalId}(ID))),GS),IDX,ACC)=>`#idcGlobalsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(_0,GS,`_+Int_`(IDX,#token("1","Int")),`Map:update`(ACC,inj{Identifier,KItem}(ID),inj{Int,KItem}(IDX))) requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),ACC)) ensures #token("true","Bool") [UNIQUE_ID(d45d35f509af210c4a6d2059f8531b53ac8561a3e741eb8272b85a848fbc557e), org.kframework.attributes.Location(Location(1057,10,1057,158)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarACC:SortMap{})),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            \and{SortDefns{}}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'0:SortDefns{})
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortGlobalDefn{}, SortDefn{}}(LblaGlobalDefn{}(Var'Unds'type0:SortGlobalType{},Var'Unds'init1:SortInstrs{},inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}))),VarGS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X3:SortMap{},
            VarACC:SortMap{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcGlobalsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(X0:SortDefns{},X1:SortDefns{},X2:SortInt{},X3:SortMap{}),
        Lbl'Hash'idcGlobalsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(Var'Unds'0:SortDefns{},VarGS:SortDefns{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),LblMap'Coln'update{}(VarACC:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarIDX:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1057,10,1057,158)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("d45d35f509af210c4a6d2059f8531b53ac8561a3e741eb8272b85a848fbc557e")]

// rule `#idcGlobalsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(_I,IS),_GS,_IDX,_ACC)=>`#idcGlobalsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(IS,_GS,_IDX,_ACC) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5f01963f067b60545789f85e7dca4e9dabfbb53bebf6e7d39dc8c5fd0344f81f), org.kframework.attributes.Location(Location(1055,10,1055,103)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortInstrs{},
          \exists{R} (Var'Unds'3:SortIdentifier{},
          \exists{R} (Var'Unds'1:SortGlobalType{},
          \exists{R} (Var'Unds'6:SortMap{},
          \exists{R} (Var'Unds'5:SortInt{},
          \exists{R} (Var'Unds'0:SortDefns{},
          \exists{R} (Var'Unds'4:SortDefns{},
            \and{R} (
              \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(Var'Unds'3:SortIdentifier{}),Var'Unds'6:SortMap{})),
        \dv{SortBool{}}("true")),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  \and{SortDefns{}}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'0:SortDefns{})
                ),\and{R} (
                \in{SortDefns{}, R} (
                  X1:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortGlobalDefn{}, SortDefn{}}(LblaGlobalDefn{}(Var'Unds'1:SortGlobalType{},Var'Unds'2:SortInstrs{},inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'3:SortIdentifier{}))),Var'Unds'4:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X2:SortInt{},
                  Var'Unds'5:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X3:SortMap{},
                  Var'Unds'6:SortMap{}
                ),
                \top{R} ()
              ))))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'8:SortMap{},
          \exists{R} (Var'Unds'7:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
                ),\and{R} (
                \in{SortDefns{}, R} (
                  X1:SortDefns{},
                  inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
                ),\and{R} (
                \in{SortInt{}, R} (
                  X2:SortInt{},
                  Var'Unds'7:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X3:SortMap{},
                  Var'Unds'8:SortMap{}
                ),
                \top{R} ()
              ))))
          ))),
          \or{R} (
          \exists{R} (Var'Unds'18:SortDefns{},
          \exists{R} (Var'Unds'17:SortDefns{},
          \exists{R} (Var'Unds'15:SortWasmString{},
          \exists{R} (Var'Unds'16:SortTextFormatGlobalType{},
          \exists{R} (Var'Unds'14:SortWasmString{},
          \exists{R} (Var'Unds'19:SortInt{},
          \exists{R} (Var'Unds'20:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'14:SortWasmString{},Var'Unds'15:SortWasmString{},Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(Lbl'Stop'Identifier{}(),Var'Unds'16:SortTextFormatGlobalType{}))),Var'Unds'17:SortDefns{})
                ),\and{R} (
                \in{SortDefns{}, R} (
                  X1:SortDefns{},
                  Var'Unds'18:SortDefns{}
                ),\and{R} (
                \in{SortInt{}, R} (
                  X2:SortInt{},
                  Var'Unds'19:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X3:SortMap{},
                  Var'Unds'20:SortMap{}
                ),
                \top{R} ()
              ))))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'24:SortTextFormatGlobalType{},
          \exists{R} (Var'Unds'22:SortWasmString{},
          \exists{R} (Var'Unds'23:SortIdentifier{},
          \exists{R} (Var'Unds'28:SortMap{},
          \exists{R} (Var'Unds'21:SortWasmString{},
          \exists{R} (Var'Unds'26:SortDefns{},
          \exists{R} (Var'Unds'27:SortInt{},
          \exists{R} (Var'Unds'25:SortDefns{},
            \and{R} (
              \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(Var'Unds'23:SortIdentifier{}),Var'Unds'28:SortMap{})),
        \dv{SortBool{}}("true")),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'21:SortWasmString{},Var'Unds'22:SortWasmString{},Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'23:SortIdentifier{}),Var'Unds'24:SortTextFormatGlobalType{}))),Var'Unds'25:SortDefns{})
                ),\and{R} (
                \in{SortDefns{}, R} (
                  X1:SortDefns{},
                  Var'Unds'26:SortDefns{}
                ),\and{R} (
                \in{SortInt{}, R} (
                  X2:SortInt{},
                  Var'Unds'27:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X3:SortMap{},
                  Var'Unds'28:SortMap{}
                ),
                \top{R} ()
              ))))
          ))))))))),
          \bottom{R}()
        ))))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'I:SortDefn{},VarIS:SortDefns{})
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            Var'Unds'GS:SortDefns{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'IDX:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X3:SortMap{},
            Var'Unds'ACC:SortMap{}
          ),
          \top{R} ()
        ))))
    )),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcGlobalsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(X0:SortDefns{},X1:SortDefns{},X2:SortInt{},X3:SortMap{}),
        Lbl'Hash'idcGlobalsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(VarIS:SortDefns{},Var'Unds'GS:SortDefns{},Var'Unds'IDX:SortInt{},Var'Unds'ACC:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1055,10,1055,103)"), owise{}(), UNIQUE'Unds'ID{}("5f01963f067b60545789f85e7dca4e9dabfbb53bebf6e7d39dc8c5fd0344f81f")]

// rule `#idcGlobalsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(_0,_1,`(global__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TextFormatGlobalType`(`.Identifier`(.KList),_2))),IS),_GS,IDX,_ACC)=>`#idcGlobalsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(IS,_GS,`_+Int_`(IDX,#token("1","Int")),_ACC) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6e8e03d590d8085b5287fa31f7590bf932c33cce144f3e1130eb7a0ff6cbff86), org.kframework.attributes.Location(Location(1054,10,1054,103)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'0:SortWasmString{},Var'Unds'1:SortWasmString{},Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(Lbl'Stop'Identifier{}(),Var'Unds'2:SortTextFormatGlobalType{}))),VarIS:SortDefns{})
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            Var'Unds'GS:SortDefns{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X3:SortMap{},
            Var'Unds'ACC:SortMap{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcGlobalsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(X0:SortDefns{},X1:SortDefns{},X2:SortInt{},X3:SortMap{}),
        Lbl'Hash'idcGlobalsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(VarIS:SortDefns{},Var'Unds'GS:SortDefns{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Var'Unds'ACC:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1054,10,1054,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6e8e03d590d8085b5287fa31f7590bf932c33cce144f3e1130eb7a0ff6cbff86")]

// rule `#idcGlobalsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(_0,_1,`(global__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TextFormatGlobalType`(inj{Identifier,OptionalId}(ID),_2))),IS),_GS,IDX,ACC)=>`#idcGlobalsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(IS,_GS,`_+Int_`(IDX,#token("1","Int")),`Map:update`(ACC,inj{Identifier,KItem}(ID),inj{Int,KItem}(IDX))) requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),ACC)) ensures #token("true","Bool") [UNIQUE_ID(1caa5891ed22cbcd97d1aaa2a7956b7650966e288effc4fdbb5370dc99d70a1c), org.kframework.attributes.Location(Location(1053,10,1053,156)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarACC:SortMap{})),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'0:SortWasmString{},Var'Unds'1:SortWasmString{},Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'2:SortTextFormatGlobalType{}))),VarIS:SortDefns{})
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            Var'Unds'GS:SortDefns{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X3:SortMap{},
            VarACC:SortMap{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcGlobalsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(X0:SortDefns{},X1:SortDefns{},X2:SortInt{},X3:SortMap{}),
        Lbl'Hash'idcGlobalsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(VarIS:SortDefns{},Var'Unds'GS:SortDefns{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),LblMap'Coln'update{}(VarACC:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarIDX:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1053,10,1053,156)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("1caa5891ed22cbcd97d1aaa2a7956b7650966e288effc4fdbb5370dc99d70a1c")]

// rule `#idcGlobalsAux(_,_,_,_)_WASM-TEXT_Map_Defns_Defns_Int_Map`(inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),_0,ACC)=>ACC requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(873de7ecc75270864a7797ef382e2c36e9a96f62908f1710ded50273e0c26d37), org.kframework.attributes.Location(Location(1059,10,1059,55)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'0:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X3:SortMap{},
            VarACC:SortMap{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcGlobalsAux'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns'Unds'Int'Unds'Map{}(X0:SortDefns{},X1:SortDefns{},X2:SortInt{},X3:SortMap{}),
        VarACC:SortMap{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1059,10,1059,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("873de7ecc75270864a7797ef382e2c36e9a96f62908f1710ded50273e0c26d37")]

// rule `#idcTypes(_)_WASM-TEXT_Map_Defns`(DEFNS)=>`#idcTypesAux(_,_,_)_WASM-TEXT_Map_Defns_Int_Map`(DEFNS,#token("0","Int"),`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ee1f978d871eca4677bb52bdbe8b04b9ab3fa4859e329615bcdfb7db578fb09c), org.kframework.attributes.Location(Location(1029,10,1029,58)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            VarDEFNS:SortDefns{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcTypes'LParUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns{}(X0:SortDefns{}),
        Lbl'Hash'idcTypesAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Int'Unds'Map{}(VarDEFNS:SortDefns{},\dv{SortInt{}}("0"),Lbl'Stop'Map{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1029,10,1029,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ee1f978d871eca4677bb52bdbe8b04b9ab3fa4859e329615bcdfb7db578fb09c")]

// rule `#idcTypesAux(_,_,_)_WASM-TEXT_Map_Defns_Int_Map`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{TypeDefn,Defn}(`(type_(func_))_WASM-TEXT-COMMON-SYNTAX_TypeDefn_OptionalId_TypeDecls`(`.Identifier`(.KList),_0)),TS),IDX,_ACC)=>`#idcTypesAux(_,_,_)_WASM-TEXT_Map_Defns_Int_Map`(TS,`_+Int_`(IDX,#token("1","Int")),_ACC) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c4331a95a551f5e172af8c80751eafd2a2e9481f4bedf5431da5ce5f63fed026), org.kframework.attributes.Location(Location(1032,10,1032,87)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTypeDefn{}, SortDefn{}}(Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(Lbl'Stop'Identifier{}(),Var'Unds'0:SortTypeDecls{})),VarTS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            Var'Unds'ACC:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcTypesAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Int'Unds'Map{}(X0:SortDefns{},X1:SortInt{},X2:SortMap{}),
        Lbl'Hash'idcTypesAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Int'Unds'Map{}(VarTS:SortDefns{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Var'Unds'ACC:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1032,10,1032,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c4331a95a551f5e172af8c80751eafd2a2e9481f4bedf5431da5ce5f63fed026")]

// rule `#idcTypesAux(_,_,_)_WASM-TEXT_Map_Defns_Int_Map`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{TypeDefn,Defn}(`(type_(func_))_WASM-TEXT-COMMON-SYNTAX_TypeDefn_OptionalId_TypeDecls`(inj{Identifier,OptionalId}(ID),_0)),TS),IDX,ACC)=>`#idcTypesAux(_,_,_)_WASM-TEXT_Map_Defns_Int_Map`(TS,`_+Int_`(IDX,#token("1","Int")),`Map:update`(ACC,inj{Identifier,KItem}(ID),inj{Int,KItem}(IDX))) requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),ACC)) ensures #token("true","Bool") [UNIQUE_ID(b96b009464e2f97b5e093b4f518f7cb47ce606a5fe51b07b236b466d6f3ef2b1), org.kframework.attributes.Location(Location(1031,10,1031,141)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarACC:SortMap{})),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTypeDefn{}, SortDefn{}}(Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'0:SortTypeDecls{})),VarTS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            VarACC:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcTypesAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Int'Unds'Map{}(X0:SortDefns{},X1:SortInt{},X2:SortMap{}),
        Lbl'Hash'idcTypesAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Int'Unds'Map{}(VarTS:SortDefns{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),LblMap'Coln'update{}(VarACC:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarIDX:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1031,10,1031,141)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("b96b009464e2f97b5e093b4f518f7cb47ce606a5fe51b07b236b466d6f3ef2b1")]

// rule `#idcTypesAux(_,_,_)_WASM-TEXT_Map_Defns_Int_Map`(inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),_0,ACC)=>ACC requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(09a63fe8b35de93f0b3511a94a9b283da2c2610202b13a4f9590bafc0011b92b), org.kframework.attributes.Location(Location(1033,10,1033,45)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'0:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            VarACC:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'idcTypesAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Int'Unds'Map{}(X0:SortDefns{},X1:SortInt{},X2:SortMap{}),
        VarACC:SortMap{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1033,10,1033,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("09a63fe8b35de93f0b3511a94a9b283da2c2610202b13a4f9590bafc0011b92b")]

// rule `#ids2Idxs(_,_)_WASM-TEXT_Map_TypeUse_LocalDecls`(TU,LDS)=>`#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(#token("0","Int"),TU,LDS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(047bacdeef9cdff3cbd45c18d516a3e1e533d2bbd746c582431f5f9bd0c6b131), org.kframework.attributes.Location(Location(1064,10,1064,53)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTypeUse{}, R} (
            X0:SortTypeUse{},
            VarTU:SortTypeUse{}
          ),\and{R} (
          \in{SortLocalDecls{}, R} (
            X1:SortLocalDecls{},
            VarLDS:SortLocalDecls{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'TypeUse'Unds'LocalDecls{}(X0:SortTypeUse{},X1:SortLocalDecls{}),
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(\dv{SortInt{}}("0"),VarTU:SortTypeUse{},VarLDS:SortLocalDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1064,10,1064,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("047bacdeef9cdff3cbd45c18d516a3e1e533d2bbd746c582431f5f9bd0c6b131")]

// rule `#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,inj{TypeDecls,TypeUse}(`.List{"___WASM-COMMON-SYNTAX_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)) #as _0,`___WASM-TEXT-COMMON-SYNTAX_LocalDecls_LocalDecl_LocalDecls`(_LD,LDS))=>`#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(`_+Int_`(N,#token("1","Int")),_0,LDS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3e72b62172427e9f8f57f5a884550ed65bb3eca1e95c75cb44664e1576da8360), org.kframework.attributes.Location(Location(1077,10,1077,93)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInt{}, R} (
                  X0:SortInt{},
                  Var'Unds'1:SortInt{}
                ),\and{R} (
                \in{SortTypeUse{}, R} (
                  X1:SortTypeUse{},
                  inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}())
                ),\and{R} (
                \in{SortLocalDecls{}, R} (
                  X2:SortLocalDecls{},
                  Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}()
                ),
                \top{R} ()
              )))
          )),
          \or{R} (
          \exists{R} (Var'Unds'2:SortInt{},
          \exists{R} (Var'Unds'3:SortIdentifier{},
          \exists{R} (Var'Unds'6:SortLocalDecls{},
          \exists{R} (Var'Unds'5:SortTypeDecls{},
          \exists{R} (Var'Unds'4:SortValType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInt{}, R} (
                  X0:SortInt{},
                  Var'Unds'2:SortInt{}
                ),\and{R} (
                \in{SortTypeUse{}, R} (
                  X1:SortTypeUse{},
                  inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lblparam'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'Identifier'Unds'ValType{}(Var'Unds'3:SortIdentifier{},Var'Unds'4:SortValType{}),Var'Unds'5:SortTypeDecls{}))
                ),\and{R} (
                \in{SortLocalDecls{}, R} (
                  X2:SortLocalDecls{},
                  Var'Unds'6:SortLocalDecls{}
                ),
                \top{R} ()
              )))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'13:SortIdentifier{},
          \exists{R} (Var'Unds'11:SortInt{},
          \exists{R} (Var'Unds'12:SortTypeUse{},
          \exists{R} (Var'Unds'15:SortLocalDecls{},
          \exists{R} (Var'Unds'14:SortValType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInt{}, R} (
                  X0:SortInt{},
                  Var'Unds'11:SortInt{}
                ),\and{R} (
                \in{SortTypeUse{}, R} (
                  X1:SortTypeUse{},
                  \and{SortTypeUse{}}(inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),Var'Unds'12:SortTypeUse{})
                ),\and{R} (
                \in{SortLocalDecls{}, R} (
                  X2:SortLocalDecls{},
                  Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Lbllocal'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'Identifier'Unds'ValType{}(Var'Unds'13:SortIdentifier{},Var'Unds'14:SortValType{}),Var'Unds'15:SortLocalDecls{})
                ),
                \top{R} ()
              )))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'22:SortTypeDecls{},
          \exists{R} (Var'Unds'23:SortLocalDecls{},
          \exists{R} (Var'Unds'21:SortIndex{},
          \exists{R} (Var'Unds'20:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInt{}, R} (
                  X0:SortInt{},
                  Var'Unds'20:SortInt{}
                ),\and{R} (
                \in{SortTypeUse{}, R} (
                  X1:SortTypeUse{},
                  Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(Var'Unds'21:SortIndex{},Var'Unds'22:SortTypeDecls{})
                ),\and{R} (
                \in{SortLocalDecls{}, R} (
                  X2:SortLocalDecls{},
                  Var'Unds'23:SortLocalDecls{}
                ),
                \top{R} ()
              )))
          ))))),
          \or{R} (
          \exists{R} (Var'Unds'24:SortInt{},
          \exists{R} (Var'Unds'26:SortLocalDecls{},
          \exists{R} (Var'Unds'25:SortIndex{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInt{}, R} (
                  X0:SortInt{},
                  Var'Unds'24:SortInt{}
                ),\and{R} (
                \in{SortTypeUse{}, R} (
                  X1:SortTypeUse{},
                  Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(Var'Unds'25:SortIndex{})
                ),\and{R} (
                \in{SortLocalDecls{}, R} (
                  X2:SortLocalDecls{},
                  Var'Unds'26:SortLocalDecls{}
                ),
                \top{R} ()
              )))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'29:SortTypeDecls{},
          \exists{R} (Var'Unds'30:SortLocalDecls{},
          \exists{R} (Var'Unds'28:SortValTypes{},
          \exists{R} (Var'Unds'27:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInt{}, R} (
                  X0:SortInt{},
                  Var'Unds'27:SortInt{}
                ),\and{R} (
                \in{SortTypeUse{}, R} (
                  X1:SortTypeUse{},
                  inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(Lblparam'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}(),Var'Unds'28:SortValTypes{}),Var'Unds'29:SortTypeDecls{}))
                ),\and{R} (
                \in{SortLocalDecls{}, R} (
                  X2:SortLocalDecls{},
                  Var'Unds'30:SortLocalDecls{}
                ),
                \top{R} ()
              )))
          ))))),
          \bottom{R}()
        ))))))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortTypeUse{}, R} (
            X1:SortTypeUse{},
            \and{SortTypeUse{}}(inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),Var'Unds'0:SortTypeUse{})
          ),\and{R} (
          \in{SortLocalDecls{}, R} (
            X2:SortLocalDecls{},
            Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Var'Unds'LD:SortLocalDecl{},VarLDS:SortLocalDecls{})
          ),
          \top{R} ()
        )))
    )),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(X0:SortInt{},X1:SortTypeUse{},X2:SortLocalDecls{}),
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),Var'Unds'0:SortTypeUse{},VarLDS:SortLocalDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1077,10,1077,93)"), owise{}(), UNIQUE'Unds'ID{}("3e72b62172427e9f8f57f5a884550ed65bb3eca1e95c75cb44664e1576da8360")]

// rule `#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,inj{TypeDecls,TypeUse}(`.List{"___WASM-COMMON-SYNTAX_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)) #as _1,`___WASM-TEXT-COMMON-SYNTAX_LocalDecls_LocalDecl_LocalDecls`(`local___WASM-TEXT-COMMON-SYNTAX_LocalDecl_Identifier_ValType`(ID,_0),LDS))=>`_Map_`(`_|->_`(inj{Identifier,KItem}(ID),inj{Int,KItem}(N)),`#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(`_+Int_`(N,#token("1","Int")),_1,LDS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b1e08e67dee3db5d474f78b085ace9c49bfcfbe05c9ee4373617ba804e013692), org.kframework.attributes.Location(Location(1075,10,1076,57)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortTypeUse{}, R} (
            X1:SortTypeUse{},
            \and{SortTypeUse{}}(inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),Var'Unds'1:SortTypeUse{})
          ),\and{R} (
          \in{SortLocalDecls{}, R} (
            X2:SortLocalDecls{},
            Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Lbllocal'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'Identifier'Unds'ValType{}(VarID:SortIdentifier{},Var'Unds'0:SortValType{}),VarLDS:SortLocalDecls{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(X0:SortInt{},X1:SortTypeUse{},X2:SortLocalDecls{}),
        Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarN:SortInt{})),Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),Var'Unds'1:SortTypeUse{},VarLDS:SortLocalDecls{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1075,10,1076,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b1e08e67dee3db5d474f78b085ace9c49bfcfbe05c9ee4373617ba804e013692")]

// rule `#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,`(type_)_WASM-COMMON-SYNTAX_TypeUse_Index`(_0),LDS)=>`#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,inj{TypeDecls,TypeUse}(`.List{"___WASM-COMMON-SYNTAX_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)),LDS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(19cd535a41c396550cca73e195ce2652ce015422e282a08b0aa20afdc15c8f91), org.kframework.attributes.Location(Location(1067,10,1067,74)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortTypeUse{}, R} (
            X1:SortTypeUse{},
            Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(Var'Unds'0:SortIndex{})
          ),\and{R} (
          \in{SortLocalDecls{}, R} (
            X2:SortLocalDecls{},
            VarLDS:SortLocalDecls{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(X0:SortInt{},X1:SortTypeUse{},X2:SortLocalDecls{}),
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(VarN:SortInt{},inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),VarLDS:SortLocalDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1067,10,1067,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("19cd535a41c396550cca73e195ce2652ce015422e282a08b0aa20afdc15c8f91")]

// rule `#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,`(type_)__WASM-COMMON-SYNTAX_TypeUse_Index_TypeDecls`(_0,TDS),LDS)=>`#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,inj{TypeDecls,TypeUse}(TDS),LDS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c10d3e75dc57f87d3b0d7f52b4bcdea85d37ee859f9f555912d574552748de3d), org.kframework.attributes.Location(Location(1068,10,1068,74)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortTypeUse{}, R} (
            X1:SortTypeUse{},
            Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(Var'Unds'0:SortIndex{},VarTDS:SortTypeDecls{})
          ),\and{R} (
          \in{SortLocalDecls{}, R} (
            X2:SortLocalDecls{},
            VarLDS:SortLocalDecls{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(X0:SortInt{},X1:SortTypeUse{},X2:SortLocalDecls{}),
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(VarN:SortInt{},inj{SortTypeDecls{}, SortTypeUse{}}(VarTDS:SortTypeDecls{}),VarLDS:SortLocalDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1068,10,1068,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c10d3e75dc57f87d3b0d7f52b4bcdea85d37ee859f9f555912d574552748de3d")]

// rule `#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,inj{TypeDecls,TypeUse}(`___WASM-COMMON-SYNTAX_TypeDecls_TypeDecl_TypeDecls`(_TD,TDS)),LDS)=>`#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,inj{TypeDecls,TypeUse}(TDS),LDS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e2f77b83086e026cf5b6b0b0e27118a4c73f1d93d0e5d6fa1e5f765253c81b55), org.kframework.attributes.Location(Location(1073,10,1073,78)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInt{}, R} (
                  X0:SortInt{},
                  Var'Unds'0:SortInt{}
                ),\and{R} (
                \in{SortTypeUse{}, R} (
                  X1:SortTypeUse{},
                  inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}())
                ),\and{R} (
                \in{SortLocalDecls{}, R} (
                  X2:SortLocalDecls{},
                  Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}()
                ),
                \top{R} ()
              )))
          )),
          \or{R} (
          \exists{R} (Var'Unds'2:SortIdentifier{},
          \exists{R} (Var'Unds'3:SortValType{},
          \exists{R} (Var'Unds'1:SortInt{},
          \exists{R} (Var'Unds'5:SortLocalDecls{},
          \exists{R} (Var'Unds'4:SortTypeDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInt{}, R} (
                  X0:SortInt{},
                  Var'Unds'1:SortInt{}
                ),\and{R} (
                \in{SortTypeUse{}, R} (
                  X1:SortTypeUse{},
                  inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lblparam'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'Identifier'Unds'ValType{}(Var'Unds'2:SortIdentifier{},Var'Unds'3:SortValType{}),Var'Unds'4:SortTypeDecls{}))
                ),\and{R} (
                \in{SortLocalDecls{}, R} (
                  X2:SortLocalDecls{},
                  Var'Unds'5:SortLocalDecls{}
                ),
                \top{R} ()
              )))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'13:SortValType{},
          \exists{R} (Var'Unds'11:SortTypeUse{},
          \exists{R} (Var'Unds'12:SortIdentifier{},
          \exists{R} (Var'Unds'10:SortInt{},
          \exists{R} (Var'Unds'14:SortLocalDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInt{}, R} (
                  X0:SortInt{},
                  Var'Unds'10:SortInt{}
                ),\and{R} (
                \in{SortTypeUse{}, R} (
                  X1:SortTypeUse{},
                  \and{SortTypeUse{}}(inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}()),Var'Unds'11:SortTypeUse{})
                ),\and{R} (
                \in{SortLocalDecls{}, R} (
                  X2:SortLocalDecls{},
                  Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Lbllocal'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'Identifier'Unds'ValType{}(Var'Unds'12:SortIdentifier{},Var'Unds'13:SortValType{}),Var'Unds'14:SortLocalDecls{})
                ),
                \top{R} ()
              )))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'22:SortLocalDecls{},
          \exists{R} (Var'Unds'21:SortTypeDecls{},
          \exists{R} (Var'Unds'19:SortInt{},
          \exists{R} (Var'Unds'20:SortIndex{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInt{}, R} (
                  X0:SortInt{},
                  Var'Unds'19:SortInt{}
                ),\and{R} (
                \in{SortTypeUse{}, R} (
                  X1:SortTypeUse{},
                  Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(Var'Unds'20:SortIndex{},Var'Unds'21:SortTypeDecls{})
                ),\and{R} (
                \in{SortLocalDecls{}, R} (
                  X2:SortLocalDecls{},
                  Var'Unds'22:SortLocalDecls{}
                ),
                \top{R} ()
              )))
          ))))),
          \or{R} (
          \exists{R} (Var'Unds'24:SortIndex{},
          \exists{R} (Var'Unds'23:SortInt{},
          \exists{R} (Var'Unds'25:SortLocalDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInt{}, R} (
                  X0:SortInt{},
                  Var'Unds'23:SortInt{}
                ),\and{R} (
                \in{SortTypeUse{}, R} (
                  X1:SortTypeUse{},
                  Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(Var'Unds'24:SortIndex{})
                ),\and{R} (
                \in{SortLocalDecls{}, R} (
                  X2:SortLocalDecls{},
                  Var'Unds'25:SortLocalDecls{}
                ),
                \top{R} ()
              )))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'29:SortLocalDecls{},
          \exists{R} (Var'Unds'28:SortTypeDecls{},
          \exists{R} (Var'Unds'26:SortInt{},
          \exists{R} (Var'Unds'27:SortValTypes{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInt{}, R} (
                  X0:SortInt{},
                  Var'Unds'26:SortInt{}
                ),\and{R} (
                \in{SortTypeUse{}, R} (
                  X1:SortTypeUse{},
                  inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(Lblparam'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}(),Var'Unds'27:SortValTypes{}),Var'Unds'28:SortTypeDecls{}))
                ),\and{R} (
                \in{SortLocalDecls{}, R} (
                  X2:SortLocalDecls{},
                  Var'Unds'29:SortLocalDecls{}
                ),
                \top{R} ()
              )))
          ))))),
          \bottom{R}()
        ))))))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortTypeUse{}, R} (
            X1:SortTypeUse{},
            inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Var'Unds'TD:SortTypeDecl{},VarTDS:SortTypeDecls{}))
          ),\and{R} (
          \in{SortLocalDecls{}, R} (
            X2:SortLocalDecls{},
            VarLDS:SortLocalDecls{}
          ),
          \top{R} ()
        )))
    )),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(X0:SortInt{},X1:SortTypeUse{},X2:SortLocalDecls{}),
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(VarN:SortInt{},inj{SortTypeDecls{}, SortTypeUse{}}(VarTDS:SortTypeDecls{}),VarLDS:SortLocalDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1073,10,1073,78)"), owise{}(), UNIQUE'Unds'ID{}("e2f77b83086e026cf5b6b0b0e27118a4c73f1d93d0e5d6fa1e5f765253c81b55")]

// rule `#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,inj{TypeDecls,TypeUse}(`___WASM-COMMON-SYNTAX_TypeDecls_TypeDecl_TypeDecls`(`___WASM-COMMON-SYNTAX_TypeDecl_TypeKeyWord_ValTypes`(`param_WASM-COMMON-SYNTAX_TypeKeyWord`(.KList),_0),TDS)),LDS)=>`#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(`_+Int_`(N,#token("1","Int")),inj{TypeDecls,TypeUse}(TDS),LDS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(839558fc0db1dccc681f4be5e76f5b798f61c8caa834b3245e798831bd1299f8), org.kframework.attributes.Location(Location(1072,10,1072,78)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortTypeUse{}, R} (
            X1:SortTypeUse{},
            inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(Lblparam'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}(),Var'Unds'0:SortValTypes{}),VarTDS:SortTypeDecls{}))
          ),\and{R} (
          \in{SortLocalDecls{}, R} (
            X2:SortLocalDecls{},
            VarLDS:SortLocalDecls{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(X0:SortInt{},X1:SortTypeUse{},X2:SortLocalDecls{}),
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),inj{SortTypeDecls{}, SortTypeUse{}}(VarTDS:SortTypeDecls{}),VarLDS:SortLocalDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1072,10,1072,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("839558fc0db1dccc681f4be5e76f5b798f61c8caa834b3245e798831bd1299f8")]

// rule `#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(N,inj{TypeDecls,TypeUse}(`___WASM-COMMON-SYNTAX_TypeDecls_TypeDecl_TypeDecls`(`param___WASM-COMMON-SYNTAX_TypeDecl_Identifier_ValType`(ID,_0),TDS)),LDS)=>`_Map_`(`_|->_`(inj{Identifier,KItem}(ID),inj{Int,KItem}(N)),`#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(`_+Int_`(N,#token("1","Int")),inj{TypeDecls,TypeUse}(TDS),LDS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b6355cf1a5076d3bfff37c55555104d7c0c34a262dd637b3d9f60c56921378d4), org.kframework.attributes.Location(Location(1070,10,1071,50)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortTypeUse{}, R} (
            X1:SortTypeUse{},
            inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lblparam'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecl'Unds'Identifier'Unds'ValType{}(VarID:SortIdentifier{},Var'Unds'0:SortValType{}),VarTDS:SortTypeDecls{}))
          ),\and{R} (
          \in{SortLocalDecls{}, R} (
            X2:SortLocalDecls{},
            VarLDS:SortLocalDecls{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(X0:SortInt{},X1:SortTypeUse{},X2:SortLocalDecls{}),
        Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarN:SortInt{})),Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),inj{SortTypeDecls{}, SortTypeUse{}}(VarTDS:SortTypeDecls{}),VarLDS:SortLocalDecls{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1070,10,1071,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b6355cf1a5076d3bfff37c55555104d7c0c34a262dd637b3d9f60c56921378d4")]

// rule `#ids2Idxs(_,_,_)_WASM-TEXT_Map_Int_TypeUse_LocalDecls`(_0,inj{TypeDecls,TypeUse}(`.List{"___WASM-COMMON-SYNTAX_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)),`.List{"___WASM-TEXT-COMMON-SYNTAX_LocalDecls_LocalDecl_LocalDecls"}_LocalDecls`(.KList))=>`.Map`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(722f89068c3e749d1adb4cdb914a85015c589fce910ab4f9681eabfb577f393a), org.kframework.attributes.Location(Location(1066,10,1066,55)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            Var'Unds'0:SortInt{}
          ),\and{R} (
          \in{SortTypeUse{}, R} (
            X1:SortTypeUse{},
            inj{SortTypeDecls{}, SortTypeUse{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}())
          ),\and{R} (
          \in{SortLocalDecls{}, R} (
            X2:SortLocalDecls{},
            Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}()
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'ids2Idxs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Int'Unds'TypeUse'Unds'LocalDecls{}(X0:SortInt{},X1:SortTypeUse{},X2:SortLocalDecls{}),
        Lbl'Stop'Map{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1066,10,1066,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("722f89068c3e749d1adb4cdb914a85015c589fce910ab4f9681eabfb577f393a")]

// rule `#idxCloseBracket(_,_)_WASM-DATA_Int_String_Int`(S,I)=>I requires `_==String__STRING-COMMON_Bool_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,I,`_+Int_`(I,#token("1","Int"))),#token("\"}\"","String")) ensures #token("true","Bool") [UNIQUE_ID(7ab0c1eb36cd5e2456f0ada6601d968698138ca68b7ecfe463223032b6459884), org.kframework.attributes.Location(Location(508,10,508,123)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarI:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1"))),\dv{SortString{}}("}")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(X0:SortString{},X1:SortInt{}),
        VarI:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(508,10,508,123)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("7ab0c1eb36cd5e2456f0ada6601d968698138ca68b7ecfe463223032b6459884")]

// rule `#idxCloseBracket(_,_)_WASM-DATA_Int_String_Int`(S,I)=>`#idxCloseBracket(_,_)_WASM-DATA_Int_String_Int`(S,`_+Int_`(I,#token("1","Int"))) requires `_=/=String__STRING-COMMON_Bool_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,I,`_+Int_`(I,#token("1","Int"))),#token("\"}\"","String")) ensures #token("true","Bool") [UNIQUE_ID(9fc844fae97159e46d663076bf81f9c15bddddffa1709b2894adfcfbbea66208), org.kframework.attributes.Location(Location(509,10,509,123)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarI:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1"))),\dv{SortString{}}("}")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(X0:SortString{},X1:SortInt{}),
        Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(509,10,509,123)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("9fc844fae97159e46d663076bf81f9c15bddddffa1709b2894adfcfbbea66208")]

// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,B1,_0)=>B1 requires C ensures #token("true","Bool") [UNIQUE_ID(2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2), org.kframework.attributes.Location(Location(2076,8,2076,59)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        VarC:SortBool{},
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarB1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            Var'Unds'0:SortK{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortK{},R} (
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
        VarB1:SortK{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2076,8,2076,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2")]

// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,_0,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [UNIQUE_ID(651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa), org.kframework.attributes.Location(Location(2077,8,2077,67)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarC:SortBool{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            Var'Unds'0:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            VarB2:SortK{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortK{},R} (
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
        VarB2:SortK{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2077,8,2077,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa")]

// rule `#inSignedRange(_,_)_KWASM-LEMMAS_Bool_IValType_Int`(ITYPE,I)=>`_andBool_`(`_<=Int_`(`#minSigned(_)_KWASM-LEMMAS_Int_IValType`(ITYPE),I),`_<Int_`(I,`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d42ffac912803327e530613d01103ba0d59c5c18fc8938894e41232a628ec9df), org.kframework.attributes.Location(Location(260,10,260,94)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'inSignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(X0:SortIValType{},X1:SortInt{}),
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'Hash'minSigned'LParUndsRParUnds'KWASM-LEMMAS'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),VarI:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarI:SortInt{},Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(260,10,260,94)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d42ffac912803327e530613d01103ba0d59c5c18fc8938894e41232a628ec9df")]

// rule `#inUnsignedRange(_,_)_KWASM-LEMMAS_Bool_IValType_Int`(ITYPE,I)=>`_andBool_`(`_<=Int_`(#token("0","Int"),I),`_<Int_`(I,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1114c3d053c76da6136d4a0b573238f69faf7668a6b8abd6495137963cdd5816), org.kframework.attributes.Location(Location(259,10,259,94)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'inUnsignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(X0:SortIValType{},X1:SortInt{}),
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarI:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarI:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(259,10,259,94)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("1114c3d053c76da6136d4a0b573238f69faf7668a6b8abd6495137963cdd5816")]

// rule `#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F)=>`_orBool_`(`isNaN(_)_FLOAT_Bool_Float`(F),`isInfinite(_)_FLOAT_Bool_Float`(F)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eaab51e715769932d16e0a9daab03fdeb445181660e2db5bcf388545e0f0353e), org.kframework.attributes.Location(Location(155,10,155,67)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFloat{}, R} (
            X0:SortFloat{},
            VarF:SortFloat{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(X0:SortFloat{}),
        Lbl'Unds'orBool'Unds'{}(LblisNaN'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),LblisInfinite'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(155,10,155,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("eaab51e715769932d16e0a9daab03fdeb445181660e2db5bcf388545e0f0353e")]

// rule `#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(`.List{"___WASM-DATA-COMMON-SYNTAX_ElemSegment_Index_ElemSegment"}_ElemSegment`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(03e364571a780807a44fcd2fa7ba6e17f58d5e76b42a9782f52f0f17940c1f57), org.kframework.attributes.Location(Location(201,10,201,44)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortElemSegment{}, R} (
            X0:SortElemSegment{},
            Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}()
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(X0:SortElemSegment{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(201,10,201,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("03e364571a780807a44fcd2fa7ba6e17f58d5e76b42a9782f52f0f17940c1f57")]

// rule `#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(`___WASM-DATA-COMMON-SYNTAX_ElemSegment_Index_ElemSegment`(_TFIDX,ES))=>`_+Int_`(#token("1","Int"),`#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(ES)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(26a48c3781b27e74273e33588d28a40b7c51f94690534bd6f26596a4753fcf42), org.kframework.attributes.Location(Location(202,10,202,69)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortElemSegment{}, R} (
            X0:SortElemSegment{},
            Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(Var'Unds'TFIDX:SortIndex{},VarES:SortElemSegment{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(X0:SortElemSegment{}),
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(VarES:SortElemSegment{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(202,10,202,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("26a48c3781b27e74273e33588d28a40b7c51f94690534bd6f26596a4753fcf42")]

// rule `#lenInts(_)_WASM-DATA_Int_Ints`(`.List{"listInt"}_Ints`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2ee320db0d23af668785f7cf879e4974ccb803d80174cea68d5851bcd17edaa8), org.kframework.attributes.Location(Location(207,10,207,30)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInts{}, R} (
            X0:SortInts{},
            Lbl'Stop'List'LBraQuot'listInt'QuotRBraUnds'Ints{}()
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'lenInts'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Ints{}(X0:SortInts{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(207,10,207,30)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2ee320db0d23af668785f7cf879e4974ccb803d80174cea68d5851bcd17edaa8")]

// rule `#lenInts(_)_WASM-DATA_Int_Ints`(listInt(_TFIDX,ES))=>`_+Int_`(#token("1","Int"),`#lenInts(_)_WASM-DATA_Int_Ints`(ES)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d72e1153737e953d5a7226dad2ec927816b2a6a2832f59d39ce621f23ed0281d), org.kframework.attributes.Location(Location(208,10,208,55)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInts{}, R} (
            X0:SortInts{},
            LbllistInt{}(Var'Unds'TFIDX:SortInt{},VarES:SortInts{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'lenInts'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Ints{}(X0:SortInts{}),
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Hash'lenInts'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Ints{}(VarES:SortInts{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(208,10,208,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d72e1153737e953d5a7226dad2ec927816b2a6a2832f59d39ce621f23ed0281d")]

// rule `#lengthDataPages(_)_WASM-TEXT_Int_DataString`(DS)=>`_up/Int__WASM_Int_Int_Int`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(`#DS2Bytes(_)_WASM-DATA_Bytes_DataString`(DS)),`#pageSize()_WASM_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b65a66ec564136e0cdd169feae5b3a163ae5945997d480e12dc3d6d48a831d97), org.kframework.attributes.Location(Location(513,10,513,90)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDataString{}, R} (
            X0:SortDataString{},
            VarDS:SortDataString{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'lengthDataPages'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'DataString{}(X0:SortDataString{}),
        Lbl'Unds'up'Slsh'Int'UndsUnds'WASM'Unds'Int'Unds'Int'Unds'Int{}(LbllengthBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes{}(Lbl'Hash'DS2Bytes'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'DataString{}(VarDS:SortDataString{})),Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(513,10,513,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b65a66ec564136e0cdd169feae5b3a163ae5945997d480e12dc3d6d48a831d97")]

// rule `#limitsMatchImport(_,_,_)_WASM_Bool_Int_OptionalInt_Limits`(L1,_0,limitsMin(L2))=>`_>=Int_`(L1,L2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1a26d1926a48ef0ab75e6de2b2a40185aa6c5d05fa5f048d4199bcf4c64eac1c), org.kframework.attributes.Location(Location(1352,10,1352,76)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarL1:SortInt{}
          ),\and{R} (
          \in{SortOptionalInt{}, R} (
            X1:SortOptionalInt{},
            Var'Unds'0:SortOptionalInt{}
          ),\and{R} (
          \in{SortLimits{}, R} (
            X2:SortLimits{},
            LbllimitsMin{}(VarL2:SortInt{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(X0:SortInt{},X1:SortOptionalInt{},X2:SortLimits{}),
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarL1:SortInt{},VarL2:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1352,10,1352,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("1a26d1926a48ef0ab75e6de2b2a40185aa6c5d05fa5f048d4199bcf4c64eac1c")]

// rule `#limitsMatchImport(_,_,_)_WASM_Bool_Int_OptionalInt_Limits`(L1,inj{Int,OptionalInt}(U1),limitsMinMax(L2,U2))=>`_andBool_`(`_>=Int_`(L1,L2),`_<=Int_`(U1,U2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fb74d0a228a7838141fdf36c4c52f0ab129daaaae87b96b7a85759a8d4230761), org.kframework.attributes.Location(Location(1354,10,1354,96)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarL1:SortInt{}
          ),\and{R} (
          \in{SortOptionalInt{}, R} (
            X1:SortOptionalInt{},
            inj{SortInt{}, SortOptionalInt{}}(VarU1:SortInt{})
          ),\and{R} (
          \in{SortLimits{}, R} (
            X2:SortLimits{},
            LbllimitsMinMax{}(VarL2:SortInt{},VarU2:SortInt{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(X0:SortInt{},X1:SortOptionalInt{},X2:SortLimits{}),
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarL1:SortInt{},VarL2:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarU1:SortInt{},VarU2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1354,10,1354,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("fb74d0a228a7838141fdf36c4c52f0ab129daaaae87b96b7a85759a8d4230761")]

// rule `#limitsMatchImport(_,_,_)_WASM_Bool_Int_OptionalInt_Limits`(_0,`.Int_WASM-DATA_OptionalInt`(.KList),limitsMinMax(_1,_2))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(052d947937992f7af2835d4a792b2591c27e18ede1ffd6f0e512b31d3ba1ba30), org.kframework.attributes.Location(Location(1353,10,1353,70)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            Var'Unds'0:SortInt{}
          ),\and{R} (
          \in{SortOptionalInt{}, R} (
            X1:SortOptionalInt{},
            Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}()
          ),\and{R} (
          \in{SortLimits{}, R} (
            X2:SortLimits{},
            LbllimitsMinMax{}(Var'Unds'1:SortInt{},Var'Unds'2:SortInt{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(X0:SortInt{},X1:SortOptionalInt{},X2:SortLimits{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1353,10,1353,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("052d947937992f7af2835d4a792b2591c27e18ede1ffd6f0e512b31d3ba1ba30")]

// rule `#locals2vectype(_,_)_WASM-TEXT_VecType_LocalDecls_ValTypes`(`.List{"___WASM-TEXT-COMMON-SYNTAX_LocalDecls_LocalDecl_LocalDecls"}_LocalDecls`(.KList),VTYPES)=>aVecType(VTYPES) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9fcac5484bda9359d1e1397d38e1e8ada7ff62cb5eed7122f6866f396da22703), org.kframework.attributes.Location(Location(807,10,807,105)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortLocalDecls{}, R} (
            X0:SortLocalDecls{},
            Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}()
          ),\and{R} (
          \in{SortValTypes{}, R} (
            X1:SortValTypes{},
            VarVTYPES:SortValTypes{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'locals2vectype'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(X0:SortLocalDecls{},X1:SortValTypes{}),
        LblaVecType{}(VarVTYPES:SortValTypes{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(807,10,807,105)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9fcac5484bda9359d1e1397d38e1e8ada7ff62cb5eed7122f6866f396da22703")]

// rule `#locals2vectype(_,_)_WASM-TEXT_VecType_LocalDecls_ValTypes`(`___WASM-TEXT-COMMON-SYNTAX_LocalDecls_LocalDecl_LocalDecls`(`local__WASM-TEXT-COMMON-SYNTAX_LocalDecl_ValTypes`(VTYPES'),LDECLS),VTYPES)=>`#locals2vectype(_,_)_WASM-TEXT_VecType_LocalDecls_ValTypes`(LDECLS,`_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(VTYPES,VTYPES')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b94f074c5a3c681c08ca87a4dbfc423baa4c583717e16fb061f58cbab8b1333d), org.kframework.attributes.Location(Location(808,10,808,137)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortLocalDecls{}, R} (
            X0:SortLocalDecls{},
            Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Lbllocal'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'ValTypes{}(VarVTYPES'Apos':SortValTypes{}),VarLDECLS:SortLocalDecls{})
          ),\and{R} (
          \in{SortValTypes{}, R} (
            X1:SortValTypes{},
            VarVTYPES:SortValTypes{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'locals2vectype'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(X0:SortLocalDecls{},X1:SortValTypes{}),
        Lbl'Hash'locals2vectype'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(VarLDECLS:SortLocalDecls{},Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarVTYPES:SortValTypes{},VarVTYPES'Apos':SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(808,10,808,137)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b94f074c5a3c681c08ca87a4dbfc423baa4c583717e16fb061f58cbab8b1333d")]

// rule `#locals2vectype(_,_)_WASM-TEXT_VecType_LocalDecls_ValTypes`(`___WASM-TEXT-COMMON-SYNTAX_LocalDecls_LocalDecl_LocalDecls`(`local___WASM-TEXT-COMMON-SYNTAX_LocalDecl_Identifier_ValType`(_ID,VTYPE),LDECLS),VTYPES)=>`#locals2vectype(_,_)_WASM-TEXT_VecType_LocalDecls_ValTypes`(LDECLS,`_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(VTYPES,listValTypes(VTYPE,`.List{"listValTypes"}_ValTypes`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ee09f58f3d19f3f409cd485774e5d4b1a837587956d0ba65631ec4ed5eb942f), org.kframework.attributes.Location(Location(809,10,809,145)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortLocalDecls{}, R} (
            X0:SortLocalDecls{},
            Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Lbllocal'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'Identifier'Unds'ValType{}(Var'Unds'ID:SortIdentifier{},VarVTYPE:SortValType{}),VarLDECLS:SortLocalDecls{})
          ),\and{R} (
          \in{SortValTypes{}, R} (
            X1:SortValTypes{},
            VarVTYPES:SortValTypes{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'locals2vectype'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(X0:SortLocalDecls{},X1:SortValTypes{}),
        Lbl'Hash'locals2vectype'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(VarLDECLS:SortLocalDecls{},Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarVTYPES:SortValTypes{},LbllistValTypes{}(VarVTYPE:SortValType{},Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(809,10,809,145)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7ee09f58f3d19f3f409cd485774e5d4b1a837587956d0ba65631ec4ed5eb942f")]

// rule `#maxMemorySize()_WASM_Int`(.KList)=>#token("65536","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6b91ae87095d69cd1d5abbd27a0c7843a7cd98057ea1c4c765431bf1293e5e2b), org.kframework.attributes.Location(Location(1128,10,1128,35)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}(),
        \dv{SortInt{}}("65536")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1128,10,1128,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6b91ae87095d69cd1d5abbd27a0c7843a7cd98057ea1c4c765431bf1293e5e2b")]

// rule `#maxTableSize()_WASM_Int`(.KList)=>#token("4294967296","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(45c58f540f19a98507a411ad47b53292d13c14ce3786d4a77b46f2bb7f979c23), org.kframework.attributes.Location(Location(1129,10,1129,40)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'maxTableSize'LParRParUnds'WASM'Unds'Int{}(),
        \dv{SortInt{}}("4294967296")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1129,10,1129,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("45c58f540f19a98507a411ad47b53292d13c14ce3786d4a77b46f2bb7f979c23")]

// rule `#minSigned(_)_KWASM-LEMMAS_Int_IValType`(ITYPE)=>`_-Int_`(#token("0","Int"),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8932ec8d83e2e064bcf4e6fc7b9be28317940d9a5b6bd3ee092c7b7f15ffc37d), org.kframework.attributes.Location(Location(264,10,264,50)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'minSigned'LParUndsRParUnds'KWASM-LEMMAS'Unds'Int'Unds'IValType{}(X0:SortIValType{}),
        Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(264,10,264,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8932ec8d83e2e064bcf4e6fc7b9be28317940d9a5b6bd3ee092c7b7f15ffc37d")]

// rule `#minWidth(_)_WASM-NUMERIC_Int_Int`(#token("0","Int") #as _0)=>_0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e4a432fa6aaa815c372221d1a5c76b1bd3d02b7d8fb9186927f5471c9003571b), org.kframework.attributes.Location(Location(137,10,137,27)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            \and{SortInt{}}(\dv{SortInt{}}("0"),Var'Unds'0:SortInt{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'minWidth'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(X0:SortInt{}),
        Var'Unds'0:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(137,10,137,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e4a432fa6aaa815c372221d1a5c76b1bd3d02b7d8fb9186927f5471c9003571b")]

// rule `#minWidth(_)_WASM-NUMERIC_Int_Int`(N)=>`_+Int_`(#token("1","Int"),`#minWidth(_)_WASM-NUMERIC_Int_Int`(`_>>Int_`(N,#token("1","Int")))) requires `_=/=Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(98163c1b4f71192f6f42211d2b40125766801ac091b1a19f2169d4e34669b984), org.kframework.attributes.Location(Location(138,10,138,105)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'minWidth'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(X0:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Hash'minWidth'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(138,10,138,105)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("98163c1b4f71192f6f42211d2b40125766801ac091b1a19f2169d4e34669b984")]

// rule `#numBytes(_)_WASM-DATA_Int_IValType`(ITYPE)=>`_/Int_`(`#width(_)_WASM-DATA_Int_IValType`(ITYPE),#token("8","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(491154a33933aa3f8654a2be3e9c02c1901a3ea44d4fe047dab561d746fb0ce7), concrete, org.kframework.attributes.Location(Location(295,10,295,50)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(X0:SortIValType{}),
        Lbl'UndsSlsh'Int'Unds'{}(Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),\dv{SortInt{}}("8"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(295,10,295,50)"), UNIQUE'Unds'ID{}("491154a33933aa3f8654a2be3e9c02c1901a3ea44d4fe047dab561d746fb0ce7")]

// rule `#pageSize()_WASM_Int`(.KList)=>#token("65536","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(957bfcffc695616324ac2aa1a0c472f57e0039cc6594f3753322db7f3cc0da18), org.kframework.attributes.Location(Location(1127,10,1127,35)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}(),
        \dv{SortInt{}}("65536")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1127,10,1127,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("957bfcffc695616324ac2aa1a0c472f57e0039cc6594f3753322db7f3cc0da18")]

// rule `#popcnt(_)_WASM-NUMERIC_Int_Int`(#token("0","Int") #as _0)=>_0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e83f5d4e6584ac4a5927b57c621b78894717de55a6a415497fde7a7b7681b1a6), org.kframework.attributes.Location(Location(143,10,143,25)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            \and{SortInt{}}(\dv{SortInt{}}("0"),Var'Unds'0:SortInt{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'popcnt'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(X0:SortInt{}),
        Var'Unds'0:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(143,10,143,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e83f5d4e6584ac4a5927b57c621b78894717de55a6a415497fde7a7b7681b1a6")]

// rule `#popcnt(_)_WASM-NUMERIC_Int_Int`(N)=>`_+Int_`(`#bool(_)_WASM-DATA_Int_Bool`(`_==Int_`(`_modInt_`(N,#token("2","Int")),#token("1","Int"))),`#popcnt(_)_WASM-NUMERIC_Int_Int`(`_>>Int_`(N,#token("1","Int")))) requires `_=/=Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(6ef73496a108fd8b3fa6f39c89e78ed35bf41e456aaeff99f9d1a12e13a5be31), org.kframework.attributes.Location(Location(144,10,144,105)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'popcnt'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(X0:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("2")),\dv{SortInt{}}("1"))),Lbl'Hash'popcnt'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(144,10,144,105)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("6ef73496a108fd8b3fa6f39c89e78ed35bf41e456aaeff99f9d1a12e13a5be31")]

// rule `#pow(_)_WASM-DATA_Int_IValType`(i32(.KList))=>#token("4294967296","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d2a87ed967faa44a977db965eaa3b1d3e5e40604ea5b039eaa11c3c830b9ec6), org.kframework.attributes.Location(Location(305,10,305,34)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Lbli32{}()
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(X0:SortIValType{}),
        \dv{SortInt{}}("4294967296")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(305,10,305,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2d2a87ed967faa44a977db965eaa3b1d3e5e40604ea5b039eaa11c3c830b9ec6")]

// rule `#pow(_)_WASM-DATA_Int_IValType`(i64(.KList))=>#token("18446744073709551616","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(87cfd8445ce6b0c78da513c543594215e66591c9b2c8775ad9ad9315ee48f48b), org.kframework.attributes.Location(Location(307,10,307,44)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Lbli64{}()
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(X0:SortIValType{}),
        \dv{SortInt{}}("18446744073709551616")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(307,10,307,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("87cfd8445ce6b0c78da513c543594215e66591c9b2c8775ad9ad9315ee48f48b")]

// rule `#pow1(_)_WASM-DATA_Int_IValType`(i32(.KList))=>#token("2147483648","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(58e7d12200cc6ba28fd1959c74e6179233fd08ab24f887d8e9a282d7fb7e6199), org.kframework.attributes.Location(Location(304,10,304,34)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Lbli32{}()
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(X0:SortIValType{}),
        \dv{SortInt{}}("2147483648")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(304,10,304,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("58e7d12200cc6ba28fd1959c74e6179233fd08ab24f887d8e9a282d7fb7e6199")]

// rule `#pow1(_)_WASM-DATA_Int_IValType`(i64(.KList))=>#token("9223372036854775808","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b082d50779153281b61e5b8c78a834ac7532b50ed2fef15aca6d1a926227b10e), org.kframework.attributes.Location(Location(306,10,306,43)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Lbli64{}()
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(X0:SortIValType{}),
        \dv{SortInt{}}("9223372036854775808")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(306,10,306,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b082d50779153281b61e5b8c78a834ac7532b50ed2fef15aca6d1a926227b10e")]

// rule `#reverseDefns(_,_)_WASM-TEXT_Defns_Defns_Defns`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(D,DS),ACC)=>`#reverseDefns(_,_)_WASM-TEXT_Defns_Defns_Defns`(DS,`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(D,ACC)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(619b7d00c07cd1053bce230899621d14b67c68599504c87840b46e67e0c6ad20), org.kframework.attributes.Location(Location(677,10,677,73)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(VarD:SortDefn{},VarDS:SortDefns{})
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            VarACC:SortDefns{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'reverseDefns'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Defns{}(X0:SortDefns{},X1:SortDefns{}),
        Lbl'Hash'reverseDefns'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Defns{}(VarDS:SortDefns{},Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(VarD:SortDefn{},VarACC:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(677,10,677,73)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("619b7d00c07cd1053bce230899621d14b67c68599504c87840b46e67e0c6ad20")]

// rule `#reverseDefns(_,_)_WASM-TEXT_Defns_Defns_Defns`(inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),ACC)=>ACC requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(23c3c8afbc702fa59a47f7c28a6641c6885e41ce85a9b011b9535501e5119cc1), org.kframework.attributes.Location(Location(676,10,676,52)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            VarACC:SortDefns{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'reverseDefns'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Defns{}(X0:SortDefns{},X1:SortDefns{}),
        VarACC:SortDefns{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(676,10,676,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("23c3c8afbc702fa59a47f7c28a6641c6885e41ce85a9b011b9535501e5119cc1")]

// rule `#reverseInstrs(_,_)_WASM-TEXT_Instrs_Instrs_Instrs`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(I,IS),ACC)=>`#reverseInstrs(_,_)_WASM-TEXT_Instrs_Instrs_Instrs`(IS,`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(I,ACC)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(981b419e4d524efa106d060c1ddae372e3845f299d3cdd8fb3887da46f99bd7e), org.kframework.attributes.Location(Location(575,10,575,50)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(VarI:SortInstr{},VarIS:SortInstrs{})
          ),\and{R} (
          \in{SortInstrs{}, R} (
            X1:SortInstrs{},
            VarACC:SortInstrs{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'reverseInstrs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortInstrs{},X1:SortInstrs{}),
        Lbl'Hash'reverseInstrs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(VarIS:SortInstrs{},Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(VarI:SortInstr{},VarACC:SortInstrs{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(575,10,575,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("981b419e4d524efa106d060c1ddae372e3845f299d3cdd8fb3887da46f99bd7e")]

// rule `#reverseInstrs(_,_)_WASM-TEXT_Instrs_Instrs_Instrs`(inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList)),ACC)=>ACC requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f2567f32315da0caafb086d0b76b7d83c4c1ca84f53a04844d2b516f7bf265e3), org.kframework.attributes.Location(Location(574,10,574,45)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
          ),\and{R} (
          \in{SortInstrs{}, R} (
            X1:SortInstrs{},
            VarACC:SortInstrs{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'reverseInstrs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortInstrs{},X1:SortInstrs{}),
        VarACC:SortInstrs{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(574,10,574,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f2567f32315da0caafb086d0b76b7d83c4c1ca84f53a04844d2b516f7bf265e3")]

// rule `#revs(_)_WASM-DATA_ValStack_ValStack`(VS)=>`#revs(_,_)_WASM-DATA_ValStack_ValStack_ValStack`(VS,`.ValStack_WASM-DATA_ValStack`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0a30378342e9f8b09b12518899b48eb43ad77df94bbbb3fce9328565cc246f3e), org.kframework.attributes.Location(Location(442,10,442,43)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValStack{}, R} (
            X0:SortValStack{},
            VarVS:SortValStack{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'revs'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack{}(X0:SortValStack{}),
        Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(VarVS:SortValStack{},Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(442,10,442,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("0a30378342e9f8b09b12518899b48eb43ad77df94bbbb3fce9328565cc246f3e")]

// rule `#revs(_,_)_WASM-DATA_ValStack_ValStack_ValStack`(`.ValStack_WASM-DATA_ValStack`(.KList),VS')=>VS' requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0e356365d37d6e227a2ee2957e1ff1ee478cec69f010d0c2fcaa54c493bd0431), org.kframework.attributes.Location(Location(444,10,444,38)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValStack{}, R} (
            X0:SortValStack{},
            Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()
          ),\and{R} (
          \in{SortValStack{}, R} (
            X1:SortValStack{},
            VarVS'Apos':SortValStack{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(X0:SortValStack{},X1:SortValStack{}),
        VarVS'Apos':SortValStack{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(444,10,444,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("0e356365d37d6e227a2ee2957e1ff1ee478cec69f010d0c2fcaa54c493bd0431")]

// rule `#revs(_,_)_WASM-DATA_ValStack_ValStack_ValStack`(`_:__WASM-DATA_ValStack_Val_ValStack`(V,VS),VS')=>`#revs(_,_)_WASM-DATA_ValStack_ValStack_ValStack`(VS,`_:__WASM-DATA_ValStack_Val_ValStack`(V,VS')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a236a0d77df65e28fc52e27aed3c21b765b9acd09693d097d4be1c722533e69b), org.kframework.attributes.Location(Location(445,10,445,53)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValStack{}, R} (
            X0:SortValStack{},
            Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarV:SortVal{},VarVS:SortValStack{})
          ),\and{R} (
          \in{SortValStack{}, R} (
            X1:SortValStack{},
            VarVS'Apos':SortValStack{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(X0:SortValStack{},X1:SortValStack{}),
        Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(VarVS:SortValStack{},Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarV:SortVal{},VarVS'Apos':SortValStack{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(445,10,445,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a236a0d77df65e28fc52e27aed3c21b765b9acd09693d097d4be1c722533e69b")]

// rule `#revt(_)_WASM-DATA_ValTypes_ValTypes`(VT)=>`#revt(_,_)_WASM-DATA_ValTypes_ValTypes_ValTypes`(VT,`.List{"listValTypes"}_ValTypes`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6d9d692abb17401ec27800786d8edfd21409037e533c7ee768a68f7b392d1c2b), org.kframework.attributes.Location(Location(278,10,278,43)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValTypes{}, R} (
            X0:SortValTypes{},
            VarVT:SortValTypes{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lbl'Hash'revt'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(X0:SortValTypes{}),
        Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarVT:SortValTypes{},Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(278,10,278,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6d9d692abb17401ec27800786d8edfd21409037e533c7ee768a68f7b392d1c2b")]

// rule `#revt(_,_)_WASM-DATA_ValTypes_ValTypes_ValTypes`(`.List{"listValTypes"}_ValTypes`(.KList),VT')=>VT' requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(988c1bc037fd9ce2094fa17a3b53fa27707cc1e4bb74d9db860a77601bdb3894), org.kframework.attributes.Location(Location(280,10,280,38)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValTypes{}, R} (
            X0:SortValTypes{},
            Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}()
          ),\and{R} (
          \in{SortValTypes{}, R} (
            X1:SortValTypes{},
            VarVT'Apos':SortValTypes{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(X0:SortValTypes{},X1:SortValTypes{}),
        VarVT'Apos':SortValTypes{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(280,10,280,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("988c1bc037fd9ce2094fa17a3b53fa27707cc1e4bb74d9db860a77601bdb3894")]

// rule `#revt(_,_)_WASM-DATA_ValTypes_ValTypes_ValTypes`(listValTypes(V,VT),VT')=>`#revt(_,_)_WASM-DATA_ValTypes_ValTypes_ValTypes`(VT,listValTypes(V,VT')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(90938e665b415722f90d56535ff0a4ef35b55867ea56ac36c22cc2d29eff9a4f), org.kframework.attributes.Location(Location(281,10,281,51)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValTypes{}, R} (
            X0:SortValTypes{},
            LbllistValTypes{}(VarV:SortValType{},VarVT:SortValTypes{})
          ),\and{R} (
          \in{SortValTypes{}, R} (
            X1:SortValTypes{},
            VarVT'Apos':SortValTypes{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(X0:SortValTypes{},X1:SortValTypes{}),
        Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarVT:SortValTypes{},LbllistValTypes{}(VarV:SortValType{},VarVT'Apos':SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,10,281,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("90938e665b415722f90d56535ff0a4ef35b55867ea56ac36c22cc2d29eff9a4f")]

// rule `#round(_,_)_WASM-DATA_FVal_FValType_Number`(f32(.KList) #as _0,inj{Int,Number}(N))=>`<_>__WASM-DATA_FVal_FValType_Float`(_0,`Int2Float(_,_,_)_FLOAT_Float_Int_Int_Int`(N,#token("24","Int"),#token("8","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fb452f71d1702fdd784e106128e493d3fcbdc4ded43d40de7fde857238f1aa7c), concrete, org.kframework.attributes.Location(Location(363,10,363,63)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            \and{SortFValType{}}(Lblf32{}(),Var'Unds'0:SortFValType{})
          ),\and{R} (
          \in{SortNumber{}, R} (
            X1:SortNumber{},
            inj{SortInt{}, SortNumber{}}(VarN:SortInt{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortFVal{},R} (
        Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(X0:SortFValType{},X1:SortNumber{}),
        Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(Var'Unds'0:SortFValType{},LblInt2Float'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},\dv{SortInt{}}("24"),\dv{SortInt{}}("8")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(363,10,363,63)"), UNIQUE'Unds'ID{}("fb452f71d1702fdd784e106128e493d3fcbdc4ded43d40de7fde857238f1aa7c")]

// rule `#round(_,_)_WASM-DATA_FVal_FValType_Number`(f32(.KList) #as _0,inj{Float,Number}(N))=>`<_>__WASM-DATA_FVal_FValType_Float`(_0,`roundFloat(_,_,_)_FLOAT_Float_Float_Int_Int`(N,#token("24","Int"),#token("8","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c88c347b47ed0f262cb4647693caa756698655f514002aa78b3ba7a2bd26d131), concrete, org.kframework.attributes.Location(Location(361,10,361,63)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            \and{SortFValType{}}(Lblf32{}(),Var'Unds'0:SortFValType{})
          ),\and{R} (
          \in{SortNumber{}, R} (
            X1:SortNumber{},
            inj{SortFloat{}, SortNumber{}}(VarN:SortFloat{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortFVal{},R} (
        Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(X0:SortFValType{},X1:SortNumber{}),
        Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(Var'Unds'0:SortFValType{},LblroundFloat'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Int'Unds'Int{}(VarN:SortFloat{},\dv{SortInt{}}("24"),\dv{SortInt{}}("8")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(361,10,361,63)"), UNIQUE'Unds'ID{}("c88c347b47ed0f262cb4647693caa756698655f514002aa78b3ba7a2bd26d131")]

// rule `#round(_,_)_WASM-DATA_FVal_FValType_Number`(f64(.KList) #as _0,inj{Int,Number}(N))=>`<_>__WASM-DATA_FVal_FValType_Float`(_0,`Int2Float(_,_,_)_FLOAT_Float_Int_Int_Int`(N,#token("53","Int"),#token("11","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e519ccbd68b51a77bc67c4dea7f2b66640df82a44a4f352c1dea77852f756046), concrete, org.kframework.attributes.Location(Location(362,10,362,64)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            \and{SortFValType{}}(Lblf64{}(),Var'Unds'0:SortFValType{})
          ),\and{R} (
          \in{SortNumber{}, R} (
            X1:SortNumber{},
            inj{SortInt{}, SortNumber{}}(VarN:SortInt{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortFVal{},R} (
        Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(X0:SortFValType{},X1:SortNumber{}),
        Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(Var'Unds'0:SortFValType{},LblInt2Float'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},\dv{SortInt{}}("53"),\dv{SortInt{}}("11")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(362,10,362,64)"), UNIQUE'Unds'ID{}("e519ccbd68b51a77bc67c4dea7f2b66640df82a44a4f352c1dea77852f756046")]

// rule `#round(_,_)_WASM-DATA_FVal_FValType_Number`(f64(.KList) #as _0,inj{Float,Number}(N))=>`<_>__WASM-DATA_FVal_FValType_Float`(_0,`roundFloat(_,_,_)_FLOAT_Float_Float_Int_Int`(N,#token("53","Int"),#token("11","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8e11e5768e69108867ac567b0c527a2b8f398b60e431e934363a4a809637398c), concrete, org.kframework.attributes.Location(Location(360,10,360,64)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            \and{SortFValType{}}(Lblf64{}(),Var'Unds'0:SortFValType{})
          ),\and{R} (
          \in{SortNumber{}, R} (
            X1:SortNumber{},
            inj{SortFloat{}, SortNumber{}}(VarN:SortFloat{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortFVal{},R} (
        Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(X0:SortFValType{},X1:SortNumber{}),
        Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(Var'Unds'0:SortFValType{},LblroundFloat'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Int'Unds'Int{}(VarN:SortFloat{},\dv{SortInt{}}("53"),\dv{SortInt{}}("11")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(360,10,360,64)"), UNIQUE'Unds'ID{}("8e11e5768e69108867ac567b0c527a2b8f398b60e431e934363a4a809637398c")]

// rule `#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(MAP,ID,_0)=>MAP requires `notBool_`(isIdentifier(inj{OptionalId,KItem}(ID))) ensures #token("true","Bool") [UNIQUE_ID(f636b822e05b1a92a6379a8cd725810fe3319f92e3ca2547d29b5ed558409fe2), org.kframework.attributes.Location(Location(173,10,173,96)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblisIdentifier{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarID:SortOptionalId{}),dotk{}()))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarMAP:SortMap{}
          ),\and{R} (
          \in{SortOptionalId{}, R} (
            X1:SortOptionalId{},
            VarID:SortOptionalId{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'0:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(X0:SortMap{},X1:SortOptionalId{},X2:SortInt{}),
        VarMAP:SortMap{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(173,10,173,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("f636b822e05b1a92a6379a8cd725810fe3319f92e3ca2547d29b5ed558409fe2")]

// rule `#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(MAP,inj{Identifier,OptionalId}(ID),IDX)=>`Map:update`(MAP,inj{Identifier,KItem}(ID),inj{Int,KItem}(IDX)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2dd5d97ef671cc72755eda4985634081d72d014b02db2b97f3d30972f8c45d71), org.kframework.attributes.Location(Location(174,10,174,62)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarMAP:SortMap{}
          ),\and{R} (
          \in{SortOptionalId{}, R} (
            X1:SortOptionalId{},
            inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarIDX:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(X0:SortMap{},X1:SortOptionalId{},X2:SortInt{}),
        LblMap'Coln'update{}(VarMAP:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarIDX:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(174,10,174,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2dd5d97ef671cc72755eda4985634081d72d014b02db2b97f3d30972f8c45d71")]

// rule `#setBytesRange(_,_,_)_WASM-DATA_Bytes_Bytes_Int_Bytes`(BM,START,BS)=>`replaceAtBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Bytes`(`padRightBytes(_,_,_)_BYTES-HOOKED_Bytes_Bytes_Int_Int`(BM,`_+Int_`(START,`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(BS)),#token("0","Int")),START,BS) requires `_<=Int_`(#token("0","Int"),START) ensures #token("true","Bool") [UNIQUE_ID(6e093030651f355fceae7194550a6853ac1cb24eeefe8b2fa6a9b9609fab5405), org.kframework.attributes.Location(Location(557,10,558,38)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarSTART:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBytes{}, R} (
            X0:SortBytes{},
            VarBM:SortBytes{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarSTART:SortInt{}
          ),\and{R} (
          \in{SortBytes{}, R} (
            X2:SortBytes{},
            VarBS:SortBytes{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'setBytesRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Bytes{}(X0:SortBytes{},X1:SortInt{},X2:SortBytes{}),
        LblreplaceAtBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Bytes{}(LblpadRightBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarSTART:SortInt{},LbllengthBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes{}(VarBS:SortBytes{})),\dv{SortInt{}}("0")),VarSTART:SortInt{},VarBS:SortBytes{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(557,10,558,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("6e093030651f355fceae7194550a6853ac1cb24eeefe8b2fa6a9b9609fab5405")]

// rule `#setBytesRange(_,_,_)_WASM-DATA_Bytes_Bytes_Int_Bytes`(_0,START,_1)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires `notBool_`(`_<=Int_`(#token("0","Int"),START)) ensures #token("true","Bool") [UNIQUE_ID(eddd71ba5f3e10595a0789e498bcdf2edaf72524408bbd62536b29af7b064415), org.kframework.attributes.Location(Location(560,10,561,39)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarSTART:SortInt{})),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBytes{}, R} (
            X0:SortBytes{},
            Var'Unds'0:SortBytes{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarSTART:SortInt{}
          ),\and{R} (
          \in{SortBytes{}, R} (
            X2:SortBytes{},
            Var'Unds'1:SortBytes{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'setBytesRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Bytes{}(X0:SortBytes{},X1:SortInt{},X2:SortBytes{}),
        Lbl'Stop'Bytes'Unds'BYTES-HOOKED'Unds'Bytes{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(560,10,561,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("eddd71ba5f3e10595a0789e498bcdf2edaf72524408bbd62536b29af7b064415")]

// rule `#setRange(_,_,_,_)_WASM-DATA_Bytes_Bytes_Int_Int_Int`(BM,ADDR,VAL,WIDTH)=>BM requires `notBool_`(`_andBool_`(`_andBool_`(`_<Int_`(#token("0","Int"),WIDTH),`_<=Int_`(#token("0","Int"),VAL)),`_<=Int_`(#token("0","Int"),ADDR))) ensures #token("true","Bool") [UNIQUE_ID(012e2d835c243eff5d89328008e82cb9abb16b8d5ecb7de207735863d03d1b1b), org.kframework.attributes.Location(Location(565,32,566,79)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarVAL:SortInt{})),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarADDR:SortInt{}))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBytes{}, R} (
            X0:SortBytes{},
            VarBM:SortBytes{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarADDR:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarVAL:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarWIDTH:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int'Unds'Int{}(X0:SortBytes{},X1:SortInt{},X2:SortInt{},X3:SortInt{}),
        VarBM:SortBytes{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(565,32,566,79)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("012e2d835c243eff5d89328008e82cb9abb16b8d5ecb7de207735863d03d1b1b")]

// rule `#setRange(_,_,_,_)_WASM-DATA_Bytes_Bytes_Int_Int_Int`(BM,ADDR,VAL,WIDTH)=>`#setBytesRange(_,_,_)_WASM-DATA_Bytes_Bytes_Int_Bytes`(BM,ADDR,`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(WIDTH,VAL,littleEndianBytes(.KList))) requires `_andBool_`(`_andBool_`(`_<Int_`(#token("0","Int"),WIDTH),`_<=Int_`(#token("0","Int"),VAL)),`_<=Int_`(#token("0","Int"),ADDR)) ensures #token("true","Bool") [UNIQUE_ID(f2fbfdab0c2c1b5b9756e294a5ea2efe9e79f9dfdb51f94fb8cd491110c22544), concrete, label(WASM-DATA.setRange-Positive), org.kframework.attributes.Location(Location(568,32,569,78)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarVAL:SortInt{})),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarADDR:SortInt{})),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBytes{}, R} (
            X0:SortBytes{},
            VarBM:SortBytes{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarADDR:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarVAL:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarWIDTH:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int'Unds'Int{}(X0:SortBytes{},X1:SortInt{},X2:SortInt{},X3:SortInt{}),
        Lbl'Hash'setBytesRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Bytes{}(VarBM:SortBytes{},VarADDR:SortInt{},LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(VarWIDTH:SortInt{},VarVAL:SortInt{},LbllittleEndianBytes{}()))),
      \top{R}()))
  [label{}("WASM-DATA.setRange-Positive"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(568,32,569,78)"), UNIQUE'Unds'ID{}("f2fbfdab0c2c1b5b9756e294a5ea2efe9e79f9dfdb51f94fb8cd491110c22544")]

// rule `#setRange(_,_,_,_)_WASM-DATA_Bytes_Bytes_Int_Int_Int`(BM,ADDR,`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,ADDR,WIDTH),WIDTH)=>BM requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a11300d6614d12cdb0a6958655d770dd6d140c0f2deaa0605100ee127faf6b27), org.kframework.attributes.Location(Location(333,10,333,70)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int'Unds'Int{}(VarBM:SortBytes{},VarADDR:SortInt{},Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},VarADDR:SortInt{},VarWIDTH:SortInt{}),VarWIDTH:SortInt{}),
        VarBM:SortBytes{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,10,333,70)"), simplification{}(""), UNIQUE'Unds'ID{}("a11300d6614d12cdb0a6958655d770dd6d140c0f2deaa0605100ee127faf6b27")]

// rule `#setRange(_,_,_,_)_WASM-DATA_Bytes_Bytes_Int_Int_Int`(BM,ADDR,`_+Int_`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(_0,_1,WIDTH1) #as VAL1,`_<<Int_`(VAL2,SHIFT)),WIDTH)=>`#setRange(_,_,_,_)_WASM-DATA_Bytes_Bytes_Int_Int_Int`(`#setRange(_,_,_,_)_WASM-DATA_Bytes_Bytes_Int_Int_Int`(BM,ADDR,VAL1,`minInt(_,_)_INT-COMMON_Int_Int_Int`(WIDTH1,WIDTH)),`_+Int_`(ADDR,WIDTH1),VAL2,`_-Int_`(WIDTH,WIDTH1)) requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),ADDR),`_<Int_`(#token("0","Int"),WIDTH)),`_==Int_`(`_*Int_`(WIDTH1,#token("8","Int")),SHIFT)) ensures #token("true","Bool") [UNIQUE_ID(2d3eb918bd74efdd8d0b37e488b24d58583d5b1d451317470b5968f08c1ea6df), org.kframework.attributes.Location(Location(334,10,338,41)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarADDR:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{})),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsStar'Int'Unds'{}(VarWIDTH1:SortInt{},\dv{SortInt{}}("8")),VarSHIFT:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int'Unds'Int{}(VarBM:SortBytes{},VarADDR:SortInt{},Lbl'UndsPlus'Int'Unds'{}(\and{SortInt{}}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Var'Unds'0:SortBytes{},Var'Unds'1:SortInt{},VarWIDTH1:SortInt{}),VarVAL1:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(VarVAL2:SortInt{},VarSHIFT:SortInt{})),VarWIDTH:SortInt{}),
        Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int'Unds'Int{}(Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int'Unds'Int{}(VarBM:SortBytes{},VarADDR:SortInt{},VarVAL1:SortInt{},LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VarWIDTH1:SortInt{},VarWIDTH:SortInt{})),Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},VarWIDTH1:SortInt{}),VarVAL2:SortInt{},Lbl'Unds'-Int'Unds'{}(VarWIDTH:SortInt{},VarWIDTH1:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(334,10,338,41)"), simplification{}(""), UNIQUE'Unds'ID{}("2d3eb918bd74efdd8d0b37e488b24d58583d5b1d451317470b5968f08c1ea6df")]

// rule `#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,N)=>N requires `_andBool_`(`_<=Int_`(#token("0","Int"),N),`_<Int_`(N,`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(fcd754901d21572c095257d17c04fd1be6b48ec66fe41b2470cae48eab7f9f83), org.kframework.attributes.Location(Location(377,10,377,107)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarN:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(X0:SortIValType{},X1:SortInt{}),
        VarN:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(377,10,377,107)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("fcd754901d21572c095257d17c04fd1be6b48ec66fe41b2470cae48eab7f9f83")]

// rule `#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,N)=>`_-Int_`(N,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE)) requires `_andBool_`(`_<=Int_`(`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE),N),`_<Int_`(N,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(43c77f66a3f0413b4f3d8a51a45a8e2233ef160825974c8893d01f10fa2d81c8), org.kframework.attributes.Location(Location(378,10,378,107)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarN:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(X0:SortIValType{},X1:SortInt{}),
        Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(378,10,378,107)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("43c77f66a3f0413b4f3d8a51a45a8e2233ef160825974c8893d01f10fa2d81c8")]

// rule `#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(#token("1","Int"),N)=>N requires `_andBool_`(`_<=Int_`(#token("0","Int"),N),`_<Int_`(N,#token("128","Int"))) ensures #token("true","Bool") [UNIQUE_ID(57f788c50d5140a9af386057beb052977beea091e75725550abda8c2d760e4a5), org.kframework.attributes.Location(Location(383,10,383,86)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("128"))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            \dv{SortInt{}}("1")
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarN:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
        VarN:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,10,383,86)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("57f788c50d5140a9af386057beb052977beea091e75725550abda8c2d760e4a5")]

// rule `#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(#token("1","Int"),N)=>`_-Int_`(N,#token("256","Int")) requires `_andBool_`(`_<=Int_`(#token("128","Int"),N),`_<Int_`(N,#token("256","Int"))) ensures #token("true","Bool") [UNIQUE_ID(b7018aa713fa6769053dc615b818c0e2b7de374c1aea8768ff47581164389efd), org.kframework.attributes.Location(Location(384,10,384,86)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("128"),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("256"))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            \dv{SortInt{}}("1")
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarN:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
        Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("256"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(384,10,384,86)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("b7018aa713fa6769053dc615b818c0e2b7de374c1aea8768ff47581164389efd")]

// rule `#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(#token("2","Int"),N)=>N requires `_andBool_`(`_<=Int_`(#token("0","Int"),N),`_<Int_`(N,#token("32768","Int"))) ensures #token("true","Bool") [UNIQUE_ID(6270306b711adcde17b4cc1de545b5ace9ada7161a7acb9de0653f3395788ab1), org.kframework.attributes.Location(Location(385,10,385,88)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("32768"))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            \dv{SortInt{}}("2")
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarN:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
        VarN:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(385,10,385,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("6270306b711adcde17b4cc1de545b5ace9ada7161a7acb9de0653f3395788ab1")]

// rule `#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(#token("2","Int"),N)=>`_-Int_`(N,#token("65536","Int")) requires `_andBool_`(`_<=Int_`(#token("32768","Int"),N),`_<Int_`(N,#token("65536","Int"))) ensures #token("true","Bool") [UNIQUE_ID(b89fc59c30b0a67f8cb86209a3c3397a44eb91ffdf8ca7c5b43d2fbe43e4c5c3), org.kframework.attributes.Location(Location(386,10,386,88)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("32768"),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("65536"))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            \dv{SortInt{}}("2")
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarN:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
        Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("65536"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(386,10,386,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("b89fc59c30b0a67f8cb86209a3c3397a44eb91ffdf8ca7c5b43d2fbe43e4c5c3")]

// rule `#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(#token("4","Int"),N)=>`#signed(_,_)_WASM-DATA_Int_IValType_Int`(i32(.KList),N) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8cb4900344baba1f384caabb178a54f02a15f847da29d99e7d05e41c447fa71b), org.kframework.attributes.Location(Location(387,10,387,47)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            \dv{SortInt{}}("4")
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarN:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
        Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Lbli32{}(),VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(387,10,387,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8cb4900344baba1f384caabb178a54f02a15f847da29d99e7d05e41c447fa71b")]

// rule `#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ExportDefn,Defn}(E) #as _1,DS),aModuleDecl(_types0,_funcs1,_tables2,_mems3,_globals4,_elem5,_data6,_start7,_importDefns8,ES,_metadata9))=>`#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(DS,aModuleDecl(_types0,_funcs1,_tables2,_mems3,_globals4,_elem5,_data6,_start7,_importDefns8,`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(_1,ES),_metadata9)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7fe9e420b47043023ac44256a89113bbee14cde08c21a6d349c0e758a3c63e40), org.kframework.attributes.Location(Location(669,10,669,95)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortExportDefn{}, SortDefn{}}(VarE:SortExportDefn{}),Var'Unds'1:SortDefn{}),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortModuleDecl{}, R} (
            X1:SortModuleDecl{},
            LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Var'Unds'funcs1:SortDefns{},Var'Unds'tables2:SortDefns{},Var'Unds'mems3:SortDefns{},Var'Unds'globals4:SortDefns{},Var'Unds'elem5:SortDefns{},Var'Unds'data6:SortDefns{},Var'Unds'start7:SortDefns{},Var'Unds'importDefns8:SortDefns{},VarES:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(X0:SortDefns{},X1:SortModuleDecl{}),
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Var'Unds'funcs1:SortDefns{},Var'Unds'tables2:SortDefns{},Var'Unds'mems3:SortDefns{},Var'Unds'globals4:SortDefns{},Var'Unds'elem5:SortDefns{},Var'Unds'data6:SortDefns{},Var'Unds'start7:SortDefns{},Var'Unds'importDefns8:SortDefns{},Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'1:SortDefn{},VarES:SortDefns{}),Var'Unds'metadata9:SortModuleMetadata{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(669,10,669,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7fe9e420b47043023ac44256a89113bbee14cde08c21a6d349c0e758a3c63e40")]

// rule `#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ElemDefn,Defn}(I) #as _1,DS),aModuleDecl(_types0,_funcs1,_tables2,_mems3,_globals4,IS,_data5,_start6,_importDefns7,_exports8,_metadata9))=>`#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(DS,aModuleDecl(_types0,_funcs1,_tables2,_mems3,_globals4,`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(_1,IS),_data5,_start6,_importDefns7,_exports8,_metadata9)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f4df87a4969d2e1fd6850f9c441aec55b7c9ab3fd45badd0f6f8955fa74e1dab), org.kframework.attributes.Location(Location(671,10,671,95)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortElemDefn{}, SortDefn{}}(VarI:SortElemDefn{}),Var'Unds'1:SortDefn{}),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortModuleDecl{}, R} (
            X1:SortModuleDecl{},
            LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Var'Unds'funcs1:SortDefns{},Var'Unds'tables2:SortDefns{},Var'Unds'mems3:SortDefns{},Var'Unds'globals4:SortDefns{},VarIS:SortDefns{},Var'Unds'data5:SortDefns{},Var'Unds'start6:SortDefns{},Var'Unds'importDefns7:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(X0:SortDefns{},X1:SortModuleDecl{}),
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Var'Unds'funcs1:SortDefns{},Var'Unds'tables2:SortDefns{},Var'Unds'mems3:SortDefns{},Var'Unds'globals4:SortDefns{},Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'1:SortDefn{},VarIS:SortDefns{}),Var'Unds'data5:SortDefns{},Var'Unds'start6:SortDefns{},Var'Unds'importDefns7:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(671,10,671,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f4df87a4969d2e1fd6850f9c441aec55b7c9ab3fd45badd0f6f8955fa74e1dab")]

// rule `#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{DataDefn,Defn}(I) #as _1,DS),aModuleDecl(_types0,_funcs1,_tables2,_mems3,_globals4,_elem5,IS,_start6,_importDefns7,_exports8,_metadata9))=>`#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(DS,aModuleDecl(_types0,_funcs1,_tables2,_mems3,_globals4,_elem5,`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(_1,IS),_start6,_importDefns7,_exports8,_metadata9)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(15bf95f89e386d5e643fec2bb26bc2c46b8d7e3606b1df7d17c2de181f821bc0), org.kframework.attributes.Location(Location(670,10,670,95)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortDataDefn{}, SortDefn{}}(VarI:SortDataDefn{}),Var'Unds'1:SortDefn{}),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortModuleDecl{}, R} (
            X1:SortModuleDecl{},
            LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Var'Unds'funcs1:SortDefns{},Var'Unds'tables2:SortDefns{},Var'Unds'mems3:SortDefns{},Var'Unds'globals4:SortDefns{},Var'Unds'elem5:SortDefns{},VarIS:SortDefns{},Var'Unds'start6:SortDefns{},Var'Unds'importDefns7:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(X0:SortDefns{},X1:SortModuleDecl{}),
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Var'Unds'funcs1:SortDefns{},Var'Unds'tables2:SortDefns{},Var'Unds'mems3:SortDefns{},Var'Unds'globals4:SortDefns{},Var'Unds'elem5:SortDefns{},Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'1:SortDefn{},VarIS:SortDefns{}),Var'Unds'start6:SortDefns{},Var'Unds'importDefns7:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(670,10,670,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("15bf95f89e386d5e643fec2bb26bc2c46b8d7e3606b1df7d17c2de181f821bc0")]

// rule `#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ImportDefn,Defn}(I) #as _1,DS),aModuleDecl(_types0,_funcs1,_tables2,_mems3,_globals4,_elem5,_data6,_start7,IS,_exports8,_metadata9))=>`#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(DS,aModuleDecl(_types0,_funcs1,_tables2,_mems3,_globals4,_elem5,_data6,_start7,`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(_1,IS),_exports8,_metadata9)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7023bf54b3e3859b8c6e0ea36a73063406404cb9c582697c2e9078626849a25f), org.kframework.attributes.Location(Location(664,10,664,95)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortImportDefn{}, SortDefn{}}(VarI:SortImportDefn{}),Var'Unds'1:SortDefn{}),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortModuleDecl{}, R} (
            X1:SortModuleDecl{},
            LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Var'Unds'funcs1:SortDefns{},Var'Unds'tables2:SortDefns{},Var'Unds'mems3:SortDefns{},Var'Unds'globals4:SortDefns{},Var'Unds'elem5:SortDefns{},Var'Unds'data6:SortDefns{},Var'Unds'start7:SortDefns{},VarIS:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(X0:SortDefns{},X1:SortModuleDecl{}),
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Var'Unds'funcs1:SortDefns{},Var'Unds'tables2:SortDefns{},Var'Unds'mems3:SortDefns{},Var'Unds'globals4:SortDefns{},Var'Unds'elem5:SortDefns{},Var'Unds'data6:SortDefns{},Var'Unds'start7:SortDefns{},Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'1:SortDefn{},VarIS:SortDefns{}),Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(664,10,664,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7023bf54b3e3859b8c6e0ea36a73063406404cb9c582697c2e9078626849a25f")]

// rule `#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{MemoryDefn,Defn}(M) #as _1,DS),aModuleDecl(_types0,_funcs1,_tables2,MS,_globals3,_elem4,_data5,_start6,_importDefns7,_exports8,_metadata9))=>`#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(DS,aModuleDecl(_types0,_funcs1,_tables2,`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(_1,MS),_globals3,_elem4,_data5,_start6,_importDefns7,_exports8,_metadata9)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2f4b5b1987d35df5f410b75febffe33909a72854686edc99573bf1da937419b7), org.kframework.attributes.Location(Location(668,10,668,95)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortMemoryDefn{}, SortDefn{}}(VarM:SortMemoryDefn{}),Var'Unds'1:SortDefn{}),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortModuleDecl{}, R} (
            X1:SortModuleDecl{},
            LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Var'Unds'funcs1:SortDefns{},Var'Unds'tables2:SortDefns{},VarMS:SortDefns{},Var'Unds'globals3:SortDefns{},Var'Unds'elem4:SortDefns{},Var'Unds'data5:SortDefns{},Var'Unds'start6:SortDefns{},Var'Unds'importDefns7:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(X0:SortDefns{},X1:SortModuleDecl{}),
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Var'Unds'funcs1:SortDefns{},Var'Unds'tables2:SortDefns{},Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'1:SortDefn{},VarMS:SortDefns{}),Var'Unds'globals3:SortDefns{},Var'Unds'elem4:SortDefns{},Var'Unds'data5:SortDefns{},Var'Unds'start6:SortDefns{},Var'Unds'importDefns7:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(668,10,668,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2f4b5b1987d35df5f410b75febffe33909a72854686edc99573bf1da937419b7")]

// rule `#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{StartDefn,Defn}(S) #as _1,DS),aModuleDecl(_types0,_funcs1,_tables2,_mems3,_globals4,_elem5,_data6,inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)) #as _3,_importDefns7,_exports8,_metadata9))=>`#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(DS,aModuleDecl(_types0,_funcs1,_tables2,_mems3,_globals4,_elem5,_data6,`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(_1,_3),_importDefns7,_exports8,_metadata9)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3a90ffa563665a3506eaca4e56ebefc7bd29fea790aa9ff7a12e40e31f430876), org.kframework.attributes.Location(Location(672,10,672,99)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortStartDefn{}, SortDefn{}}(VarS:SortStartDefn{}),Var'Unds'1:SortDefn{}),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortModuleDecl{}, R} (
            X1:SortModuleDecl{},
            LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Var'Unds'funcs1:SortDefns{},Var'Unds'tables2:SortDefns{},Var'Unds'mems3:SortDefns{},Var'Unds'globals4:SortDefns{},Var'Unds'elem5:SortDefns{},Var'Unds'data6:SortDefns{},\and{SortDefns{}}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'3:SortDefns{}),Var'Unds'importDefns7:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(X0:SortDefns{},X1:SortModuleDecl{}),
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Var'Unds'funcs1:SortDefns{},Var'Unds'tables2:SortDefns{},Var'Unds'mems3:SortDefns{},Var'Unds'globals4:SortDefns{},Var'Unds'elem5:SortDefns{},Var'Unds'data6:SortDefns{},Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'1:SortDefn{},Var'Unds'3:SortDefns{}),Var'Unds'importDefns7:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(672,10,672,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3a90ffa563665a3506eaca4e56ebefc7bd29fea790aa9ff7a12e40e31f430876")]

// rule `#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{TypeDefn,Defn}(T) #as _1,DS),aModuleDecl(TS,_funcs0,_tables1,_mems2,_globals3,_elem4,_data5,_start6,_importDefns7,_exports8,_metadata9))=>`#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(DS,aModuleDecl(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(_1,TS),_funcs0,_tables1,_mems2,_globals3,_elem4,_data5,_start6,_importDefns7,_exports8,_metadata9)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b646ea62b397f994dbdaaf5a9f4793da435d7796d9080e66a778cf775991c5b), org.kframework.attributes.Location(Location(663,10,663,95)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortTypeDefn{}, SortDefn{}}(VarT:SortTypeDefn{}),Var'Unds'1:SortDefn{}),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortModuleDecl{}, R} (
            X1:SortModuleDecl{},
            LblaModuleDecl{}(VarTS:SortDefns{},Var'Unds'funcs0:SortDefns{},Var'Unds'tables1:SortDefns{},Var'Unds'mems2:SortDefns{},Var'Unds'globals3:SortDefns{},Var'Unds'elem4:SortDefns{},Var'Unds'data5:SortDefns{},Var'Unds'start6:SortDefns{},Var'Unds'importDefns7:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(X0:SortDefns{},X1:SortModuleDecl{}),
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblaModuleDecl{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'1:SortDefn{},VarTS:SortDefns{}),Var'Unds'funcs0:SortDefns{},Var'Unds'tables1:SortDefns{},Var'Unds'mems2:SortDefns{},Var'Unds'globals3:SortDefns{},Var'Unds'elem4:SortDefns{},Var'Unds'data5:SortDefns{},Var'Unds'start6:SortDefns{},Var'Unds'importDefns7:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(663,10,663,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2b646ea62b397f994dbdaaf5a9f4793da435d7796d9080e66a778cf775991c5b")]

// rule `#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{TableDefn,Defn}(T) #as _1,DS),aModuleDecl(_types0,_funcs1,TS,_mems2,_globals3,_elem4,_data5,_start6,_importDefns7,_exports8,_metadata9))=>`#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(DS,aModuleDecl(_types0,_funcs1,`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(_1,TS),_mems2,_globals3,_elem4,_data5,_start6,_importDefns7,_exports8,_metadata9)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4ee471d302274267ae484a8321fe8e55d946306ad9f7526ac6f609d3112c9919), org.kframework.attributes.Location(Location(667,10,667,95)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortTableDefn{}, SortDefn{}}(VarT:SortTableDefn{}),Var'Unds'1:SortDefn{}),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortModuleDecl{}, R} (
            X1:SortModuleDecl{},
            LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Var'Unds'funcs1:SortDefns{},VarTS:SortDefns{},Var'Unds'mems2:SortDefns{},Var'Unds'globals3:SortDefns{},Var'Unds'elem4:SortDefns{},Var'Unds'data5:SortDefns{},Var'Unds'start6:SortDefns{},Var'Unds'importDefns7:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(X0:SortDefns{},X1:SortModuleDecl{}),
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Var'Unds'funcs1:SortDefns{},Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'1:SortDefn{},VarTS:SortDefns{}),Var'Unds'mems2:SortDefns{},Var'Unds'globals3:SortDefns{},Var'Unds'elem4:SortDefns{},Var'Unds'data5:SortDefns{},Var'Unds'start6:SortDefns{},Var'Unds'importDefns7:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(667,10,667,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4ee471d302274267ae484a8321fe8e55d946306ad9f7526ac6f609d3112c9919")]

// rule `#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{FuncDefn,Defn}(X) #as _1,DS),aModuleDecl(_types0,FS,_tables1,_mems2,_globals3,_elem4,_data5,_start6,_importDefns7,_exports8,_metadata9))=>`#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(DS,aModuleDecl(_types0,`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(_1,FS),_tables1,_mems2,_globals3,_elem4,_data5,_start6,_importDefns7,_exports8,_metadata9)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d1d3b79994b374e072020676dd7b0290eecb1e8290eb4b3aef2b27950a73f31a), org.kframework.attributes.Location(Location(665,10,665,95)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortFuncDefn{}, SortDefn{}}(VarX:SortFuncDefn{}),Var'Unds'1:SortDefn{}),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortModuleDecl{}, R} (
            X1:SortModuleDecl{},
            LblaModuleDecl{}(Var'Unds'types0:SortDefns{},VarFS:SortDefns{},Var'Unds'tables1:SortDefns{},Var'Unds'mems2:SortDefns{},Var'Unds'globals3:SortDefns{},Var'Unds'elem4:SortDefns{},Var'Unds'data5:SortDefns{},Var'Unds'start6:SortDefns{},Var'Unds'importDefns7:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(X0:SortDefns{},X1:SortModuleDecl{}),
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'1:SortDefn{},VarFS:SortDefns{}),Var'Unds'tables1:SortDefns{},Var'Unds'mems2:SortDefns{},Var'Unds'globals3:SortDefns{},Var'Unds'elem4:SortDefns{},Var'Unds'data5:SortDefns{},Var'Unds'start6:SortDefns{},Var'Unds'importDefns7:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(665,10,665,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d1d3b79994b374e072020676dd7b0290eecb1e8290eb4b3aef2b27950a73f31a")]

// rule `#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{GlobalDefn,Defn}(X) #as _1,DS),aModuleDecl(_types0,_funcs1,_tables2,_mems3,GS,_elem4,_data5,_start6,_importDefns7,_exports8,_metadata9))=>`#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(DS,aModuleDecl(_types0,_funcs1,_tables2,_mems3,`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(_1,GS),_elem4,_data5,_start6,_importDefns7,_exports8,_metadata9)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6b260da2f20ef6ab0838a865e7429b8ed4b23e7deabd373712c4a2ca1ea17009), org.kframework.attributes.Location(Location(666,10,666,95)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortGlobalDefn{}, SortDefn{}}(VarX:SortGlobalDefn{}),Var'Unds'1:SortDefn{}),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortModuleDecl{}, R} (
            X1:SortModuleDecl{},
            LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Var'Unds'funcs1:SortDefns{},Var'Unds'tables2:SortDefns{},Var'Unds'mems3:SortDefns{},VarGS:SortDefns{},Var'Unds'elem4:SortDefns{},Var'Unds'data5:SortDefns{},Var'Unds'start6:SortDefns{},Var'Unds'importDefns7:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(X0:SortDefns{},X1:SortModuleDecl{}),
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblaModuleDecl{}(Var'Unds'types0:SortDefns{},Var'Unds'funcs1:SortDefns{},Var'Unds'tables2:SortDefns{},Var'Unds'mems3:SortDefns{},Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'1:SortDefn{},VarGS:SortDefns{}),Var'Unds'elem4:SortDefns{},Var'Unds'data5:SortDefns{},Var'Unds'start6:SortDefns{},Var'Unds'importDefns7:SortDefns{},Var'Unds'exports8:SortDefns{},Var'Unds'metadata9:SortModuleMetadata{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(666,10,666,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6b260da2f20ef6ab0838a865e7429b8ed4b23e7deabd373712c4a2ca1ea17009")]

// rule `#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),SORTED_MODULE)=>SORTED_MODULE requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27f6a7d58ea15bd1a15bd6da0c729cdc1e65d4232988a4236f0f4cfb787c86a5), org.kframework.attributes.Location(Location(661,10,661,66)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
          ),\and{R} (
          \in{SortModuleDecl{}, R} (
            X1:SortModuleDecl{},
            VarSORTED'Unds'MODULE:SortModuleDecl{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(X0:SortDefns{},X1:SortModuleDecl{}),
        VarSORTED'Unds'MODULE:SortModuleDecl{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(661,10,661,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("27f6a7d58ea15bd1a15bd6da0c729cdc1e65d4232988a4236f0f4cfb787c86a5")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(_localIds0,_globalIds1,_funcIds2,TIDS) #as C,inj{FuncDefn,Defn}(`(func__)_WASM-TEXT-COMMON-SYNTAX_FuncDefn_OptionalId_FuncSpec`(OID,`____WASM-TEXT-COMMON-SYNTAX_FuncSpec_TypeUse_LocalDecls_Instrs`(T,LS,IS))))=>inj{FuncDefn,Defn}(aFuncDefn(`typeUse2typeIdx(_,_)_WASM-TEXT_Int_TypeUse_Map`(T,TIDS),`locals2vectype(_)_WASM-TEXT_VecType_LocalDecls`(LS),`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(`#updateLocalIds(_,_)_WASM-TEXT_Context_Context_Map`(C,`#ids2Idxs(_,_)_WASM-TEXT_Map_TypeUse_LocalDecls`(T,LS)),IS),funcMeta(OID,`#ids2Idxs(_,_)_WASM-TEXT_Map_TypeUse_LocalDecls`(T,LS)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(241d448557559ca4f79b5f6d1e0b3dfbda6979146adc0ad9d5c6382c935eb3ae), org.kframework.attributes.Location(Location(788,10,793,16)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            \and{SortContext{}}(Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'localIds0:SortMap{},Var'Unds'globalIds1:SortMap{},Var'Unds'funcIds2:SortMap{},VarTIDS:SortMap{}),VarC:SortContext{})
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(VarOID:SortOptionalId{},Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(VarT:SortTypeUse{},VarLS:SortLocalDecls{},VarIS:SortInstrs{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortFuncDefn{}, SortDefn{}}(LblaFuncDefn{}(LbltypeUse2typeIdx'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Int'Unds'TypeUse'Unds'Map{}(VarT:SortTypeUse{},VarTIDS:SortMap{}),Lbllocals2vectype'LParUndsRParUnds'WASM-TEXT'Unds'VecType'Unds'LocalDecls{}(VarLS:SortLocalDecls{}),Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(Lbl'Hash'updateLocalIds'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map{}(VarC:SortContext{},Lbl'Hash'ids2Idxs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'TypeUse'Unds'LocalDecls{}(VarT:SortTypeUse{},VarLS:SortLocalDecls{})),VarIS:SortInstrs{}),LblfuncMeta{}(VarOID:SortOptionalId{},Lbl'Hash'ids2Idxs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'TypeUse'Unds'LocalDecls{}(VarT:SortTypeUse{},VarLS:SortLocalDecls{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(788,10,793,16)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("241d448557559ca4f79b5f6d1e0b3dfbda6979146adc0ad9d5c6382c935eb3ae")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(C,inj{DataDefn,Defn}(`(data___)_WASM-TEXT-COMMON-SYNTAX_DataDefn_Index_Offset_DataString`(_0,`(offset_)_WASM-TEXT-COMMON-SYNTAX_Offset_Instrs`(IS),DS)))=>inj{DataDefn,Defn}(aDataDefn(#token("0","Int"),`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS),`#DS2Bytes(_)_WASM-DATA_Bytes_DataString`(DS))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(613db39bb39f230ac84ca66c6410f444f88da8ef4b5e351c4df7108cf21a6733), org.kframework.attributes.Location(Location(859,10,859,100)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortDataDefn{}, SortDefn{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(Var'Unds'0:SortIndex{},Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(VarIS:SortInstrs{}),VarDS:SortDataString{}))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortDataDefn{}, SortDefn{}}(LblaDataDefn{}(\dv{SortInt{}}("0"),Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}),Lbl'Hash'DS2Bytes'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'DataString{}(VarDS:SortDataString{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(859,10,859,100)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("613db39bb39f230ac84ca66c6410f444f88da8ef4b5e351c4df7108cf21a6733")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(C,inj{ElemDefn,Defn}(`(elem___)_WASM-TEXT-COMMON-SYNTAX_ElemDefn_Index_Offset_ElemSegment`(_0,`(offset_)_WASM-TEXT-COMMON-SYNTAX_Offset_Instrs`(IS),ES)))=>inj{ElemDefn,Defn}(aElemDefn(#token("0","Int"),`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS),`#t2aElemSegment<_>(_)_WASM-TEXT_Ints_Context_ElemSegment`(C,ES))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(226a281a2795cf5dc1bf2ade4ba1f0485d7bac8d9c6cae3830e45b71a139f654), org.kframework.attributes.Location(Location(844,10,844,110)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortElemDefn{}, SortDefn{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(Var'Unds'0:SortIndex{},Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(VarIS:SortInstrs{}),VarES:SortElemSegment{}))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortElemDefn{}, SortDefn{}}(LblaElemDefn{}(\dv{SortInt{}}("0"),Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}),Lbl'Hash't2aElemSegment'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Ints'Unds'Context'Unds'ElemSegment{}(VarC:SortContext{},VarES:SortElemSegment{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(844,10,844,110)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("226a281a2795cf5dc1bf2ade4ba1f0485d7bac8d9c6cae3830e45b71a139f654")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(C,inj{GlobalDefn,Defn}(aGlobalDefn(GTYP,IS,OID)))=>inj{GlobalDefn,Defn}(aGlobalDefn(GTYP,`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS),OID)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ae5a5cda68e7ece2aa7762d0a43d05121b5a1207553b440490a3fd887d7d6758), org.kframework.attributes.Location(Location(780,10,780,138)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortGlobalDefn{}, SortDefn{}}(LblaGlobalDefn{}(VarGTYP:SortGlobalType{},VarIS:SortInstrs{},VarOID:SortOptionalId{}))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortGlobalDefn{}, SortDefn{}}(LblaGlobalDefn{}(VarGTYP:SortGlobalType{},Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}),VarOID:SortOptionalId{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(780,10,780,138)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ae5a5cda68e7ece2aa7762d0a43d05121b5a1207553b440490a3fd887d7d6758")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(_0,inj{ExportDefn,Defn}(`(export_(_))_WASM-TEXT-COMMON-SYNTAX_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA-COMMON-SYNTAX_Externval_AllocatedKind_Index`(`func_WASM-DATA-COMMON-SYNTAX_AllocatedKind`(.KList),inj{Int,Index}(I)))))=>inj{ExportDefn,Defn}(aExportDefn(ENAME,I)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b55a07e9ed2ca0da3197d8eb37ccb9f196f42dab70595906cfb57edca86bbf50), org.kframework.attributes.Location(Location(867,10,867,77)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortExportDefn{}, SortDefn{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblfunc'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(),inj{SortInt{}, SortIndex{}}(VarI:SortInt{}))))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortExportDefn{}, SortDefn{}}(LblaExportDefn{}(VarENAME:SortWasmString{},VarI:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(867,10,867,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b55a07e9ed2ca0da3197d8eb37ccb9f196f42dab70595906cfb57edca86bbf50")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(_0,inj{ExportDefn,Defn}(`(export_(_))_WASM-TEXT-COMMON-SYNTAX_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA-COMMON-SYNTAX_Externval_AllocatedKind_Index`(`global_WASM-DATA-COMMON-SYNTAX_AllocatedKind`(.KList),inj{Int,Index}(I)))))=>inj{ExportDefn,Defn}(aExportDefn(ENAME,I)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ebf1906c20a04addb528a8ea88a95a052cab361db46bd63f3745891e34b946ee), org.kframework.attributes.Location(Location(868,10,868,77)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortExportDefn{}, SortDefn{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblglobal'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(),inj{SortInt{}, SortIndex{}}(VarI:SortInt{}))))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortExportDefn{}, SortDefn{}}(LblaExportDefn{}(VarENAME:SortWasmString{},VarI:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(868,10,868,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ebf1906c20a04addb528a8ea88a95a052cab361db46bd63f3745891e34b946ee")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(_0,inj{ExportDefn,Defn}(`(export_(_))_WASM-TEXT-COMMON-SYNTAX_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA-COMMON-SYNTAX_Externval_AllocatedKind_Index`(`memory_WASM-DATA-COMMON-SYNTAX_AllocatedKind`(.KList),_1))))=>inj{ExportDefn,Defn}(aExportDefn(ENAME,#token("0","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bf0affcbcd18ee1446596e2a04754d18fb579506c3f59d34f6c3f7dff8af15ef), org.kframework.attributes.Location(Location(871,10,871,74)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortExportDefn{}, SortDefn{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblmemory'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(),Var'Unds'1:SortIndex{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortExportDefn{}, SortDefn{}}(LblaExportDefn{}(VarENAME:SortWasmString{},\dv{SortInt{}}("0")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(871,10,871,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("bf0affcbcd18ee1446596e2a04754d18fb579506c3f59d34f6c3f7dff8af15ef")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(_0,inj{ExportDefn,Defn}(`(export_(_))_WASM-TEXT-COMMON-SYNTAX_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA-COMMON-SYNTAX_Externval_AllocatedKind_Index`(`table_WASM-DATA-COMMON-SYNTAX_AllocatedKind`(.KList),_1))))=>inj{ExportDefn,Defn}(aExportDefn(ENAME,#token("0","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5a94b003668fdee588107436bc08fbd741d03c75b3a2384b26c58b7806e72ddf), org.kframework.attributes.Location(Location(870,10,870,74)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortExportDefn{}, SortDefn{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lbltable'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(),Var'Unds'1:SortIndex{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortExportDefn{}, SortDefn{}}(LblaExportDefn{}(VarENAME:SortWasmString{},\dv{SortInt{}}("0")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(870,10,870,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5a94b003668fdee588107436bc08fbd741d03c75b3a2384b26c58b7806e72ddf")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(_0,inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(func__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TypeUse`(OID,`(type_)_WASM-COMMON-SYNTAX_TypeUse_Index`(inj{Int,Index}(IDX))))))=>inj{ImportDefn,Defn}(aImportDefn(MOD,NAME,aFuncDesc(OID,IDX))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d74100cebbd2915eb07814dcabdaeedeafffe87d660b98f71f933e74d0e4ea5), org.kframework.attributes.Location(Location(768,10,768,187)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(VarOID:SortOptionalId{},Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarIDX:SortInt{})))))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortImportDefn{}, SortDefn{}}(LblaImportDefn{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},LblaFuncDesc{}(VarOID:SortOptionalId{},VarIDX:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(768,10,768,187)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2d74100cebbd2915eb07814dcabdaeedeafffe87d660b98f71f933e74d0e4ea5")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(_0,inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(func__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TypeUse`(OID,`(type_)__WASM-COMMON-SYNTAX_TypeUse_Index_TypeDecls`(inj{Int,Index}(IDX),_1)))))=>inj{ImportDefn,Defn}(aImportDefn(MOD,NAME,aFuncDesc(OID,IDX))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3ede61a4ba5dd8156d0bbaf0b6d11d78a3a65e2b67665eeca8b9880d96a67af9), org.kframework.attributes.Location(Location(769,10,769,187)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(VarOID:SortOptionalId{},Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(inj{SortInt{}, SortIndex{}}(VarIDX:SortInt{}),Var'Unds'1:SortTypeDecls{}))))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortImportDefn{}, SortDefn{}}(LblaImportDefn{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},LblaFuncDesc{}(VarOID:SortOptionalId{},VarIDX:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(769,10,769,187)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3ede61a4ba5dd8156d0bbaf0b6d11d78a3a65e2b67665eeca8b9880d96a67af9")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(_0,inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(global__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TextFormatGlobalType`(OID,TYP))))=>inj{ImportDefn,Defn}(aImportDefn(MOD,NAME,aGlobalDesc(OID,`asGMut(_)_WASM-TEXT_GlobalType_TextFormatGlobalType`(TYP)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5fc9b7af732557a3a7a947e75ab7d90e16a949532f0fd9f3fc4f876800b62f64), org.kframework.attributes.Location(Location(771,10,771,197)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(VarOID:SortOptionalId{},VarTYP:SortTextFormatGlobalType{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortImportDefn{}, SortDefn{}}(LblaImportDefn{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},LblaGlobalDesc{}(VarOID:SortOptionalId{},LblasGMut'LParUndsRParUnds'WASM-TEXT'Unds'GlobalType'Unds'TextFormatGlobalType{}(VarTYP:SortTextFormatGlobalType{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(771,10,771,197)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5fc9b7af732557a3a7a947e75ab7d90e16a949532f0fd9f3fc4f876800b62f64")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(_0,inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(memory__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_MemType`(OID,inj{TextLimits,MemType}(LIM)))))=>inj{ImportDefn,Defn}(aImportDefn(MOD,NAME,aMemoryDesc(OID,`t2aLimits(_)_WASM-TEXT_Limits_TextLimits`(LIM)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d79831cd33f8e79948c9ca0e1a7ac638b6422c1d4b2e071b8a631c47e7a2c3e8), org.kframework.attributes.Location(Location(774,10,774,200)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(VarOID:SortOptionalId{},inj{SortTextLimits{}, SortMemType{}}(VarLIM:SortTextLimits{}))))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortImportDefn{}, SortDefn{}}(LblaImportDefn{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},LblaMemoryDesc{}(VarOID:SortOptionalId{},Lblt2aLimits'LParUndsRParUnds'WASM-TEXT'Unds'Limits'Unds'TextLimits{}(VarLIM:SortTextLimits{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(774,10,774,200)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d79831cd33f8e79948c9ca0e1a7ac638b6422c1d4b2e071b8a631c47e7a2c3e8")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(_0,inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(table__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TableType`(OID,`___WASM-TEXT-COMMON-SYNTAX_TableType_TextLimits_TableElemType`(LIM,`funcref_WASM-TEXT-COMMON-SYNTAX_TableElemType`(.KList))))))=>inj{ImportDefn,Defn}(aImportDefn(MOD,NAME,aTableDesc(OID,`t2aLimits(_)_WASM-TEXT_Limits_TextLimits`(LIM)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(13855597d1ec675cdba7eb5fc724989c343edb3efaaeedccf89fd094ca4426db), org.kframework.attributes.Location(Location(773,10,773,200)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(VarOID:SortOptionalId{},Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableType'Unds'TextLimits'Unds'TableElemType{}(VarLIM:SortTextLimits{},Lblfuncref'Unds'WASM-TEXT-COMMON-SYNTAX'Unds'TableElemType{}()))))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortImportDefn{}, SortDefn{}}(LblaImportDefn{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},LblaTableDesc{}(VarOID:SortOptionalId{},Lblt2aLimits'LParUndsRParUnds'WASM-TEXT'Unds'Limits'Unds'TextLimits{}(VarLIM:SortTextLimits{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(773,10,773,200)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("13855597d1ec675cdba7eb5fc724989c343edb3efaaeedccf89fd094ca4426db")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(_0,inj{MemoryDefn,Defn}(`(memory__)_WASM-TEXT-COMMON-SYNTAX_MemoryDefn_OptionalId_MemorySpec`(OID,inj{TextLimits,MemorySpec}(LIMITS))))=>inj{MemoryDefn,Defn}(aMemoryDefn(`t2aLimits(_)_WASM-TEXT_Limits_TextLimits`(LIMITS),OID)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ac3ce25a8aff2a00c891513d22b6431cd8c1da1cf5b010c81774ba57c39fae5f), org.kframework.attributes.Location(Location(821,10,821,122)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortMemoryDefn{}, SortDefn{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(VarOID:SortOptionalId{},inj{SortTextLimits{}, SortMemorySpec{}}(VarLIMITS:SortTextLimits{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortMemoryDefn{}, SortDefn{}}(LblaMemoryDefn{}(Lblt2aLimits'LParUndsRParUnds'WASM-TEXT'Unds'Limits'Unds'TextLimits{}(VarLIMITS:SortTextLimits{}),VarOID:SortOptionalId{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(821,10,821,122)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ac3ce25a8aff2a00c891513d22b6431cd8c1da1cf5b010c81774ba57c39fae5f")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(_0,inj{StartDefn,Defn}(`(start_)_WASM-TEXT-COMMON-SYNTAX_StartDefn_Index`(inj{Int,Index}(I))))=>inj{StartDefn,Defn}(aStartDefn(I)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(48f10de9295e7f6776101a5cca21a821be9243062830bc8330f1413ec24de87f), org.kframework.attributes.Location(Location(836,10,836,51)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortStartDefn{}, SortDefn{}}(Lbl'LPar'start'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StartDefn'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarI:SortInt{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortStartDefn{}, SortDefn{}}(LblaStartDefn{}(VarI:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(836,10,836,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("48f10de9295e7f6776101a5cca21a821be9243062830bc8330f1413ec24de87f")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(_0,inj{TableDefn,Defn}(`(table__)_WASM-TEXT-COMMON-SYNTAX_TableDefn_OptionalId_TableSpec`(OID,inj{TableType,TableSpec}(`___WASM-TEXT-COMMON-SYNTAX_TableType_TextLimits_TableElemType`(LIMITS,`funcref_WASM-TEXT-COMMON-SYNTAX_TableElemType`(.KList))))))=>inj{TableDefn,Defn}(aTableDefn(`t2aLimits(_)_WASM-TEXT_Limits_TextLimits`(LIMITS),OID)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(582d08d5c586b4b08e7f9e6563c1a23289410c35c5597543e93b48056cddaa9f), org.kframework.attributes.Location(Location(815,10,815,128)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortTableDefn{}, SortDefn{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(VarOID:SortOptionalId{},inj{SortTableType{}, SortTableSpec{}}(Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableType'Unds'TextLimits'Unds'TableElemType{}(VarLIMITS:SortTextLimits{},Lblfuncref'Unds'WASM-TEXT-COMMON-SYNTAX'Unds'TableElemType{}()))))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortTableDefn{}, SortDefn{}}(LblaTableDefn{}(Lblt2aLimits'LParUndsRParUnds'WASM-TEXT'Unds'Limits'Unds'TextLimits{}(VarLIMITS:SortTextLimits{}),VarOID:SortOptionalId{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(815,10,815,128)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("582d08d5c586b4b08e7f9e6563c1a23289410c35c5597543e93b48056cddaa9f")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(_0,inj{TypeDefn,Defn}(`(type_(func_))_WASM-TEXT-COMMON-SYNTAX_TypeDefn_OptionalId_TypeDecls`(OID,TDECLS)))=>inj{TypeDefn,Defn}(aTypeDefn(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS),OID)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c91ea5bede9296d5276279ca861149100ed7e474f9086e5ffc7ed56e6896a85), org.kframework.attributes.Location(Location(760,10,760,101)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortTypeDefn{}, SortDefn{}}(Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(VarOID:SortOptionalId{},VarTDECLS:SortTypeDecls{}))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortTypeDefn{}, SortDefn{}}(LblaTypeDefn{}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{}),VarOID:SortOptionalId{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(760,10,760,101)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9c91ea5bede9296d5276279ca861149100ed7e474f9086e5ffc7ed56e6896a85")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(_C,D)=>D requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6bf646d735a4636ff835225271ca2092788b3916ccd816e4924af785ef5ecaf4), org.kframework.attributes.Location(Location(877,10,877,35)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortMap{},
          \exists{R} (Var'Unds'3:SortMap{},
          \exists{R} (Var'Unds'1:SortMap{},
          \exists{R} (Var'Unds'6:SortOptionalId{},
          \exists{R} (Var'Unds'7:SortIdentifier{},
          \exists{R} (Var'Unds'5:SortWasmString{},
          \exists{R} (Var'Unds'0:SortMap{},
          \exists{R} (Var'Unds'4:SortWasmString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'0:SortMap{},Var'Unds'1:SortMap{},Var'Unds'2:SortMap{},Var'Unds'3:SortMap{})
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'4:SortWasmString{},Var'Unds'5:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(Var'Unds'6:SortOptionalId{},Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(Var'Unds'7:SortIdentifier{})))))
                ),
                \top{R} ()
              ))
          ))))))))),
          \or{R} (
          \exists{R} (Var'Unds'13:SortIdentifier{},
          \exists{R} (Var'Unds'8:SortMap{},
          \exists{R} (Var'Unds'11:SortMap{},
          \exists{R} (Var'Unds'12:SortWasmString{},
          \exists{R} (Var'Unds'10:SortMap{},
          \exists{R} (Var'Unds'9:SortMap{},
            \and{R} (
              \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(Var'Unds'13:SortIdentifier{}),Var'Unds'9:SortMap{}),
        \dv{SortBool{}}("true")),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'8:SortMap{},Var'Unds'9:SortMap{},Var'Unds'10:SortMap{},Var'Unds'11:SortMap{})
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortExportDefn{}, SortDefn{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(Var'Unds'12:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblglobal'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(),inj{SortIdentifier{}, SortIndex{}}(Var'Unds'13:SortIdentifier{}))))
                ),
                \top{R} ()
              ))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'18:SortInt{},
          \exists{R} (Var'Unds'17:SortOptionalId{},
          \exists{R} (Var'Unds'15:SortWasmString{},
          \exists{R} (Var'Unds'16:SortWasmString{},
          \exists{R} (Var'Unds'14:SortContext{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'14:SortContext{}
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'15:SortWasmString{},Var'Unds'16:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(Var'Unds'17:SortOptionalId{},Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(inj{SortInt{}, SortIndex{}}(Var'Unds'18:SortInt{})))))
                ),
                \top{R} ()
              ))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'22:SortOptionalId{},
          \exists{R} (Var'Unds'23:SortTextLimits{},
          \exists{R} (Var'Unds'21:SortWasmString{},
          \exists{R} (Var'Unds'19:SortContext{},
          \exists{R} (Var'Unds'20:SortWasmString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'19:SortContext{}
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'20:SortWasmString{},Var'Unds'21:SortWasmString{},Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(Var'Unds'22:SortOptionalId{},inj{SortTextLimits{}, SortMemType{}}(Var'Unds'23:SortTextLimits{}))))
                ),
                \top{R} ()
              ))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'24:SortContext{},
          \exists{R} (Var'Unds'26:SortTextLimits{},
          \exists{R} (Var'Unds'25:SortOptionalId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'24:SortContext{}
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortMemoryDefn{}, SortDefn{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(Var'Unds'25:SortOptionalId{},inj{SortTextLimits{}, SortMemorySpec{}}(Var'Unds'26:SortTextLimits{})))
                ),
                \top{R} ()
              ))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'29:SortMap{},
          \exists{R} (Var'Unds'30:SortMap{},
          \exists{R} (Var'Unds'28:SortMap{},
          \exists{R} (Var'Unds'27:SortMap{},
          \exists{R} (Var'Unds'31:SortIdentifier{},
            \and{R} (
              \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(Var'Unds'31:SortIdentifier{}),Var'Unds'29:SortMap{}),
        \dv{SortBool{}}("true")),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'27:SortMap{},Var'Unds'28:SortMap{},Var'Unds'29:SortMap{},Var'Unds'30:SortMap{})
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortStartDefn{}, SortDefn{}}(Lbl'LPar'start'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StartDefn'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(Var'Unds'31:SortIdentifier{})))
                ),
                \top{R} ()
              ))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'35:SortDataString{},
          \exists{R} (Var'Unds'33:SortIndex{},
          \exists{R} (Var'Unds'34:SortInstrs{},
          \exists{R} (Var'Unds'32:SortContext{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'32:SortContext{}
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortDataDefn{}, SortDefn{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(Var'Unds'33:SortIndex{},Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(Var'Unds'34:SortInstrs{}),Var'Unds'35:SortDataString{}))
                ),
                \top{R} ()
              ))
          ))))),
          \or{R} (
          \exists{R} (Var'Unds'37:SortWasmString{},
          \exists{R} (Var'Unds'38:SortIndex{},
          \exists{R} (Var'Unds'36:SortContext{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'36:SortContext{}
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortExportDefn{}, SortDefn{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(Var'Unds'37:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lbltable'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(),Var'Unds'38:SortIndex{})))
                ),
                \top{R} ()
              ))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'40:SortIndex{},
          \exists{R} (Var'Unds'41:SortInstrs{},
          \exists{R} (Var'Unds'39:SortContext{},
          \exists{R} (Var'Unds'42:SortElemSegment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'39:SortContext{}
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortElemDefn{}, SortDefn{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(Var'Unds'40:SortIndex{},Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(Var'Unds'41:SortInstrs{}),Var'Unds'42:SortElemSegment{}))
                ),
                \top{R} ()
              ))
          ))))),
          \or{R} (
          \exists{R} (Var'Unds'44:SortWasmString{},
          \exists{R} (Var'Unds'45:SortInt{},
          \exists{R} (Var'Unds'43:SortContext{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'43:SortContext{}
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortExportDefn{}, SortDefn{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(Var'Unds'44:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblglobal'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(),inj{SortInt{}, SortIndex{}}(Var'Unds'45:SortInt{}))))
                ),
                \top{R} ()
              ))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'51:SortOptionalId{},
          \exists{R} (Var'Unds'52:SortTypeUse{},
          \exists{R} (Var'Unds'46:SortMap{},
          \exists{R} (Var'Unds'50:SortContext{},
          \exists{R} (Var'Unds'54:SortInstrs{},
          \exists{R} (Var'Unds'48:SortMap{},
          \exists{R} (Var'Unds'49:SortMap{},
          \exists{R} (Var'Unds'47:SortMap{},
          \exists{R} (Var'Unds'53:SortLocalDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  \and{SortContext{}}(Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'46:SortMap{},Var'Unds'47:SortMap{},Var'Unds'48:SortMap{},Var'Unds'49:SortMap{}),Var'Unds'50:SortContext{})
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Var'Unds'51:SortOptionalId{},Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(Var'Unds'52:SortTypeUse{},Var'Unds'53:SortLocalDecls{},Var'Unds'54:SortInstrs{})))
                ),
                \top{R} ()
              ))
          )))))))))),
          \or{R} (
          \exists{R} (Var'Unds'57:SortContext{},
          \exists{R} (Var'Unds'61:SortTextFormatGlobalType{},
          \exists{R} (Var'Unds'59:SortWasmString{},
          \exists{R} (Var'Unds'60:SortOptionalId{},
          \exists{R} (Var'Unds'58:SortWasmString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'57:SortContext{}
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'58:SortWasmString{},Var'Unds'59:SortWasmString{},Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(Var'Unds'60:SortOptionalId{},Var'Unds'61:SortTextFormatGlobalType{})))
                ),
                \top{R} ()
              ))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'62:SortContext{},
          \exists{R} (Var'Unds'63:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'62:SortContext{}
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortStartDefn{}, SortDefn{}}(Lbl'LPar'start'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StartDefn'Unds'Index{}(inj{SortInt{}, SortIndex{}}(Var'Unds'63:SortInt{})))
                ),
                \top{R} ()
              ))
          ))),
          \or{R} (
          \exists{R} (Var'Unds'66:SortIndex{},
          \exists{R} (Var'Unds'65:SortWasmString{},
          \exists{R} (Var'Unds'64:SortContext{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'64:SortContext{}
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortExportDefn{}, SortDefn{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(Var'Unds'65:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblmemory'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(),Var'Unds'66:SortIndex{})))
                ),
                \top{R} ()
              ))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'68:SortWasmString{},
          \exists{R} (Var'Unds'72:SortTypeDecls{},
          \exists{R} (Var'Unds'67:SortContext{},
          \exists{R} (Var'Unds'71:SortInt{},
          \exists{R} (Var'Unds'69:SortWasmString{},
          \exists{R} (Var'Unds'70:SortOptionalId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'67:SortContext{}
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'68:SortWasmString{},Var'Unds'69:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(Var'Unds'70:SortOptionalId{},Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(inj{SortInt{}, SortIndex{}}(Var'Unds'71:SortInt{}),Var'Unds'72:SortTypeDecls{}))))
                ),
                \top{R} ()
              ))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'73:SortContext{},
          \exists{R} (Var'Unds'74:SortGlobalType{},
          \exists{R} (Var'Unds'76:SortOptionalId{},
          \exists{R} (Var'Unds'75:SortInstrs{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'73:SortContext{}
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortGlobalDefn{}, SortDefn{}}(LblaGlobalDefn{}(Var'Unds'74:SortGlobalType{},Var'Unds'75:SortInstrs{},Var'Unds'76:SortOptionalId{}))
                ),
                \top{R} ()
              ))
          ))))),
          \or{R} (
          \exists{R} (Var'Unds'79:SortWasmString{},
          \exists{R} (Var'Unds'77:SortContext{},
          \exists{R} (Var'Unds'78:SortWasmString{},
          \exists{R} (Var'Unds'80:SortOptionalId{},
          \exists{R} (Var'Unds'81:SortTextLimits{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'77:SortContext{}
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'78:SortWasmString{},Var'Unds'79:SortWasmString{},Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(Var'Unds'80:SortOptionalId{},Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableType'Unds'TextLimits'Unds'TableElemType{}(Var'Unds'81:SortTextLimits{},Lblfuncref'Unds'WASM-TEXT-COMMON-SYNTAX'Unds'TableElemType{}()))))
                ),
                \top{R} ()
              ))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'84:SortInt{},
          \exists{R} (Var'Unds'83:SortWasmString{},
          \exists{R} (Var'Unds'82:SortContext{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'82:SortContext{}
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortExportDefn{}, SortDefn{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(Var'Unds'83:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblfunc'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(),inj{SortInt{}, SortIndex{}}(Var'Unds'84:SortInt{}))))
                ),
                \top{R} ()
              ))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'90:SortIdentifier{},
          \exists{R} (Var'Unds'85:SortMap{},
          \exists{R} (Var'Unds'88:SortMap{},
          \exists{R} (Var'Unds'89:SortWasmString{},
          \exists{R} (Var'Unds'87:SortMap{},
          \exists{R} (Var'Unds'86:SortMap{},
            \and{R} (
              \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(Var'Unds'90:SortIdentifier{}),Var'Unds'87:SortMap{}),
        \dv{SortBool{}}("true")),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'85:SortMap{},Var'Unds'86:SortMap{},Var'Unds'87:SortMap{},Var'Unds'88:SortMap{})
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortExportDefn{}, SortDefn{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(Var'Unds'89:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblfunc'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(),inj{SortIdentifier{}, SortIndex{}}(Var'Unds'90:SortIdentifier{}))))
                ),
                \top{R} ()
              ))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'95:SortWasmString{},
          \exists{R} (Var'Unds'96:SortWasmString{},
          \exists{R} (Var'Unds'94:SortMap{},
          \exists{R} (Var'Unds'99:SortTypeDecls{},
          \exists{R} (Var'Unds'98:SortIdentifier{},
          \exists{R} (Var'Unds'93:SortMap{},
          \exists{R} (Var'Unds'91:SortMap{},
          \exists{R} (Var'Unds'92:SortMap{},
          \exists{R} (Var'Unds'97:SortOptionalId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'91:SortMap{},Var'Unds'92:SortMap{},Var'Unds'93:SortMap{},Var'Unds'94:SortMap{})
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'95:SortWasmString{},Var'Unds'96:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(Var'Unds'97:SortOptionalId{},Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(inj{SortIdentifier{}, SortIndex{}}(Var'Unds'98:SortIdentifier{}),Var'Unds'99:SortTypeDecls{}))))
                ),
                \top{R} ()
              ))
          )))))))))),
          \or{R} (
          \exists{R} (Var'Unds'101:SortOptionalId{},
          \exists{R} (Var'Unds'102:SortTextLimits{},
          \exists{R} (Var'Unds'100:SortContext{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'100:SortContext{}
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortTableDefn{}, SortDefn{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(Var'Unds'101:SortOptionalId{},inj{SortTableType{}, SortTableSpec{}}(Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableType'Unds'TextLimits'Unds'TableElemType{}(Var'Unds'102:SortTextLimits{},Lblfuncref'Unds'WASM-TEXT-COMMON-SYNTAX'Unds'TableElemType{}()))))
                ),
                \top{R} ()
              ))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'104:SortOptionalId{},
          \exists{R} (Var'Unds'103:SortContext{},
          \exists{R} (Var'Unds'105:SortTypeDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'103:SortContext{}
                ),\and{R} (
                \in{SortDefn{}, R} (
                  X1:SortDefn{},
                  inj{SortTypeDefn{}, SortDefn{}}(Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(Var'Unds'104:SortOptionalId{},Var'Unds'105:SortTypeDecls{}))
                ),
                \top{R} ()
              ))
          )))),
          \bottom{R}()
        ))))))))))))))))))))))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'C:SortContext{}
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            VarD:SortDefn{}
          ),
          \top{R} ()
        ))
    )),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        VarD:SortDefn{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(877,10,877,35)"), owise{}(), UNIQUE'Unds'ID{}("6bf646d735a4636ff835225271ca2092788b3916ccd816e4924af785ef5ecaf4")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(_localIds0,IDS,_funcIds1,_typeIds2),inj{ExportDefn,Defn}(`(export_(_))_WASM-TEXT-COMMON-SYNTAX_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA-COMMON-SYNTAX_Externval_AllocatedKind_Index`(`global_WASM-DATA-COMMON-SYNTAX_AllocatedKind`(.KList),inj{Identifier,Index}(ID)))))=>inj{ExportDefn,Defn}(aExportDefn(ENAME,`project:Int`(`Map:lookup`(IDS,inj{Identifier,KItem}(ID))))) requires `_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),IDS) ensures #token("true","Bool") [UNIQUE_ID(7bd8063bcb5c475568cfc8c51f7d0e4b69d3ad8dcbfbc221929dab6650c7d14f), org.kframework.attributes.Location(Location(866,10,866,145)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarIDS:SortMap{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'localIds0:SortMap{},VarIDS:SortMap{},Var'Unds'funcIds1:SortMap{},Var'Unds'typeIds2:SortMap{})
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortExportDefn{}, SortDefn{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblglobal'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(),inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{}))))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortExportDefn{}, SortDefn{}}(LblaExportDefn{}(VarENAME:SortWasmString{},Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}()))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(866,10,866,145)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("7bd8063bcb5c475568cfc8c51f7d0e4b69d3ad8dcbfbc221929dab6650c7d14f")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(_localIds0,_globalIds1,FIDS,_typeIds2),inj{StartDefn,Defn}(`(start_)_WASM-TEXT-COMMON-SYNTAX_StartDefn_Index`(inj{Identifier,Index}(ID))))=>inj{StartDefn,Defn}(aStartDefn(`project:Int`(`Map:lookup`(FIDS,inj{Identifier,KItem}(ID))))) requires `_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),FIDS) ensures #token("true","Bool") [UNIQUE_ID(c5b7774825613e0f422e06849998d1f0133eefd172077ebc2d0dd932f8e5591a), org.kframework.attributes.Location(Location(834,10,835,32)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarFIDS:SortMap{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'localIds0:SortMap{},Var'Unds'globalIds1:SortMap{},VarFIDS:SortMap{},Var'Unds'typeIds2:SortMap{})
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortStartDefn{}, SortDefn{}}(Lbl'LPar'start'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StartDefn'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortStartDefn{}, SortDefn{}}(LblaStartDefn{}(Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarFIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}()))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(834,10,835,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("c5b7774825613e0f422e06849998d1f0133eefd172077ebc2d0dd932f8e5591a")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(_localIds0,_globalIds1,IDS,_typeIds2),inj{ExportDefn,Defn}(`(export_(_))_WASM-TEXT-COMMON-SYNTAX_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA-COMMON-SYNTAX_Externval_AllocatedKind_Index`(`func_WASM-DATA-COMMON-SYNTAX_AllocatedKind`(.KList),inj{Identifier,Index}(ID)))))=>inj{ExportDefn,Defn}(aExportDefn(ENAME,`project:Int`(`Map:lookup`(IDS,inj{Identifier,KItem}(ID))))) requires `_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),IDS) ensures #token("true","Bool") [UNIQUE_ID(af3c6fc8476e7d110afd562a14736565cdb9d694d1dfd8df9a90a199c8c83d76), org.kframework.attributes.Location(Location(865,10,865,145)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarIDS:SortMap{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'localIds0:SortMap{},Var'Unds'globalIds1:SortMap{},VarIDS:SortMap{},Var'Unds'typeIds2:SortMap{})
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortExportDefn{}, SortDefn{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblfunc'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(),inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{}))))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortExportDefn{}, SortDefn{}}(LblaExportDefn{}(VarENAME:SortWasmString{},Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}()))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(865,10,865,145)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("af3c6fc8476e7d110afd562a14736565cdb9d694d1dfd8df9a90a199c8c83d76")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(_localIds0,_globalIds1,_funcIds2,TIDS),inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(func__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TypeUse`(OID,`(type_)_WASM-COMMON-SYNTAX_TypeUse_Index`(inj{Identifier,Index}(ID))))))=>inj{ImportDefn,Defn}(aImportDefn(MOD,NAME,aFuncDesc(OID,`project:Int`(`Map:lookup`(TIDS,inj{Identifier,KItem}(ID)))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(37eb4c813fca016bf9f00c25fe6d4ede1d08a74b4e509ad05e44c2dd1098c070), org.kframework.attributes.Location(Location(766,10,766,199)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'localIds0:SortMap{},Var'Unds'globalIds1:SortMap{},Var'Unds'funcIds2:SortMap{},VarTIDS:SortMap{})
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(VarOID:SortOptionalId{},Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortImportDefn{}, SortDefn{}}(LblaImportDefn{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},LblaFuncDesc{}(VarOID:SortOptionalId{},Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarTIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}())))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(766,10,766,199)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("37eb4c813fca016bf9f00c25fe6d4ede1d08a74b4e509ad05e44c2dd1098c070")]

// rule `#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(_localIds0,_globalIds1,_funcIds2,TIDS),inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(func__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TypeUse`(OID,`(type_)__WASM-COMMON-SYNTAX_TypeUse_Index_TypeDecls`(inj{Identifier,Index}(ID),_0)))))=>inj{ImportDefn,Defn}(aImportDefn(MOD,NAME,aFuncDesc(OID,`project:Int`(`Map:lookup`(TIDS,inj{Identifier,KItem}(ID)))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b07ea3a89614c84b2eb916297279e7bb96c34e8a9e42278bb7596925098f4a2d), org.kframework.attributes.Location(Location(767,10,767,199)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'localIds0:SortMap{},Var'Unds'globalIds1:SortMap{},Var'Unds'funcIds2:SortMap{},VarTIDS:SortMap{})
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(VarOID:SortOptionalId{},Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{}),Var'Unds'0:SortTypeDecls{}))))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefn{},R} (
        Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(X0:SortContext{},X1:SortDefn{}),
        inj{SortImportDefn{}, SortDefn{}}(LblaImportDefn{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},LblaFuncDesc{}(VarOID:SortOptionalId{},Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarTIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}())))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(767,10,767,199)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b07ea3a89614c84b2eb916297279e7bb96c34e8a9e42278bb7596925098f4a2d")]

// rule `#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(C,`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(D,DS))=>`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(`#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(C,D),`#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(C,DS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ff146d0d36fb26bda1f14133dae17186d08a0a1c6d9188ae16133ef2b357cb92), org.kframework.attributes.Location(Location(1014,10,1014,74)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(VarD:SortDefn{},VarDS:SortDefns{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(X0:SortContext{},X1:SortDefns{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(VarC:SortContext{},VarD:SortDefn{}),Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(VarC:SortContext{},VarDS:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1014,10,1014,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ff146d0d36fb26bda1f14133dae17186d08a0a1c6d9188ae16133ef2b357cb92")]

// rule `#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(_0,inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b75e5a4c108351fe2f7a44e2c0effb2cd2c0fd5e18ad110f1afdfc6f4afbb861), org.kframework.attributes.Location(Location(1015,10,1015,40)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortDefns{}, R} (
            X1:SortDefns{},
            \and{SortDefns{}}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'1:SortDefns{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(X0:SortContext{},X1:SortDefns{}),
        Var'Unds'1:SortDefns{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1015,10,1015,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b75e5a4c108351fe2f7a44e2c0effb2cd2c0fd5e18ad110f1afdfc6f4afbb861")]

// rule `#t2aElemSegment<_>(_)_WASM-TEXT_Ints_Context_ElemSegment`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(_localIds0,_globalIds1,FIDS,_typeIds2) #as C,`___WASM-DATA-COMMON-SYNTAX_ElemSegment_Index_ElemSegment`(inj{Identifier,Index}(ID),ES))=>listInt(`project:Int`(`Map:lookup`(FIDS,inj{Identifier,KItem}(ID))),`#t2aElemSegment<_>(_)_WASM-TEXT_Ints_Context_ElemSegment`(C,ES)) requires `_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),FIDS) ensures #token("true","Bool") [UNIQUE_ID(d975644b27425f63d9c0de3b05c0b093afd515ae64437f7b24fb63e38f74659e), org.kframework.attributes.Location(Location(848,10,849,32)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarFIDS:SortMap{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            \and{SortContext{}}(Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'localIds0:SortMap{},Var'Unds'globalIds1:SortMap{},VarFIDS:SortMap{},Var'Unds'typeIds2:SortMap{}),VarC:SortContext{})
          ),\and{R} (
          \in{SortElemSegment{}, R} (
            X1:SortElemSegment{},
            Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{}),VarES:SortElemSegment{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInts{},R} (
        Lbl'Hash't2aElemSegment'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Ints'Unds'Context'Unds'ElemSegment{}(X0:SortContext{},X1:SortElemSegment{}),
        LbllistInt{}(Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarFIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}())),Lbl'Hash't2aElemSegment'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Ints'Unds'Context'Unds'ElemSegment{}(VarC:SortContext{},VarES:SortElemSegment{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(848,10,849,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("d975644b27425f63d9c0de3b05c0b093afd515ae64437f7b24fb63e38f74659e")]

// rule `#t2aElemSegment<_>(_)_WASM-TEXT_Ints_Context_ElemSegment`(C,`___WASM-DATA-COMMON-SYNTAX_ElemSegment_Index_ElemSegment`(inj{Int,Index}(I),ES))=>listInt(I,`#t2aElemSegment<_>(_)_WASM-TEXT_Ints_Context_ElemSegment`(C,ES)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(de5f17d253b60a7e2d811bbad330e6fcc0918bf6221f3da7d28ff2cc85f4b063), org.kframework.attributes.Location(Location(850,10,850,66)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortElemSegment{}, R} (
            X1:SortElemSegment{},
            Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(inj{SortInt{}, SortIndex{}}(VarI:SortInt{}),VarES:SortElemSegment{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInts{},R} (
        Lbl'Hash't2aElemSegment'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Ints'Unds'Context'Unds'ElemSegment{}(X0:SortContext{},X1:SortElemSegment{}),
        LbllistInt{}(VarI:SortInt{},Lbl'Hash't2aElemSegment'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Ints'Unds'Context'Unds'ElemSegment{}(VarC:SortContext{},VarES:SortElemSegment{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(850,10,850,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("de5f17d253b60a7e2d811bbad330e6fcc0918bf6221f3da7d28ff2cc85f4b063")]

// rule `#t2aElemSegment<_>(_)_WASM-TEXT_Ints_Context_ElemSegment`(_C,`.List{"___WASM-DATA-COMMON-SYNTAX_ElemSegment_Index_ElemSegment"}_ElemSegment`(.KList))=>`.List{"listInt"}_Ints`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d4e69455774bfc5f4a37086c856423eda920e4350c4d953cdff7791dbee8644d), org.kframework.attributes.Location(Location(851,10,851,52)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'C:SortContext{}
          ),\and{R} (
          \in{SortElemSegment{}, R} (
            X1:SortElemSegment{},
            Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}()
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInts{},R} (
        Lbl'Hash't2aElemSegment'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Ints'Unds'Context'Unds'ElemSegment{}(X0:SortContext{},X1:SortElemSegment{}),
        Lbl'Stop'List'LBraQuot'listInt'QuotRBraUnds'Ints{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(851,10,851,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d4e69455774bfc5f4a37086c856423eda920e4350c4d953cdff7791dbee8644d")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,aBlock(VT,IS,BLOCKINFO))=>aBlock(VT,`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS),BLOCKINFO) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(34c36a65e0da531b0838174dc42d5ed5994089e9e8d9cfa3defa08973f509dbb), org.kframework.attributes.Location(Location(995,10,995,108)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            LblaBlock{}(VarVT:SortVecType{},VarIS:SortInstrs{},VarBLOCKINFO:SortBlockMetaData{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaBlock{}(VarVT:SortVecType{},Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}),VarBLOCKINFO:SortBlockMetaData{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(995,10,995,108)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("34c36a65e0da531b0838174dc42d5ed5994089e9e8d9cfa3defa08973f509dbb")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{FoldedInstr,Instr}(`(_)_WASM-TEXT-COMMON-SYNTAX_FoldedInstr_PlainInstr`(PI)))=>`#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{PlainInstr,Instr}(PI)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(df192b85e9ddf7598bf1dd82052b8af2e2f09cdd619a7512fcdf34f2c35bd5c2), org.kframework.attributes.Location(Location(886,10,886,85)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr{}(VarPI:SortPlainInstr{}))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},inj{SortPlainInstr{}, SortInstr{}}(VarPI:SortPlainInstr{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(886,10,886,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("df192b85e9ddf7598bf1dd82052b8af2e2f09cdd619a7512fcdf34f2c35bd5c2")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{FoldedInstr,Instr}(`(__)_WASM-TEXT-COMMON-SYNTAX_FoldedInstr_PlainInstr_Instrs`(PI,IS)))=>inj{FoldedInstr,Instr}(`(__)_WASM-TEXT-COMMON-SYNTAX_FoldedInstr_PlainInstr_Instrs`(`project:PlainInstr`(inj{Instr,KItem}(`#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{PlainInstr,Instr}(PI)))),`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d4a89bc5f783f8b8f440f5684d4f9d010ff1765f5c5a8e794e6ab403cf8b8f54), org.kframework.attributes.Location(Location(885,10,885,118)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(VarPI:SortPlainInstr{},VarIS:SortInstrs{}))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(Lblproject'Coln'PlainInstr{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},inj{SortPlainInstr{}, SortInstr{}}(VarPI:SortPlainInstr{}))),dotk{}())),Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(885,10,885,118)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d4a89bc5f783f8b8f440f5684d4f9d010ff1765f5c5a8e794e6ab403cf8b8f54")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{BlockInstr,Instr}(`block___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(_OID,TDS,IS,_OID')))=>aBlock(`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`result_WASM-COMMON-SYNTAX_TypeKeyWord`(.KList),TDS),`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS),inj{OptionalInt,BlockMetaData}(`.Int_WASM-DATA_OptionalInt`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4ea89fccd7a6f96add94da2eff60e133b7832209d2956e9a053329b8d3c15cfe), org.kframework.attributes.Location(Location(982,10,982,134)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortBlockInstr{}, SortInstr{}}(Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Var'Unds'OID:SortOptionalId{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Var'Unds'OID'Apos':SortOptionalId{}))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaBlock{}(LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblresult'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}(),VarTDS:SortTypeDecls{}),Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}),inj{SortOptionalInt{}, SortBlockMetaData{}}(Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(982,10,982,134)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4ea89fccd7a6f96add94da2eff60e133b7832209d2956e9a053329b8d3c15cfe")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{BlockInstr,Instr}(`if___else__end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(_OID,TDS,IS,_OID',IS',_OID'')))=>aIf(`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`result_WASM-COMMON-SYNTAX_TypeKeyWord`(.KList),TDS),`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS),`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS'),inj{OptionalInt,BlockMetaData}(`.Int_WASM-DATA_OptionalInt`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a7e134f74ba12082ce64dccf5b4d5291571eb116e02a6b0d82651f023fefccc6), org.kframework.attributes.Location(Location(984,10,984,168)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(Var'Unds'OID:SortOptionalId{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Var'Unds'OID'Apos':SortOptionalId{},VarIS'Apos':SortInstrs{},Var'Unds'OID'AposApos':SortOptionalId{}))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaIf{}(LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblresult'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}(),VarTDS:SortTypeDecls{}),Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}),Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS'Apos':SortInstrs{}),inj{SortOptionalInt{}, SortBlockMetaData{}}(Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(984,10,984,168)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a7e134f74ba12082ce64dccf5b4d5291571eb116e02a6b0d82651f023fefccc6")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,inj{BlockInstr,Instr}(`loop___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(_OID,TDS,IS,_OID')))=>aLoop(`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`result_WASM-COMMON-SYNTAX_TypeKeyWord`(.KList),TDS),`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS),inj{OptionalInt,BlockMetaData}(`.Int_WASM-DATA_OptionalInt`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8e67fcebffdeb4bd2e3634bc0375f7d0f9ce989b004d1f598eeca0df0fe16429), org.kframework.attributes.Location(Location(983,10,983,123)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortBlockInstr{}, SortInstr{}}(Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Var'Unds'OID:SortOptionalId{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Var'Unds'OID'Apos':SortOptionalId{}))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaLoop{}(LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblresult'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}(),VarTDS:SortTypeDecls{}),Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}),inj{SortOptionalInt{}, SortBlockMetaData{}}(Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(983,10,983,123)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8e67fcebffdeb4bd2e3634bc0375f7d0f9ce989b004d1f598eeca0df0fe16429")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,`init_local___WASM_Instr_Int_Val`(I,V) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(223265d6293ee64d575ed0b086cd178b6aa767d2ab2c9eac71eefced9eccd435), org.kframework.attributes.Location(Location(997,10,997,56)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(VarI:SortInt{},VarV:SortVal{}),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(997,10,997,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("223265d6293ee64d575ed0b086cd178b6aa767d2ab2c9eac71eefced9eccd435")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,`init_locals__WASM_Instr_ValStack`(VS) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(abac7768bd7c876ec44874d522d8168ea5709b3384fb3271e20bab9d6ea15249), org.kframework.attributes.Location(Location(998,10,998,56)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(VarVS:SortValStack{}),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(998,10,998,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("abac7768bd7c876ec44874d522d8168ea5709b3384fb3271e20bab9d6ea15249")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aCvtOp(ATYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a8bdbbb71173be9dfaeed1eff257fb803fefe34be16bd815c46a22485cac240e), org.kframework.attributes.Location(Location(973,10,973,58)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaCvtOp{}(VarATYPE:SortValType{},VarOP:SortCvtOp{})),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(973,10,973,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a8bdbbb71173be9dfaeed1eff257fb803fefe34be16bd815c46a22485cac240e")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aDrop(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4599f26255c12bf00918b3d0939a07135a9e9a5cb1ed412b0075b5e77fa3d505), org.kframework.attributes.Location(Location(909,10,909,38)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaDrop{}()),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(909,10,909,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4599f26255c12bf00918b3d0939a07135a9e9a5cb1ed412b0075b5e77fa3d505")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aFBinOp(FTYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5a1b2a04545d6aa609139897d5787996a32ae3aa548433387104a51c1b70ef50), org.kframework.attributes.Location(Location(969,10,969,58)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaFBinOp{}(VarFTYPE:SortFValType{},VarOP:SortFBinOp{})),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(969,10,969,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5a1b2a04545d6aa609139897d5787996a32ae3aa548433387104a51c1b70ef50")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aFConst(FTYPE,N)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(23a63d01ff793d4b764efde13eab682cfd2f246d75a86af15fb9a43cdd2f8ca8), org.kframework.attributes.Location(Location(965,10,965,63)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaFConst{}(VarFTYPE:SortFValType{},VarN:SortNumber{})),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(965,10,965,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("23a63d01ff793d4b764efde13eab682cfd2f246d75a86af15fb9a43cdd2f8ca8")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aFRelOp(FTYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c38001789a113a9dd812b254e7ff7ba7ca4f26139a18a40af26cd56b35adb990), org.kframework.attributes.Location(Location(972,10,972,58)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaFRelOp{}(VarFTYPE:SortFValType{},VarOP:SortFRelOp{})),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(972,10,972,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c38001789a113a9dd812b254e7ff7ba7ca4f26139a18a40af26cd56b35adb990")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aFUnOp(FTYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ce522ab0614a730f6fc7320624c5b14f48a343b812168ab98572762a5dc1012d), org.kframework.attributes.Location(Location(967,10,967,58)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaFUnOp{}(VarFTYPE:SortFValType{},VarOP:SortFUnOp{})),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(967,10,967,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ce522ab0614a730f6fc7320624c5b14f48a343b812168ab98572762a5dc1012d")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aGrow(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7b3a596238869e88095319fcafe498dca0f4f0ad4ad8af27e2620777722e45cb), org.kframework.attributes.Location(Location(952,10,952,65)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaGrow{}()),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(952,10,952,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7b3a596238869e88095319fcafe498dca0f4f0ad4ad8af27e2620777722e45cb")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aIBinOp(ITYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ed623d15bd93cd35fa591f8e97fb765616800b62cfd0d2b53b6a40d549d25601), org.kframework.attributes.Location(Location(968,10,968,58)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaIBinOp{}(VarITYPE:SortIValType{},VarOP:SortIBinOp{})),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(968,10,968,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ed623d15bd93cd35fa591f8e97fb765616800b62cfd0d2b53b6a40d549d25601")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aIConst(ITYPE,I)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(475e289e2b3cc7c38f2c6416fb9a373aa1ac689f3724588ea4d9d4a5ca7dda9c), org.kframework.attributes.Location(Location(964,10,964,63)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaIConst{}(VarITYPE:SortIValType{},VarI:SortWasmInt{})),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(964,10,964,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("475e289e2b3cc7c38f2c6416fb9a373aa1ac689f3724588ea4d9d4a5ca7dda9c")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aIRelOp(ITYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f50e5e124e743475a14223e7acb60f96aa3fa8ec4e6ec9387ee53338d38fc5f5), org.kframework.attributes.Location(Location(971,10,971,58)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaIRelOp{}(VarITYPE:SortIValType{},VarOP:SortIRelOp{})),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(971,10,971,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f50e5e124e743475a14223e7acb60f96aa3fa8ec4e6ec9387ee53338d38fc5f5")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aIUnOp(ITYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(db960acc25126b3e9e3a8b9a2ac5e31b4d24bc4fcf8d92e8e1164e99d86d4e0b), org.kframework.attributes.Location(Location(966,10,966,58)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaIUnOp{}(VarITYPE:SortIValType{},VarOP:SortIUnOp{})),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(966,10,966,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("db960acc25126b3e9e3a8b9a2ac5e31b4d24bc4fcf8d92e8e1164e99d86d4e0b")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aNop(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c980a6a9b8cc766832d2c5a7f0e3e02dda342287253892f45d5958bb06ed0ce1), org.kframework.attributes.Location(Location(893,10,893,42)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaNop{}()),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(893,10,893,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c980a6a9b8cc766832d2c5a7f0e3e02dda342287253892f45d5958bb06ed0ce1")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aReturn(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b03c84d31443f50afad8f8d3c06cbd686ca2b8e3af1e22b6c6b278b95c9d579), org.kframework.attributes.Location(Location(897,10,897,45)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaReturn{}()),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(897,10,897,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2b03c84d31443f50afad8f8d3c06cbd686ca2b8e3af1e22b6c6b278b95c9d579")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aSelect(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2c06d69850d75e4dd186551da24d6aa8275579ac418bdfb95aa87ec61292cd2a), org.kframework.attributes.Location(Location(910,10,910,40)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaSelect{}()),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(910,10,910,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2c06d69850d75e4dd186551da24d6aa8275579ac418bdfb95aa87ec61292cd2a")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aSize(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(95120f32a00241d95d917c0e49838088db94873709d05b724ac591bfc9071753), org.kframework.attributes.Location(Location(951,10,951,65)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaSize{}()),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(951,10,951,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("95120f32a00241d95d917c0e49838088db94873709d05b724ac591bfc9071753")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aTestOp(ITYPE,OP)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31333491b3de6c3c0177377fa56fe7604bd0340436dddcc04822b9eec57cdcba), org.kframework.attributes.Location(Location(970,10,970,58)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaTestOp{}(VarITYPE:SortIValType{},VarOP:SortTestOp{})),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(970,10,970,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("31333491b3de6c3c0177377fa56fe7604bd0340436dddcc04822b9eec57cdcba")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(aUnreachable(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(923543351a455d87709fff0ce0327b72b77cfbfabd64b5bc3284381f41e3de42), org.kframework.attributes.Location(Location(892,10,892,50)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(LblaUnreachable{}()),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(892,10,892,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("923543351a455d87709fff0ce0327b72b77cfbfabd64b5bc3284381f41e3de42")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`call_indirect__WASM-COMMON-SYNTAX_PlainInstr_TypeUse`(TU)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6aa6bbb3c2d8eca9d0f918f03e02facbb91f665420f9e7e18723549f0ece09a0), org.kframework.attributes.Location(Location(903,10,903,60)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(inj{SortPlainInstr{}, SortInstr{}}(Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(VarTU:SortTypeUse{})),Var'Unds'1:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'1:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(903,10,903,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6aa6bbb3c2d8eca9d0f918f03e02facbb91f665420f9e7e18723549f0ece09a0")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM-TEXT-COMMON-SYNTAX_PlainInstr_FValType_LoadOpM`(FTYPE,`___WASM-TEXT-COMMON-SYNTAX_LoadOpM_LoadOp_MemArg`(OP,MemArg))))=>aLoad(inj{FValType,ValType}(FTYPE),OP,`#getOffset(_)_WASM-TEXT_Int_MemArg`(MemArg)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f29bf8f5f794d1fa14b7abb4936aef5ce51345d144a628a8496d5f3c68dd5516), org.kframework.attributes.Location(Location(950,10,950,96)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(VarFTYPE:SortFValType{},Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(VarOP:SortLoadOp{},VarMemArg:SortMemArg{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaLoad{}(inj{SortFValType{}, SortValType{}}(VarFTYPE:SortFValType{}),VarOP:SortLoadOp{},Lbl'Hash'getOffset'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'MemArg{}(VarMemArg:SortMemArg{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(950,10,950,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f29bf8f5f794d1fa14b7abb4936aef5ce51345d144a628a8496d5f3c68dd5516")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM-TEXT-COMMON-SYNTAX_PlainInstr_FValType_LoadOpM`(FTYPE,inj{LoadOp,LoadOpM}(OP))))=>aLoad(inj{FValType,ValType}(FTYPE),OP,#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aea22f5a0dbfaff071bdf22cf8716864af9ba552fd8bb50f6711fa6b8572a51d), org.kframework.attributes.Location(Location(949,10,949,79)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(VarFTYPE:SortFValType{},inj{SortLoadOp{}, SortLoadOpM{}}(VarOP:SortLoadOp{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaLoad{}(inj{SortFValType{}, SortValType{}}(VarFTYPE:SortFValType{}),VarOP:SortLoadOp{},\dv{SortInt{}}("0"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(949,10,949,79)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("aea22f5a0dbfaff071bdf22cf8716864af9ba552fd8bb50f6711fa6b8572a51d")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM-TEXT-COMMON-SYNTAX_PlainInstr_FValType_StoreOpM`(FTYPE,`___WASM-TEXT-COMMON-SYNTAX_StoreOpM_StoreOp_MemArg`(OP,MemArg))))=>aStore(inj{FValType,ValType}(FTYPE),OP,`#getOffset(_)_WASM-TEXT_Int_MemArg`(MemArg)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e328e6d0e850dceb423735fb32a88e9a941120a91b8c526715687097ded0fbc6), org.kframework.attributes.Location(Location(946,10,946,97)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(VarFTYPE:SortFValType{},Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(VarOP:SortStoreOp{},VarMemArg:SortMemArg{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaStore{}(inj{SortFValType{}, SortValType{}}(VarFTYPE:SortFValType{}),VarOP:SortStoreOp{},Lbl'Hash'getOffset'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'MemArg{}(VarMemArg:SortMemArg{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(946,10,946,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e328e6d0e850dceb423735fb32a88e9a941120a91b8c526715687097ded0fbc6")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM-TEXT-COMMON-SYNTAX_PlainInstr_FValType_StoreOpM`(FTYPE,inj{StoreOp,StoreOpM}(OP))))=>aStore(inj{FValType,ValType}(FTYPE),OP,#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dcd9b43fdcb9ba05878a13fb8b379d2918f64fac9f568f58ee821d0b110739fa), org.kframework.attributes.Location(Location(945,10,945,80)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(VarFTYPE:SortFValType{},inj{SortStoreOp{}, SortStoreOpM{}}(VarOP:SortStoreOp{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaStore{}(inj{SortFValType{}, SortValType{}}(VarFTYPE:SortFValType{}),VarOP:SortStoreOp{},\dv{SortInt{}}("0"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(945,10,945,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("dcd9b43fdcb9ba05878a13fb8b379d2918f64fac9f568f58ee821d0b110739fa")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM-TEXT-COMMON-SYNTAX_PlainInstr_IValType_LoadOpM`(ITYPE,`___WASM-TEXT-COMMON-SYNTAX_LoadOpM_LoadOp_MemArg`(OP,MemArg))))=>aLoad(inj{IValType,ValType}(ITYPE),OP,`#getOffset(_)_WASM-TEXT_Int_MemArg`(MemArg)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6836b757fcd535e7d723f21f490f40410e3507644bae0543f001576abc924d17), org.kframework.attributes.Location(Location(948,10,948,96)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(VarITYPE:SortIValType{},Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(VarOP:SortLoadOp{},VarMemArg:SortMemArg{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaLoad{}(inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{}),VarOP:SortLoadOp{},Lbl'Hash'getOffset'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'MemArg{}(VarMemArg:SortMemArg{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(948,10,948,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6836b757fcd535e7d723f21f490f40410e3507644bae0543f001576abc924d17")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM-TEXT-COMMON-SYNTAX_PlainInstr_IValType_LoadOpM`(ITYPE,inj{LoadOp,LoadOpM}(OP))))=>aLoad(inj{IValType,ValType}(ITYPE),OP,#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(98a4a93b32a88c4e8b45a5ef59398ca561231fc7d7cadb8727bbcd91487b4266), org.kframework.attributes.Location(Location(947,10,947,79)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(VarITYPE:SortIValType{},inj{SortLoadOp{}, SortLoadOpM{}}(VarOP:SortLoadOp{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaLoad{}(inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{}),VarOP:SortLoadOp{},\dv{SortInt{}}("0"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(947,10,947,79)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("98a4a93b32a88c4e8b45a5ef59398ca561231fc7d7cadb8727bbcd91487b4266")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM-TEXT-COMMON-SYNTAX_PlainInstr_IValType_StoreOpM`(ITYPE,`___WASM-TEXT-COMMON-SYNTAX_StoreOpM_StoreOp_MemArg`(OP,MemArg))))=>aStore(inj{IValType,ValType}(ITYPE),OP,`#getOffset(_)_WASM-TEXT_Int_MemArg`(MemArg)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ce0c4540714732ae2bb623effade15ce72bfa68de8d82ff802df526d8b6a22fd), org.kframework.attributes.Location(Location(944,10,944,97)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(VarITYPE:SortIValType{},Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(VarOP:SortStoreOp{},VarMemArg:SortMemArg{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaStore{}(inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{}),VarOP:SortStoreOp{},Lbl'Hash'getOffset'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'MemArg{}(VarMemArg:SortMemArg{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(944,10,944,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ce0c4540714732ae2bb623effade15ce72bfa68de8d82ff802df526d8b6a22fd")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`_.__WASM-TEXT-COMMON-SYNTAX_PlainInstr_IValType_StoreOpM`(ITYPE,inj{StoreOp,StoreOpM}(OP))))=>aStore(inj{IValType,ValType}(ITYPE),OP,#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4c1298bc886b84338bfde3e1c450bc7c7ef96ac9aec9ca88bcd44dd9b8cc34c4), org.kframework.attributes.Location(Location(943,10,943,80)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lbl'UndsStopUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(VarITYPE:SortIValType{},inj{SortStoreOp{}, SortStoreOpM{}}(VarOP:SortStoreOp{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaStore{}(inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{}),VarOP:SortStoreOp{},\dv{SortInt{}}("0"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(943,10,943,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4c1298bc886b84338bfde3e1c450bc7c7ef96ac9aec9ca88bcd44dd9b8cc34c4")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`br__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(L))))=>aBr(L) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(12b90b98784f52e54d82ec797369cae38c6918732074444d828441f4723e3c35), org.kframework.attributes.Location(Location(894,10,894,45)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarL:SortInt{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaBr{}(VarL:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(894,10,894,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("12b90b98784f52e54d82ec797369cae38c6918732074444d828441f4723e3c35")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`br_if__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(L))))=>`aBr_if`(L) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b0e23a375588714a163baebd71b5120ba33c9c93950972ae57297c95f52232df), org.kframework.attributes.Location(Location(895,10,895,48)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarL:SortInt{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaBr'Unds'if{}(VarL:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(895,10,895,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b0e23a375588714a163baebd71b5120ba33c9c93950972ae57297c95f52232df")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`br_table__WASM-TEXT-COMMON-SYNTAX_PlainInstr_ElemSegment`(ES)))=>`aBr_table`(`elemSegment2Ints(_)_WASM-DATA_Ints_ElemSegment`(ES)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dbaf8dce6c307d88ca3acbd5b0110d3aadd1db00f334aa39526e5f5a6c9399d5), org.kframework.attributes.Location(Location(896,10,896,70)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(VarES:SortElemSegment{}))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaBr'Unds'table{}(LblelemSegment2Ints'LParUndsRParUnds'WASM-DATA'Unds'Ints'Unds'ElemSegment{}(VarES:SortElemSegment{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(896,10,896,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("dbaf8dce6c307d88ca3acbd5b0110d3aadd1db00f334aa39526e5f5a6c9399d5")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`call__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(I))))=>aCall(I) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(998b963df3a892e221607d41907e4b11c8036fb2566494f76cf5fe4708a1bd74), org.kframework.attributes.Location(Location(901,10,901,75)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarI:SortInt{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaCall{}(VarI:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(901,10,901,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("998b963df3a892e221607d41907e4b11c8036fb2566494f76cf5fe4708a1bd74")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`global.get__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(I))))=>`aGlobal.get`(I) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e51267fdbbf94ce7d92de056a92bb3935874d0e27b192e2a72a56e70f369fc3e), org.kframework.attributes.Location(Location(932,10,932,58)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarI:SortInt{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaGlobal'Stop'get{}(VarI:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(932,10,932,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e51267fdbbf94ce7d92de056a92bb3935874d0e27b192e2a72a56e70f369fc3e")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`global.set__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(I))))=>`aGlobal.set`(I) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(311226bc319eb7c5c69ffde1a3033a3a2810a3ff46469cec7e18acb4c1c01f60), org.kframework.attributes.Location(Location(933,10,933,58)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarI:SortInt{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaGlobal'Stop'set{}(VarI:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(933,10,933,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("311226bc319eb7c5c69ffde1a3033a3a2810a3ff46469cec7e18acb4c1c01f60")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`local.get__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(I))))=>`aLocal.get`(I) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(841996bb582dcc400e651e44468fb3df7e503c572aa045531ba89fabe6c3e5b6), org.kframework.attributes.Location(Location(923,10,923,56)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarI:SortInt{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaLocal'Stop'get{}(VarI:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(923,10,923,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("841996bb582dcc400e651e44468fb3df7e503c572aa045531ba89fabe6c3e5b6")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`local.set__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(I))))=>`aLocal.set`(I) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f0ed69469cea956e4cde348350a47545d70c7320eec3bd1144393122d58bf4e9), org.kframework.attributes.Location(Location(924,10,924,56)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarI:SortInt{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaLocal'Stop'set{}(VarI:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(924,10,924,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f0ed69469cea956e4cde348350a47545d70c7320eec3bd1144393122d58bf4e9")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_0,inj{PlainInstr,Instr}(`local.tee__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(I))))=>`aLocal.tee`(I) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(016518ada376574b1b001ab778df0f0a1ffc5d67692b5103439aac0d95dcbbc1), org.kframework.attributes.Location(Location(925,10,925,56)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarI:SortInt{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaLocal'Stop'tee{}(VarI:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(925,10,925,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("016518ada376574b1b001ab778df0f0a1ffc5d67692b5103439aac0d95dcbbc1")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(_C,`trap_WASM_Instr`(.KList) #as _0)=>_0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(58687e1f429c349bb4edd92f2e840e21e3749796af064aee3ecc070436ea1bdb), org.kframework.attributes.Location(Location(993,10,993,37)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'C:SortContext{}
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            \and{SortInstr{}}(Lbltrap'Unds'WASM'Unds'Instr{}(),Var'Unds'0:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        Var'Unds'0:SortInstr{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(993,10,993,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("58687e1f429c349bb4edd92f2e840e21e3749796af064aee3ecc070436ea1bdb")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(LIDS,_globalIds0,_funcIds1,_typeIds2),inj{PlainInstr,Instr}(`local.get__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Identifier,Index}(ID))))=>`aLocal.get`(`project:Int`(`Map:lookup`(LIDS,inj{Identifier,KItem}(ID)))) requires `_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),LIDS) ensures #token("true","Bool") [UNIQUE_ID(a36c8f133b160aec14ed8ba278c94609ecb2e3223916ed4c8e0ae8c88f3907c9), org.kframework.attributes.Location(Location(916,10,917,32)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarLIDS:SortMap{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(VarLIDS:SortMap{},Var'Unds'globalIds0:SortMap{},Var'Unds'funcIds1:SortMap{},Var'Unds'typeIds2:SortMap{})
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaLocal'Stop'get{}(Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarLIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(916,10,917,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("a36c8f133b160aec14ed8ba278c94609ecb2e3223916ed4c8e0ae8c88f3907c9")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(LIDS,_globalIds0,_funcIds1,_typeIds2),inj{PlainInstr,Instr}(`local.set__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Identifier,Index}(ID))))=>`aLocal.set`(`project:Int`(`Map:lookup`(LIDS,inj{Identifier,KItem}(ID)))) requires `_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),LIDS) ensures #token("true","Bool") [UNIQUE_ID(f9a4aa590a13593cc2b17d88282ec52e54f01f250563cf255b2fc07bd8ffe4a1), org.kframework.attributes.Location(Location(918,10,919,32)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarLIDS:SortMap{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(VarLIDS:SortMap{},Var'Unds'globalIds0:SortMap{},Var'Unds'funcIds1:SortMap{},Var'Unds'typeIds2:SortMap{})
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaLocal'Stop'set{}(Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarLIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(918,10,919,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("f9a4aa590a13593cc2b17d88282ec52e54f01f250563cf255b2fc07bd8ffe4a1")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(LIDS,_globalIds0,_funcIds1,_typeIds2),inj{PlainInstr,Instr}(`local.tee__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Identifier,Index}(ID))))=>`aLocal.tee`(`project:Int`(`Map:lookup`(LIDS,inj{Identifier,KItem}(ID)))) requires `_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),LIDS) ensures #token("true","Bool") [UNIQUE_ID(29183a886e3e576cd896408976aef65ad8332c240ef86f2ba2eaf82851afce87), org.kframework.attributes.Location(Location(920,10,921,32)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarLIDS:SortMap{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(VarLIDS:SortMap{},Var'Unds'globalIds0:SortMap{},Var'Unds'funcIds1:SortMap{},Var'Unds'typeIds2:SortMap{})
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'tee'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaLocal'Stop'tee{}(Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarLIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(920,10,921,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("29183a886e3e576cd896408976aef65ad8332c240ef86f2ba2eaf82851afce87")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(_localIds0,GIDS,_funcIds1,_typeIds2),inj{PlainInstr,Instr}(`global.get__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Identifier,Index}(ID))))=>`aGlobal.get`(`project:Int`(`Map:lookup`(GIDS,inj{Identifier,KItem}(ID)))) requires `_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),GIDS) ensures #token("true","Bool") [UNIQUE_ID(0755a5687ec393d78058a4f87f0a87126ed391771cda97aa19f178a7d4b4d6c2), org.kframework.attributes.Location(Location(927,10,928,32)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarGIDS:SortMap{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'localIds0:SortMap{},VarGIDS:SortMap{},Var'Unds'funcIds1:SortMap{},Var'Unds'typeIds2:SortMap{})
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lblglobal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaGlobal'Stop'get{}(Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarGIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(927,10,928,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("0755a5687ec393d78058a4f87f0a87126ed391771cda97aa19f178a7d4b4d6c2")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(_localIds0,GIDS,_funcIds1,_typeIds2),inj{PlainInstr,Instr}(`global.set__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Identifier,Index}(ID))))=>`aGlobal.set`(`project:Int`(`Map:lookup`(GIDS,inj{Identifier,KItem}(ID)))) requires `_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),GIDS) ensures #token("true","Bool") [UNIQUE_ID(05352eb55afec50c21e1688f5c5d0f3164932e73ff1bd668c48c11381c685a30), org.kframework.attributes.Location(Location(929,10,930,32)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarGIDS:SortMap{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'localIds0:SortMap{},VarGIDS:SortMap{},Var'Unds'funcIds1:SortMap{},Var'Unds'typeIds2:SortMap{})
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lblglobal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaGlobal'Stop'set{}(Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarGIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(929,10,930,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("05352eb55afec50c21e1688f5c5d0f3164932e73ff1bd668c48c11381c685a30")]

// rule `#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(_localIds0,_globalIds1,FIDS,_typeIds2),inj{PlainInstr,Instr}(`call__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Identifier,Index}(ID))))=>aCall(`project:Int`(`Map:lookup`(FIDS,inj{Identifier,KItem}(ID)))) requires `_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),FIDS) ensures #token("true","Bool") [UNIQUE_ID(d453f470d8757b69f58bfa7c9e52fa074fbdd86a157ccd059b1f475be7c3cce3), org.kframework.attributes.Location(Location(899,10,900,32)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarFIDS:SortMap{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'localIds0:SortMap{},Var'Unds'globalIds1:SortMap{},VarFIDS:SortMap{},Var'Unds'typeIds2:SortMap{})
          ),\and{R} (
          \in{SortInstr{}, R} (
            X1:SortInstr{},
            inj{SortPlainInstr{}, SortInstr{}}(Lblcall'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstr{},R} (
        Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(X0:SortContext{},X1:SortInstr{}),
        LblaCall{}(Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarFIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(899,10,900,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("d453f470d8757b69f58bfa7c9e52fa074fbdd86a157ccd059b1f475be7c3cce3")]

// rule `#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(I,IS))=>`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(`#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,I),`#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(C,IS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b60940ed95718e465026aee369fb5e80ac988393826b67165b40839053210311), org.kframework.attributes.Location(Location(1017,10,1017,79)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortInstrs{}, R} (
            X1:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(VarI:SortInstr{},VarIS:SortInstrs{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(X0:SortContext{},X1:SortInstrs{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},VarI:SortInstr{}),Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(VarC:SortContext{},VarIS:SortInstrs{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1017,10,1017,79)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b60940ed95718e465026aee369fb5e80ac988393826b67165b40839053210311")]

// rule `#t2aInstrs<_>(_)_WASM-TEXT_Instrs_Context_Instrs`(_0,inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(789fc52a6099999151afdd0e7ef490308e7305088635d51fae24c9b3ac92dbeb), org.kframework.attributes.Location(Location(1018,10,1018,43)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortInstrs{}, R} (
            X1:SortInstrs{},
            \and{SortInstrs{}}(inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'1:SortInstrs{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash't2aInstrs'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Context'Unds'Instrs{}(X0:SortContext{},X1:SortInstrs{}),
        Var'Unds'1:SortInstrs{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1018,10,1018,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("789fc52a6099999151afdd0e7ef490308e7305088635d51fae24c9b3ac92dbeb")]

// rule `#t2aModule<_>(_)_WASM-TEXT_ModuleDecl_Context_ModuleDecl`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(_localIds2,_globalIds3,FIDS,_typeIds4) #as C,aModuleDecl(TS,FS,TABS,MS,GS,EL,DAT,S,IS,ES,moduleMeta(OID,_funcIds0,_filename1)))=>aModuleDecl(`#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(C,TS),`#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(C,FS),`#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(C,TABS),`#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(C,MS),`#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(C,GS),`#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(C,EL),`#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(C,DAT),`#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(C,S),`#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(C,IS),`#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(C,ES),moduleMeta(OID,FIDS,`.String`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5dbb179677b44ae97c9271e13d3338fff3a6f6bf151a2b751a91c00047a31cbd), org.kframework.attributes.Location(Location(742,10,754,18)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            \and{SortContext{}}(Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'localIds2:SortMap{},Var'Unds'globalIds3:SortMap{},VarFIDS:SortMap{},Var'Unds'typeIds4:SortMap{}),VarC:SortContext{})
          ),\and{R} (
          \in{SortModuleDecl{}, R} (
            X1:SortModuleDecl{},
            LblaModuleDecl{}(VarTS:SortDefns{},VarFS:SortDefns{},VarTABS:SortDefns{},VarMS:SortDefns{},VarGS:SortDefns{},VarEL:SortDefns{},VarDAT:SortDefns{},VarS:SortDefns{},VarIS:SortDefns{},VarES:SortDefns{},LblmoduleMeta{}(VarOID:SortOptionalId{},Var'Unds'funcIds0:SortMap{},Var'Unds'filename1:SortOptionalString{}))
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash't2aModule'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Context'Unds'ModuleDecl{}(X0:SortContext{},X1:SortModuleDecl{}),
        LblaModuleDecl{}(Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(VarC:SortContext{},VarTS:SortDefns{}),Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(VarC:SortContext{},VarFS:SortDefns{}),Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(VarC:SortContext{},VarTABS:SortDefns{}),Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(VarC:SortContext{},VarMS:SortDefns{}),Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(VarC:SortContext{},VarGS:SortDefns{}),Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(VarC:SortContext{},VarEL:SortDefns{}),Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(VarC:SortContext{},VarDAT:SortDefns{}),Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(VarC:SortContext{},VarS:SortDefns{}),Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(VarC:SortContext{},VarIS:SortDefns{}),Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(VarC:SortContext{},VarES:SortDefns{}),LblmoduleMeta{}(VarOID:SortOptionalId{},VarFIDS:SortMap{},Lbl'Stop'String{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(742,10,754,18)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5dbb179677b44ae97c9271e13d3338fff3a6f6bf151a2b751a91c00047a31cbd")]

// rule `#t2aModuleDecl<_>(_)_WASM-TEXT_ModuleDecl_Context_ModuleDecl`(_0,aModuleDecl(TS,FS,_tables0,_mems1,GS,_elem2,_data3,_start4,IS,_exports5,_metadata6) #as M)=>`#t2aModule<_>(_)_WASM-TEXT_ModuleDecl_Context_ModuleDecl`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(`.Map`(.KList),`#idcGlobals(_,_)_WASM-TEXT_Map_Defns_Defns`(IS,GS),`#idcFuncs(_,_)_WASM-TEXT_Map_Defns_Defns`(IS,FS),`#idcTypes(_)_WASM-TEXT_Map_Defns`(TS)),M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(38d2d269aa324a61f9aac12df9aa51231643b7672413cdf402e9628dc789ab7b), org.kframework.attributes.Location(Location(741,10,741,224)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortModuleDecl{}, R} (
            X1:SortModuleDecl{},
            \and{SortModuleDecl{}}(LblaModuleDecl{}(VarTS:SortDefns{},VarFS:SortDefns{},Var'Unds'tables0:SortDefns{},Var'Unds'mems1:SortDefns{},VarGS:SortDefns{},Var'Unds'elem2:SortDefns{},Var'Unds'data3:SortDefns{},Var'Unds'start4:SortDefns{},VarIS:SortDefns{},Var'Unds'exports5:SortDefns{},Var'Unds'metadata6:SortModuleMetadata{}),VarM:SortModuleDecl{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash't2aModuleDecl'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Context'Unds'ModuleDecl{}(X0:SortContext{},X1:SortModuleDecl{}),
        Lbl'Hash't2aModule'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Context'Unds'ModuleDecl{}(Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Lbl'Stop'Map{}(),Lbl'Hash'idcGlobals'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns{}(VarIS:SortDefns{},VarGS:SortDefns{}),Lbl'Hash'idcFuncs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns'Unds'Defns{}(VarIS:SortDefns{},VarFS:SortDefns{}),Lbl'Hash'idcTypes'LParUndsRParUnds'WASM-TEXT'Unds'Map'Unds'Defns{}(VarTS:SortDefns{})),VarM:SortModuleDecl{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(741,10,741,224)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("38d2d269aa324a61f9aac12df9aa51231643b7672413cdf402e9628dc789ab7b")]

// rule `#t2aStmt<_>(_)_WASM-TEXT_Stmt_Context_Stmt`(C,inj{Defn,Stmt}(D))=>inj{Defn,Stmt}(`#t2aDefn<_>(_)_WASM-TEXT_Defn_Context_Defn`(C,D)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(66cd5de72c835b9887b4a33794c3646304d6ae82f656721a41d8d635fbdf86bc), org.kframework.attributes.Location(Location(737,10,737,48)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortStmt{}, R} (
            X1:SortStmt{},
            inj{SortDefn{}, SortStmt{}}(VarD:SortDefn{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortStmt{},R} (
        Lbl'Hash't2aStmt'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmt'Unds'Context'Unds'Stmt{}(X0:SortContext{},X1:SortStmt{}),
        inj{SortDefn{}, SortStmt{}}(Lbl'Hash't2aDefn'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defn'Unds'Context'Unds'Defn{}(VarC:SortContext{},VarD:SortDefn{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(737,10,737,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("66cd5de72c835b9887b4a33794c3646304d6ae82f656721a41d8d635fbdf86bc")]

// rule `#t2aStmt<_>(_)_WASM-TEXT_Stmt_Context_Stmt`(C,inj{Instr,Stmt}(I))=>inj{Instr,Stmt}(`#t2aInstr<_>(_)_WASM-TEXT_Instr_Context_Instr`(C,I)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(29935f3dd1a876f1792d6e7da7a524dd4b2100e7248822bd0d5e21224806d09b), org.kframework.attributes.Location(Location(738,10,738,49)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortStmt{}, R} (
            X1:SortStmt{},
            inj{SortInstr{}, SortStmt{}}(VarI:SortInstr{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortStmt{},R} (
        Lbl'Hash't2aStmt'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmt'Unds'Context'Unds'Stmt{}(X0:SortContext{},X1:SortStmt{}),
        inj{SortInstr{}, SortStmt{}}(Lbl'Hash't2aInstr'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Instr'Unds'Context'Unds'Instr{}(VarC:SortContext{},VarI:SortInstr{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(738,10,738,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("29935f3dd1a876f1792d6e7da7a524dd4b2100e7248822bd0d5e21224806d09b")]

// rule `#t2aStmt<_>(_)_WASM-TEXT_Stmt_Context_Stmt`(C,inj{ModuleDecl,Stmt}(M))=>inj{ModuleDecl,Stmt}(`#t2aModuleDecl<_>(_)_WASM-TEXT_ModuleDecl_Context_ModuleDecl`(C,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ac231d8358a937bc56e8bfb283b119d7887085d71ecf8cf1e0dbbc08d7bf888a), org.kframework.attributes.Location(Location(736,10,736,59)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortStmt{}, R} (
            X1:SortStmt{},
            inj{SortModuleDecl{}, SortStmt{}}(VarM:SortModuleDecl{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortStmt{},R} (
        Lbl'Hash't2aStmt'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmt'Unds'Context'Unds'Stmt{}(X0:SortContext{},X1:SortStmt{}),
        inj{SortModuleDecl{}, SortStmt{}}(Lbl'Hash't2aModuleDecl'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Context'Unds'ModuleDecl{}(VarC:SortContext{},VarM:SortModuleDecl{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(736,10,736,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ac231d8358a937bc56e8bfb283b119d7887085d71ecf8cf1e0dbbc08d7bf888a")]

// rule `#t2aStmt<_>(_)_WASM-TEXT_Stmt_Context_Stmt`(_0,S)=>S requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5729bc5823934a38e38d1535be9e3b6b7293336ef1959159f6543d1d71ce4675), org.kframework.attributes.Location(Location(739,10,739,29)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortModuleDecl{},
          \exists{R} (Var'Unds'1:SortContext{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'1:SortContext{}
                ),\and{R} (
                \in{SortStmt{}, R} (
                  X1:SortStmt{},
                  inj{SortModuleDecl{}, SortStmt{}}(Var'Unds'2:SortModuleDecl{})
                ),
                \top{R} ()
              ))
          ))),
          \or{R} (
          \exists{R} (Var'Unds'3:SortContext{},
          \exists{R} (Var'Unds'4:SortInstr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'3:SortContext{}
                ),\and{R} (
                \in{SortStmt{}, R} (
                  X1:SortStmt{},
                  inj{SortInstr{}, SortStmt{}}(Var'Unds'4:SortInstr{})
                ),
                \top{R} ()
              ))
          ))),
          \or{R} (
          \exists{R} (Var'Unds'8:SortDefn{},
          \exists{R} (Var'Unds'7:SortContext{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortContext{}, R} (
                  X0:SortContext{},
                  Var'Unds'7:SortContext{}
                ),\and{R} (
                \in{SortStmt{}, R} (
                  X1:SortStmt{},
                  inj{SortDefn{}, SortStmt{}}(Var'Unds'8:SortDefn{})
                ),
                \top{R} ()
              ))
          ))),
          \bottom{R}()
        )))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortStmt{}, R} (
            X1:SortStmt{},
            VarS:SortStmt{}
          ),
          \top{R} ()
        ))
    )),
    \and{R} (
      \equals{SortStmt{},R} (
        Lbl'Hash't2aStmt'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmt'Unds'Context'Unds'Stmt{}(X0:SortContext{},X1:SortStmt{}),
        VarS:SortStmt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(739,10,739,29)"), owise{}(), UNIQUE'Unds'ID{}("5729bc5823934a38e38d1535be9e3b6b7293336ef1959159f6543d1d71ce4675")]

// rule `#t2aStmts<_>(_)_WASM-TEXT_Stmts_Context_Stmts`(C,`___WASM-COMMON-SYNTAX_Stmts_Stmt_Stmts`(S,SS))=>`___WASM-COMMON-SYNTAX_Stmts_Stmt_Stmts`(`#t2aStmt<_>(_)_WASM-TEXT_Stmt_Context_Stmt`(C,S),`#t2aStmts<_>(_)_WASM-TEXT_Stmts_Context_Stmts`(C,SS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3719424d2be9442b674e0897d7ee9220209ebe6a9eb513431766e495959df24a), org.kframework.attributes.Location(Location(1011,10,1011,74)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortStmts{}, R} (
            X1:SortStmts{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(VarS:SortStmt{},VarSS:SortStmts{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortStmts{},R} (
        Lbl'Hash't2aStmts'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Context'Unds'Stmts{}(X0:SortContext{},X1:SortStmts{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(Lbl'Hash't2aStmt'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmt'Unds'Context'Unds'Stmt{}(VarC:SortContext{},VarS:SortStmt{}),Lbl'Hash't2aStmts'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Context'Unds'Stmts{}(VarC:SortContext{},VarSS:SortStmts{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1011,10,1011,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3719424d2be9442b674e0897d7ee9220209ebe6a9eb513431766e495959df24a")]

// rule `#t2aStmts<_>(_)_WASM-TEXT_Stmts_Context_Stmts`(_0,inj{EmptyStmts,Stmts}(`.List{"listStmt"}_EmptyStmts`(.KList)) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7488dea10c518e026728e11a90a962525ca9b8e4212f427df938619f98ff7ed6), org.kframework.attributes.Location(Location(1012,10,1012,40)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Var'Unds'0:SortContext{}
          ),\and{R} (
          \in{SortStmts{}, R} (
            X1:SortStmts{},
            \and{SortStmts{}}(inj{SortEmptyStmts{}, SortStmts{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'1:SortStmts{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortStmts{},R} (
        Lbl'Hash't2aStmts'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Context'Unds'Stmts{}(X0:SortContext{},X1:SortStmts{}),
        Var'Unds'1:SortStmts{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1012,10,1012,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7488dea10c518e026728e11a90a962525ca9b8e4212f427df938619f98ff7ed6")]

// rule `#take(_,_)_WASM-DATA_ValStack_Int_ValStack`(N,`.ValStack_WASM-DATA_ValStack`(.KList) #as _0)=>_0 requires `_>Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(03a244afc4c585b5a39c61d9e95b68cfde2f5fcbc16bc87096ad00765fc71de9), org.kframework.attributes.Location(Location(435,10,435,82)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortValStack{}, R} (
            X1:SortValStack{},
            \and{SortValStack{}}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}(),Var'Unds'0:SortValStack{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(X0:SortInt{},X1:SortValStack{}),
        Var'Unds'0:SortValStack{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(435,10,435,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("03a244afc4c585b5a39c61d9e95b68cfde2f5fcbc16bc87096ad00765fc71de9")]

// rule `#take(_,_)_WASM-DATA_ValStack_Int_ValStack`(N,_0)=>`.ValStack_WASM-DATA_ValStack`(.KList) requires `notBool_`(`_>Int_`(N,#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(69cb0567fa6205a883ce92e97b80389dae8c440cdd3dd2104a5511c633af010f), org.kframework.attributes.Location(Location(434,10,434,82)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortValStack{}, R} (
            X1:SortValStack{},
            Var'Unds'0:SortValStack{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(X0:SortInt{},X1:SortValStack{}),
        Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(434,10,434,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("69cb0567fa6205a883ce92e97b80389dae8c440cdd3dd2104a5511c633af010f")]

// rule `#take(_,_)_WASM-DATA_ValStack_Int_ValStack`(N,`_:__WASM-DATA_ValStack_Val_ValStack`(V,VS))=>`_:__WASM-DATA_ValStack_Val_ValStack`(V,`#take(_,_)_WASM-DATA_ValStack_Int_ValStack`(`_-Int_`(N,#token("1","Int")),VS)) requires `_>Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(666af410cfd0f4dc00d66ebacb065bc4c5a597ab9d12f49dc90faca895632d5a), org.kframework.attributes.Location(Location(436,10,436,82)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortValStack{}, R} (
            X1:SortValStack{},
            Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarV:SortVal{},VarVS:SortValStack{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(X0:SortInt{},X1:SortValStack{}),
        Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarV:SortVal{},Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),VarVS:SortValStack{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(436,10,436,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("666af410cfd0f4dc00d66ebacb065bc4c5a597ab9d12f49dc90faca895632d5a")]

// rule `#types2indices(_,_)_WASM-TEXT_TypesInfo_Defns_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(_D,DS),M)=>`#types2indices(_,_)_WASM-TEXT_TypesInfo_Defns_TypesInfo`(DS,M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(35a9b30ffeb9a92c3a96e99b0845c9a720f954a42687201734e2ad06851645c1), org.kframework.attributes.Location(Location(454,10,454,59)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'3:SortOptionalId{},
          \exists{R} (Var'Unds'6:SortMap{},
          \exists{R} (Var'Unds'7:SortInt{},
          \exists{R} (Var'Unds'5:SortDefns{},
          \exists{R} (Var'Unds'4:SortTypeDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTypeDefn{}, SortDefn{}}(Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(Var'Unds'3:SortOptionalId{},Var'Unds'4:SortTypeDecls{})),Var'Unds'5:SortDefns{})
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X1:SortTypesInfo{},
                  Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(Var'Unds'6:SortMap{},Var'Unds'7:SortInt{})
                ),
                \top{R} ()
              ))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'8:SortTypesInfo{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X1:SortTypesInfo{},
                  Var'Unds'8:SortTypesInfo{}
                ),
                \top{R} ()
              ))
          )),
          \bottom{R}()
        ))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'D:SortDefn{},VarDS:SortDefns{})
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X1:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        ))
    )),
    \and{R} (
      \equals{SortTypesInfo{},R} (
        Lbl'Hash'types2indices'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Defns'Unds'TypesInfo{}(X0:SortDefns{},X1:SortTypesInfo{}),
        Lbl'Hash'types2indices'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Defns'Unds'TypesInfo{}(VarDS:SortDefns{},VarM:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(454,10,454,59)"), owise{}(), UNIQUE'Unds'ID{}("35a9b30ffeb9a92c3a96e99b0845c9a720f954a42687201734e2ad06851645c1")]

// rule `#types2indices(_,_)_WASM-TEXT_TypesInfo_Defns_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{TypeDefn,Defn}(`(type_(func_))_WASM-TEXT-COMMON-SYNTAX_TypeDefn_OptionalId_TypeDecls`(_OID,TDECLS)),DS),`#ti(_,_)_WASM-TEXT_TypesInfo_Map_Int`(M,N))=>`#types2indices(_,_)_WASM-TEXT_TypesInfo_Defns_TypesInfo`(DS,`#ti(_,_)_WASM-TEXT_TypesInfo_Map_Int`(`Map:update`(M,inj{FuncType,KItem}(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS)),`_[_]orDefault__MAP_KItem_Map_KItem_KItem`(M,inj{FuncType,KItem}(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS)),inj{Int,KItem}(N))),`_+Int_`(N,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d8b91ed97a79061ec0509d796cc58ea59c911dd1b391d644f80861868d4589b3), org.kframework.attributes.Location(Location(451,10,452,127)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTypeDefn{}, SortDefn{}}(Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(Var'Unds'OID:SortOptionalId{},VarTDECLS:SortTypeDecls{})),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X1:SortTypesInfo{},
            Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(VarM:SortMap{},VarN:SortInt{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortTypesInfo{},R} (
        Lbl'Hash'types2indices'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Defns'Unds'TypesInfo{}(X0:SortDefns{},X1:SortTypesInfo{}),
        Lbl'Hash'types2indices'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Defns'Unds'TypesInfo{}(VarDS:SortDefns{},Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(LblMap'Coln'update{}(VarM:SortMap{},inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{})),Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(VarM:SortMap{},inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{})),inj{SortInt{}, SortKItem{}}(VarN:SortInt{}))),Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(451,10,452,127)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d8b91ed97a79061ec0509d796cc58ea59c911dd1b391d644f80861868d4589b3")]

// rule `#types2indices(_,_)_WASM-TEXT_TypesInfo_Defns_TypesInfo`(inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)),TI)=>TI requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a8c47de126ca8c3f68b67d0a3d59de8c294fe78f76650a9dc19d8acf1983a0a8), org.kframework.attributes.Location(Location(449,10,449,42)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X1:SortTypesInfo{},
            VarTI:SortTypesInfo{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortTypesInfo{},R} (
        Lbl'Hash'types2indices'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Defns'Unds'TypesInfo{}(X0:SortDefns{},X1:SortTypesInfo{}),
        VarTI:SortTypesInfo{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(449,10,449,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a8c47de126ca8c3f68b67d0a3d59de8c294fe78f76650a9dc19d8acf1983a0a8")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)) #as _2,_0,_1)=>_2 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e530c5c5d442e517caf13162cda189a1405d006e7ec0e083cd732c5201d5d77c), org.kframework.attributes.Location(Location(400,10,400,46)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            \and{SortDefns{}}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'2:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'0:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            Var'Unds'1:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Var'Unds'2:SortDefns{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(400,10,400,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e530c5c5d442e517caf13162cda189a1405d006e7ec0e083cd732c5201d5d77c")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(D,DS),I,TI)=>`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(D,`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(DS,I,TI)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf74025862214dc7dbeb8be0f8e0bd7cad098078643896ea6e57c87d21ed9699), org.kframework.attributes.Location(Location(401,10,401,69)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortDefns{},
          \exists{R} (Var'Unds'3:SortInt{},
          \exists{R} (Var'Unds'1:SortElemSegment{},
          \exists{R} (Var'Unds'0:SortOffset{},
          \exists{R} (Var'Unds'4:SortTypesInfo{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortElemDefn{}, SortDefn{}}(Lbl'LPar'elem'Unds'func'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(Var'Unds'0:SortOffset{},Var'Unds'1:SortElemSegment{})),Var'Unds'2:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'3:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'4:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'8:SortInstrs{},
          \exists{R} (Var'Unds'13:SortTypesInfo{},
          \exists{R} (Var'Unds'6:SortTypeDecls{},
          \exists{R} (Var'Unds'11:SortMap{},
          \exists{R} (Var'Unds'7:SortLocalDecls{},
          \exists{R} (Var'Unds'12:SortInt{},
          \exists{R} (Var'Unds'5:SortOptionalId{},
          \exists{R} (Var'Unds'10:SortInt{},
          \exists{R} (Var'Unds'9:SortDefns{},
            \and{R} (
              \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(Var'Unds'6:SortTypeDecls{})),Var'Unds'11:SortMap{}),
        \dv{SortBool{}}("true")),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Var'Unds'5:SortOptionalId{},Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(inj{SortTypeDecls{}, SortTypeUse{}}(Var'Unds'6:SortTypeDecls{}),Var'Unds'7:SortLocalDecls{},Var'Unds'8:SortInstrs{}))),Var'Unds'9:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'10:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  \and{SortTypesInfo{}}(Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(Var'Unds'11:SortMap{},Var'Unds'12:SortInt{}),Var'Unds'13:SortTypesInfo{})
                ),
                \top{R} ()
              )))
          )))))))))),
          \or{R} (
          \exists{R} (Var'Unds'18:SortDefns{},
          \exists{R} (Var'Unds'17:SortElemSegment{},
          \exists{R} (Var'Unds'15:SortOptionalId{},
          \exists{R} (Var'Unds'16:SortTableElemType{},
          \exists{R} (Var'Unds'14:SortIdentifier{},
          \exists{R} (Var'Unds'19:SortInt{},
          \exists{R} (Var'Unds'20:SortTypesInfo{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTableDefn{}, SortDefn{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'14:SortIdentifier{}),Var'Unds'15:SortOptionalId{}),Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(\and{SortTableElemType{}}(Lblfuncref'Unds'WASM-TEXT-COMMON-SYNTAX'Unds'TableElemType{}(),Var'Unds'16:SortTableElemType{}),Var'Unds'17:SortElemSegment{}))),Var'Unds'18:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'19:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'20:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'29:SortDefns{},
          \exists{R} (Var'Unds'30:SortInt{},
          \exists{R} (Var'Unds'28:SortTableType{},
          \exists{R} (Var'Unds'26:SortWasmString{},
          \exists{R} (Var'Unds'27:SortWasmString{},
          \exists{R} (Var'Unds'25:SortOptionalId{},
          \exists{R} (Var'Unds'31:SortTypesInfo{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTableDefn{}, SortDefn{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(Var'Unds'25:SortOptionalId{},Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(Var'Unds'26:SortWasmString{},Var'Unds'27:SortWasmString{}),Var'Unds'28:SortTableType{}))),Var'Unds'29:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'30:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'31:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'35:SortInstrs{},
          \exists{R} (Var'Unds'33:SortTypeUse{},
          \exists{R} (Var'Unds'34:SortLocalDecls{},
          \exists{R} (Var'Unds'32:SortOptionalId{},
          \exists{R} (Var'Unds'37:SortInt{},
          \exists{R} (Var'Unds'38:SortTypesInfo{},
          \exists{R} (Var'Unds'36:SortDefns{},
            \and{R} (
              \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblisTypeDecls{}(kseq{}(inj{SortTypeUse{}, SortKItem{}}(Var'Unds'33:SortTypeUse{}),dotk{}()))),
        \dv{SortBool{}}("true")),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Var'Unds'32:SortOptionalId{},Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(Var'Unds'33:SortTypeUse{},Var'Unds'34:SortLocalDecls{},Var'Unds'35:SortInstrs{}))),Var'Unds'36:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'37:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'38:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'40:SortWasmString{},
          \exists{R} (Var'Unds'41:SortOptionalId{},
          \exists{R} (Var'Unds'46:SortInt{},
          \exists{R} (Var'Unds'44:SortInt{},
          \exists{R} (Var'Unds'45:SortMap{},
          \exists{R} (Var'Unds'39:SortWasmString{},
          \exists{R} (Var'Unds'43:SortDefns{},
          \exists{R} (Var'Unds'47:SortTypesInfo{},
          \exists{R} (Var'Unds'42:SortTypeDecls{},
            \and{R} (
              \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(Var'Unds'42:SortTypeDecls{})),Var'Unds'45:SortMap{}),
        \dv{SortBool{}}("true")),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'39:SortWasmString{},Var'Unds'40:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(Var'Unds'41:SortOptionalId{},inj{SortTypeDecls{}, SortTypeUse{}}(Var'Unds'42:SortTypeDecls{})))),Var'Unds'43:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'44:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  \and{SortTypesInfo{}}(Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(Var'Unds'45:SortMap{},Var'Unds'46:SortInt{}),Var'Unds'47:SortTypesInfo{})
                ),
                \top{R} ()
              )))
          )))))))))),
          \or{R} (
          \exists{R} (Var'Unds'51:SortGlobalSpec{},
          \exists{R} (Var'Unds'52:SortDefns{},
          \exists{R} (Var'Unds'50:SortWasmString{},
          \exists{R} (Var'Unds'54:SortTypesInfo{},
          \exists{R} (Var'Unds'48:SortIdentifier{},
          \exists{R} (Var'Unds'49:SortOptionalId{},
          \exists{R} (Var'Unds'53:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortGlobalDefn{}, SortDefn{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'48:SortIdentifier{}),Var'Unds'49:SortOptionalId{}),Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineExport'Unds'WasmString{}(Var'Unds'50:SortWasmString{}),Var'Unds'51:SortGlobalSpec{}))),Var'Unds'52:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'53:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'54:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'57:SortDefns{},
          \exists{R} (Var'Unds'55:SortElemSegment{},
          \exists{R} (Var'Unds'56:SortTableSpec{},
          \exists{R} (Var'Unds'59:SortTypesInfo{},
          \exists{R} (Var'Unds'58:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTableDefn{}, SortDefn{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(Lbl'Stop'Identifier{}(),\and{SortTableSpec{}}(Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(Lblfuncref'Unds'WASM-TEXT-COMMON-SYNTAX'Unds'TableElemType{}(),Var'Unds'55:SortElemSegment{}),Var'Unds'56:SortTableSpec{}))),Var'Unds'57:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'58:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'59:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'62:SortWasmString{},
          \exists{R} (Var'Unds'63:SortTableSpec{},
          \exists{R} (Var'Unds'61:SortOptionalId{},
          \exists{R} (Var'Unds'66:SortTypesInfo{},
          \exists{R} (Var'Unds'65:SortInt{},
          \exists{R} (Var'Unds'60:SortIdentifier{},
          \exists{R} (Var'Unds'64:SortDefns{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTableDefn{}, SortDefn{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'60:SortIdentifier{}),Var'Unds'61:SortOptionalId{}),Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineExport'Unds'WasmString{}(Var'Unds'62:SortWasmString{}),Var'Unds'63:SortTableSpec{}))),Var'Unds'64:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'65:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'66:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'68:SortInstrs{},
          \exists{R} (Var'Unds'72:SortTypesInfo{},
          \exists{R} (Var'Unds'67:SortIndex{},
          \exists{R} (Var'Unds'71:SortInt{},
          \exists{R} (Var'Unds'69:SortDataString{},
          \exists{R} (Var'Unds'70:SortDefns{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortDataDefn{}, SortDefn{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(Var'Unds'67:SortIndex{},inj{SortInstrs{}, SortOffset{}}(Var'Unds'68:SortInstrs{}),Var'Unds'69:SortDataString{})),Var'Unds'70:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'71:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'72:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'73:SortInlineExport{},
          \exists{R} (Var'Unds'74:SortMemorySpec{},
          \exists{R} (Var'Unds'77:SortInt{},
          \exists{R} (Var'Unds'78:SortTypesInfo{},
          \exists{R} (Var'Unds'76:SortDefns{},
          \exists{R} (Var'Unds'75:SortMemorySpec{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortMemoryDefn{}, SortDefn{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(Lbl'Stop'Identifier{}(),\and{SortMemorySpec{}}(Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(Var'Unds'73:SortInlineExport{},Var'Unds'74:SortMemorySpec{}),Var'Unds'75:SortMemorySpec{}))),Var'Unds'76:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'77:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'78:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'84:SortTypesInfo{},
          \exists{R} (Var'Unds'79:SortIndex{},
          \exists{R} (Var'Unds'83:SortInt{},
          \exists{R} (Var'Unds'82:SortDefns{},
          \exists{R} (Var'Unds'80:SortInstrs{},
          \exists{R} (Var'Unds'81:SortDataString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortDataDefn{}, SortDefn{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(Var'Unds'79:SortIndex{},Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(Var'Unds'80:SortInstrs{}),Var'Unds'81:SortDataString{})),Var'Unds'82:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'83:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'84:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'90:SortTypesInfo{},
          \exists{R} (Var'Unds'85:SortIdentifier{},
          \exists{R} (Var'Unds'88:SortDefns{},
          \exists{R} (Var'Unds'89:SortInt{},
          \exists{R} (Var'Unds'87:SortDataString{},
          \exists{R} (Var'Unds'86:SortOptionalId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortMemoryDefn{}, SortDefn{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'85:SortIdentifier{}),Var'Unds'86:SortOptionalId{}),Lbl'LPar'data'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'DataString{}(Var'Unds'87:SortDataString{}))),Var'Unds'88:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'89:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'90:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'95:SortTypesInfo{},
          \exists{R} (Var'Unds'94:SortInt{},
          \exists{R} (Var'Unds'93:SortDefns{},
          \exists{R} (Var'Unds'91:SortOffset{},
          \exists{R} (Var'Unds'92:SortDataString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortDataDefn{}, SortDefn{}}(Lbl'LPar'data'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Offset'Unds'DataString{}(Var'Unds'91:SortOffset{},Var'Unds'92:SortDataString{})),Var'Unds'93:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'94:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'95:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'96:SortInlineExport{},
          \exists{R} (Var'Unds'99:SortDefns{},
          \exists{R} (Var'Unds'98:SortGlobalSpec{},
          \exists{R} (Var'Unds'101:SortTypesInfo{},
          \exists{R} (Var'Unds'100:SortInt{},
          \exists{R} (Var'Unds'97:SortGlobalSpec{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortGlobalDefn{}, SortDefn{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(Lbl'Stop'Identifier{}(),\and{SortGlobalSpec{}}(Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(Var'Unds'96:SortInlineExport{},Var'Unds'97:SortGlobalSpec{}),Var'Unds'98:SortGlobalSpec{}))),Var'Unds'99:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'100:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'101:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'104:SortWasmString{},
          \exists{R} (Var'Unds'108:SortTypesInfo{},
          \exists{R} (Var'Unds'103:SortWasmString{},
          \exists{R} (Var'Unds'107:SortInt{},
          \exists{R} (Var'Unds'102:SortOptionalId{},
          \exists{R} (Var'Unds'105:SortTextFormatGlobalType{},
          \exists{R} (Var'Unds'106:SortDefns{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortGlobalDefn{}, SortDefn{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(Var'Unds'102:SortOptionalId{},Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(Var'Unds'103:SortWasmString{},Var'Unds'104:SortWasmString{}),Var'Unds'105:SortTextFormatGlobalType{}))),Var'Unds'106:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'107:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'108:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'109:SortOptionalId{},
          \exists{R} (Var'Unds'110:SortTextFormatGlobalType{},
          \exists{R} (Var'Unds'114:SortTypesInfo{},
          \exists{R} (Var'Unds'112:SortDefns{},
          \exists{R} (Var'Unds'113:SortInt{},
          \exists{R} (Var'Unds'111:SortInstr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortGlobalDefn{}, SortDefn{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(Var'Unds'109:SortOptionalId{},Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(Var'Unds'110:SortTextFormatGlobalType{},Var'Unds'111:SortInstr{}))),Var'Unds'112:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'113:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'114:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'115:SortWasmString{},
          \exists{R} (Var'Unds'121:SortMap{},
          \exists{R} (Var'Unds'119:SortDefns{},
          \exists{R} (Var'Unds'120:SortInt{},
          \exists{R} (Var'Unds'118:SortTypeDecls{},
          \exists{R} (Var'Unds'116:SortWasmString{},
          \exists{R} (Var'Unds'122:SortInt{},
          \exists{R} (Var'Unds'117:SortOptionalId{},
            \and{R} (
              \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(Var'Unds'118:SortTypeDecls{})),Var'Unds'121:SortMap{})),
        \dv{SortBool{}}("true")),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Var'Unds'115:SortWasmString{},Var'Unds'116:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(Var'Unds'117:SortOptionalId{},inj{SortTypeDecls{}, SortTypeUse{}}(Var'Unds'118:SortTypeDecls{})))),Var'Unds'119:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'120:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(Var'Unds'121:SortMap{},Var'Unds'122:SortInt{})
                ),
                \top{R} ()
              )))
          ))))))))),
          \or{R} (
          \exists{R} (Var'Unds'126:SortTypeUse{},
          \exists{R} (Var'Unds'125:SortWasmString{},
          \exists{R} (Var'Unds'123:SortOptionalId{},
          \exists{R} (Var'Unds'129:SortTypesInfo{},
          \exists{R} (Var'Unds'124:SortWasmString{},
          \exists{R} (Var'Unds'127:SortDefns{},
          \exists{R} (Var'Unds'128:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Var'Unds'123:SortOptionalId{},Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(Var'Unds'124:SortWasmString{},Var'Unds'125:SortWasmString{}),Var'Unds'126:SortTypeUse{}))),Var'Unds'127:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'128:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'129:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'132:SortFuncSpec{},
          \exists{R} (Var'Unds'130:SortInlineExport{},
          \exists{R} (Var'Unds'131:SortFuncSpec{},
          \exists{R} (Var'Unds'134:SortInt{},
          \exists{R} (Var'Unds'135:SortTypesInfo{},
          \exists{R} (Var'Unds'133:SortDefns{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Lbl'Stop'Identifier{}(),\and{SortFuncSpec{}}(Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(Var'Unds'130:SortInlineExport{},Var'Unds'131:SortFuncSpec{}),Var'Unds'132:SortFuncSpec{}))),Var'Unds'133:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'134:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'135:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'137:SortTableSpec{},
          \exists{R} (Var'Unds'141:SortTypesInfo{},
          \exists{R} (Var'Unds'136:SortInlineExport{},
          \exists{R} (Var'Unds'140:SortInt{},
          \exists{R} (Var'Unds'138:SortTableSpec{},
          \exists{R} (Var'Unds'139:SortDefns{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTableDefn{}, SortDefn{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(Lbl'Stop'Identifier{}(),\and{SortTableSpec{}}(Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(Var'Unds'136:SortInlineExport{},Var'Unds'137:SortTableSpec{}),Var'Unds'138:SortTableSpec{}))),Var'Unds'139:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'140:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'141:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'143:SortInstrs{},
          \exists{R} (Var'Unds'147:SortTypesInfo{},
          \exists{R} (Var'Unds'142:SortIndex{},
          \exists{R} (Var'Unds'145:SortDefns{},
          \exists{R} (Var'Unds'146:SortInt{},
          \exists{R} (Var'Unds'144:SortElemSegment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortElemDefn{}, SortDefn{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(Var'Unds'142:SortIndex{},inj{SortInstrs{}, SortOffset{}}(Var'Unds'143:SortInstrs{}),Var'Unds'144:SortElemSegment{})),Var'Unds'145:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'146:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'147:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'148:SortDefns{},
          \exists{R} (Var'Unds'149:SortInt{},
          \exists{R} (Var'Unds'150:SortTypesInfo{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  \and{SortDefns{}}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'148:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'149:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'150:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'154:SortInt{},
          \exists{R} (Var'Unds'152:SortMemorySpec{},
          \exists{R} (Var'Unds'153:SortDefns{},
          \exists{R} (Var'Unds'151:SortDataString{},
          \exists{R} (Var'Unds'155:SortTypesInfo{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortMemoryDefn{}, SortDefn{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(Lbl'Stop'Identifier{}(),\and{SortMemorySpec{}}(Lbl'LPar'data'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'DataString{}(Var'Unds'151:SortDataString{}),Var'Unds'152:SortMemorySpec{}))),Var'Unds'153:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'154:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'155:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'159:SortDefns{},
          \exists{R} (Var'Unds'160:SortInt{},
          \exists{R} (Var'Unds'158:SortElemSegment{},
          \exists{R} (Var'Unds'156:SortIndex{},
          \exists{R} (Var'Unds'157:SortInstrs{},
          \exists{R} (Var'Unds'161:SortTypesInfo{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortElemDefn{}, SortDefn{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(Var'Unds'156:SortIndex{},Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(Var'Unds'157:SortInstrs{}),Var'Unds'158:SortElemSegment{})),Var'Unds'159:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'160:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'161:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'165:SortMemType{},
          \exists{R} (Var'Unds'163:SortWasmString{},
          \exists{R} (Var'Unds'164:SortWasmString{},
          \exists{R} (Var'Unds'167:SortInt{},
          \exists{R} (Var'Unds'162:SortOptionalId{},
          \exists{R} (Var'Unds'168:SortTypesInfo{},
          \exists{R} (Var'Unds'166:SortDefns{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortMemoryDefn{}, SortDefn{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(Var'Unds'162:SortOptionalId{},Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(Var'Unds'163:SortWasmString{},Var'Unds'164:SortWasmString{}),Var'Unds'165:SortMemType{}))),Var'Unds'166:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'167:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'168:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'170:SortTypeDecls{},
          \exists{R} (Var'Unds'176:SortInt{},
          \exists{R} (Var'Unds'171:SortLocalDecls{},
          \exists{R} (Var'Unds'174:SortInt{},
          \exists{R} (Var'Unds'169:SortOptionalId{},
          \exists{R} (Var'Unds'175:SortMap{},
          \exists{R} (Var'Unds'173:SortDefns{},
          \exists{R} (Var'Unds'172:SortInstrs{},
            \and{R} (
              \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(Var'Unds'170:SortTypeDecls{})),Var'Unds'175:SortMap{})),
        \dv{SortBool{}}("true")),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Var'Unds'169:SortOptionalId{},Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(inj{SortTypeDecls{}, SortTypeUse{}}(Var'Unds'170:SortTypeDecls{}),Var'Unds'171:SortLocalDecls{},Var'Unds'172:SortInstrs{}))),Var'Unds'173:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'174:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(Var'Unds'175:SortMap{},Var'Unds'176:SortInt{})
                ),
                \top{R} ()
              )))
          ))))))))),
          \or{R} (
          \exists{R} (Var'Unds'181:SortDefns{},
          \exists{R} (Var'Unds'182:SortInt{},
          \exists{R} (Var'Unds'180:SortMemorySpec{},
          \exists{R} (Var'Unds'178:SortOptionalId{},
          \exists{R} (Var'Unds'179:SortWasmString{},
          \exists{R} (Var'Unds'177:SortIdentifier{},
          \exists{R} (Var'Unds'183:SortTypesInfo{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortMemoryDefn{}, SortDefn{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'177:SortIdentifier{}),Var'Unds'178:SortOptionalId{}),Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineExport'Unds'WasmString{}(Var'Unds'179:SortWasmString{}),Var'Unds'180:SortMemorySpec{}))),Var'Unds'181:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'182:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'183:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'187:SortInt{},
          \exists{R} (Var'Unds'185:SortElemSegment{},
          \exists{R} (Var'Unds'186:SortDefns{},
          \exists{R} (Var'Unds'184:SortOffset{},
          \exists{R} (Var'Unds'188:SortTypesInfo{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortElemDefn{}, SortDefn{}}(Lbl'LPar'elem'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(Var'Unds'184:SortOffset{},Var'Unds'185:SortElemSegment{})),Var'Unds'186:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'187:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'188:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'192:SortFuncSpec{},
          \exists{R} (Var'Unds'193:SortDefns{},
          \exists{R} (Var'Unds'191:SortWasmString{},
          \exists{R} (Var'Unds'189:SortIdentifier{},
          \exists{R} (Var'Unds'195:SortTypesInfo{},
          \exists{R} (Var'Unds'190:SortOptionalId{},
          \exists{R} (Var'Unds'194:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortDefns{}, R} (
                  X0:SortDefns{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'189:SortIdentifier{}),Var'Unds'190:SortOptionalId{}),Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineExport'Unds'WasmString{}(Var'Unds'191:SortWasmString{}),Var'Unds'192:SortFuncSpec{}))),Var'Unds'193:SortDefns{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'194:SortInt{}
                ),\and{R} (
                \in{SortTypesInfo{}, R} (
                  X2:SortTypesInfo{},
                  Var'Unds'195:SortTypesInfo{}
                ),
                \top{R} ()
              )))
          )))))))),
          \bottom{R}()
        ))))))))))))))))))))))))))))))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(VarD:SortDefn{},VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarTI:SortTypesInfo{}
          ),
          \top{R} ()
        )))
    )),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(VarD:SortDefn{},Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(VarDS:SortDefns{},VarI:SortInt{},VarTI:SortTypesInfo{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(401,10,401,69)"), owise{}(), UNIQUE'Unds'ID{}("cf74025862214dc7dbeb8be0f8e0bd7cad098078643896ea6e57c87d21ed9699")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{DataDefn,Defn}(`(data__)_WASM-TEXT-COMMON-SYNTAX_DataDefn_Offset_DataString`(OFFSET,DATA)),_DS),_I,_M)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{DataDefn,Defn}(`(data___)_WASM-TEXT-COMMON-SYNTAX_DataDefn_Index_Offset_DataString`(inj{Int,Index}(#token("0","Int")),OFFSET,DATA)),_DS),_I,_M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(443498156b7635778536444d942e88dfbe8e843e123698ebdb22cda6d4b150e9), org.kframework.attributes.Location(Location(549,10,549,90)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortDataDefn{}, SortDefn{}}(Lbl'LPar'data'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Offset'Unds'DataString{}(VarOFFSET:SortOffset{},VarDATA:SortDataString{})),Var'Unds'DS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'I:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            Var'Unds'M:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortDataDefn{}, SortDefn{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("0")),VarOFFSET:SortOffset{},VarDATA:SortDataString{})),Var'Unds'DS:SortDefns{}),Var'Unds'I:SortInt{},Var'Unds'M:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(549,10,549,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("443498156b7635778536444d942e88dfbe8e843e123698ebdb22cda6d4b150e9")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{DataDefn,Defn}(`(data___)_WASM-TEXT-COMMON-SYNTAX_DataDefn_Index_Offset_DataString`(IDX,`(offset_)_WASM-TEXT-COMMON-SYNTAX_Offset_Instrs`(IS),DATA)),DS),I,M)=>`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{DataDefn,Defn}(`(data___)_WASM-TEXT-COMMON-SYNTAX_DataDefn_Index_Offset_DataString`(IDX,`(offset_)_WASM-TEXT-COMMON-SYNTAX_Offset_Instrs`(`unfoldInstrs(_)_WASM-TEXT_Instrs_Instrs`(IS)),DATA)),`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(DS,I,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(359cc7f4ad8ee13575dab552001d9bfe56dfcb78832966cce7fa489a9ee726de), org.kframework.attributes.Location(Location(552,10,552,128)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortDataDefn{}, SortDefn{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(VarIDX:SortIndex{},Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(VarIS:SortInstrs{}),VarDATA:SortDataString{})),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortDataDefn{}, SortDefn{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(VarIDX:SortIndex{},Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(LblunfoldInstrs'LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs{}(VarIS:SortInstrs{})),VarDATA:SortDataString{})),Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(VarDS:SortDefns{},VarI:SortInt{},VarM:SortTypesInfo{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,10,552,128)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("359cc7f4ad8ee13575dab552001d9bfe56dfcb78832966cce7fa489a9ee726de")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{DataDefn,Defn}(`(data___)_WASM-TEXT-COMMON-SYNTAX_DataDefn_Index_Offset_DataString`(IDX,inj{Instrs,Offset}(OFFSET),DATA)),_DS),_I,_M)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{DataDefn,Defn}(`(data___)_WASM-TEXT-COMMON-SYNTAX_DataDefn_Index_Offset_DataString`(IDX,`(offset_)_WASM-TEXT-COMMON-SYNTAX_Offset_Instrs`(OFFSET),DATA)),_DS),_I,_M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(445edb69ec68f7ac5892de9e63ca0aa5d37bdbb48260661546af32ca1e25c212), org.kframework.attributes.Location(Location(550,10,550,107)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortDataDefn{}, SortDefn{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(VarIDX:SortIndex{},inj{SortInstrs{}, SortOffset{}}(VarOFFSET:SortInstrs{}),VarDATA:SortDataString{})),Var'Unds'DS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'I:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            Var'Unds'M:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortDataDefn{}, SortDefn{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(VarIDX:SortIndex{},Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(VarOFFSET:SortInstrs{}),VarDATA:SortDataString{})),Var'Unds'DS:SortDefns{}),Var'Unds'I:SortInt{},Var'Unds'M:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(550,10,550,107)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("445edb69ec68f7ac5892de9e63ca0aa5d37bdbb48260661546af32ca1e25c212")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ElemDefn,Defn}(`(elem__)_WASM-TEXT-COMMON-SYNTAX_ElemDefn_Offset_ElemSegment`(OFFSET,ES)),_DS),_I,_M)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ElemDefn,Defn}(`(elem___)_WASM-TEXT-COMMON-SYNTAX_ElemDefn_Index_Offset_ElemSegment`(inj{Int,Index}(#token("0","Int")),OFFSET,ES)),_DS),_I,_M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(671c0b8491f7a03bc98a80dc868932dcaa57d66afcec56ef56a989a0a5beab58), org.kframework.attributes.Location(Location(540,10,540,86)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortElemDefn{}, SortDefn{}}(Lbl'LPar'elem'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(VarOFFSET:SortOffset{},VarES:SortElemSegment{})),Var'Unds'DS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'I:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            Var'Unds'M:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortElemDefn{}, SortDefn{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("0")),VarOFFSET:SortOffset{},VarES:SortElemSegment{})),Var'Unds'DS:SortDefns{}),Var'Unds'I:SortInt{},Var'Unds'M:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(540,10,540,86)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("671c0b8491f7a03bc98a80dc868932dcaa57d66afcec56ef56a989a0a5beab58")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ElemDefn,Defn}(`(elem___)_WASM-TEXT-COMMON-SYNTAX_ElemDefn_Index_Offset_ElemSegment`(IDX,`(offset_)_WASM-TEXT-COMMON-SYNTAX_Offset_Instrs`(IS),ES)),DS),I,M)=>`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ElemDefn,Defn}(`(elem___)_WASM-TEXT-COMMON-SYNTAX_ElemDefn_Index_Offset_ElemSegment`(IDX,`(offset_)_WASM-TEXT-COMMON-SYNTAX_Offset_Instrs`(`unfoldInstrs(_)_WASM-TEXT_Instrs_Instrs`(IS)),ES)),`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(DS,I,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f4430bf285e09c5557f97cab4574fa32c24a41553f133b97d0f42577a3b7b0a4), org.kframework.attributes.Location(Location(543,10,543,124)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortElemDefn{}, SortDefn{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(VarIDX:SortIndex{},Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(VarIS:SortInstrs{}),VarES:SortElemSegment{})),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortElemDefn{}, SortDefn{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(VarIDX:SortIndex{},Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(LblunfoldInstrs'LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs{}(VarIS:SortInstrs{})),VarES:SortElemSegment{})),Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(VarDS:SortDefns{},VarI:SortInt{},VarM:SortTypesInfo{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(543,10,543,124)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f4430bf285e09c5557f97cab4574fa32c24a41553f133b97d0f42577a3b7b0a4")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ElemDefn,Defn}(`(elem___)_WASM-TEXT-COMMON-SYNTAX_ElemDefn_Index_Offset_ElemSegment`(IDX,inj{Instrs,Offset}(OFFSET),ES)),_DS),_I,_M)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ElemDefn,Defn}(`(elem___)_WASM-TEXT-COMMON-SYNTAX_ElemDefn_Index_Offset_ElemSegment`(IDX,`(offset_)_WASM-TEXT-COMMON-SYNTAX_Offset_Instrs`(OFFSET),ES)),_DS),_I,_M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1be6fc85599e2fc53b20eaa9d3b02ef736eb949028e6f44b97610ea778613d38), org.kframework.attributes.Location(Location(541,10,541,103)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortElemDefn{}, SortDefn{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(VarIDX:SortIndex{},inj{SortInstrs{}, SortOffset{}}(VarOFFSET:SortInstrs{}),VarES:SortElemSegment{})),Var'Unds'DS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'I:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            Var'Unds'M:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortElemDefn{}, SortDefn{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(VarIDX:SortIndex{},Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(VarOFFSET:SortInstrs{}),VarES:SortElemSegment{})),Var'Unds'DS:SortDefns{}),Var'Unds'I:SortInt{},Var'Unds'M:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(541,10,541,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("1be6fc85599e2fc53b20eaa9d3b02ef736eb949028e6f44b97610ea778613d38")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ElemDefn,Defn}(`(elem_func_)_WASM-TEXT-COMMON-SYNTAX_ElemDefn_Offset_ElemSegment`(OFFSET,ES)),_DS),_I,_M)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ElemDefn,Defn}(`(elem__)_WASM-TEXT-COMMON-SYNTAX_ElemDefn_Offset_ElemSegment`(OFFSET,ES)),_DS),_I,_M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d21b3b2923ad751f3be42ec7d07b8e90f5eeca785ed81f9c6b5622d9c2d8f26), org.kframework.attributes.Location(Location(539,10,539,79)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortElemDefn{}, SortDefn{}}(Lbl'LPar'elem'Unds'func'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(VarOFFSET:SortOffset{},VarES:SortElemSegment{})),Var'Unds'DS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'I:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            Var'Unds'M:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortElemDefn{}, SortDefn{}}(Lbl'LPar'elem'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(VarOFFSET:SortOffset{},VarES:SortElemSegment{})),Var'Unds'DS:SortDefns{}),Var'Unds'I:SortInt{},Var'Unds'M:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(539,10,539,79)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2d21b3b2923ad751f3be42ec7d07b8e90f5eeca785ed81f9c6b5622d9c2d8f26")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM-TEXT-COMMON-SYNTAX_FuncDefn_OptionalId_FuncSpec`(inj{Identifier,OptionalId}(ID) #as _3,`___WASM-TEXT-COMMON-SYNTAX_FuncSpec_InlineExport_FuncSpec`(`(export_)_WASM-TEXT-COMMON-SYNTAX_InlineExport_WasmString`(ENAME),SPEC))),DS),I,M)=>`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ExportDefn,Defn}(`(export_(_))_WASM-TEXT-COMMON-SYNTAX_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA-COMMON-SYNTAX_Externval_AllocatedKind_Index`(`func_WASM-DATA-COMMON-SYNTAX_AllocatedKind`(.KList),inj{Identifier,Index}(ID)))),`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM-TEXT-COMMON-SYNTAX_FuncDefn_OptionalId_FuncSpec`(_3,SPEC)),DS),I,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eb07139fde3853ee93bb6056bcf90881bec8d8b1dec8c896ff64af4e35d25f66), org.kframework.attributes.Location(Location(466,10,467,78)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'3:SortOptionalId{}),Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineExport'Unds'WasmString{}(VarENAME:SortWasmString{}),VarSPEC:SortFuncSpec{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortExportDefn{}, SortDefn{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblfunc'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(),inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))),Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Var'Unds'3:SortOptionalId{},VarSPEC:SortFuncSpec{})),VarDS:SortDefns{}),VarI:SortInt{},VarM:SortTypesInfo{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(466,10,467,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("eb07139fde3853ee93bb6056bcf90881bec8d8b1dec8c896ff64af4e35d25f66")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM-TEXT-COMMON-SYNTAX_FuncDefn_OptionalId_FuncSpec`(OID,`___WASM-TEXT-COMMON-SYNTAX_FuncSpec_InlineImport_TypeUse`(`(import__)_WASM-TEXT-COMMON-SYNTAX_InlineImport_WasmString_WasmString`(MOD,NAME),TUSE))),DS),I,M)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(func__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TypeUse`(OID,TUSE))),DS),I,M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b26c4e5a99451086517182f5965050497d65fb1b4cb3b8efc46143283ce0546), org.kframework.attributes.Location(Location(460,10,461,68)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(VarOID:SortOptionalId{},Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{}),VarTUSE:SortTypeUse{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(VarOID:SortOptionalId{},VarTUSE:SortTypeUse{}))),VarDS:SortDefns{}),VarI:SortInt{},VarM:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(460,10,461,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5b26c4e5a99451086517182f5965050497d65fb1b4cb3b8efc46143283ce0546")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM-TEXT-COMMON-SYNTAX_FuncDefn_OptionalId_FuncSpec`(OID,`____WASM-TEXT-COMMON-SYNTAX_FuncSpec_TypeUse_LocalDecls_Instrs`(TUSE,LOCALS,BODY))),DS),I,TI)=>`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM-TEXT-COMMON-SYNTAX_FuncDefn_OptionalId_FuncSpec`(OID,`____WASM-TEXT-COMMON-SYNTAX_FuncSpec_TypeUse_LocalDecls_Instrs`(TUSE,LOCALS,`unfoldInstrs(_)_WASM-TEXT_Instrs_Instrs`(BODY)))),`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(DS,I,TI)) requires `notBool_`(isTypeDecls(inj{TypeUse,KItem}(TUSE))) ensures #token("true","Bool") [UNIQUE_ID(df807e70e86ae4458e369cd33f381a68c0e549586ae2ec796788dfde1365c778), org.kframework.attributes.Location(Location(428,10,431,41)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblisTypeDecls{}(kseq{}(inj{SortTypeUse{}, SortKItem{}}(VarTUSE:SortTypeUse{}),dotk{}()))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(VarOID:SortOptionalId{},Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(VarTUSE:SortTypeUse{},VarLOCALS:SortLocalDecls{},VarBODY:SortInstrs{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarTI:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(VarOID:SortOptionalId{},Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(VarTUSE:SortTypeUse{},VarLOCALS:SortLocalDecls{},LblunfoldInstrs'LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs{}(VarBODY:SortInstrs{})))),Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(VarDS:SortDefns{},VarI:SortInt{},VarTI:SortTypesInfo{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(428,10,431,41)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("df807e70e86ae4458e369cd33f381a68c0e549586ae2ec796788dfde1365c778")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM-TEXT-COMMON-SYNTAX_FuncDefn_OptionalId_FuncSpec`(_OID,`____WASM-TEXT-COMMON-SYNTAX_FuncSpec_TypeUse_LocalDecls_Instrs`(inj{TypeDecls,TypeUse}(TDECLS),_LOCALS,_BODY))),DS),_I,`#ti(_,_)_WASM-TEXT_TypesInfo_Map_Int`(M,N))=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM-TEXT-COMMON-SYNTAX_FuncDefn_OptionalId_FuncSpec`(_OID,`____WASM-TEXT-COMMON-SYNTAX_FuncSpec_TypeUse_LocalDecls_Instrs`(`(type_)__WASM-COMMON-SYNTAX_TypeUse_Index_TypeDecls`(inj{Int,Index}(N),TDECLS),_LOCALS,_BODY))),`_appendDefn__WASM-TEXT_Defns_Defns_Defn`(DS,inj{TypeDefn,Defn}(`(type_(func_))_WASM-TEXT-COMMON-SYNTAX_TypeDefn_OptionalId_TypeDecls`(`.Identifier`(.KList),TDECLS)))),_I,`#ti(_,_)_WASM-TEXT_TypesInfo_Map_Int`(`Map:update`(M,inj{FuncType,KItem}(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS)),inj{Int,KItem}(N)),`_+Int_`(N,#token("1","Int")))) requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(inj{FuncType,KItem}(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS)),M)) ensures #token("true","Bool") [UNIQUE_ID(a9bb3919aaae0a36efd3853dc877d04a363d1cd013145738dea6b4fd79307368), org.kframework.attributes.Location(Location(423,10,426,53)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{})),VarM:SortMap{})),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Var'Unds'OID:SortOptionalId{},Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(inj{SortTypeDecls{}, SortTypeUse{}}(VarTDECLS:SortTypeDecls{}),Var'Unds'LOCALS:SortLocalDecls{},Var'Unds'BODY:SortInstrs{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'I:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(VarM:SortMap{},VarN:SortInt{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Var'Unds'OID:SortOptionalId{},Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(inj{SortInt{}, SortIndex{}}(VarN:SortInt{}),VarTDECLS:SortTypeDecls{}),Var'Unds'LOCALS:SortLocalDecls{},Var'Unds'BODY:SortInstrs{}))),Lbl'Unds'appendDefn'UndsUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Defn{}(VarDS:SortDefns{},inj{SortTypeDefn{}, SortDefn{}}(Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(Lbl'Stop'Identifier{}(),VarTDECLS:SortTypeDecls{})))),Var'Unds'I:SortInt{},Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(LblMap'Coln'update{}(VarM:SortMap{},inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{})),inj{SortInt{}, SortKItem{}}(VarN:SortInt{})),Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(423,10,426,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("a9bb3919aaae0a36efd3853dc877d04a363d1cd013145738dea6b4fd79307368")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM-TEXT-COMMON-SYNTAX_FuncDefn_OptionalId_FuncSpec`(_OID,`____WASM-TEXT-COMMON-SYNTAX_FuncSpec_TypeUse_LocalDecls_Instrs`(inj{TypeDecls,TypeUse}(TDECLS),_LOCALS,_BODY))),_DS),_I,`#ti(_,_)_WASM-TEXT_TypesInfo_Map_Int`(M,_count0) #as _5)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM-TEXT-COMMON-SYNTAX_FuncDefn_OptionalId_FuncSpec`(_OID,`____WASM-TEXT-COMMON-SYNTAX_FuncSpec_TypeUse_LocalDecls_Instrs`(`(type_)__WASM-COMMON-SYNTAX_TypeUse_Index_TypeDecls`(inj{Int,Index}(`project:Int`(`Map:lookup`(M,inj{FuncType,KItem}(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS))))),TDECLS),_LOCALS,_BODY))),_DS),_I,_5) requires `_in_keys(_)_MAP_Bool_KItem_Map`(inj{FuncType,KItem}(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS)),M) ensures #token("true","Bool") [UNIQUE_ID(f7cda62b830415dd042b80cf5a93d54e78e90ca323f07eca6e220385401bfbcb), org.kframework.attributes.Location(Location(418,10,421,53)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{})),VarM:SortMap{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Var'Unds'OID:SortOptionalId{},Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(inj{SortTypeDecls{}, SortTypeUse{}}(VarTDECLS:SortTypeDecls{}),Var'Unds'LOCALS:SortLocalDecls{},Var'Unds'BODY:SortInstrs{}))),Var'Unds'DS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'I:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            \and{SortTypesInfo{}}(Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(VarM:SortMap{},Var'Unds'count0:SortInt{}),Var'Unds'5:SortTypesInfo{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Var'Unds'OID:SortOptionalId{},Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(inj{SortInt{}, SortIndex{}}(Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarM:SortMap{},inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{}))),dotk{}()))),VarTDECLS:SortTypeDecls{}),Var'Unds'LOCALS:SortLocalDecls{},Var'Unds'BODY:SortInstrs{}))),Var'Unds'DS:SortDefns{}),Var'Unds'I:SortInt{},Var'Unds'5:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(418,10,421,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("f7cda62b830415dd042b80cf5a93d54e78e90ca323f07eca6e220385401bfbcb")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM-TEXT-COMMON-SYNTAX_FuncDefn_OptionalId_FuncSpec`(`.Identifier`(.KList),`___WASM-TEXT-COMMON-SYNTAX_FuncSpec_InlineExport_FuncSpec`(EXPO,SPEC) #as _4)),DS),I,M)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM-TEXT-COMMON-SYNTAX_FuncDefn_OptionalId_FuncSpec`(inj{Identifier,OptionalId}(`#freshId(_)_WASM-DATA_Identifier_Int`(I)),_4)),DS),`_+Int_`(I,#token("1","Int")),M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9b554f5ff2cc20a17a16ec194086c6ce66845e562f5f7a17f576cf6c803533a5), org.kframework.attributes.Location(Location(463,10,464,70)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Lbl'Stop'Identifier{}(),\and{SortFuncSpec{}}(Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(VarEXPO:SortInlineExport{},VarSPEC:SortFuncSpec{}),Var'Unds'4:SortFuncSpec{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(VarI:SortInt{})),Var'Unds'4:SortFuncSpec{})),VarDS:SortDefns{}),Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")),VarM:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(463,10,464,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9b554f5ff2cc20a17a16ec194086c6ce66845e562f5f7a17f576cf6c803533a5")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{GlobalDefn,Defn}(`(global__)_WASM-TEXT-COMMON-SYNTAX_GlobalDefn_OptionalId_GlobalSpec`(inj{Identifier,OptionalId}(ID) #as _3,`___WASM-TEXT-COMMON-SYNTAX_GlobalSpec_InlineExport_GlobalSpec`(`(export_)_WASM-TEXT-COMMON-SYNTAX_InlineExport_WasmString`(ENAME),SPEC))),DS),I,M)=>`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ExportDefn,Defn}(`(export_(_))_WASM-TEXT-COMMON-SYNTAX_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA-COMMON-SYNTAX_Externval_AllocatedKind_Index`(`global_WASM-DATA-COMMON-SYNTAX_AllocatedKind`(.KList),inj{Identifier,Index}(ID)))),`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{GlobalDefn,Defn}(`(global__)_WASM-TEXT-COMMON-SYNTAX_GlobalDefn_OptionalId_GlobalSpec`(_3,SPEC)),DS),I,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d3079dec6866b6223413a0e506039d02cce65f1685d09b2255f2c14b60969417), org.kframework.attributes.Location(Location(532,10,533,82)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortGlobalDefn{}, SortDefn{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'3:SortOptionalId{}),Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineExport'Unds'WasmString{}(VarENAME:SortWasmString{}),VarSPEC:SortGlobalSpec{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortExportDefn{}, SortDefn{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblglobal'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(),inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))),Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortGlobalDefn{}, SortDefn{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(Var'Unds'3:SortOptionalId{},VarSPEC:SortGlobalSpec{})),VarDS:SortDefns{}),VarI:SortInt{},VarM:SortTypesInfo{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(532,10,533,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d3079dec6866b6223413a0e506039d02cce65f1685d09b2255f2c14b60969417")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{GlobalDefn,Defn}(`(global__)_WASM-TEXT-COMMON-SYNTAX_GlobalDefn_OptionalId_GlobalSpec`(OID,`___WASM-TEXT-COMMON-SYNTAX_GlobalSpec_InlineImport_TextFormatGlobalType`(`(import__)_WASM-TEXT-COMMON-SYNTAX_InlineImport_WasmString_WasmString`(MOD,NAME),TYP))),DS),I,M)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(global__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TextFormatGlobalType`(OID,TYP))),DS),I,M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(90a5b347c08bc273c02a93188139c261cafc68a7be1889b2d73b67e2172ed558), org.kframework.attributes.Location(Location(526,10,527,70)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortGlobalDefn{}, SortDefn{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(VarOID:SortOptionalId{},Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{}),VarTYP:SortTextFormatGlobalType{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(VarOID:SortOptionalId{},VarTYP:SortTextFormatGlobalType{}))),VarDS:SortDefns{}),VarI:SortInt{},VarM:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(526,10,527,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("90a5b347c08bc273c02a93188139c261cafc68a7be1889b2d73b67e2172ed558")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{GlobalDefn,Defn}(`(global__)_WASM-TEXT-COMMON-SYNTAX_GlobalDefn_OptionalId_GlobalSpec`(OID,`___WASM-TEXT-COMMON-SYNTAX_GlobalSpec_TextFormatGlobalType_Instr`(TYP,IS))),_DS),_I,_M)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{GlobalDefn,Defn}(aGlobalDefn(`asGMut(_)_WASM-TEXT_GlobalType_TextFormatGlobalType`(TYP),`unfoldInstrs(_)_WASM-TEXT_Instrs_Instrs`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(IS,inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList)))),OID)),_DS),_I,_M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(936693de1901a0d6eb09db3dd6706e101f141e14166c66ade7b5ec048be896b4), org.kframework.attributes.Location(Location(524,10,524,166)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortGlobalDefn{}, SortDefn{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(VarOID:SortOptionalId{},Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(VarTYP:SortTextFormatGlobalType{},VarIS:SortInstr{}))),Var'Unds'DS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'I:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            Var'Unds'M:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortGlobalDefn{}, SortDefn{}}(LblaGlobalDefn{}(LblasGMut'LParUndsRParUnds'WASM-TEXT'Unds'GlobalType'Unds'TextFormatGlobalType{}(VarTYP:SortTextFormatGlobalType{}),LblunfoldInstrs'LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(VarIS:SortInstr{},inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()))),VarOID:SortOptionalId{})),Var'Unds'DS:SortDefns{}),Var'Unds'I:SortInt{},Var'Unds'M:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(524,10,524,166)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("936693de1901a0d6eb09db3dd6706e101f141e14166c66ade7b5ec048be896b4")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{GlobalDefn,Defn}(`(global__)_WASM-TEXT-COMMON-SYNTAX_GlobalDefn_OptionalId_GlobalSpec`(`.Identifier`(.KList),`___WASM-TEXT-COMMON-SYNTAX_GlobalSpec_InlineExport_GlobalSpec`(EXPO,SPEC) #as _4)),DS),I,M)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{GlobalDefn,Defn}(`(global__)_WASM-TEXT-COMMON-SYNTAX_GlobalDefn_OptionalId_GlobalSpec`(inj{Identifier,OptionalId}(`#freshId(_)_WASM-DATA_Identifier_Int`(I)),_4)),DS),`_+Int_`(I,#token("1","Int")),M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(66e9978a2ee31b9c40c1401589e20eb1dd76d154fc1c5f282f965bfca7c6ac25), org.kframework.attributes.Location(Location(529,10,530,72)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortGlobalDefn{}, SortDefn{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(Lbl'Stop'Identifier{}(),\and{SortGlobalSpec{}}(Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(VarEXPO:SortInlineExport{},VarSPEC:SortGlobalSpec{}),Var'Unds'4:SortGlobalSpec{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortGlobalDefn{}, SortDefn{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(VarI:SortInt{})),Var'Unds'4:SortGlobalSpec{})),VarDS:SortDefns{}),Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")),VarM:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(529,10,530,72)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("66e9978a2ee31b9c40c1401589e20eb1dd76d154fc1c5f282f965bfca7c6ac25")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(func__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TypeUse`(OID,inj{TypeDecls,TypeUse}(TDECLS)))),DS),I,`#ti(_,_)_WASM-TEXT_TypesInfo_Map_Int`(M,_count0) #as TI)=>`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(func__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TypeUse`(OID,`(type_)__WASM-COMMON-SYNTAX_TypeUse_Index_TypeDecls`(inj{Int,Index}(`project:Int`(`Map:lookup`(M,inj{FuncType,KItem}(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS))))),TDECLS)))),`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(DS,I,TI)) requires `_in_keys(_)_MAP_Bool_KItem_Map`(inj{FuncType,KItem}(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS)),M) ensures #token("true","Bool") [UNIQUE_ID(fae01fd15d15af31ffbad12a2b531259b9ef65c7801664c5d7f6bb40f776c9a1), org.kframework.attributes.Location(Location(433,10,436,53)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{})),VarM:SortMap{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(VarOID:SortOptionalId{},inj{SortTypeDecls{}, SortTypeUse{}}(VarTDECLS:SortTypeDecls{})))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            \and{SortTypesInfo{}}(Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(VarM:SortMap{},Var'Unds'count0:SortInt{}),VarTI:SortTypesInfo{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(VarOID:SortOptionalId{},Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(inj{SortInt{}, SortIndex{}}(Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarM:SortMap{},inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{}))),dotk{}()))),VarTDECLS:SortTypeDecls{})))),Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(VarDS:SortDefns{},VarI:SortInt{},VarTI:SortTypesInfo{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(433,10,436,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("fae01fd15d15af31ffbad12a2b531259b9ef65c7801664c5d7f6bb40f776c9a1")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(func__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TypeUse`(OID,inj{TypeDecls,TypeUse}(TDECLS)))),DS),I,`#ti(_,_)_WASM-TEXT_TypesInfo_Map_Int`(M,N))=>`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(func__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TypeUse`(OID,`(type_)__WASM-COMMON-SYNTAX_TypeUse_Index_TypeDecls`(inj{Int,Index}(N),TDECLS)))),`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`_appendDefn__WASM-TEXT_Defns_Defns_Defn`(DS,inj{TypeDefn,Defn}(`(type_(func_))_WASM-TEXT-COMMON-SYNTAX_TypeDefn_OptionalId_TypeDecls`(`.Identifier`(.KList),TDECLS))),I,`#ti(_,_)_WASM-TEXT_TypesInfo_Map_Int`(`Map:update`(M,inj{FuncType,KItem}(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS)),inj{Int,KItem}(N)),`_+Int_`(N,#token("1","Int"))))) requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(inj{FuncType,KItem}(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS)),M)) ensures #token("true","Bool") [UNIQUE_ID(c51b82263f56dc321c85722a3cb23ea2d0e5b81e74fa0bd347b9240ad02e26fb), org.kframework.attributes.Location(Location(438,10,441,53)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{})),VarM:SortMap{})),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(VarOID:SortOptionalId{},inj{SortTypeDecls{}, SortTypeUse{}}(VarTDECLS:SortTypeDecls{})))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(VarM:SortMap{},VarN:SortInt{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(VarOID:SortOptionalId{},Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(inj{SortInt{}, SortIndex{}}(VarN:SortInt{}),VarTDECLS:SortTypeDecls{})))),Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'Unds'appendDefn'UndsUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Defn{}(VarDS:SortDefns{},inj{SortTypeDefn{}, SortDefn{}}(Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(Lbl'Stop'Identifier{}(),VarTDECLS:SortTypeDecls{}))),VarI:SortInt{},Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(LblMap'Coln'update{}(VarM:SortMap{},inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{})),inj{SortInt{}, SortKItem{}}(VarN:SortInt{})),Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(438,10,441,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("c51b82263f56dc321c85722a3cb23ea2d0e5b81e74fa0bd347b9240ad02e26fb")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{MemoryDefn,Defn}(`(memory__)_WASM-TEXT-COMMON-SYNTAX_MemoryDefn_OptionalId_MemorySpec`(inj{Identifier,OptionalId}(ID) #as _3,`(data_)_WASM-TEXT-COMMON-SYNTAX_MemorySpec_DataString`(DATA))),DS),I,M)=>`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{MemoryDefn,Defn}(`(memory__)_WASM-TEXT-COMMON-SYNTAX_MemoryDefn_OptionalId_MemorySpec`(_3,inj{TextLimits,MemorySpec}(`___WASM-TEXT-COMMON-SYNTAX_TextLimits_Int_Int`(`#lengthDataPages(_)_WASM-TEXT_Int_DataString`(DATA),`#lengthDataPages(_)_WASM-TEXT_Int_DataString`(DATA))))),`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{DataDefn,Defn}(`(data___)_WASM-TEXT-COMMON-SYNTAX_DataDefn_Index_Offset_DataString`(inj{Identifier,Index}(ID),`(offset_)_WASM-TEXT-COMMON-SYNTAX_Offset_Instrs`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(_)_WASM-TEXT-COMMON-SYNTAX_FoldedInstr_PlainInstr`(aIConst(i32(.KList),inj{Int,WasmInt}(#token("0","Int"))))),inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList)))),DATA)),`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(DS,I,M))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0507b759ebf3248c8fccadc6fb5c750c75af24f108c5ebd0062b58212d6477dd), org.kframework.attributes.Location(Location(497,10,500,32)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortMemoryDefn{}, SortDefn{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'3:SortOptionalId{}),Lbl'LPar'data'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'DataString{}(VarDATA:SortDataString{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortMemoryDefn{}, SortDefn{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(Var'Unds'3:SortOptionalId{},inj{SortTextLimits{}, SortMemorySpec{}}(Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TextLimits'Unds'Int'Unds'Int{}(Lbl'Hash'lengthDataPages'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'DataString{}(VarDATA:SortDataString{}),Lbl'Hash'lengthDataPages'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'DataString{}(VarDATA:SortDataString{}))))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortDataDefn{}, SortDefn{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{}),Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr{}(LblaIConst{}(Lbli32{}(),inj{SortInt{}, SortWasmInt{}}(\dv{SortInt{}}("0"))))),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()))),VarDATA:SortDataString{})),Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(VarDS:SortDefns{},VarI:SortInt{},VarM:SortTypesInfo{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(497,10,500,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("0507b759ebf3248c8fccadc6fb5c750c75af24f108c5ebd0062b58212d6477dd")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{MemoryDefn,Defn}(`(memory__)_WASM-TEXT-COMMON-SYNTAX_MemoryDefn_OptionalId_MemorySpec`(inj{Identifier,OptionalId}(ID) #as _3,`___WASM-TEXT-COMMON-SYNTAX_MemorySpec_InlineExport_MemorySpec`(`(export_)_WASM-TEXT-COMMON-SYNTAX_InlineExport_WasmString`(ENAME),SPEC))),DS),I,M)=>`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ExportDefn,Defn}(`(export_(_))_WASM-TEXT-COMMON-SYNTAX_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA-COMMON-SYNTAX_Externval_AllocatedKind_Index`(`memory_WASM-DATA-COMMON-SYNTAX_AllocatedKind`(.KList),inj{Identifier,Index}(ID)))),`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{MemoryDefn,Defn}(`(memory__)_WASM-TEXT-COMMON-SYNTAX_MemoryDefn_OptionalId_MemorySpec`(_3,SPEC)),DS),I,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8971935f6c8a16cbe5812f2893f6041aef69a34188adabaa6c8b9f69c1e6df64), org.kframework.attributes.Location(Location(508,10,509,83)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortMemoryDefn{}, SortDefn{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'3:SortOptionalId{}),Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineExport'Unds'WasmString{}(VarENAME:SortWasmString{}),VarSPEC:SortMemorySpec{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortExportDefn{}, SortDefn{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblmemory'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(),inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))),Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortMemoryDefn{}, SortDefn{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(Var'Unds'3:SortOptionalId{},VarSPEC:SortMemorySpec{})),VarDS:SortDefns{}),VarI:SortInt{},VarM:SortTypesInfo{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(508,10,509,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8971935f6c8a16cbe5812f2893f6041aef69a34188adabaa6c8b9f69c1e6df64")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{MemoryDefn,Defn}(`(memory__)_WASM-TEXT-COMMON-SYNTAX_MemoryDefn_OptionalId_MemorySpec`(OID,`___WASM-TEXT-COMMON-SYNTAX_MemorySpec_InlineImport_MemType`(`(import__)_WASM-TEXT-COMMON-SYNTAX_InlineImport_WasmString_WasmString`(MOD,NAME),MT))),DS),I,M)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(memory__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_MemType`(OID,MT))),DS),I,M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(83a101ed8c87f442081240e59a00c369bc7d4727225e293ca25438b28b0e1a25), org.kframework.attributes.Location(Location(502,10,503,70)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortMemoryDefn{}, SortDefn{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(VarOID:SortOptionalId{},Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{}),VarMT:SortMemType{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(VarOID:SortOptionalId{},VarMT:SortMemType{}))),VarDS:SortDefns{}),VarI:SortInt{},VarM:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(502,10,503,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("83a101ed8c87f442081240e59a00c369bc7d4727225e293ca25438b28b0e1a25")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{MemoryDefn,Defn}(`(memory__)_WASM-TEXT-COMMON-SYNTAX_MemoryDefn_OptionalId_MemorySpec`(`.Identifier`(.KList),`(data_)_WASM-TEXT-COMMON-SYNTAX_MemorySpec_DataString`(DATA) #as _4)),DS),I,M)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{MemoryDefn,Defn}(`(memory__)_WASM-TEXT-COMMON-SYNTAX_MemoryDefn_OptionalId_MemorySpec`(inj{Identifier,OptionalId}(`#freshId(_)_WASM-DATA_Identifier_Int`(I)),_4)),DS),`_+Int_`(I,#token("1","Int")),M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(223b49430ec81e553bb62a87c41ad78b5a3db715697485b377eccb3065afaab4), org.kframework.attributes.Location(Location(494,10,495,76)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortMemoryDefn{}, SortDefn{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(Lbl'Stop'Identifier{}(),\and{SortMemorySpec{}}(Lbl'LPar'data'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'DataString{}(VarDATA:SortDataString{}),Var'Unds'4:SortMemorySpec{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortMemoryDefn{}, SortDefn{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(VarI:SortInt{})),Var'Unds'4:SortMemorySpec{})),VarDS:SortDefns{}),Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")),VarM:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(494,10,495,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("223b49430ec81e553bb62a87c41ad78b5a3db715697485b377eccb3065afaab4")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{MemoryDefn,Defn}(`(memory__)_WASM-TEXT-COMMON-SYNTAX_MemoryDefn_OptionalId_MemorySpec`(`.Identifier`(.KList),`___WASM-TEXT-COMMON-SYNTAX_MemorySpec_InlineExport_MemorySpec`(EXPO,SPEC) #as _4)),DS),I,M)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{MemoryDefn,Defn}(`(memory__)_WASM-TEXT-COMMON-SYNTAX_MemoryDefn_OptionalId_MemorySpec`(inj{Identifier,OptionalId}(`#freshId(_)_WASM-DATA_Identifier_Int`(I)),_4)),DS),`_+Int_`(I,#token("1","Int")),M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b719c1afd6eb2c8f491f65bf62169eae66c2e32c1d757c1ff088e315ae338f2f), org.kframework.attributes.Location(Location(505,10,506,76)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortMemoryDefn{}, SortDefn{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(Lbl'Stop'Identifier{}(),\and{SortMemorySpec{}}(Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(VarEXPO:SortInlineExport{},VarSPEC:SortMemorySpec{}),Var'Unds'4:SortMemorySpec{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortMemoryDefn{}, SortDefn{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(VarI:SortInt{})),Var'Unds'4:SortMemorySpec{})),VarDS:SortDefns{}),Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")),VarM:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(505,10,506,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b719c1afd6eb2c8f491f65bf62169eae66c2e32c1d757c1ff088e315ae338f2f")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{TableDefn,Defn}(`(table__)_WASM-TEXT-COMMON-SYNTAX_TableDefn_OptionalId_TableSpec`(inj{Identifier,OptionalId}(ID) #as _3,`_(elem_)_WASM-TEXT-COMMON-SYNTAX_TableSpec_TableElemType_ElemSegment`(`funcref_WASM-TEXT-COMMON-SYNTAX_TableElemType`(.KList) #as _5,ELEM))),DS),I,M)=>`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{TableDefn,Defn}(`(table__)_WASM-TEXT-COMMON-SYNTAX_TableDefn_OptionalId_TableSpec`(_3,inj{TableType,TableSpec}(`___WASM-TEXT-COMMON-SYNTAX_TableType_TextLimits_TableElemType`(`___WASM-TEXT-COMMON-SYNTAX_TextLimits_Int_Int`(`#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(ELEM),`#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(ELEM)),_5)))),`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ElemDefn,Defn}(`(elem___)_WASM-TEXT-COMMON-SYNTAX_ElemDefn_Index_Offset_ElemSegment`(inj{Identifier,Index}(ID),`(offset_)_WASM-TEXT-COMMON-SYNTAX_Offset_Instrs`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(_)_WASM-TEXT-COMMON-SYNTAX_FoldedInstr_PlainInstr`(aIConst(i32(.KList),inj{Int,WasmInt}(#token("0","Int"))))),inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList)))),ELEM)),`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(DS,I,M))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4896f0a8aef5ec8fdaf1ff6056ed8f04015e98df493480cb55089b64929e2569), org.kframework.attributes.Location(Location(476,10,479,32)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTableDefn{}, SortDefn{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'3:SortOptionalId{}),Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(\and{SortTableElemType{}}(Lblfuncref'Unds'WASM-TEXT-COMMON-SYNTAX'Unds'TableElemType{}(),Var'Unds'5:SortTableElemType{}),VarELEM:SortElemSegment{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTableDefn{}, SortDefn{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(Var'Unds'3:SortOptionalId{},inj{SortTableType{}, SortTableSpec{}}(Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableType'Unds'TextLimits'Unds'TableElemType{}(Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TextLimits'Unds'Int'Unds'Int{}(Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(VarELEM:SortElemSegment{}),Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(VarELEM:SortElemSegment{})),Var'Unds'5:SortTableElemType{})))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortElemDefn{}, SortDefn{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{}),Lbl'LPar'offset'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'Offset'Unds'Instrs{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr{}(LblaIConst{}(Lbli32{}(),inj{SortInt{}, SortWasmInt{}}(\dv{SortInt{}}("0"))))),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()))),VarELEM:SortElemSegment{})),Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(VarDS:SortDefns{},VarI:SortInt{},VarM:SortTypesInfo{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(476,10,479,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4896f0a8aef5ec8fdaf1ff6056ed8f04015e98df493480cb55089b64929e2569")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{TableDefn,Defn}(`(table__)_WASM-TEXT-COMMON-SYNTAX_TableDefn_OptionalId_TableSpec`(inj{Identifier,OptionalId}(ID) #as _3,`___WASM-TEXT-COMMON-SYNTAX_TableSpec_InlineExport_TableSpec`(`(export_)_WASM-TEXT-COMMON-SYNTAX_InlineExport_WasmString`(ENAME),SPEC))),DS),I,M)=>`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ExportDefn,Defn}(`(export_(_))_WASM-TEXT-COMMON-SYNTAX_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA-COMMON-SYNTAX_Externval_AllocatedKind_Index`(`table_WASM-DATA-COMMON-SYNTAX_AllocatedKind`(.KList),inj{Identifier,Index}(ID)))),`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{TableDefn,Defn}(`(table__)_WASM-TEXT-COMMON-SYNTAX_TableDefn_OptionalId_TableSpec`(_3,SPEC)),DS),I,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(86ba57277a6385e50b6b3356895957b4fbcfc551fe4520bec89744a5065c71d0), org.kframework.attributes.Location(Location(487,10,488,80)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTableDefn{}, SortDefn{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'3:SortOptionalId{}),Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineExport'Unds'WasmString{}(VarENAME:SortWasmString{}),VarSPEC:SortTableSpec{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortExportDefn{}, SortDefn{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lbltable'Unds'WASM-DATA-COMMON-SYNTAX'Unds'AllocatedKind{}(),inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))),Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTableDefn{}, SortDefn{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(Var'Unds'3:SortOptionalId{},VarSPEC:SortTableSpec{})),VarDS:SortDefns{}),VarI:SortInt{},VarM:SortTypesInfo{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(487,10,488,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("86ba57277a6385e50b6b3356895957b4fbcfc551fe4520bec89744a5065c71d0")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{TableDefn,Defn}(`(table__)_WASM-TEXT-COMMON-SYNTAX_TableDefn_OptionalId_TableSpec`(OID,`___WASM-TEXT-COMMON-SYNTAX_TableSpec_InlineImport_TableType`(`(import__)_WASM-TEXT-COMMON-SYNTAX_InlineImport_WasmString_WasmString`(MOD,NAME),TT))),DS),I,M)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{ImportDefn,Defn}(`(import___)_WASM-TEXT-COMMON-SYNTAX_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(table__)_WASM-TEXT-COMMON-SYNTAX_ImportDesc_OptionalId_TableType`(OID,TT))),DS),I,M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(69d32f10960e76900eef16e8dcbe9f4d50ce2d3babdeae673f74f01c1252e6a2), org.kframework.attributes.Location(Location(481,10,482,67)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTableDefn{}, SortDefn{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(VarOID:SortOptionalId{},Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{}),VarTT:SortTableType{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortImportDefn{}, SortDefn{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(VarOID:SortOptionalId{},VarTT:SortTableType{}))),VarDS:SortDefns{}),VarI:SortInt{},VarM:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(481,10,482,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("69d32f10960e76900eef16e8dcbe9f4d50ce2d3babdeae673f74f01c1252e6a2")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{TableDefn,Defn}(`(table__)_WASM-TEXT-COMMON-SYNTAX_TableDefn_OptionalId_TableSpec`(`.Identifier`(.KList),`_(elem_)_WASM-TEXT-COMMON-SYNTAX_TableSpec_TableElemType_ElemSegment`(`funcref_WASM-TEXT-COMMON-SYNTAX_TableElemType`(.KList),ELEM) #as _4)),DS),I,M)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{TableDefn,Defn}(`(table__)_WASM-TEXT-COMMON-SYNTAX_TableDefn_OptionalId_TableSpec`(inj{Identifier,OptionalId}(`#freshId(_)_WASM-DATA_Identifier_Int`(I)),_4)),DS),`_+Int_`(I,#token("1","Int")),M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6617d26516638fc385076d56d3626f10c6c73c44e0648f825b7a64b20177420a), org.kframework.attributes.Location(Location(473,10,474,83)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTableDefn{}, SortDefn{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(Lbl'Stop'Identifier{}(),\and{SortTableSpec{}}(Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(Lblfuncref'Unds'WASM-TEXT-COMMON-SYNTAX'Unds'TableElemType{}(),VarELEM:SortElemSegment{}),Var'Unds'4:SortTableSpec{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTableDefn{}, SortDefn{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(VarI:SortInt{})),Var'Unds'4:SortTableSpec{})),VarDS:SortDefns{}),Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")),VarM:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(473,10,474,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6617d26516638fc385076d56d3626f10c6c73c44e0648f825b7a64b20177420a")]

// rule `#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{TableDefn,Defn}(`(table__)_WASM-TEXT-COMMON-SYNTAX_TableDefn_OptionalId_TableSpec`(`.Identifier`(.KList),`___WASM-TEXT-COMMON-SYNTAX_TableSpec_InlineExport_TableSpec`(EXPO,SPEC) #as _4)),DS),I,M)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{TableDefn,Defn}(`(table__)_WASM-TEXT-COMMON-SYNTAX_TableDefn_OptionalId_TableSpec`(inj{Identifier,OptionalId}(`#freshId(_)_WASM-DATA_Identifier_Int`(I)),_4)),DS),`_+Int_`(I,#token("1","Int")),M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d0d5e409769c20f46d70a6450deb72967bbb34aca5a4fbfbc3cd2893d39db6b0), org.kframework.attributes.Location(Location(484,10,485,71)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTableDefn{}, SortDefn{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(Lbl'Stop'Identifier{}(),\and{SortTableSpec{}}(Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(VarEXPO:SortInlineExport{},VarSPEC:SortTableSpec{}),Var'Unds'4:SortTableSpec{}))),VarDS:SortDefns{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortTypesInfo{}, R} (
            X2:SortTypesInfo{},
            VarM:SortTypesInfo{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(X0:SortDefns{},X1:SortInt{},X2:SortTypesInfo{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortTableDefn{}, SortDefn{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(VarI:SortInt{})),Var'Unds'4:SortTableSpec{})),VarDS:SortDefns{}),Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")),VarM:SortTypesInfo{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(484,10,485,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d0d5e409769c20f46d70a6450deb72967bbb34aca5a4fbfbc3cd2893d39db6b0")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList)) #as _2,_0,_1)=>_2 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(08e2ba6257f60e35686587dc43754a1081e09e00e769a7e171ac39305550146a), org.kframework.attributes.Location(Location(562,10,562,49)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            \and{SortInstrs{}}(inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'2:SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'0:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            Var'Unds'1:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Var'Unds'2:SortInstrs{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(562,10,562,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("08e2ba6257f60e35686587dc43754a1081e09e00e769a7e171ac39305550146a")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(I,IS),DEPTH,M)=>`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(I,`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(IS,DEPTH,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d0c46b176484b931445a306f294216794a6f831f70fe7277d44439896ef375e), org.kframework.attributes.Location(Location(563,10,563,72)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortInstrs{},
          \exists{R} (Var'Unds'3:SortInt{},
          \exists{R} (Var'Unds'1:SortInstrs{},
          \exists{R} (Var'Unds'0:SortPlainInstr{},
          \exists{R} (Var'Unds'4:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(Var'Unds'0:SortPlainInstr{},Var'Unds'1:SortInstrs{})),Var'Unds'2:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'3:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'4:SortMap{}
                ),
                \top{R} ()
              )))
          )))))),
          \or{R} (
          \exists{R} (Var'Unds'8:SortMap{},
          \exists{R} (Var'Unds'6:SortInstrs{},
          \exists{R} (Var'Unds'7:SortInt{},
          \exists{R} (Var'Unds'5:SortPlainInstr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr{}(Var'Unds'5:SortPlainInstr{})),Var'Unds'6:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'7:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'8:SortMap{}
                ),
                \top{R} ()
              )))
          ))))),
          \or{R} (
          \exists{R} (Var'Unds'13:SortInstrs{},
          \exists{R} (Var'Unds'11:SortTypeDecls{},
          \exists{R} (Var'Unds'12:SortInstrs{},
          \exists{R} (Var'Unds'10:SortOptionalId{},
          \exists{R} (Var'Unds'15:SortMap{},
          \exists{R} (Var'Unds'9:SortIdentifier{},
          \exists{R} (Var'Unds'14:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'9:SortIdentifier{}),Var'Unds'10:SortOptionalId{}),Var'Unds'11:SortTypeDecls{},Var'Unds'12:SortInstrs{})),Var'Unds'13:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'14:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'15:SortMap{}
                ),
                \top{R} ()
              )))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'18:SortInstrs{},
          \exists{R} (Var'Unds'22:SortMap{},
          \exists{R} (Var'Unds'17:SortTypeDecls{},
          \exists{R} (Var'Unds'21:SortInt{},
          \exists{R} (Var'Unds'16:SortIdentifier{},
          \exists{R} (Var'Unds'19:SortOptionalId{},
          \exists{R} (Var'Unds'20:SortInstrs{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'16:SortIdentifier{}),Var'Unds'17:SortTypeDecls{},Var'Unds'18:SortInstrs{},Var'Unds'19:SortOptionalId{})),Var'Unds'20:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'21:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'22:SortMap{}
                ),
                \top{R} ()
              )))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'24:SortTypeDecls{},
          \exists{R} (Var'Unds'23:SortOptionalId{},
          \exists{R} (Var'Unds'28:SortMap{},
          \exists{R} (Var'Unds'26:SortInstrs{},
          \exists{R} (Var'Unds'27:SortInt{},
          \exists{R} (Var'Unds'25:SortInstrs{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'23:SortOptionalId{}),Var'Unds'24:SortTypeDecls{},Var'Unds'25:SortInstrs{})),Var'Unds'26:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'27:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'28:SortMap{}
                ),
                \top{R} ()
              )))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'29:SortOptionalId{},
          \exists{R} (Var'Unds'30:SortTypeDecls{},
          \exists{R} (Var'Unds'35:SortMap{},
          \exists{R} (Var'Unds'33:SortInstrs{},
          \exists{R} (Var'Unds'34:SortInt{},
          \exists{R} (Var'Unds'32:SortInstrs{},
          \exists{R} (Var'Unds'31:SortInstrs{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Var'Unds'29:SortOptionalId{},Var'Unds'30:SortTypeDecls{},Var'Unds'31:SortInstrs{},Var'Unds'32:SortInstrs{})),Var'Unds'33:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'34:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'35:SortMap{}
                ),
                \top{R} ()
              )))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'40:SortInstrs{},
          \exists{R} (Var'Unds'41:SortInt{},
          \exists{R} (Var'Unds'39:SortOptionalId{},
          \exists{R} (Var'Unds'37:SortTypeDecls{},
          \exists{R} (Var'Unds'38:SortInstrs{},
          \exists{R} (Var'Unds'36:SortIdentifier{},
          \exists{R} (Var'Unds'42:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'36:SortIdentifier{}),Var'Unds'37:SortTypeDecls{},Var'Unds'38:SortInstrs{},Var'Unds'39:SortOptionalId{})),Var'Unds'40:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'41:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'42:SortMap{}
                ),
                \top{R} ()
              )))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'44:SortInt{},
          \exists{R} (Var'Unds'45:SortMap{},
          \exists{R} (Var'Unds'43:SortInstrs{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  \and{SortInstrs{}}(inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'43:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'44:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'45:SortMap{}
                ),
                \top{R} ()
              )))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'51:SortOptionalId{},
          \exists{R} (Var'Unds'52:SortInstrs{},
          \exists{R} (Var'Unds'46:SortIdentifier{},
          \exists{R} (Var'Unds'50:SortInstrs{},
          \exists{R} (Var'Unds'54:SortMap{},
          \exists{R} (Var'Unds'48:SortInstrs{},
          \exists{R} (Var'Unds'49:SortOptionalId{},
          \exists{R} (Var'Unds'47:SortTypeDecls{},
          \exists{R} (Var'Unds'53:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'46:SortIdentifier{}),Var'Unds'47:SortTypeDecls{},Var'Unds'48:SortInstrs{},Var'Unds'49:SortOptionalId{},Var'Unds'50:SortInstrs{},Var'Unds'51:SortOptionalId{})),Var'Unds'52:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'53:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'54:SortMap{}
                ),
                \top{R} ()
              )))
          )))))))))),
          \or{R} (
          \exists{R} (Var'Unds'57:SortInstrs{},
          \exists{R} (Var'Unds'61:SortMap{},
          \exists{R} (Var'Unds'55:SortOptionalId{},
          \exists{R} (Var'Unds'56:SortTypeDecls{},
          \exists{R} (Var'Unds'59:SortInstrs{},
          \exists{R} (Var'Unds'60:SortInt{},
          \exists{R} (Var'Unds'58:SortOptionalId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'55:SortOptionalId{}),Var'Unds'56:SortTypeDecls{},Var'Unds'57:SortInstrs{},Var'Unds'58:SortOptionalId{})),Var'Unds'59:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'60:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'61:SortMap{}
                ),
                \top{R} ()
              )))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'62:SortIdentifier{},
          \exists{R} (Var'Unds'63:SortOptionalId{},
          \exists{R} (Var'Unds'68:SortMap{},
          \exists{R} (Var'Unds'66:SortInstrs{},
          \exists{R} (Var'Unds'67:SortInt{},
          \exists{R} (Var'Unds'65:SortInstrs{},
          \exists{R} (Var'Unds'64:SortTypeDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'62:SortIdentifier{}),Var'Unds'63:SortOptionalId{}),Var'Unds'64:SortTypeDecls{},Var'Unds'65:SortInstrs{})),Var'Unds'66:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'67:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'68:SortMap{}
                ),
                \top{R} ()
              )))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'73:SortOptionalId{},
          \exists{R} (Var'Unds'74:SortInstrs{},
          \exists{R} (Var'Unds'72:SortInstrs{},
          \exists{R} (Var'Unds'76:SortMap{},
          \exists{R} (Var'Unds'71:SortTypeDecls{},
          \exists{R} (Var'Unds'69:SortIdentifier{},
          \exists{R} (Var'Unds'70:SortOptionalId{},
          \exists{R} (Var'Unds'75:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'69:SortIdentifier{}),Var'Unds'70:SortOptionalId{}),Var'Unds'71:SortTypeDecls{},Var'Unds'72:SortInstrs{},Var'Unds'73:SortOptionalId{})),Var'Unds'74:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'75:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'76:SortMap{}
                ),
                \top{R} ()
              )))
          ))))))))),
          \or{R} (
          \exists{R} (Var'Unds'84:SortInt{},
          \exists{R} (Var'Unds'85:SortMap{},
          \exists{R} (Var'Unds'79:SortTypeDecls{},
          \exists{R} (Var'Unds'83:SortInstrs{},
          \exists{R} (Var'Unds'77:SortIdentifier{},
          \exists{R} (Var'Unds'78:SortOptionalId{},
          \exists{R} (Var'Unds'82:SortInstrs{},
          \exists{R} (Var'Unds'80:SortInstrs{},
          \exists{R} (Var'Unds'81:SortInstrs{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(Var'Unds'77:SortIdentifier{}),Var'Unds'78:SortOptionalId{}),Var'Unds'79:SortTypeDecls{},Var'Unds'80:SortInstrs{},Var'Unds'81:SortInstrs{},Var'Unds'82:SortInstrs{})),Var'Unds'83:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'84:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'85:SortMap{}
                ),
                \top{R} ()
              )))
          )))))))))),
          \or{R} (
          \exists{R} (Var'Unds'90:SortInt{},
          \exists{R} (Var'Unds'88:SortInstrs{},
          \exists{R} (Var'Unds'89:SortInstrs{},
          \exists{R} (Var'Unds'87:SortTypeDecls{},
          \exists{R} (Var'Unds'91:SortMap{},
          \exists{R} (Var'Unds'86:SortOptionalId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'86:SortOptionalId{}),Var'Unds'87:SortTypeDecls{},Var'Unds'88:SortInstrs{},\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'86:SortOptionalId{}))),Var'Unds'89:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'90:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'91:SortMap{}
                ),
                \top{R} ()
              )))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'95:SortMap{},
          \exists{R} (Var'Unds'94:SortInt{},
          \exists{R} (Var'Unds'93:SortInstrs{},
          \exists{R} (Var'Unds'92:SortElemSegment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(Var'Unds'92:SortElemSegment{})),Var'Unds'93:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'94:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'95:SortMap{}
                ),
                \top{R} ()
              )))
          ))))),
          \or{R} (
          \exists{R} (Var'Unds'96:SortOptionalId{},
          \exists{R} (Var'Unds'99:SortInstrs{},
          \exists{R} (Var'Unds'98:SortInstrs{},
          \exists{R} (Var'Unds'101:SortMap{},
          \exists{R} (Var'Unds'100:SortInt{},
          \exists{R} (Var'Unds'97:SortTypeDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'96:SortOptionalId{}),Var'Unds'97:SortTypeDecls{},Var'Unds'98:SortInstrs{},\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'96:SortOptionalId{}))),Var'Unds'99:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'100:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'101:SortMap{}
                ),
                \top{R} ()
              )))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'109:SortMap{},
          \exists{R} (Var'Unds'104:SortInstrs{},
          \exists{R} (Var'Unds'108:SortInt{},
          \exists{R} (Var'Unds'103:SortTypeDecls{},
          \exists{R} (Var'Unds'107:SortInstrs{},
          \exists{R} (Var'Unds'102:SortOptionalId{},
          \exists{R} (Var'Unds'105:SortInstrs{},
          \exists{R} (Var'Unds'106:SortInstrs{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'102:SortOptionalId{}),Var'Unds'103:SortTypeDecls{},Var'Unds'104:SortInstrs{},Var'Unds'105:SortInstrs{},Var'Unds'106:SortInstrs{})),Var'Unds'107:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'108:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'109:SortMap{}
                ),
                \top{R} ()
              )))
          ))))))))),
          \or{R} (
          \exists{R} (Var'Unds'115:SortInstrs{},
          \exists{R} (Var'Unds'114:SortIdentifier{},
          \exists{R} (Var'Unds'116:SortInt{},
          \exists{R} (Var'Unds'117:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(Var'Unds'114:SortIdentifier{}))),Var'Unds'115:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'116:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'117:SortMap{}
                ),
                \top{R} ()
              )))
          ))))),
          \or{R} (
          \exists{R} (Var'Unds'121:SortInstrs{},
          \exists{R} (Var'Unds'119:SortTypeDecls{},
          \exists{R} (Var'Unds'120:SortInstrs{},
          \exists{R} (Var'Unds'123:SortInt{},
          \exists{R} (Var'Unds'118:SortOptionalId{},
          \exists{R} (Var'Unds'124:SortMap{},
          \exists{R} (Var'Unds'122:SortInstrs{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'118:SortOptionalId{}),Var'Unds'119:SortTypeDecls{},Var'Unds'120:SortInstrs{},\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'118:SortOptionalId{}),Var'Unds'121:SortInstrs{},\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'118:SortOptionalId{}))),Var'Unds'122:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'123:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'124:SortMap{}
                ),
                \top{R} ()
              )))
          )))))))),
          \or{R} (
          \exists{R} (Var'Unds'126:SortTypeDecls{},
          \exists{R} (Var'Unds'130:SortMap{},
          \exists{R} (Var'Unds'125:SortOptionalId{},
          \exists{R} (Var'Unds'129:SortInt{},
          \exists{R} (Var'Unds'127:SortInstrs{},
          \exists{R} (Var'Unds'128:SortInstrs{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'125:SortOptionalId{}),Var'Unds'126:SortTypeDecls{},Var'Unds'127:SortInstrs{})),Var'Unds'128:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'129:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'130:SortMap{}
                ),
                \top{R} ()
              )))
          ))))))),
          \or{R} (
          \exists{R} (Var'Unds'132:SortInstrs{},
          \exists{R} (Var'Unds'131:SortIdentifier{},
          \exists{R} (Var'Unds'134:SortMap{},
          \exists{R} (Var'Unds'133:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortInstrs{}, R} (
                  X0:SortInstrs{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(Var'Unds'131:SortIdentifier{}))),Var'Unds'132:SortInstrs{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'133:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'134:SortMap{}
                ),
                \top{R} ()
              )))
          ))))),
          \bottom{R}()
        )))))))))))))))))))))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(VarI:SortInstr{},VarIS:SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarDEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            VarM:SortMap{}
          ),
          \top{R} ()
        )))
    )),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(VarI:SortInstr{},Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(VarIS:SortInstrs{},VarDEPTH:SortInt{},VarM:SortMap{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(563,10,563,72)"), owise{}(), UNIQUE'Unds'ID{}("2d0c46b176484b931445a306f294216794a6f831f70fe7277d44439896ef375e")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(_)_WASM-TEXT-COMMON-SYNTAX_FoldedInstr_PlainInstr`(PI)),IS'),DEPTH,M)=>`_appendInstrs__WASM-TEXT_Instrs_Instrs_Instrs`(`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(PI),inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList))),DEPTH,M),`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(IS',DEPTH,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d52fbc76751c7150f3d8eec878725f1b6d8a72a7ece14d4778e88c828a2efeb), org.kframework.attributes.Location(Location(623,10,625,58)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr{}(VarPI:SortPlainInstr{})),VarIS'Apos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarDEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            VarM:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'Unds'appendInstrs'UndsUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(VarPI:SortPlainInstr{}),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())),VarDEPTH:SortInt{},VarM:SortMap{}),Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(VarIS'Apos':SortInstrs{},VarDEPTH:SortInt{},VarM:SortMap{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(623,10,625,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2d52fbc76751c7150f3d8eec878725f1b6d8a72a7ece14d4778e88c828a2efeb")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(__)_WASM-TEXT-COMMON-SYNTAX_FoldedInstr_PlainInstr_Instrs`(PI,IS)),IS'),DEPTH,M)=>`_appendInstrs__WASM-TEXT_Instrs_Instrs_Instrs`(`_appendInstrs__WASM-TEXT_Instrs_Instrs_Instrs`(`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(IS,DEPTH,M),`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(PI),inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList))),DEPTH,M)),`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(IS',DEPTH,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3d153915add694eeaae32e447e7abf2fc28f67594e784006e41c3242f63e7451), org.kframework.attributes.Location(Location(619,10,622,58)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(VarPI:SortPlainInstr{},VarIS:SortInstrs{})),VarIS'Apos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarDEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            VarM:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'Unds'appendInstrs'UndsUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Lbl'Unds'appendInstrs'UndsUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(VarIS:SortInstrs{},VarDEPTH:SortInt{},VarM:SortMap{}),Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(VarPI:SortPlainInstr{}),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())),VarDEPTH:SortInt{},VarM:SortMap{})),Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(VarIS'Apos':SortInstrs{},VarDEPTH:SortInt{},VarM:SortMap{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(619,10,622,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3d153915add694eeaae32e447e7abf2fc28f67594e784006e41c3242f63e7451")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(block___)_WASM-TEXT-COMMON-SYNTAX_FoldedInstr_OptionalId_TypeDecls_Instrs`(`.Identifier`(.KList) #as _3,TDS,IS)),_IS'),_DEPTH,_M)=>`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`block___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(_3,TDS,IS,_3)),_IS'),_DEPTH,_M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2f4947d5927b0715c5105bee060dd6a02422459f696aeb4e09cfb6f5116e42b1), org.kframework.attributes.Location(Location(632,10,632,104)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'3:SortOptionalId{}),VarTDS:SortTypeDecls{},VarIS:SortInstrs{})),Var'Unds'IS'Apos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'DEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            Var'Unds'M:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Var'Unds'3:SortOptionalId{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Var'Unds'3:SortOptionalId{})),Var'Unds'IS'Apos':SortInstrs{}),Var'Unds'DEPTH:SortInt{},Var'Unds'M:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(632,10,632,104)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2f4947d5927b0715c5105bee060dd6a02422459f696aeb4e09cfb6f5116e42b1")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(block___)_WASM-TEXT-COMMON-SYNTAX_FoldedInstr_OptionalId_TypeDecls_Instrs`(inj{Identifier,OptionalId}(ID) #as _3,TDS,IS)),_IS'),_DEPTH,_M)=>`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`block___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(_3,TDS,IS,`.Identifier`(.KList))),_IS'),_DEPTH,_M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5aff1cb39fd46d4951a21d41d2eb7550d69305bc7260d8164046ab885a860498), org.kframework.attributes.Location(Location(631,10,631,104)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'3:SortOptionalId{}),VarTDS:SortTypeDecls{},VarIS:SortInstrs{})),Var'Unds'IS'Apos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'DEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            Var'Unds'M:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Var'Unds'3:SortOptionalId{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Lbl'Stop'Identifier{}())),Var'Unds'IS'Apos':SortInstrs{}),Var'Unds'DEPTH:SortInt{},Var'Unds'M:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(631,10,631,104)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5aff1cb39fd46d4951a21d41d2eb7550d69305bc7260d8164046ab885a860498")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(if___(then_)(else_))_WASM-TEXT-COMMON-SYNTAX_FoldedInstr_OptionalId_TypeDecls_Instrs_Instrs_Instrs`(`.Identifier`(.KList) #as _3,TDS,COND,IS,IS')),IS''),_DEPTH,_M)=>`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`_appendInstrs__WASM-TEXT_Instrs_Instrs_Instrs`(COND,`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`if___else__end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(_3,TDS,IS,_3,IS',_3)),IS'')),_DEPTH,_M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a6af0c7f39ad7404a231ac2c8966e9e3cad84ecbc71e2eb9225a4d84d28c7dee), org.kframework.attributes.Location(Location(639,10,639,154)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'3:SortOptionalId{}),VarTDS:SortTypeDecls{},VarCOND:SortInstrs{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{})),VarIS'AposApos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'DEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            Var'Unds'M:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(Lbl'Unds'appendInstrs'UndsUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(VarCOND:SortInstrs{},Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(Var'Unds'3:SortOptionalId{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Var'Unds'3:SortOptionalId{},VarIS'Apos':SortInstrs{},Var'Unds'3:SortOptionalId{})),VarIS'AposApos':SortInstrs{})),Var'Unds'DEPTH:SortInt{},Var'Unds'M:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(639,10,639,154)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a6af0c7f39ad7404a231ac2c8966e9e3cad84ecbc71e2eb9225a4d84d28c7dee")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(if___(then_)(else_))_WASM-TEXT-COMMON-SYNTAX_FoldedInstr_OptionalId_TypeDecls_Instrs_Instrs_Instrs`(inj{Identifier,OptionalId}(ID) #as _3,TDS,COND,IS,IS')),IS''),_DEPTH,_M)=>`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`_appendInstrs__WASM-TEXT_Instrs_Instrs_Instrs`(COND,`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`if___else__end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(_3,TDS,IS,`.Identifier`(.KList),IS',`.Identifier`(.KList))),IS'')),_DEPTH,_M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f57a6c20d6cee32cc84ed98829d2300ced28e5f3070ba9d3eb69c782fa088d78), org.kframework.attributes.Location(Location(638,10,638,154)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'3:SortOptionalId{}),VarTDS:SortTypeDecls{},VarCOND:SortInstrs{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{})),VarIS'AposApos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'DEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            Var'Unds'M:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(Lbl'Unds'appendInstrs'UndsUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(VarCOND:SortInstrs{},Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(Var'Unds'3:SortOptionalId{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Lbl'Stop'Identifier{}(),VarIS'Apos':SortInstrs{},Lbl'Stop'Identifier{}())),VarIS'AposApos':SortInstrs{})),Var'Unds'DEPTH:SortInt{},Var'Unds'M:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(638,10,638,154)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f57a6c20d6cee32cc84ed98829d2300ced28e5f3070ba9d3eb69c782fa088d78")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(if___(then_))_WASM-TEXT-COMMON-SYNTAX_FoldedInstr_OptionalId_TypeDecls_Instrs_Instrs`(OID,TDS,COND,IS)),_IS''),_DEPTH,_M)=>`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(if___(then_)(else_))_WASM-TEXT-COMMON-SYNTAX_FoldedInstr_OptionalId_TypeDecls_Instrs_Instrs_Instrs`(OID,TDS,COND,IS,inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList)))),_IS''),_DEPTH,_M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a7700692770e34dc9c14842003ed8f09c86c16907f497a98a6278cbab1c1ecf1), org.kframework.attributes.Location(Location(637,10,637,129)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarOID:SortOptionalId{},VarTDS:SortTypeDecls{},VarCOND:SortInstrs{},VarIS:SortInstrs{})),Var'Unds'IS'AposApos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'DEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            Var'Unds'M:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(VarOID:SortOptionalId{},VarTDS:SortTypeDecls{},VarCOND:SortInstrs{},VarIS:SortInstrs{},inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()))),Var'Unds'IS'AposApos':SortInstrs{}),Var'Unds'DEPTH:SortInt{},Var'Unds'M:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(637,10,637,129)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a7700692770e34dc9c14842003ed8f09c86c16907f497a98a6278cbab1c1ecf1")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(loop___)_WASM-TEXT-COMMON-SYNTAX_FoldedInstr_OptionalId_TypeDecls_Instrs`(`.Identifier`(.KList) #as _3,TDS,IS)),_IS'),_DEPTH,_M)=>`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`loop___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(_3,TDS,IS,_3)),_IS'),_DEPTH,_M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cfa50e485dae2c2ba941d618acb6572ab67bf13fda3d18b6cd961de878c607c4), org.kframework.attributes.Location(Location(635,10,635,102)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'3:SortOptionalId{}),VarTDS:SortTypeDecls{},VarIS:SortInstrs{})),Var'Unds'IS'Apos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'DEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            Var'Unds'M:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Var'Unds'3:SortOptionalId{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Var'Unds'3:SortOptionalId{})),Var'Unds'IS'Apos':SortInstrs{}),Var'Unds'DEPTH:SortInt{},Var'Unds'M:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(635,10,635,102)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("cfa50e485dae2c2ba941d618acb6572ab67bf13fda3d18b6cd961de878c607c4")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(loop___)_WASM-TEXT-COMMON-SYNTAX_FoldedInstr_OptionalId_TypeDecls_Instrs`(inj{Identifier,OptionalId}(ID) #as _3,TDS,IS)),_IS'),_DEPTH,_M)=>`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`loop___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(_3,TDS,IS,`.Identifier`(.KList))),_IS'),_DEPTH,_M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(263c045087ac0e2e828355f7af57f44b23ab28d9edbeab77ff26868bb10444f8), org.kframework.attributes.Location(Location(634,10,634,102)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'3:SortOptionalId{}),VarTDS:SortTypeDecls{},VarIS:SortInstrs{})),Var'Unds'IS'Apos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'DEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            Var'Unds'M:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Var'Unds'3:SortOptionalId{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Lbl'Stop'Identifier{}())),Var'Unds'IS'Apos':SortInstrs{}),Var'Unds'DEPTH:SortInt{},Var'Unds'M:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(634,10,634,102)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("263c045087ac0e2e828355f7af57f44b23ab28d9edbeab77ff26868bb10444f8")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`block___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(`.Identifier`(.KList) #as _4,TDS,IS,`.Identifier`(.KList) #as _4)),IS'),DEPTH,M)=>`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`block___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(_4,TDS,`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(IS,`_+Int_`(DEPTH,#token("1","Int")),M),_4)),`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(IS',DEPTH,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5a95830e16534c39f7eac345f5a736a9177df743fe5ff01176a93483162c4eb9), org.kframework.attributes.Location(Location(604,10,604,146)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'4:SortOptionalId{}),VarTDS:SortTypeDecls{},VarIS:SortInstrs{},\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'4:SortOptionalId{}))),VarIS'Apos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarDEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            VarM:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Var'Unds'4:SortOptionalId{},VarTDS:SortTypeDecls{},Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(VarIS:SortInstrs{},Lbl'UndsPlus'Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1")),VarM:SortMap{}),Var'Unds'4:SortOptionalId{})),Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(VarIS'Apos':SortInstrs{},VarDEPTH:SortInt{},VarM:SortMap{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(604,10,604,146)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5a95830e16534c39f7eac345f5a736a9177df743fe5ff01176a93483162c4eb9")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`block___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(inj{Identifier,OptionalId}(ID),TDS,IS,_OID')),_IS'),DEPTH,M)=>`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`block___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(`.Identifier`(.KList),TDS,IS,`.Identifier`(.KList))),_IS'),DEPTH,`Map:update`(M,inj{Identifier,KItem}(ID),inj{Int,KItem}(DEPTH))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b34113dd456f6f8a116fa70fbc3168452043b57f4b7cf30f2a77971badf870d), org.kframework.attributes.Location(Location(603,10,603,125)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Var'Unds'OID'Apos':SortOptionalId{})),Var'Unds'IS'Apos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarDEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            VarM:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Lbl'Stop'Identifier{}(),VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Lbl'Stop'Identifier{}())),Var'Unds'IS'Apos':SortInstrs{}),VarDEPTH:SortInt{},LblMap'Coln'update{}(VarM:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarDEPTH:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(603,10,603,125)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5b34113dd456f6f8a116fa70fbc3168452043b57f4b7cf30f2a77971badf870d")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Identifier,Index}(ID))),IS),DEPTH,M)=>`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(`_-Int_`(`_-Int_`(DEPTH,`project:Int`(`Map:lookup`(M,inj{Identifier,KItem}(ID)))),#token("1","Int"))))),`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(IS,DEPTH,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5dee67a5ebf78c9b373a21b6045ff2d0edd75ea8f122b44bd0ab694c9a17e011), org.kframework.attributes.Location(Location(587,10,587,134)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{}))),VarIS:SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarDEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            VarM:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(Lbl'Unds'-Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarDEPTH:SortInt{},Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarM:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}()))),\dv{SortInt{}}("1"))))),Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(VarIS:SortInstrs{},VarDEPTH:SortInt{},VarM:SortMap{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(587,10,587,134)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5dee67a5ebf78c9b373a21b6045ff2d0edd75ea8f122b44bd0ab694c9a17e011")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br_if__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Identifier,Index}(ID))),IS),DEPTH,M)=>`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br_if__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(`_-Int_`(`_-Int_`(DEPTH,`project:Int`(`Map:lookup`(M,inj{Identifier,KItem}(ID)))),#token("1","Int"))))),`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(IS,DEPTH,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f4737e772afae48b9f205b8eef5886e455a9f032573a259f6ba7f6c6ade7e380), org.kframework.attributes.Location(Location(588,10,588,134)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{}))),VarIS:SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarDEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            VarM:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(Lbl'Unds'-Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarDEPTH:SortInt{},Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarM:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}()))),\dv{SortInt{}}("1"))))),Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(VarIS:SortInstrs{},VarDEPTH:SortInt{},VarM:SortMap{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(588,10,588,134)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f4737e772afae48b9f205b8eef5886e455a9f032573a259f6ba7f6c6ade7e380")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br_table__WASM-TEXT-COMMON-SYNTAX_PlainInstr_ElemSegment`(ES)),IS),DEPTH,M)=>`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br_table__WASM-TEXT-COMMON-SYNTAX_PlainInstr_ElemSegment`(`elemSegment2Indices(_,_,_)_WASM-TEXT_ElemSegment_ElemSegment_Int_Map`(ES,DEPTH,M))),`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(IS,DEPTH,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(804eac46873c3df6575ec3dd4ef9393204034ea0f71c58474491401b5f387a0a), org.kframework.attributes.Location(Location(589,10,589,135)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(VarES:SortElemSegment{})),VarIS:SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarDEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            VarM:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lblbr'Unds'table'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'ElemSegment{}(LblelemSegment2Indices'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'ElemSegment'Unds'ElemSegment'Unds'Int'Unds'Map{}(VarES:SortElemSegment{},VarDEPTH:SortInt{},VarM:SortMap{}))),Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(VarIS:SortInstrs{},VarDEPTH:SortInt{},VarM:SortMap{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(589,10,589,135)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("804eac46873c3df6575ec3dd4ef9393204034ea0f71c58474491401b5f387a0a")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`if___else__end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(`.Identifier`(.KList) #as _5,TDS,IS,`.Identifier`(.KList) #as _5,IS',`.Identifier`(.KList) #as _5)),IS''),DEPTH,M)=>`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`if___else__end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(_5,TDS,`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(IS,`_+Int_`(DEPTH,#token("1","Int")),M),_5,`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(IS',`_+Int_`(DEPTH,#token("1","Int")),M),_5)),`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(IS'',DEPTH,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e1a857f2dff97bea36373253938ad80cbf086f44a01d8a9d5ba05fd75c4b7ab5), org.kframework.attributes.Location(Location(613,10,613,182)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'5:SortOptionalId{}),VarTDS:SortTypeDecls{},VarIS:SortInstrs{},\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'5:SortOptionalId{}),VarIS'Apos':SortInstrs{},\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'5:SortOptionalId{}))),VarIS'AposApos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarDEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            VarM:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(Var'Unds'5:SortOptionalId{},VarTDS:SortTypeDecls{},Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(VarIS:SortInstrs{},Lbl'UndsPlus'Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1")),VarM:SortMap{}),Var'Unds'5:SortOptionalId{},Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(VarIS'Apos':SortInstrs{},Lbl'UndsPlus'Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1")),VarM:SortMap{}),Var'Unds'5:SortOptionalId{})),Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(VarIS'AposApos':SortInstrs{},VarDEPTH:SortInt{},VarM:SortMap{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(613,10,613,182)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e1a857f2dff97bea36373253938ad80cbf086f44a01d8a9d5ba05fd75c4b7ab5")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`if___else__end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(inj{Identifier,OptionalId}(ID),TDS,IS,_OID',IS',_OID'')),_IS''),DEPTH,M)=>`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`if___else__end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(`.Identifier`(.KList),TDS,IS,`.Identifier`(.KList),IS',`.Identifier`(.KList))),_IS''),DEPTH,`Map:update`(M,inj{Identifier,KItem}(ID),inj{Int,KItem}(DEPTH))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6dbb28adeaca32f9646d29bd4c6a9df6889bb3442e1aa31e9cba970ee3dffae2), org.kframework.attributes.Location(Location(612,10,612,175)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Var'Unds'OID'Apos':SortOptionalId{},VarIS'Apos':SortInstrs{},Var'Unds'OID'AposApos':SortOptionalId{})),Var'Unds'IS'AposApos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarDEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            VarM:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(Lbl'Stop'Identifier{}(),VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Lbl'Stop'Identifier{}(),VarIS'Apos':SortInstrs{},Lbl'Stop'Identifier{}())),Var'Unds'IS'AposApos':SortInstrs{}),VarDEPTH:SortInt{},LblMap'Coln'update{}(VarM:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarDEPTH:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(612,10,612,175)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6dbb28adeaca32f9646d29bd4c6a9df6889bb3442e1aa31e9cba970ee3dffae2")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`if___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(`.Identifier`(.KList) #as _3,TDS,IS,_OID'')),_IS''),_DEPTH,_M)=>`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`if___else__end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(_3,TDS,IS,_3,inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList)),_3)),_IS''),_DEPTH,_M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ea8d4783cb8d9e4d1e4c941880bbb0548dbdbdc19e2b8183c68d62b8ce789d13), org.kframework.attributes.Location(Location(611,10,611,154)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'3:SortOptionalId{}),VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Var'Unds'OID'AposApos':SortOptionalId{})),Var'Unds'IS'AposApos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'DEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            Var'Unds'M:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(Var'Unds'3:SortOptionalId{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Var'Unds'3:SortOptionalId{},inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'3:SortOptionalId{})),Var'Unds'IS'AposApos':SortInstrs{}),Var'Unds'DEPTH:SortInt{},Var'Unds'M:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(611,10,611,154)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ea8d4783cb8d9e4d1e4c941880bbb0548dbdbdc19e2b8183c68d62b8ce789d13")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`if___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(inj{Identifier,OptionalId}(ID) #as _3,TDS,IS,_OID'')),_IS''),_DEPTH,_M)=>`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`if___else__end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(_3,TDS,IS,`.Identifier`(.KList),inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList)),`.Identifier`(.KList))),_IS''),_DEPTH,_M) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2201ad00784e38463bd2e89b3126e487089f79cdd34631c0f37eb25ddd8e667a), org.kframework.attributes.Location(Location(610,10,610,154)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'3:SortOptionalId{}),VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Var'Unds'OID'AposApos':SortOptionalId{})),Var'Unds'IS'AposApos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'DEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            Var'Unds'M:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(Var'Unds'3:SortOptionalId{},VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Lbl'Stop'Identifier{}(),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Lbl'Stop'Identifier{}())),Var'Unds'IS'AposApos':SortInstrs{}),Var'Unds'DEPTH:SortInt{},Var'Unds'M:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(610,10,610,154)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2201ad00784e38463bd2e89b3126e487089f79cdd34631c0f37eb25ddd8e667a")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`loop___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(`.Identifier`(.KList) #as _4,TDS,IS,`.Identifier`(.KList) #as _4)),IS'),DEPTH,M)=>`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`loop___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(_4,TDS,`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(IS,`_+Int_`(DEPTH,#token("1","Int")),M),_4)),`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(IS',DEPTH,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(90455d6449fb1e0258f5c340d8439564c03d11bcf9ca37968dce74fb2eb247fc), org.kframework.attributes.Location(Location(607,10,607,144)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'4:SortOptionalId{}),VarTDS:SortTypeDecls{},VarIS:SortInstrs{},\and{SortOptionalId{}}(Lbl'Stop'Identifier{}(),Var'Unds'4:SortOptionalId{}))),VarIS'Apos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarDEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            VarM:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Var'Unds'4:SortOptionalId{},VarTDS:SortTypeDecls{},Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(VarIS:SortInstrs{},Lbl'UndsPlus'Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1")),VarM:SortMap{}),Var'Unds'4:SortOptionalId{})),Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(VarIS'Apos':SortInstrs{},VarDEPTH:SortInt{},VarM:SortMap{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(607,10,607,144)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("90455d6449fb1e0258f5c340d8439564c03d11bcf9ca37968dce74fb2eb247fc")]

// rule `#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`loop___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(inj{Identifier,OptionalId}(ID),TDS,IS,_OID')),_IS'),DEPTH,M)=>`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`loop___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(`.Identifier`(.KList),TDS,IS,`.Identifier`(.KList))),_IS'),DEPTH,`Map:update`(M,inj{Identifier,KItem}(ID),inj{Int,KItem}(DEPTH))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d0ee22ff1d297939021616d330793ddb9c6666c180d2e668c0a81ccea9a8dc72), org.kframework.attributes.Location(Location(606,10,606,123)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Var'Unds'OID'Apos':SortOptionalId{})),Var'Unds'IS'Apos':SortInstrs{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarDEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            VarM:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(X0:SortInstrs{},X1:SortInt{},X2:SortMap{}),
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Lbl'Stop'Identifier{}(),VarTDS:SortTypeDecls{},VarIS:SortInstrs{},Lbl'Stop'Identifier{}())),Var'Unds'IS'Apos':SortInstrs{}),VarDEPTH:SortInt{},LblMap'Coln'update{}(VarM:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarDEPTH:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(606,10,606,123)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d0ee22ff1d297939021616d330793ddb9c6666c180d2e668c0a81ccea9a8dc72")]

// rule `#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,N)=>`_+Int_`(N,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE)) requires `_<Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(aafac7d179e42c8a214277846fdfaf9a4bedc66e9402ea9e6cc7855651a2c337), org.kframework.attributes.Location(Location(380,10,380,71)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarN:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(X0:SortIValType{},X1:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(380,10,380,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("aafac7d179e42c8a214277846fdfaf9a4bedc66e9402ea9e6cc7855651a2c337")]

// rule `#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(_ITYPE,N)=>N requires `_<=Int_`(#token("0","Int"),N) ensures #token("true","Bool") [UNIQUE_ID(92a7fb9608d2a12bd7dbb337a9f86c6e1c946ecd08a566df2c2cff44cc567417), org.kframework.attributes.Location(Location(381,10,381,71)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarN:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Var'Unds'ITYPE:SortIValType{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarN:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(X0:SortIValType{},X1:SortInt{}),
        VarN:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(381,10,381,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("92a7fb9608d2a12bd7dbb337a9f86c6e1c946ecd08a566df2c2cff44cc567417")]

// rule `#updateFuncIds(_,_)_WASM-TEXT_Context_Context_Map`(C,M)=>`#updateFuncIdsAux(_,_,_)_WASM-TEXT_Context_Context_Map_Bool`(C,M,#token("false","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b11cf283ab08cf35bb7e62744d79648e5b2c87a93b2be2aac95fb4aa45e025ee), org.kframework.attributes.Location(Location(717,10,717,64)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X1:SortMap{},
            VarM:SortMap{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortContext{},R} (
        Lbl'Hash'updateFuncIds'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map{}(X0:SortContext{},X1:SortMap{}),
        Lbl'Hash'updateFuncIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(VarC:SortContext{},VarM:SortMap{},\dv{SortBool{}}("false"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(717,10,717,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b11cf283ab08cf35bb7e62744d79648e5b2c87a93b2be2aac95fb4aa45e025ee")]

// rule `#updateFuncIdsAux(_,_,_)_WASM-TEXT_Context_Context_Map_Bool`(C,_0,#token("true","Bool"))=>C requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0a0492c3e4dd004f62bf843b419e306d29f9cb3b96af37ffd09681db8e8adcb4), org.kframework.attributes.Location(Location(719,10,719,44)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X1:SortMap{},
            Var'Unds'0:SortMap{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X2:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortContext{},R} (
        Lbl'Hash'updateFuncIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(X0:SortContext{},X1:SortMap{},X2:SortBool{}),
        VarC:SortContext{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(719,10,719,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("0a0492c3e4dd004f62bf843b419e306d29f9cb3b96af37ffd09681db8e8adcb4")]

// rule `#updateFuncIdsAux(_,_,_)_WASM-TEXT_Context_Context_Map_Bool`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(_localIds0,_globalIds1,_0,_typeIds2),M,#token("false","Bool"))=>`#updateFuncIdsAux(_,_,_)_WASM-TEXT_Context_Context_Map_Bool`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(_localIds0,_globalIds1,M,_typeIds2),M,#token("true","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0125ab7c7e7b247a8313b51d4241b670aebb2a7d0f9c1fe8588b01648f6c1351), org.kframework.attributes.Location(Location(718,10,718,73)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'localIds0:SortMap{},Var'Unds'globalIds1:SortMap{},Var'Unds'0:SortMap{},Var'Unds'typeIds2:SortMap{})
          ),\and{R} (
          \in{SortMap{}, R} (
            X1:SortMap{},
            VarM:SortMap{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X2:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortContext{},R} (
        Lbl'Hash'updateFuncIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(X0:SortContext{},X1:SortMap{},X2:SortBool{}),
        Lbl'Hash'updateFuncIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'localIds0:SortMap{},Var'Unds'globalIds1:SortMap{},VarM:SortMap{},Var'Unds'typeIds2:SortMap{}),VarM:SortMap{},\dv{SortBool{}}("true"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(718,10,718,73)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("0125ab7c7e7b247a8313b51d4241b670aebb2a7d0f9c1fe8588b01648f6c1351")]

// rule `#updateLocalIds(_,_)_WASM-TEXT_Context_Context_Map`(C,M)=>`#updateLocalIdsAux(_,_,_)_WASM-TEXT_Context_Context_Map_Bool`(C,M,#token("false","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e7ad48d37d648fe8c8973b63c2695504ca4770bcc8ac1da9fb8f95f0498d15b9), org.kframework.attributes.Location(Location(713,10,713,66)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X1:SortMap{},
            VarM:SortMap{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortContext{},R} (
        Lbl'Hash'updateLocalIds'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map{}(X0:SortContext{},X1:SortMap{}),
        Lbl'Hash'updateLocalIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(VarC:SortContext{},VarM:SortMap{},\dv{SortBool{}}("false"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(713,10,713,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e7ad48d37d648fe8c8973b63c2695504ca4770bcc8ac1da9fb8f95f0498d15b9")]

// rule `#updateLocalIdsAux(_,_,_)_WASM-TEXT_Context_Context_Map_Bool`(C,_0,#token("true","Bool"))=>C requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ba0b6c9de7903cf6df04cf9eda309164c02cb184b095e6117564871fb695ca50), org.kframework.attributes.Location(Location(715,10,715,45)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            VarC:SortContext{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X1:SortMap{},
            Var'Unds'0:SortMap{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X2:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortContext{},R} (
        Lbl'Hash'updateLocalIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(X0:SortContext{},X1:SortMap{},X2:SortBool{}),
        VarC:SortContext{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(715,10,715,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ba0b6c9de7903cf6df04cf9eda309164c02cb184b095e6117564871fb695ca50")]

// rule `#updateLocalIdsAux(_,_,_)_WASM-TEXT_Context_Context_Map_Bool`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(_0,_globalIds0,_funcIds1,_typeIds2),M,#token("false","Bool"))=>`#updateLocalIdsAux(_,_,_)_WASM-TEXT_Context_Context_Map_Bool`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(M,_globalIds0,_funcIds1,_typeIds2),M,#token("true","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c92907cf4281c7f139355e92a691094220a55e53523e22e2e5748b97295ac003), org.kframework.attributes.Location(Location(714,10,714,75)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(Var'Unds'0:SortMap{},Var'Unds'globalIds0:SortMap{},Var'Unds'funcIds1:SortMap{},Var'Unds'typeIds2:SortMap{})
          ),\and{R} (
          \in{SortMap{}, R} (
            X1:SortMap{},
            VarM:SortMap{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X2:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortContext{},R} (
        Lbl'Hash'updateLocalIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(X0:SortContext{},X1:SortMap{},X2:SortBool{}),
        Lbl'Hash'updateLocalIdsAux'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Context'Unds'Map'Unds'Bool{}(Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(VarM:SortMap{},Var'Unds'globalIds0:SortMap{},Var'Unds'funcIds1:SortMap{},Var'Unds'typeIds2:SortMap{}),VarM:SortMap{},\dv{SortBool{}}("true"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(714,10,714,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c92907cf4281c7f139355e92a691094220a55e53523e22e2e5748b97295ac003")]

// rule `#width(_)_WASM-DATA_Int_IValType`(i32(.KList))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(82d3219c417274cc5ba1f9c2cefc705748cd42373ea9630ccff8dcdc57b910b3), org.kframework.attributes.Location(Location(292,10,292,27)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Lbli32{}()
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(X0:SortIValType{}),
        \dv{SortInt{}}("32")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(292,10,292,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("82d3219c417274cc5ba1f9c2cefc705748cd42373ea9630ccff8dcdc57b910b3")]

// rule `#width(_)_WASM-DATA_Int_IValType`(i64(.KList))=>#token("64","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8afb55eb356d467c0b9b8f235e948c3ff49f7f0df4d5209e93553051bcfe6ac8), org.kframework.attributes.Location(Location(293,10,293,27)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Lbli64{}()
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(X0:SortIValType{}),
        \dv{SortInt{}}("64")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(293,10,293,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8afb55eb356d467c0b9b8f235e948c3ff49f7f0df4d5209e93553051bcfe6ac8")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(M,`_<<Int_`(_X,N))=>#token("0","Int") requires `_<=Int_`(`_*Int_`(M,#token("8","Int")),N) ensures #token("true","Bool") [UNIQUE_ID(a7ffed54ace0a24fc71729b8b2172e09c1fc8789abc37961e87f2058de47679f), org.kframework.attributes.Location(Location(172,10,173,34)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsStar'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("8")),VarN:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarM:SortInt{},Lbl'Unds-LT--LT-'Int'Unds'{}(Var'Unds'X:SortInt{},VarN:SortInt{})),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(172,10,173,34)"), simplification{}(""), UNIQUE'Unds'ID{}("a7ffed54ace0a24fc71729b8b2172e09c1fc8789abc37961e87f2058de47679f")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(MAX_WIDTH,`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,ADDR,WIDTH))=>`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,ADDR,`minInt(_,_)_INT-COMMON_Int_Int_Int`(MAX_WIDTH,WIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(01f500b3eb3f8dcf040c96b3b453e88c4776eb17044cdecbec02f44336741bfa), org.kframework.attributes.Location(Location(297,10,297,103)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarMAX'Unds'WIDTH:SortInt{},Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},VarADDR:SortInt{},VarWIDTH:SortInt{})),
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},VarADDR:SortInt{},LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VarMAX'Unds'WIDTH:SortInt{},VarWIDTH:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(297,10,297,103)"), simplification{}(""), UNIQUE'Unds'ID{}("01f500b3eb3f8dcf040c96b3b453e88c4776eb17044cdecbec02f44336741bfa")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,X)=>X requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),N),`_<=Int_`(#token("0","Int"),X)),`_<Int_`(X,`_<<Int_`(#token("1","Int"),`_*Int_`(N,#token("8","Int"))))) ensures #token("true","Bool") [UNIQUE_ID(050d629148cf5b64b243f800cae367581419f1d911b343244aeaa337a2b6b2d6), org.kframework.attributes.Location(Location(42,10,45,44)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarN:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarX:SortInt{})),Lbl'Unds-LT-'Int'Unds'{}(VarX:SortInt{},Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'UndsStar'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("8"))))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},VarX:SortInt{}),
        VarX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(42,10,45,44)"), simplification{}(""), UNIQUE'Unds'ID{}("050d629148cf5b64b243f800cae367581419f1d911b343244aeaa337a2b6b2d6")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,`#wrap(_,_)_WASM-DATA_Int_Int_Int`(M,X))=>`#wrap(_,_)_WASM-DATA_Int_Int_Int`(M,X) requires `_<=Int_`(M,N) ensures #token("true","Bool") [UNIQUE_ID(a8b72a250b8c4a3acc496404a95f6f41954363781803a44269e492be6f36b041), org.kframework.attributes.Location(Location(60,10,61,25)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarM:SortInt{},VarN:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarM:SortInt{},VarX:SortInt{})),
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarM:SortInt{},VarX:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(60,10,61,25)"), simplification{}(""), UNIQUE'Unds'ID{}("a8b72a250b8c4a3acc496404a95f6f41954363781803a44269e492be6f36b041")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,`#wrap(_,_)_WASM-DATA_Int_Int_Int`(M,X))=>`#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,X) requires `notBool_`(`_<=Int_`(M,N)) ensures #token("true","Bool") [UNIQUE_ID(540d990c0b393194f9083f27df76cf13cfcc75b2d05249207009903534eac00c), org.kframework.attributes.Location(Location(78,10,79,35)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarM:SortInt{},VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarM:SortInt{},VarX:SortInt{})),
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},VarX:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(78,10,79,35)"), simplification{}(""), UNIQUE'Unds'ID{}("540d990c0b393194f9083f27df76cf13cfcc75b2d05249207009903534eac00c")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,`_+Int_`(X,`#wrap(_,_)_WASM-DATA_Int_Int_Int`(M,Y)))=>`#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,`_+Int_`(X,Y)) requires `_<=Int_`(N,M) ensures #token("true","Bool") [UNIQUE_ID(4abfd1016caf8b22d15d22299fc5359f01a1abe54b7a303452ddfe5d4ec7b022), org.kframework.attributes.Location(Location(145,10,146,25)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarM:SortInt{},VarY:SortInt{}))),
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},VarY:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(145,10,146,25)"), simplification{}(""), UNIQUE'Unds'ID{}("4abfd1016caf8b22d15d22299fc5359f01a1abe54b7a303452ddfe5d4ec7b022")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,`_+Int_`(Y,`_<<Int_`(_X,M)))=>`#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,Y) requires `_andBool_`(`_<=Int_`(#token("0","Int"),M),`_<=Int_`(`_*Int_`(N,#token("8","Int")),M)) ensures #token("true","Bool") [UNIQUE_ID(e105084f6c25541506a77619f7c92993ff36773273c84adf24b180d9e1c20493), org.kframework.attributes.Location(Location(115,10,117,34)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarM:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsStar'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("8")),VarM:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarY:SortInt{},Lbl'Unds-LT--LT-'Int'Unds'{}(Var'Unds'X:SortInt{},VarM:SortInt{}))),
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},VarY:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(115,10,117,34)"), simplification{}(""), UNIQUE'Unds'ID{}("e105084f6c25541506a77619f7c92993ff36773273c84adf24b180d9e1c20493")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,`_+Int_`(`#wrap(_,_)_WASM-DATA_Int_Int_Int`(M,X),Y))=>`#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,`_+Int_`(X,Y)) requires `_<=Int_`(N,M) ensures #token("true","Bool") [UNIQUE_ID(206db6be82a27f9c56effaa0fdab1f4458c0f7727b127673fb3719dded12df7a), org.kframework.attributes.Location(Location(141,10,142,25)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},Lbl'UndsPlus'Int'Unds'{}(Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarM:SortInt{},VarX:SortInt{}),VarY:SortInt{})),
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},VarY:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(141,10,142,25)"), simplification{}(""), UNIQUE'Unds'ID{}("206db6be82a27f9c56effaa0fdab1f4458c0f7727b127673fb3719dded12df7a")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,`_+Int_`(`_<<Int_`(_X,M),Y))=>`#wrap(_,_)_WASM-DATA_Int_Int_Int`(N,Y) requires `_andBool_`(`_<=Int_`(#token("0","Int"),M),`_<=Int_`(`_*Int_`(N,#token("8","Int")),M)) ensures #token("true","Bool") [UNIQUE_ID(7ba731ccabf3c6793ccffeb180bcb27296f5258876974c154a3dbe75739d1f33), org.kframework.attributes.Location(Location(110,10,112,34)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarM:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsStar'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("8")),VarM:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(Var'Unds'X:SortInt{},VarM:SortInt{}),VarY:SortInt{})),
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},VarY:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(110,10,112,34)"), simplification{}(""), UNIQUE'Unds'ID{}("7ba731ccabf3c6793ccffeb180bcb27296f5258876974c154a3dbe75739d1f33")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(WIDTH,N)=>`_&Int_`(N,`_-Int_`(`_<<Int_`(#token("1","Int"),`_*Int_`(WIDTH,#token("8","Int"))),#token("1","Int"))) requires `_<Int_`(#token("0","Int"),WIDTH) ensures #token("true","Bool") [UNIQUE_ID(f38d1e8dfeac21f37bb27a71fdc25c629dec3457f6d088e5f1b0a9336afadfad), concrete, label(WASM-DATA.wrap-Positive), org.kframework.attributes.Location(Location(348,28,348,118)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarWIDTH:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarN:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
        Lbl'UndsAnd-'Int'Unds'{}(VarN:SortInt{},Lbl'Unds'-Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'UndsStar'Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("8"))),\dv{SortInt{}}("1")))),
      \top{R}()))
  [label{}("WASM-DATA.wrap-Positive"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(348,28,348,118)"), UNIQUE'Unds'ID{}("f38d1e8dfeac21f37bb27a71fdc25c629dec3457f6d088e5f1b0a9336afadfad")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(WIDTH,_N)=>#token("0","Int") requires `notBool_`(`_<Int_`(#token("0","Int"),WIDTH)) ensures #token("true","Bool") [UNIQUE_ID(425e99e035fa164ccde34585cbff7ec03a703071f4e40c30670a577acc74d755), org.kframework.attributes.Location(Location(349,28,349,118)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{})),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarWIDTH:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'N:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,28,349,118)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("425e99e035fa164ccde34585cbff7ec03a703071f4e40c30670a577acc74d755")]

// rule `#zero(_)_WASM-DATA_ValStack_ValTypes`(`.List{"listValTypes"}_ValTypes`(.KList))=>`.ValStack_WASM-DATA_ValStack`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c7a90101a06a4ffbe2f868ceafb0d9ddec14751cf375f551935046d7e9cfcafd), org.kframework.attributes.Location(Location(430,10,430,51)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValTypes{}, R} (
            X0:SortValTypes{},
            Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}()
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(X0:SortValTypes{}),
        Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(430,10,430,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c7a90101a06a4ffbe2f868ceafb0d9ddec14751cf375f551935046d7e9cfcafd")]

// rule `#zero(_)_WASM-DATA_ValStack_ValTypes`(listValTypes(inj{FValType,ValType}(FTYPE),VTYPES))=>`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,#token("0.0","Float"))),`#zero(_)_WASM-DATA_ValStack_ValTypes`(VTYPES)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d024234b744584d4e5c9de3e3c25637168769d3760315e7c238fd94d77030d8), org.kframework.attributes.Location(Location(432,10,432,71)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValTypes{}, R} (
            X0:SortValTypes{},
            LbllistValTypes{}(inj{SortFValType{}, SortValType{}}(VarFTYPE:SortFValType{}),VarVTYPES:SortValTypes{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(X0:SortValTypes{}),
        Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},\dv{SortFloat{}}("0.0"))),Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(VarVTYPES:SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(432,10,432,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2d024234b744584d4e5c9de3e3c25637168769d3760315e7c238fd94d77030d8")]

// rule `#zero(_)_WASM-DATA_ValStack_ValTypes`(listValTypes(inj{IValType,ValType}(ITYPE),VTYPES))=>`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,#token("0","Int"))),`#zero(_)_WASM-DATA_ValStack_ValTypes`(VTYPES)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(72f296a4e55499bcf6520d5a445ac6ba0cde930f1f48550705bf160d50ccc4ba), org.kframework.attributes.Location(Location(431,10,431,71)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValTypes{}, R} (
            X0:SortValTypes{},
            LbllistValTypes{}(inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{}),VarVTYPES:SortValTypes{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(X0:SortValTypes{}),
        Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},\dv{SortInt{}}("0"))),Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(VarVTYPES:SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(431,10,431,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("72f296a4e55499bcf6520d5a445ac6ba0cde930f1f48550705bf160d50ccc4ba")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(``inj{Val,KItem}(V) #as _10``~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(V,VALSTACK)),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires `_=/=K_`(_10,inj{Val,KItem}(`undefined_WASM-DATA_Val`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(f01aa48ab7f994a9f87efd258085d1cf46327875bc825fbe117bbce2cf0b14b0), org.kframework.attributes.Location(Location(310,10,312,32)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule321LHS{}(SortVal{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortKItem{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule321LHS{}(VarV:SortVal{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'10:SortKItem{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(Var'Unds'10:SortKItem{},dotk{}()),kseq{}(inj{SortVal{}, SortKItem{}}(Lblundefined'Unds'WASM-DATA'Unds'Val{}()),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),Var'Unds'10:SortKItem{}),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule321LHS{}(VarV:SortVal{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'10:SortKItem{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarV:SortVal{},VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(310,10,312,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("f01aa48ab7f994a9f87efd258085d1cf46327875bc825fbe117bbce2cf0b14b0")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(``inj{Instr,KItem}(aBr(_IDX)) #as _11``~>inj{Stmt,KItem}(_S)~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_11~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b444b22f9909c26014dce8dd20ad402704156907efc9ac09bfc202ccef81ecd3), org.kframework.attributes.Location(Location(454,10,454,60)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule322LHS{}(SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{},SortInt{},SortStmt{}) : SortGeneratedTopCell{}
  where rule322LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'IDX:SortInt{},Var'Unds'S:SortStmt{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(LblaBr{}(Var'Unds'IDX:SortInt{})),Var'Unds'11:SortKItem{}),kseq{}(inj{SortStmt{}, SortKItem{}}(Var'Unds'S:SortStmt{}),Var'Unds'DotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule322LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'IDX:SortInt{},Var'Unds'S:SortStmt{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(Var'Unds'11:SortKItem{},Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(454,10,454,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b444b22f9909c26014dce8dd20ad402704156907efc9ac09bfc202ccef81ecd3")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(``inj{PlainInstr,KItem}(aReturn(.KList)) #as _11``~>inj{Label,KItem}(_L)~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_11~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f9eff4af602c2a04770f12c813da02eb004368a6c50d51b7fcf18f17b2fe0821), org.kframework.attributes.Location(Location(768,10,768,59)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule323LHS{}(SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{},SortLabel{}) : SortGeneratedTopCell{}
  where rule323LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'L:SortLabel{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortPlainInstr{}, SortKItem{}}(LblaReturn{}()),Var'Unds'11:SortKItem{}),kseq{}(inj{SortLabel{}, SortKItem{}}(Var'Unds'L:SortLabel{}),Var'Unds'DotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule323LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'L:SortLabel{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(Var'Unds'11:SortKItem{},Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(768,10,768,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f9eff4af602c2a04770f12c813da02eb004368a6c50d51b7fcf18f17b2fe0821")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(``inj{PlainInstr,KItem}(aReturn(.KList)) #as _11``~>inj{Stmt,KItem}(_S)~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_11~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1b7cf3d2f9c6c853beaba4cc96be0edda07b9b046abd6ff87fe0baee9487350c), org.kframework.attributes.Location(Location(767,10,767,59)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule324LHS{}(SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{},SortStmt{}) : SortGeneratedTopCell{}
  where rule324LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'S:SortStmt{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortPlainInstr{}, SortKItem{}}(LblaReturn{}()),Var'Unds'11:SortKItem{}),kseq{}(inj{SortStmt{}, SortKItem{}}(Var'Unds'S:SortStmt{}),Var'Unds'DotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule324LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'S:SortStmt{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(Var'Unds'11:SortKItem{},Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(767,10,767,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("1b7cf3d2f9c6c853beaba4cc96be0edda07b9b046abd6ff87fe0baee9487350c")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _11``~>inj{Defn,KItem}(_D)~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_11~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1c3b4bebf1c78c68ce807f8e48d9ddcc5d90cc6a54b214ea6569cb6326587a42), org.kframework.attributes.Location(Location(302,10,302,56)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule325LHS{}(SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortDefn{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule325LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'D:SortDefn{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'11:SortKItem{}),kseq{}(inj{SortDefn{}, SortKItem{}}(Var'Unds'D:SortDefn{}),Var'Unds'DotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule325LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'D:SortDefn{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(Var'Unds'11:SortKItem{},Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(302,10,302,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("1c3b4bebf1c78c68ce807f8e48d9ddcc5d90cc6a54b214ea6569cb6326587a42")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _11``~>inj{Frame,KItem}(_F)~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_11~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a0a5f72ff55838026e85cf7f365a1241cbce738cf1c6261a38e27a24727cee1d), org.kframework.attributes.Location(Location(300,10,300,56)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule326LHS{}(SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{},SortFrame{}) : SortGeneratedTopCell{}
  where rule326LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'F:SortFrame{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'11:SortKItem{}),kseq{}(inj{SortFrame{}, SortKItem{}}(Var'Unds'F:SortFrame{}),Var'Unds'DotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule326LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'F:SortFrame{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(Var'Unds'11:SortKItem{},Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(300,10,300,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a0a5f72ff55838026e85cf7f365a1241cbce738cf1c6261a38e27a24727cee1d")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _11``~>inj{Instr,KItem}(_I)~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_11~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cb5dbd36a22a7e1869566d7b7c30198ff82e010c15cbdc64807901a16ade27f6), org.kframework.attributes.Location(Location(301,10,301,56)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule327LHS{}(SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{},SortInstr{}) : SortGeneratedTopCell{}
  where rule327LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'I:SortInstr{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'11:SortKItem{}),kseq{}(inj{SortInstr{}, SortKItem{}}(Var'Unds'I:SortInstr{}),Var'Unds'DotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule327LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'I:SortInstr{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(Var'Unds'11:SortKItem{},Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(301,10,301,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("cb5dbd36a22a7e1869566d7b7c30198ff82e010c15cbdc64807901a16ade27f6")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _11``~>inj{Label,KItem}(_L)~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_11~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1ce8eb4974b8c0d50876be7d9deb5b7f9be030583dd472755f5cd96d2cfcd9fe), org.kframework.attributes.Location(Location(299,10,299,56)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule328LHS{}(SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{},SortLabel{}) : SortGeneratedTopCell{}
  where rule328LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'L:SortLabel{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'11:SortKItem{}),kseq{}(inj{SortLabel{}, SortKItem{}}(Var'Unds'L:SortLabel{}),Var'Unds'DotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule328LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'11:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'L:SortLabel{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(Var'Unds'11:SortKItem{},Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,10,299,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("1ce8eb4974b8c0d50876be7d9deb5b7f9be030583dd472755f5cd96d2cfcd9fe")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(aLoop(VECTYP,IS,BLOCKMETA) #as _11)~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(`sequenceInstrs(_)_WASM_K_Instrs`(IS)~>inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(VECTYP,`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(_11,inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList))),VALSTACK))~>_DotVar2),`<valstack>`(`.ValStack_WASM-DATA_ValStack`(.KList)),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(516c2cb21d073fe99a9483f79fe80604f85d4dd63f597d66d6ccb89b82680bf3), org.kframework.attributes.Location(Location(490,10,491,54)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule329LHS{}(SortBlockMetaData{},SortInstrs{},SortValStack{},SortVecType{},SortCurFrameCell{},SortModuleRegistryCell{},SortInstr{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule329LHS{}(VarBLOCKMETA:SortBlockMetaData{},VarIS:SortInstrs{},VarVALSTACK:SortValStack{},VarVECTYP:SortVecType{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'11:SortInstr{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(\and{SortInstr{}}(LblaLoop{}(VarVECTYP:SortVecType{},VarIS:SortInstrs{},VarBLOCKMETA:SortBlockMetaData{}),Var'Unds'11:SortInstr{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule329LHS{}(VarBLOCKMETA:SortBlockMetaData{},VarIS:SortInstrs{},VarVALSTACK:SortValStack{},VarVECTYP:SortVecType{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'11:SortInstr{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(append{}(LblsequenceInstrs'LParUndsRParUnds'WASM'Unds'K'Unds'Instrs{}(VarIS:SortInstrs{}),kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(VarVECTYP:SortVecType{},Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(Var'Unds'11:SortInstr{},inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())),VarVALSTACK:SortValStack{})),Var'Unds'DotVar2:SortK{}))),Lbl'-LT-'valstack'-GT-'{}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(490,10,491,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("516c2cb21d073fe99a9483f79fe80604f85d4dd63f597d66d6ccb89b82680bf3")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Stmt,KItem}(`#initElements(_,_,_,_)_WASM_Stmt_Int_Int_Map_Ints`(ADDR,OFFSET,FADDRS,listInt(E,ES)))~>_DotVar2),_9,_10,_11,_12,_13,_14,`<mainStore>`(_2,_3,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),_0,_1,`<tdata>`(DATA))),_DotVar4)),_4,_5,_6,_7,_8),_15),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Stmt,KItem}(`#initElements(_,_,_,_)_WASM_Stmt_Int_Int_Map_Ints`(ADDR,`_+Int_`(OFFSET,#token("1","Int")),FADDRS,ES))~>_DotVar2),_9,_10,_11,_12,_13,_14,`<mainStore>`(_2,_3,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),_0,_1,`<tdata>`(`Map:update`(DATA,inj{Int,KItem}(OFFSET),`Map:lookup`(FADDRS,inj{Int,KItem}(E)))))),_DotVar4)),_4,_5,_6,_7,_8),_15),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ec50927fefebdb8864d40e07d87895f1e2141c216d5eb0d4651ae753598f978d), org.kframework.attributes.Location(Location(1160,10,1165,20)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule330LHS{}(SortInt{},SortMap{},SortInt{},SortInts{},SortMap{},SortInt{},SortTmaxCell{},SortTsizeCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortFuncsCell{},SortNextFuncAddrCell{},SortNextTabAddrCell{},SortMemsCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortValstackCell{},SortGeneratedCounterCell{},SortK{},SortTabInstCellMap{}) : SortGeneratedTopCell{}
  where rule330LHS{}(VarADDR:SortInt{},VarDATA:SortMap{},VarE:SortInt{},VarES:SortInts{},VarFADDRS:SortMap{},VarOFFSET:SortInt{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortCurFrameCell{},Var'Unds'11:SortModuleRegistryCell{},Var'Unds'12:SortModuleIdsCell{},Var'Unds'13:SortModuleInstancesCell{},Var'Unds'14:SortNextModuleIdxCell{},Var'Unds'15:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortValstackCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortTabInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Ints{}(VarADDR:SortInt{},VarOFFSET:SortInt{},VarFADDRS:SortMap{},LbllistInt{}(VarE:SortInt{},VarES:SortInts{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'9:SortValstackCell{},Var'Unds'10:SortCurFrameCell{},Var'Unds'11:SortModuleRegistryCell{},Var'Unds'12:SortModuleIdsCell{},Var'Unds'13:SortModuleInstancesCell{},Var'Unds'14:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Lbl'-LT-'tdata'-GT-'{}(VarDATA:SortMap{}))),Var'Unds'DotVar4:SortTabInstCellMap{})),Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'15:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule330LHS{}(VarADDR:SortInt{},VarDATA:SortMap{},VarE:SortInt{},VarES:SortInts{},VarFADDRS:SortMap{},VarOFFSET:SortInt{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortCurFrameCell{},Var'Unds'11:SortModuleRegistryCell{},Var'Unds'12:SortModuleIdsCell{},Var'Unds'13:SortModuleInstancesCell{},Var'Unds'14:SortNextModuleIdxCell{},Var'Unds'15:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortValstackCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortTabInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Ints{}(VarADDR:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarOFFSET:SortInt{},\dv{SortInt{}}("1")),VarFADDRS:SortMap{},VarES:SortInts{})),Var'Unds'DotVar2:SortK{})),Var'Unds'9:SortValstackCell{},Var'Unds'10:SortCurFrameCell{},Var'Unds'11:SortModuleRegistryCell{},Var'Unds'12:SortModuleIdsCell{},Var'Unds'13:SortModuleInstancesCell{},Var'Unds'14:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Lbl'-LT-'tdata'-GT-'{}(LblMap'Coln'update{}(VarDATA:SortMap{},inj{SortInt{}, SortKItem{}}(VarOFFSET:SortInt{}),LblMap'Coln'lookup{}(VarFADDRS:SortMap{},inj{SortInt{}, SortKItem{}}(VarE:SortInt{})))))),Var'Unds'DotVar4:SortTabInstCellMap{})),Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'15:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1160,10,1165,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ec50927fefebdb8864d40e07d87895f1e2141c216d5eb0d4651ae753598f978d")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Stmt,KItem}(`#initElements(_,_,_,_)_WASM_Stmt_Int_Int_Map_Ints`(_0,_1,_2,`.List{"listInt"}_Ints`(.KList)))~>_DotVar2),_3,_4,_5,_6,_7,_8,_9,_10),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),_3,_4,_5,_6,_7,_8,_9,_10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(895f99678cdee0e0ef2d45cf2016d507956f85be04e16d5f4f711fd7e8dcabca), org.kframework.attributes.Location(Location(1159,10,1159,83)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule331LHS{}(SortInt{},SortInt{},SortDeterministicMemoryGrowthCell{},SortMap{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule331LHS{}(Var'Unds'0:SortInt{},Var'Unds'1:SortInt{},Var'Unds'10:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortMap{},Var'Unds'3:SortValstackCell{},Var'Unds'4:SortCurFrameCell{},Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortModuleIdsCell{},Var'Unds'7:SortModuleInstancesCell{},Var'Unds'8:SortNextModuleIdxCell{},Var'Unds'9:SortMainStoreCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Ints{}(Var'Unds'0:SortInt{},Var'Unds'1:SortInt{},Var'Unds'2:SortMap{},Lbl'Stop'List'LBraQuot'listInt'QuotRBraUnds'Ints{}())),Var'Unds'DotVar2:SortK{})),Var'Unds'3:SortValstackCell{},Var'Unds'4:SortCurFrameCell{},Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortModuleIdsCell{},Var'Unds'7:SortModuleInstancesCell{},Var'Unds'8:SortNextModuleIdxCell{},Var'Unds'9:SortMainStoreCell{},Var'Unds'10:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule331LHS{}(Var'Unds'0:SortInt{},Var'Unds'1:SortInt{},Var'Unds'10:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortMap{},Var'Unds'3:SortValstackCell{},Var'Unds'4:SortCurFrameCell{},Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortModuleIdsCell{},Var'Unds'7:SortModuleInstancesCell{},Var'Unds'8:SortNextModuleIdxCell{},Var'Unds'9:SortMainStoreCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'3:SortValstackCell{},Var'Unds'4:SortCurFrameCell{},Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortModuleIdsCell{},Var'Unds'7:SortModuleInstancesCell{},Var'Unds'8:SortNextModuleIdxCell{},Var'Unds'9:SortMainStoreCell{},Var'Unds'10:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1159,10,1159,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("895f99678cdee0e0ef2d45cf2016d507956f85be04e16d5f4f711fd7e8dcabca")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`#init_locals___WASM_Instr_Int_ValStack`(N,`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`init_local___WASM_Instr_Int_Val`(N,VALUE))~>inj{Instr,KItem}(`#init_locals___WASM_Instr_Int_ValStack`(`_+Int_`(N,#token("1","Int")),VALSTACK))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e0ce541c1bec8f3876de5a10bcc34254612081656a66209bfcb7166542e5e78), org.kframework.attributes.Location(Location(512,10,516,20)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule332LHS{}(SortInt{},SortValStack{},SortVal{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule332LHS{}(VarN:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(VarN:SortInt{},Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule332LHS{}(VarN:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(VarN:SortInt{},VarVALUE:SortVal{})),kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),VarVALSTACK:SortValStack{})),Var'Unds'DotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(512,10,516,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9e0ce541c1bec8f3876de5a10bcc34254612081656a66209bfcb7166542e5e78")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`#init_locals___WASM_Instr_Int_ValStack`(_0,`.ValStack_WASM-DATA_ValStack`(.KList)))~>_DotVar2),_1,_2,_3,_4,_5,_6,_7,_8),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),_1,_2,_3,_4,_5,_6,_7,_8),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(991df74c583d07a6118db3b8c5677d2ab96b75b83f0e30cb8e456d586552d907), org.kframework.attributes.Location(Location(511,10,511,62)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule333LHS{}(SortInt{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule333LHS{}(Var'Unds'0:SortInt{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(Var'Unds'0:SortInt{},Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}())),Var'Unds'DotVar2:SortK{})),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule333LHS{}(Var'Unds'0:SortInt{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(511,10,511,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("991df74c583d07a6118db3b8c5677d2ab96b75b83f0e30cb8e456d586552d907")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`(invoke_)_WASM_Instr_Int`(FADDR))~>_DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(`<locals>`(LOCAL),`<curModIdx>`(inj{Int,OptionalInt}(MODIDX))),_7,_8,_9,_10,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`FuncDefCellMapItem`(`<fAddr>`(FADDR),`<funcDef>`(`<fAddr>`(FADDR),`<fCode>`(INSTRS),`<fType>`(inj{FuncType,Type}(aFuncType(aVecType(TDOMAIN),aVecType(TRANGE)))),`<fLocal>`(inj{VecType,Type}(aVecType(TLOCALS))),`<fModInst>`(MODIDX'),_DotVar5)),_DotVar4)),_0,_1,_2,_3,_4,_5,_6) #as _22,_11),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`init_locals__WASM_Instr_ValStack`(`_++__WASM-DATA_ValStack_ValStack_ValStack`(`#revs(_)_WASM-DATA_ValStack_ValStack`(`#take(_,_)_WASM-DATA_ValStack_Int_ValStack`(`lengthValTypes(_)_WASM-DATA_Int_ValTypes`(TDOMAIN),VALSTACK)),`#zero(_)_WASM-DATA_ValStack_ValTypes`(TLOCALS))))~>inj{Instr,KItem}(aBlock(aVecType(TRANGE),INSTRS,inj{OptionalInt,BlockMetaData}(`.Int_WASM-DATA_OptionalInt`(.KList))))~>inj{Frame,KItem}(`frame_____WASM_Frame_Int_ValTypes_ValStack_Map`(MODIDX,TRANGE,`#drop(_,_)_WASM-DATA_ValStack_Int_ValStack`(`lengthValTypes(_)_WASM-DATA_Int_ValTypes`(TDOMAIN),VALSTACK),LOCAL))~>_DotVar2),`<valstack>`(`.ValStack_WASM-DATA_ValStack`(.KList)),`<curFrame>`(`<locals>`(`.Map`(.KList)),`<curModIdx>`(inj{Int,OptionalInt}(MODIDX'))),_7,_8,_9,_10,_22,_11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5d07608da9a8dacf4e3f1a4b455f222510784891a0113cc5e4db623df32985db), org.kframework.attributes.Location(Location(749,10,765,20)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule334LHS{}(SortInt{},SortInstrs{},SortMap{},SortInt{},SortInt{},SortValTypes{},SortValTypes{},SortValTypes{},SortValStack{},SortNextFuncAddrCell{},SortTabsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextTabAddrCell{},SortMainStoreCell{},SortMemsCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortGeneratedCounterCell{},SortK{},SortFuncDefCellMap{},SortFuncMetadataCell{}) : SortGeneratedTopCell{}
  where rule334LHS{}(VarFADDR:SortInt{},VarINSTRS:SortInstrs{},VarLOCAL:SortMap{},VarMODIDX:SortInt{},VarMODIDX'Apos':SortInt{},VarTDOMAIN:SortValTypes{},VarTLOCALS:SortValTypes{},VarTRANGE:SortValTypes{},VarVALSTACK:SortValStack{},Var'Unds'0:SortNextFuncAddrCell{},Var'Unds'1:SortTabsCell{},Var'Unds'10:SortNextModuleIdxCell{},Var'Unds'11:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'22:SortMainStoreCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortModuleRegistryCell{},Var'Unds'8:SortModuleIdsCell{},Var'Unds'9:SortModuleInstancesCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortFuncDefCellMap{},Var'Unds'DotVar5:SortFuncMetadataCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(VarFADDR:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(VarLOCAL:SortMap{}),Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarMODIDX:SortInt{}))),Var'Unds'7:SortModuleRegistryCell{},Var'Unds'8:SortModuleIdsCell{},Var'Unds'9:SortModuleInstancesCell{},Var'Unds'10:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Lbl'-LT-'funcDef'-GT-'{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Lbl'-LT-'fCode'-GT-'{}(VarINSTRS:SortInstrs{}),Lbl'-LT-'fType'-GT-'{}(inj{SortFuncType{}, SortType{}}(LblaFuncType{}(LblaVecType{}(VarTDOMAIN:SortValTypes{}),LblaVecType{}(VarTRANGE:SortValTypes{})))),Lbl'-LT-'fLocal'-GT-'{}(inj{SortVecType{}, SortType{}}(LblaVecType{}(VarTLOCALS:SortValTypes{}))),Lbl'-LT-'fModInst'-GT-'{}(VarMODIDX'Apos':SortInt{}),Var'Unds'DotVar5:SortFuncMetadataCell{})),Var'Unds'DotVar4:SortFuncDefCellMap{})),Var'Unds'0:SortNextFuncAddrCell{},Var'Unds'1:SortTabsCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'22:SortMainStoreCell{}),Var'Unds'11:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule334LHS{}(VarFADDR:SortInt{},VarINSTRS:SortInstrs{},VarLOCAL:SortMap{},VarMODIDX:SortInt{},VarMODIDX'Apos':SortInt{},VarTDOMAIN:SortValTypes{},VarTLOCALS:SortValTypes{},VarTRANGE:SortValTypes{},VarVALSTACK:SortValStack{},Var'Unds'0:SortNextFuncAddrCell{},Var'Unds'1:SortTabsCell{},Var'Unds'10:SortNextModuleIdxCell{},Var'Unds'11:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'22:SortMainStoreCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortModuleRegistryCell{},Var'Unds'8:SortModuleIdsCell{},Var'Unds'9:SortModuleInstancesCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortFuncDefCellMap{},Var'Unds'DotVar5:SortFuncMetadataCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'Hash'revs'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack{}(Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(VarTDOMAIN:SortValTypes{}),VarVALSTACK:SortValStack{})),Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(VarTLOCALS:SortValTypes{})))),kseq{}(inj{SortInstr{}, SortKItem{}}(LblaBlock{}(LblaVecType{}(VarTRANGE:SortValTypes{}),VarINSTRS:SortInstrs{},inj{SortOptionalInt{}, SortBlockMetaData{}}(Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}()))),kseq{}(inj{SortFrame{}, SortKItem{}}(Lblframe'UndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map{}(VarMODIDX:SortInt{},VarTRANGE:SortValTypes{},Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(VarTDOMAIN:SortValTypes{}),VarVALSTACK:SortValStack{}),VarLOCAL:SortMap{})),Var'Unds'DotVar2:SortK{})))),Lbl'-LT-'valstack'-GT-'{}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Stop'Map{}()),Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarMODIDX'Apos':SortInt{}))),Var'Unds'7:SortModuleRegistryCell{},Var'Unds'8:SortModuleIdsCell{},Var'Unds'9:SortModuleInstancesCell{},Var'Unds'10:SortNextModuleIdxCell{},Var'Unds'22:SortMainStoreCell{},Var'Unds'11:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(749,10,765,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5d07608da9a8dacf4e3f1a4b455f222510784891a0113cc5e4db623df32985db")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(i64(.KList) #as _13,`loadOpLoad32_s`(.KList),EA))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(_13,#token("4","Int"),EA,signedBytes(.KList)))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(100e5b79ed9f4b18b83062a934e748a68a2a19ddf7c5ab117579bac8b9cccb3c), org.kframework.attributes.Location(Location(1016,10,1016,103)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule335LHS{}(SortInt{},SortValstackCell{},SortCurFrameCell{},SortIValType{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule335LHS{}(VarEA:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'13:SortIValType{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(\and{SortIValType{}}(Lbli64{}(),Var'Unds'13:SortIValType{}),LblloadOpLoad32'Unds's{}(),VarEA:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule335LHS{}(VarEA:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'13:SortIValType{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Var'Unds'13:SortIValType{},\dv{SortInt{}}("4"),VarEA:SortInt{},LblsignedBytes{}())),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1016,10,1016,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("100e5b79ed9f4b18b83062a934e748a68a2a19ddf7c5ab117579bac8b9cccb3c")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(i64(.KList) #as _13,`loadOpLoad32_u`(.KList),EA))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(_13,#token("4","Int"),EA,unsignedBytes(.KList)))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b7a41b69c0cafd64edd10174c1c762dfbfd75f14ef467b5ae3d7028d22f58836), org.kframework.attributes.Location(Location(1013,10,1013,103)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule336LHS{}(SortInt{},SortValstackCell{},SortCurFrameCell{},SortIValType{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule336LHS{}(VarEA:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'13:SortIValType{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(\and{SortIValType{}}(Lbli64{}(),Var'Unds'13:SortIValType{}),LblloadOpLoad32'Unds'u{}(),VarEA:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule336LHS{}(VarEA:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'13:SortIValType{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Var'Unds'13:SortIValType{},\dv{SortInt{}}("4"),VarEA:SortInt{},LblunsignedBytes{}())),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1013,10,1013,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b7a41b69c0cafd64edd10174c1c762dfbfd75f14ef467b5ae3d7028d22f58836")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(ITYPE,loadOpLoad(.KList),EA))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,`#numBytes(_)_WASM-DATA_Int_IValType`(ITYPE),EA,unsignedBytes(.KList)))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bd39cf4d57d06a3a0334326e45577363eaca318a3c7b72318f9f930fa22cd716), org.kframework.attributes.Location(Location(1010,10,1010,103)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule337LHS{}(SortInt{},SortIValType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule337LHS{}(VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},LblloadOpLoad{}(),VarEA:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule337LHS{}(VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),VarEA:SortInt{},LblunsignedBytes{}())),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1010,10,1010,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("bd39cf4d57d06a3a0334326e45577363eaca318a3c7b72318f9f930fa22cd716")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(ITYPE,`loadOpLoad16_s`(.KList),EA))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,#token("2","Int"),EA,signedBytes(.KList)))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d27789c09a01812195c626bcaf8d96a192c6c0f367d9d89e32cf62934d488f30), org.kframework.attributes.Location(Location(1015,10,1015,103)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule338LHS{}(SortInt{},SortIValType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule338LHS{}(VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},LblloadOpLoad16'Unds's{}(),VarEA:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule338LHS{}(VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},\dv{SortInt{}}("2"),VarEA:SortInt{},LblsignedBytes{}())),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1015,10,1015,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d27789c09a01812195c626bcaf8d96a192c6c0f367d9d89e32cf62934d488f30")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(ITYPE,`loadOpLoad16_u`(.KList),EA))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,#token("2","Int"),EA,unsignedBytes(.KList)))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8a1b00a51172118d4c3ec9562ccee68cd6474321fc80d3944dc368b0f6064a24), org.kframework.attributes.Location(Location(1012,10,1012,103)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule339LHS{}(SortInt{},SortIValType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule339LHS{}(VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},LblloadOpLoad16'Unds'u{}(),VarEA:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule339LHS{}(VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},\dv{SortInt{}}("2"),VarEA:SortInt{},LblunsignedBytes{}())),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1012,10,1012,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8a1b00a51172118d4c3ec9562ccee68cd6474321fc80d3944dc368b0f6064a24")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(ITYPE,`loadOpLoad8_s`(.KList),EA))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,#token("1","Int"),EA,signedBytes(.KList)))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b8974167ae15f2f5c9ed652cfba66f8089529b8cda099cf8a097aedaf0012de), org.kframework.attributes.Location(Location(1014,10,1014,103)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule340LHS{}(SortInt{},SortIValType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule340LHS{}(VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},LblloadOpLoad8'Unds's{}(),VarEA:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule340LHS{}(VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},\dv{SortInt{}}("1"),VarEA:SortInt{},LblsignedBytes{}())),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1014,10,1014,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5b8974167ae15f2f5c9ed652cfba66f8089529b8cda099cf8a097aedaf0012de")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(ITYPE,`loadOpLoad8_u`(.KList),EA))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,#token("1","Int"),EA,unsignedBytes(.KList)))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(97ab3b9f516012af2328a9e2385942b3a567121a4cab412af328637d90efe4e0), org.kframework.attributes.Location(Location(1011,10,1011,103)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule341LHS{}(SortInt{},SortIValType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule341LHS{}(VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},LblloadOpLoad8'Unds'u{}(),VarEA:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule341LHS{}(VarEA:SortInt{},VarITYPE:SortIValType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},\dv{SortInt{}}("1"),VarEA:SortInt{},LblunsignedBytes{}())),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1011,10,1011,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("97ab3b9f516012af2328a9e2385942b3a567121a4cab412af328637d90efe4e0")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(ITYPE,storeOpStore(.KList),EA,VAL))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(`#numBytes(_)_WASM-DATA_Int_IValType`(ITYPE),EA,inj{Int,Number}(VAL)))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c50b4d1218f52a85a0eebaf3c25591f51dc17222d8dc1635e542a4bd10ddcfab), org.kframework.attributes.Location(Location(989,10,989,102)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule342LHS{}(SortInt{},SortIValType{},SortInt{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule342LHS{}(VarEA:SortInt{},VarITYPE:SortIValType{},VarVAL:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},LblstoreOpStore{}(),VarEA:SortInt{},VarVAL:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule342LHS{}(VarEA:SortInt{},VarITYPE:SortIValType{},VarVAL:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),VarEA:SortInt{},inj{SortInt{}, SortNumber{}}(VarVAL:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(989,10,989,102)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c50b4d1218f52a85a0eebaf3c25591f51dc17222d8dc1635e542a4bd10ddcfab")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(_0,storeOpStore16(.KList),EA,VAL))~>_DotVar2),_1,_2,_3,_4,_5,_6,_7,_8),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(#token("2","Int"),EA,inj{Int,Number}(`#wrap(_,_)_WASM-DATA_Int_Int_Int`(#token("2","Int"),VAL))))~>_DotVar2),_1,_2,_3,_4,_5,_6,_7,_8),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(07e3d876ea5a42f567b1b643c2f76730bf0f72fa1b697dfbfdc6cd0f70e1cc2d), org.kframework.attributes.Location(Location(991,10,991,102)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule343LHS{}(SortInt{},SortInt{},SortIValType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule343LHS{}(VarEA:SortInt{},VarVAL:SortInt{},Var'Unds'0:SortIValType{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},LblstoreOpStore16{}(),VarEA:SortInt{},VarVAL:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule343LHS{}(VarEA:SortInt{},VarVAL:SortInt{},Var'Unds'0:SortIValType{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(\dv{SortInt{}}("2"),VarEA:SortInt{},inj{SortInt{}, SortNumber{}}(Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("2"),VarVAL:SortInt{})))),Var'Unds'DotVar2:SortK{})),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(991,10,991,102)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("07e3d876ea5a42f567b1b643c2f76730bf0f72fa1b697dfbfdc6cd0f70e1cc2d")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(_0,storeOpStore8(.KList),EA,VAL))~>_DotVar2),_1,_2,_3,_4,_5,_6,_7,_8),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(#token("1","Int"),EA,inj{Int,Number}(`#wrap(_,_)_WASM-DATA_Int_Int_Int`(#token("1","Int"),VAL))))~>_DotVar2),_1,_2,_3,_4,_5,_6,_7,_8),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(59d8a40541dd4ad017d79a5a28d9cfca6b9496dd418ae4ec7085e64ef26a760f), org.kframework.attributes.Location(Location(990,10,990,102)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule344LHS{}(SortInt{},SortInt{},SortIValType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule344LHS{}(VarEA:SortInt{},VarVAL:SortInt{},Var'Unds'0:SortIValType{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},LblstoreOpStore8{}(),VarEA:SortInt{},VarVAL:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule344LHS{}(VarEA:SortInt{},VarVAL:SortInt{},Var'Unds'0:SortIValType{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(\dv{SortInt{}}("1"),VarEA:SortInt{},inj{SortInt{}, SortNumber{}}(Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("1"),VarVAL:SortInt{})))),Var'Unds'DotVar2:SortK{})),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(990,10,990,102)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("59d8a40541dd4ad017d79a5a28d9cfca6b9496dd418ae4ec7085e64ef26a760f")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(i64(.KList),storeOpStore32(.KList),EA,VAL))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(#token("4","Int"),EA,inj{Int,Number}(`#wrap(_,_)_WASM-DATA_Int_Int_Int`(#token("4","Int"),VAL))))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(23a13c0740432af616ef1d97fe8219176759e8cb8630afda2e483308990f89f7), org.kframework.attributes.Location(Location(992,10,992,102)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule345LHS{}(SortInt{},SortInt{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule345LHS{}(VarEA:SortInt{},VarVAL:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Lbli64{}(),LblstoreOpStore32{}(),VarEA:SortInt{},VarVAL:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule345LHS{}(VarEA:SortInt{},VarVAL:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(\dv{SortInt{}}("4"),VarEA:SortInt{},inj{SortInt{}, SortNumber{}}(Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("4"),VarVAL:SortInt{})))),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(992,10,992,102)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("23a13c0740432af616ef1d97fe8219176759e8cb8630afda2e483308990f89f7")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(aBlock(VECTYP,IS,_0))~>_DotVar2),`<valstack>`(VALSTACK),_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(`sequenceInstrs(_)_WASM_K_Instrs`(IS)~>inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(VECTYP,inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList)),VALSTACK))~>_DotVar2),`<valstack>`(`.ValStack_WASM-DATA_ValStack`(.KList)),_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f17721b9abff878267e9c1e03b482a86d2b5d454b4b44a9a64708d4877b2f82f), org.kframework.attributes.Location(Location(442,10,443,54)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule346LHS{}(SortInstrs{},SortValStack{},SortVecType{},SortBlockMetaData{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule346LHS{}(VarIS:SortInstrs{},VarVALSTACK:SortValStack{},VarVECTYP:SortVecType{},Var'Unds'0:SortBlockMetaData{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaBlock{}(VarVECTYP:SortVecType{},VarIS:SortInstrs{},Var'Unds'0:SortBlockMetaData{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule346LHS{}(VarIS:SortInstrs{},VarVALSTACK:SortValStack{},VarVECTYP:SortVecType{},Var'Unds'0:SortBlockMetaData{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(append{}(LblsequenceInstrs'LParUndsRParUnds'WASM'Unds'K'Unds'Instrs{}(VarIS:SortInstrs{}),kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(VarVECTYP:SortVecType{},inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),VarVALSTACK:SortValStack{})),Var'Unds'DotVar2:SortK{}))),Lbl'-LT-'valstack'-GT-'{}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()),Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(442,10,443,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f17721b9abff878267e9c1e03b482a86d2b5d454b4b44a9a64708d4877b2f82f")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(aBr(N))~>inj{Label,KItem}(_L)~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(aBr(`_-Int_`(N,#token("1","Int"))))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires `_>Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(ec3603735e10b0ba2bc01bc7fd03f9864c511d538a67e820f5e477947b3f7fb1), org.kframework.attributes.Location(Location(457,10,458,24)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule347LHS{}(SortInt{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{},SortLabel{}) : SortGeneratedTopCell{}
  where rule347LHS{}(VarN:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'L:SortLabel{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaBr{}(VarN:SortInt{})),kseq{}(inj{SortLabel{}, SortKItem{}}(Var'Unds'L:SortLabel{}),Var'Unds'DotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule347LHS{}(VarN:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'L:SortLabel{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaBr{}(Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")))),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(457,10,458,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("ec3603735e10b0ba2bc01bc7fd03f9864c511d538a67e820f5e477947b3f7fb1")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(aBr(#token("0","Int")))~>inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(aVecType(TYPES),IS,VALSTACK'))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(`sequenceInstrs(_)_WASM_K_Instrs`(IS)~>_DotVar2),`<valstack>`(`_++__WASM-DATA_ValStack_ValStack_ValStack`(`#take(_,_)_WASM-DATA_ValStack_Int_ValStack`(`lengthValTypes(_)_WASM-DATA_Int_ValTypes`(TYPES),VALSTACK),VALSTACK')),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5204ff45c83f6edcab16da08852fcfe70405b7832eb8612f2eb06ef0afca3227), org.kframework.attributes.Location(Location(455,10,456,96)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule348LHS{}(SortInstrs{},SortValTypes{},SortValStack{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule348LHS{}(VarIS:SortInstrs{},VarTYPES:SortValTypes{},VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaBr{}(\dv{SortInt{}}("0"))),kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(LblaVecType{}(VarTYPES:SortValTypes{}),VarIS:SortInstrs{},VarVALSTACK'Apos':SortValStack{})),Var'Unds'DotVar2:SortK{}))),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule348LHS{}(VarIS:SortInstrs{},VarTYPES:SortValTypes{},VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(append{}(LblsequenceInstrs'LParUndsRParUnds'WASM'Unds'K'Unds'Instrs{}(VarIS:SortInstrs{}),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(VarTYPES:SortValTypes{}),VarVALSTACK:SortValStack{}),VarVALSTACK'Apos':SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(455,10,456,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5204ff45c83f6edcab16da08852fcfe70405b7832eb8612f2eb06ef0afca3227")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`aBr_if`(IDX))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_ValType_Number`(_TYPE,inj{Int,Number}(VAL)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(aBr(IDX))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires `_=/=Int_`(VAL,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(e1d71c274a240c85cc7e73980336a0fb8d41badea0fac863dedcf223d7d427d4), org.kframework.attributes.Location(Location(462,10,464,28)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule349LHS{}(SortInt{},SortInt{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{},SortValType{}) : SortGeneratedTopCell{}
  where rule349LHS{}(VarIDX:SortInt{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'TYPE:SortValType{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaBr'Unds'if{}(VarIDX:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(Var'Unds'TYPE:SortValType{},inj{SortInt{}, SortNumber{}}(VarVAL:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule349LHS{}(VarIDX:SortInt{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'TYPE:SortValType{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaBr{}(VarIDX:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(462,10,464,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("e1d71c274a240c85cc7e73980336a0fb8d41badea0fac863dedcf223d7d427d4")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`aBr_if`(_IDX))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_ValType_Number`(_TYPE,inj{Int,Number}(VAL)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires `_==Int_`(VAL,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(4295806fd51bdd75fb5831e1ac21c4166fb6efb739a6b82a596593827b7b6ce3), org.kframework.attributes.Location(Location(465,10,467,28)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule350LHS{}(SortInt{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{},SortInt{},SortValType{}) : SortGeneratedTopCell{}
  where rule350LHS{}(VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'IDX:SortInt{},Var'Unds'TYPE:SortValType{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaBr'Unds'if{}(Var'Unds'IDX:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(Var'Unds'TYPE:SortValType{},inj{SortInt{}, SortNumber{}}(VarVAL:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule350LHS{}(VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'IDX:SortInt{},Var'Unds'TYPE:SortValType{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(465,10,467,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("4295806fd51bdd75fb5831e1ac21c4166fb6efb739a6b82a596593827b7b6ce3")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`aBr_table`(ES))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_ValType_Number`(_TYPE,inj{Int,Number}(VAL)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(aBr(`#getInts(_,_)_WASM-DATA_Int_Ints_Int`(ES,`minInt(_,_)_INT-COMMON_Int_Int_Int`(VAL,`_-Int_`(`#lenInts(_)_WASM-DATA_Int_Ints`(ES),#token("1","Int"))))))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e4df8ecbb895f183609a98e6e6b55be9e6330c0312ce5262bc212a5889cc7381), org.kframework.attributes.Location(Location(471,10,472,69)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule351LHS{}(SortInts{},SortInt{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{},SortValType{}) : SortGeneratedTopCell{}
  where rule351LHS{}(VarES:SortInts{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'TYPE:SortValType{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaBr'Unds'table{}(VarES:SortInts{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(Var'Unds'TYPE:SortValType{},inj{SortInt{}, SortNumber{}}(VarVAL:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule351LHS{}(VarES:SortInts{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'TYPE:SortValType{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaBr{}(Lbl'Hash'getInts'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Ints'Unds'Int{}(VarES:SortInts{},LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VarVAL:SortInt{},Lbl'Unds'-Int'Unds'{}(Lbl'Hash'lenInts'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Ints{}(VarES:SortInts{}),\dv{SortInt{}}("1")))))),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(471,10,472,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e4df8ecbb895f183609a98e6e6b55be9e6330c0312ce5262bc212a5889cc7381")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(aCall(IDX))~>_DotVar2),_12,`<curFrame>`(_DotVar3,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _23,_13,_14,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_0,_1,_2,`<funcAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(IDX),inj{Int,KItem}(FADDR)),_DotVar6)),_3,_4,_5,_6,_7,_8,_9,_10,_11)),_DotVar4)) #as _26,_15,_16,_17),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`(invoke_)_WASM_Instr_Int`(FADDR))~>_DotVar2),_12,_23,_13,_14,_26,_15,_16,_17),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(616445850aedee953a9461fe0add9181eb3583adb2f8c63b6fc1ce7fa675fc12), org.kframework.attributes.Location(Location(779,10,785,23)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule352LHS{}(SortInt{},SortInt{},SortInt{},SortExportsCell{},SortTypesCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextTypeIdxCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortGeneratedCounterCell{},SortK{},SortLocalsCell{},SortModuleInstCellMap{},SortMap{}) : SortGeneratedTopCell{}
  where rule352LHS{}(VarCUR:SortInt{},VarFADDR:SortInt{},VarIDX:SortInt{},Var'Unds'0:SortExportsCell{},Var'Unds'1:SortTypesCell{},Var'Unds'10:SortNextGlobIdxCell{},Var'Unds'11:SortModuleMetadataCell{},Var'Unds'12:SortValstackCell{},Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortNextTypeIdxCell{},Var'Unds'23:SortCurFrameCell{},Var'Unds'26:SortModuleInstancesCell{},Var'Unds'3:SortNextFuncIdxCell{},Var'Unds'4:SortTabIdsCell{},Var'Unds'5:SortTabAddrsCell{},Var'Unds'6:SortMemIdsCell{},Var'Unds'7:SortMemAddrsCell{},Var'Unds'8:SortGlobIdsCell{},Var'Unds'9:SortGlobalAddrsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortLocalsCell{},Var'Unds'DotVar4:SortModuleInstCellMap{},Var'Unds'DotVar6:SortMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaCall{}(VarIDX:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'12:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar3:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'23:SortCurFrameCell{}),Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'0:SortExportsCell{},Var'Unds'1:SortTypesCell{},Var'Unds'2:SortNextTypeIdxCell{},Lbl'-LT-'funcAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarIDX:SortInt{}),inj{SortInt{}, SortKItem{}}(VarFADDR:SortInt{})),Var'Unds'DotVar6:SortMap{})),Var'Unds'3:SortNextFuncIdxCell{},Var'Unds'4:SortTabIdsCell{},Var'Unds'5:SortTabAddrsCell{},Var'Unds'6:SortMemIdsCell{},Var'Unds'7:SortMemAddrsCell{},Var'Unds'8:SortGlobIdsCell{},Var'Unds'9:SortGlobalAddrsCell{},Var'Unds'10:SortNextGlobIdxCell{},Var'Unds'11:SortModuleMetadataCell{})),Var'Unds'DotVar4:SortModuleInstCellMap{})),Var'Unds'26:SortModuleInstancesCell{}),Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule352LHS{}(VarCUR:SortInt{},VarFADDR:SortInt{},VarIDX:SortInt{},Var'Unds'0:SortExportsCell{},Var'Unds'1:SortTypesCell{},Var'Unds'10:SortNextGlobIdxCell{},Var'Unds'11:SortModuleMetadataCell{},Var'Unds'12:SortValstackCell{},Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortNextTypeIdxCell{},Var'Unds'23:SortCurFrameCell{},Var'Unds'26:SortModuleInstancesCell{},Var'Unds'3:SortNextFuncIdxCell{},Var'Unds'4:SortTabIdsCell{},Var'Unds'5:SortTabAddrsCell{},Var'Unds'6:SortMemIdsCell{},Var'Unds'7:SortMemAddrsCell{},Var'Unds'8:SortGlobIdsCell{},Var'Unds'9:SortGlobalAddrsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortLocalsCell{},Var'Unds'DotVar4:SortModuleInstCellMap{},Var'Unds'DotVar6:SortMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(VarFADDR:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'12:SortValstackCell{},Var'Unds'23:SortCurFrameCell{},Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},Var'Unds'26:SortModuleInstancesCell{},Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(779,10,785,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("616445850aedee953a9461fe0add9181eb3583adb2f8c63b6fc1ce7fa675fc12")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`aCall_indirect`(I))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(`call_indirect__WASM-COMMON-SYNTAX_PlainInstr_TypeUse`(`(type_)_WASM-COMMON-SYNTAX_TypeUse_Index`(inj{Int,Index}(I))))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ef96dc4ce498a4e6f4eb2ef404d4986662a8b7a3abddb622d9c37c3a1ef3add3), org.kframework.attributes.Location(Location(791,10,791,76)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule353LHS{}(SortInt{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule353LHS{}(VarI:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaCall'Unds'indirect{}(VarI:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule353LHS{}(VarI:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarI:SortInt{})))),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(791,10,791,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ef96dc4ce498a4e6f4eb2ef404d4986662a8b7a3abddb622d9c37c3a1ef3add3")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aCvtOp(TYPE,inj{Cvtf32Op,CvtOp}(CVTOP) #as _12))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_ValType_Number`(inj{FValType,ValType}(f32(.KList)),C1),VALSTACK)),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(TYPE,_12,C1))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(654f6e5ce9d0f9827a7c96664876593e7b3737231c543e3381668d0bccb86f58), org.kframework.attributes.Location(Location(385,10,386,66)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule354LHS{}(SortNumber{},SortCvtf32Op{},SortValType{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortCvtOp{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule354LHS{}(VarC1:SortNumber{},VarCVTOP:SortCvtf32Op{},VarTYPE:SortValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'12:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaCvtOp{}(VarTYPE:SortValType{},\and{SortCvtOp{}}(inj{SortCvtf32Op{}, SortCvtOp{}}(VarCVTOP:SortCvtf32Op{}),Var'Unds'12:SortCvtOp{}))),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(inj{SortFValType{}, SortValType{}}(Lblf32{}()),VarC1:SortNumber{}),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule354LHS{}(VarC1:SortNumber{},VarCVTOP:SortCvtf32Op{},VarTYPE:SortValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'12:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(VarTYPE:SortValType{},Var'Unds'12:SortCvtOp{},VarC1:SortNumber{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(385,10,386,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("654f6e5ce9d0f9827a7c96664876593e7b3737231c543e3381668d0bccb86f58")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aCvtOp(TYPE,inj{Cvtf64Op,CvtOp}(CVTOP) #as _12))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_ValType_Number`(inj{FValType,ValType}(f64(.KList)),C1),VALSTACK)),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(TYPE,_12,C1))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ce9af76c6105a98107897bd428990dbbd63e7ad8d38b3a0fb0c424ef3ea6d2a2), org.kframework.attributes.Location(Location(388,10,389,66)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule355LHS{}(SortNumber{},SortCvtf64Op{},SortValType{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortCvtOp{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule355LHS{}(VarC1:SortNumber{},VarCVTOP:SortCvtf64Op{},VarTYPE:SortValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'12:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaCvtOp{}(VarTYPE:SortValType{},\and{SortCvtOp{}}(inj{SortCvtf64Op{}, SortCvtOp{}}(VarCVTOP:SortCvtf64Op{}),Var'Unds'12:SortCvtOp{}))),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(inj{SortFValType{}, SortValType{}}(Lblf64{}()),VarC1:SortNumber{}),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule355LHS{}(VarC1:SortNumber{},VarCVTOP:SortCvtf64Op{},VarTYPE:SortValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'12:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(VarTYPE:SortValType{},Var'Unds'12:SortCvtOp{},VarC1:SortNumber{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(388,10,389,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ce9af76c6105a98107897bd428990dbbd63e7ad8d38b3a0fb0c424ef3ea6d2a2")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aCvtOp(TYPE,inj{Cvti32Op,CvtOp}(CVTOP) #as _12))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_ValType_Number`(inj{IValType,ValType}(i32(.KList)),C1),VALSTACK)),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(TYPE,_12,C1))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(49578d398dd40c8228cce778032f47680823185418b7f7e23ca7058e309cb1de), org.kframework.attributes.Location(Location(379,10,380,66)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule356LHS{}(SortNumber{},SortCvti32Op{},SortValType{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortCvtOp{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule356LHS{}(VarC1:SortNumber{},VarCVTOP:SortCvti32Op{},VarTYPE:SortValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'12:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaCvtOp{}(VarTYPE:SortValType{},\and{SortCvtOp{}}(inj{SortCvti32Op{}, SortCvtOp{}}(VarCVTOP:SortCvti32Op{}),Var'Unds'12:SortCvtOp{}))),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(inj{SortIValType{}, SortValType{}}(Lbli32{}()),VarC1:SortNumber{}),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule356LHS{}(VarC1:SortNumber{},VarCVTOP:SortCvti32Op{},VarTYPE:SortValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'12:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(VarTYPE:SortValType{},Var'Unds'12:SortCvtOp{},VarC1:SortNumber{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(379,10,380,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("49578d398dd40c8228cce778032f47680823185418b7f7e23ca7058e309cb1de")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aCvtOp(TYPE,inj{Cvti64Op,CvtOp}(CVTOP) #as _12))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_ValType_Number`(inj{IValType,ValType}(i64(.KList)),C1),VALSTACK)),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(TYPE,_12,C1))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4f65b7c5e4d276edb9132a4f603687bc980a272c61b5294a3bbe691f9255773c), org.kframework.attributes.Location(Location(382,10,383,66)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule357LHS{}(SortNumber{},SortCvti64Op{},SortValType{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortCvtOp{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule357LHS{}(VarC1:SortNumber{},VarCVTOP:SortCvti64Op{},VarTYPE:SortValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'12:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaCvtOp{}(VarTYPE:SortValType{},\and{SortCvtOp{}}(inj{SortCvti64Op{}, SortCvtOp{}}(VarCVTOP:SortCvti64Op{}),Var'Unds'12:SortCvtOp{}))),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(inj{SortIValType{}, SortValType{}}(Lbli64{}()),VarC1:SortNumber{}),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule357LHS{}(VarC1:SortNumber{},VarCVTOP:SortCvti64Op{},VarTYPE:SortValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'12:SortCvtOp{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(VarTYPE:SortValType{},Var'Unds'12:SortCvtOp{},VarC1:SortNumber{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(382,10,383,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4f65b7c5e4d276edb9132a4f603687bc980a272c61b5294a3bbe691f9255773c")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{DataDefn,KItem}(aDataDefn(IDX,IS,DATA))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(`sequenceInstrs(_)_WASM_K_Instrs`(IS)~>inj{DataDefn,KItem}(`data{__}_WASM_DataDefn_Int_Bytes`(IDX,DATA))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(95bdebc15d9eb60de9733b62e557ed1c24a0f757abc61b5f98594df082abe0f7), org.kframework.attributes.Location(Location(1178,10,1178,96)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule358LHS{}(SortBytes{},SortInt{},SortInstrs{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule358LHS{}(VarDATA:SortBytes{},VarIDX:SortInt{},VarIS:SortInstrs{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortDataDefn{}, SortKItem{}}(LblaDataDefn{}(VarIDX:SortInt{},VarIS:SortInstrs{},VarDATA:SortBytes{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule358LHS{}(VarDATA:SortBytes{},VarIDX:SortInt{},VarIS:SortInstrs{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(append{}(LblsequenceInstrs'LParUndsRParUnds'WASM'Unds'K'Unds'Instrs{}(VarIS:SortInstrs{}),kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Int'Unds'Bytes{}(VarIDX:SortInt{},VarDATA:SortBytes{})),Var'Unds'DotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1178,10,1178,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("95bdebc15d9eb60de9733b62e557ed1c24a0f757abc61b5f98594df082abe0f7")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aDrop(.KList))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(_0,VALSTACK)),_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),`<valstack>`(VALSTACK),_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bda0aa8f71a95847867e7c86c37b3a35ac429795490e991b226c34bc9e21774b), org.kframework.attributes.Location(Location(399,10,400,57)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule359LHS{}(SortValStack{},SortVal{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule359LHS{}(VarVALSTACK:SortValStack{},Var'Unds'0:SortVal{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaDrop{}()),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Var'Unds'0:SortVal{},VarVALSTACK:SortValStack{})),Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule359LHS{}(VarVALSTACK:SortValStack{},Var'Unds'0:SortVal{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(399,10,400,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("bda0aa8f71a95847867e7c86c37b3a35ac429795490e991b226c34bc9e21774b")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{ElemDefn,KItem}(aElemDefn(TABIDX,IS,ELEMSEGMENT))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(`sequenceInstrs(_)_WASM_K_Instrs`(IS)~>inj{ElemDefn,KItem}(`elem{__}_WASM_ElemDefn_Int_Ints`(TABIDX,ELEMSEGMENT))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(723754f7ba7576446a9ec0d71514b5bff3c7feabeaf87c1a91f7ac5a509cbd96), org.kframework.attributes.Location(Location(1147,10,1147,117)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule360LHS{}(SortInts{},SortInstrs{},SortInt{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule360LHS{}(VarELEMSEGMENT:SortInts{},VarIS:SortInstrs{},VarTABIDX:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortElemDefn{}, SortKItem{}}(LblaElemDefn{}(VarTABIDX:SortInt{},VarIS:SortInstrs{},VarELEMSEGMENT:SortInts{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule360LHS{}(VarELEMSEGMENT:SortInts{},VarIS:SortInstrs{},VarTABIDX:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(append{}(LblsequenceInstrs'LParUndsRParUnds'WASM'Unds'K'Unds'Instrs{}(VarIS:SortInstrs{}),kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Int'Unds'Ints{}(VarTABIDX:SortInt{},VarELEMSEGMENT:SortInts{})),Var'Unds'DotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1147,10,1147,117)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("723754f7ba7576446a9ec0d71514b5bff3c7feabeaf87c1a91f7ac5a509cbd96")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{ExportDefn,KItem}(aExportDefn(ENAME,IDX))~>_DotVar2),_12,`<curFrame>`(_DotVar3,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _23,_13,_14,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),`<exports>`(EXPORTS),_0,_1,_2,_3,_4,_5,_6,_7,_8,_9,_10,_11)),_DotVar4)),_15,_16,_17),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),_12,_23,_13,_14,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),`<exports>`(`Map:update`(EXPORTS,inj{WasmString,KItem}(ENAME),inj{Int,KItem}(IDX))),_0,_1,_2,_3,_4,_5,_6,_7,_8,_9,_10,_11)),_DotVar4)),_15,_16,_17),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f8a367672a684044c65916c72ac2c4caadc29fb3e67a10616e7ec56d41d2e170), org.kframework.attributes.Location(Location(1226,10,1232,23)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule361LHS{}(SortInt{},SortWasmString{},SortMap{},SortInt{},SortTypesCell{},SortNextTypeIdxCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortFuncAddrsCell{},SortCurFrameCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortGeneratedCounterCell{},SortK{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule361LHS{}(VarCUR:SortInt{},VarENAME:SortWasmString{},VarEXPORTS:SortMap{},VarIDX:SortInt{},Var'Unds'0:SortTypesCell{},Var'Unds'1:SortNextTypeIdxCell{},Var'Unds'10:SortNextGlobIdxCell{},Var'Unds'11:SortModuleMetadataCell{},Var'Unds'12:SortValstackCell{},Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortFuncAddrsCell{},Var'Unds'23:SortCurFrameCell{},Var'Unds'3:SortNextFuncIdxCell{},Var'Unds'4:SortTabIdsCell{},Var'Unds'5:SortTabAddrsCell{},Var'Unds'6:SortMemIdsCell{},Var'Unds'7:SortMemAddrsCell{},Var'Unds'8:SortGlobIdsCell{},Var'Unds'9:SortGlobalAddrsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortLocalsCell{},Var'Unds'DotVar4:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortExportDefn{}, SortKItem{}}(LblaExportDefn{}(VarENAME:SortWasmString{},VarIDX:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'12:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar3:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'23:SortCurFrameCell{}),Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'exports'-GT-'{}(VarEXPORTS:SortMap{}),Var'Unds'0:SortTypesCell{},Var'Unds'1:SortNextTypeIdxCell{},Var'Unds'2:SortFuncAddrsCell{},Var'Unds'3:SortNextFuncIdxCell{},Var'Unds'4:SortTabIdsCell{},Var'Unds'5:SortTabAddrsCell{},Var'Unds'6:SortMemIdsCell{},Var'Unds'7:SortMemAddrsCell{},Var'Unds'8:SortGlobIdsCell{},Var'Unds'9:SortGlobalAddrsCell{},Var'Unds'10:SortNextGlobIdxCell{},Var'Unds'11:SortModuleMetadataCell{})),Var'Unds'DotVar4:SortModuleInstCellMap{})),Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule361LHS{}(VarCUR:SortInt{},VarENAME:SortWasmString{},VarEXPORTS:SortMap{},VarIDX:SortInt{},Var'Unds'0:SortTypesCell{},Var'Unds'1:SortNextTypeIdxCell{},Var'Unds'10:SortNextGlobIdxCell{},Var'Unds'11:SortModuleMetadataCell{},Var'Unds'12:SortValstackCell{},Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortFuncAddrsCell{},Var'Unds'23:SortCurFrameCell{},Var'Unds'3:SortNextFuncIdxCell{},Var'Unds'4:SortTabIdsCell{},Var'Unds'5:SortTabAddrsCell{},Var'Unds'6:SortMemIdsCell{},Var'Unds'7:SortMemAddrsCell{},Var'Unds'8:SortGlobIdsCell{},Var'Unds'9:SortGlobalAddrsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortLocalsCell{},Var'Unds'DotVar4:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'12:SortValstackCell{},Var'Unds'23:SortCurFrameCell{},Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'exports'-GT-'{}(LblMap'Coln'update{}(VarEXPORTS:SortMap{},inj{SortWasmString{}, SortKItem{}}(VarENAME:SortWasmString{}),inj{SortInt{}, SortKItem{}}(VarIDX:SortInt{}))),Var'Unds'0:SortTypesCell{},Var'Unds'1:SortNextTypeIdxCell{},Var'Unds'2:SortFuncAddrsCell{},Var'Unds'3:SortNextFuncIdxCell{},Var'Unds'4:SortTabIdsCell{},Var'Unds'5:SortTabAddrsCell{},Var'Unds'6:SortMemIdsCell{},Var'Unds'7:SortMemAddrsCell{},Var'Unds'8:SortGlobIdsCell{},Var'Unds'9:SortGlobalAddrsCell{},Var'Unds'10:SortNextGlobIdxCell{},Var'Unds'11:SortModuleMetadataCell{})),Var'Unds'DotVar4:SortModuleInstCellMap{})),Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1226,10,1232,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f8a367672a684044c65916c72ac2c4caadc29fb3e67a10616e7ec56d41d2e170")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aFBinOp(FTYPE,BOP))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,C2)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,C1)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Val,KItem}(`_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,BOP,C1,C2))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4282bf692c2291f27dc4aaf5300673c760de9d16cbc5c50163e00c59d249cc53), org.kframework.attributes.Location(Location(350,10,351,83)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule362LHS{}(SortFBinOp{},SortFloat{},SortFloat{},SortFValType{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule362LHS{}(VarBOP:SortFBinOp{},VarC1:SortFloat{},VarC2:SortFloat{},VarFTYPE:SortFValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaFBinOp{}(VarFTYPE:SortFValType{},VarBOP:SortFBinOp{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarC2:SortFloat{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarC1:SortFloat{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule362LHS{}(VarBOP:SortFBinOp{},VarC1:SortFloat{},VarC2:SortFloat{},VarFTYPE:SortFValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},VarBOP:SortFBinOp{},VarC1:SortFloat{},VarC2:SortFloat{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(350,10,351,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4282bf692c2291f27dc4aaf5300673c760de9d16cbc5c50163e00c59d249cc53")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aFConst(FTYPE,VAL))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{FVal,KItem}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,VAL))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(adbaa08d325860f2bc200cd67e8e7cba568db44cb1a31b49a28be7f10d5c3aee), org.kframework.attributes.Location(Location(328,10,328,84)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule363LHS{}(SortFValType{},SortNumber{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule363LHS{}(VarFTYPE:SortFValType{},VarVAL:SortNumber{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaFConst{}(VarFTYPE:SortFValType{},VarVAL:SortNumber{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule363LHS{}(VarFTYPE:SortFValType{},VarVAL:SortNumber{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortFVal{}, SortKItem{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},VarVAL:SortNumber{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(328,10,328,84)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("adbaa08d325860f2bc200cd67e8e7cba568db44cb1a31b49a28be7f10d5c3aee")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aFRelOp(FTYPE,ROP))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,C2)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,C1)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Val,KItem}(`_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(FTYPE,ROP,C1,C2))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6b3f7b3af281047c13502bb865d905d287266837065f9e641e27312aa2d5104b), org.kframework.attributes.Location(Location(370,10,371,83)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule364LHS{}(SortFloat{},SortFloat{},SortFValType{},SortFRelOp{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule364LHS{}(VarC1:SortFloat{},VarC2:SortFloat{},VarFTYPE:SortFValType{},VarROP:SortFRelOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaFRelOp{}(VarFTYPE:SortFValType{},VarROP:SortFRelOp{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarC2:SortFloat{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarC1:SortFloat{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule364LHS{}(VarC1:SortFloat{},VarC2:SortFloat{},VarFTYPE:SortFValType{},VarROP:SortFRelOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},VarROP:SortFRelOp{},VarC1:SortFloat{},VarC2:SortFloat{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(370,10,371,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6b3f7b3af281047c13502bb865d905d287266837065f9e641e27312aa2d5104b")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aFUnOp(FTYPE,UOP))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,C1)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,UOP,C1))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fbe1f5d4afb3f9bbbfba6d9e503dafe113922ffc689dd75a8de5211b310aa4e9), org.kframework.attributes.Location(Location(339,10,340,68)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule365LHS{}(SortFloat{},SortFValType{},SortFUnOp{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule365LHS{}(VarC1:SortFloat{},VarFTYPE:SortFValType{},VarUOP:SortFUnOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaFUnOp{}(VarFTYPE:SortFValType{},VarUOP:SortFUnOp{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarC1:SortFloat{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule365LHS{}(VarC1:SortFloat{},VarFTYPE:SortFValType{},VarUOP:SortFUnOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},VarUOP:SortFUnOp{},VarC1:SortFloat{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(339,10,340,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("fbe1f5d4afb3f9bbbfba6d9e503dafe113922ffc689dd75a8de5211b310aa4e9")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{FuncDefn,KItem}(aFuncDefn(TYPIDX,LOCALS,INSTRS,META))~>_DotVar2),_17,`<curFrame>`(_DotVar4,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _27,_18,_19,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_7,`<types>`(`_Map_`(`_|->_`(inj{Int,KItem}(TYPIDX),inj{FuncType,KItem}(TYPE)),_DotVar7)),_8,`<funcAddrs>`(ADDRS),`<nextFuncIdx>`(NEXTIDX),_9,_10,_11,_12,_13,_14,_15,_16)),_DotVar5)),_20,`<mainStore>`(_0,`<nextFuncAddr>`(NEXTADDR),_1,_2,_3,_4,_5,_6),_21),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Alloc,KItem}(`allocfunc(_,_,_,_,_,_)_WASM_Alloc_Int_Int_FuncType_VecType_Instrs_FuncMetadata`(CUR,NEXTADDR,TYPE,LOCALS,INSTRS,META))~>_DotVar2),_17,_27,_18,_19,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_7,`<types>`(`_Map_`(`_|->_`(inj{Int,KItem}(TYPIDX),inj{FuncType,KItem}(TYPE)),_DotVar7)),_8,`<funcAddrs>`(`Map:update`(ADDRS,inj{Int,KItem}(NEXTIDX),inj{Int,KItem}(NEXTADDR))),`<nextFuncIdx>`(`_+Int_`(NEXTIDX,#token("1","Int"))),_9,_10,_11,_12,_13,_14,_15,_16)),_DotVar5)),_20,`<mainStore>`(_0,`<nextFuncAddr>`(`_+Int_`(NEXTADDR,#token("1","Int"))),_1,_2,_3,_4,_5,_6),_21),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(24fc14f5d633be29456ebde3c549a622a7b47a991bfefdf828d9e410b7598099), org.kframework.attributes.Location(Location(692,10,701,68)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule366LHS{}(SortMap{},SortInt{},SortInstrs{},SortVecType{},SortFuncMetadata{},SortInt{},SortInt{},SortFuncType{},SortInt{},SortFuncsCell{},SortTabsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextTabAddrCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortCurFrameCell{},SortMemsCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortExportsCell{},SortNextTypeIdxCell{},SortTabIdsCell{},SortGeneratedCounterCell{},SortK{},SortLocalsCell{},SortModuleInstCellMap{},SortMap{}) : SortGeneratedTopCell{}
  where rule366LHS{}(VarADDRS:SortMap{},VarCUR:SortInt{},VarINSTRS:SortInstrs{},VarLOCALS:SortVecType{},VarMETA:SortFuncMetadata{},VarNEXTADDR:SortInt{},VarNEXTIDX:SortInt{},VarTYPE:SortFuncType{},VarTYPIDX:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortTabsCell{},Var'Unds'10:SortTabAddrsCell{},Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortModuleMetadataCell{},Var'Unds'17:SortValstackCell{},Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'20:SortNextModuleIdxCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortExportsCell{},Var'Unds'8:SortNextTypeIdxCell{},Var'Unds'9:SortTabIdsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortLocalsCell{},Var'Unds'DotVar5:SortModuleInstCellMap{},Var'Unds'DotVar7:SortMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortFuncDefn{}, SortKItem{}}(LblaFuncDefn{}(VarTYPIDX:SortInt{},VarLOCALS:SortVecType{},VarINSTRS:SortInstrs{},VarMETA:SortFuncMetadata{})),Var'Unds'DotVar2:SortK{})),Var'Unds'17:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar4:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'27:SortCurFrameCell{}),Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'7:SortExportsCell{},Lbl'-LT-'types'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarTYPIDX:SortInt{}),inj{SortFuncType{}, SortKItem{}}(VarTYPE:SortFuncType{})),Var'Unds'DotVar7:SortMap{})),Var'Unds'8:SortNextTypeIdxCell{},Lbl'-LT-'funcAddrs'-GT-'{}(VarADDRS:SortMap{}),Lbl'-LT-'nextFuncIdx'-GT-'{}(VarNEXTIDX:SortInt{}),Var'Unds'9:SortTabIdsCell{},Var'Unds'10:SortTabAddrsCell{},Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortModuleMetadataCell{})),Var'Unds'DotVar5:SortModuleInstCellMap{})),Var'Unds'20:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Lbl'-LT-'nextFuncAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Var'Unds'1:SortTabsCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'21:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule366LHS{}(VarADDRS:SortMap{},VarCUR:SortInt{},VarINSTRS:SortInstrs{},VarLOCALS:SortVecType{},VarMETA:SortFuncMetadata{},VarNEXTADDR:SortInt{},VarNEXTIDX:SortInt{},VarTYPE:SortFuncType{},VarTYPIDX:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortTabsCell{},Var'Unds'10:SortTabAddrsCell{},Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortModuleMetadataCell{},Var'Unds'17:SortValstackCell{},Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'20:SortNextModuleIdxCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortExportsCell{},Var'Unds'8:SortNextTypeIdxCell{},Var'Unds'9:SortTabIdsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortLocalsCell{},Var'Unds'DotVar5:SortModuleInstCellMap{},Var'Unds'DotVar7:SortMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblallocfunc'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'Int'Unds'Int'Unds'FuncType'Unds'VecType'Unds'Instrs'Unds'FuncMetadata{}(VarCUR:SortInt{},VarNEXTADDR:SortInt{},VarTYPE:SortFuncType{},VarLOCALS:SortVecType{},VarINSTRS:SortInstrs{},VarMETA:SortFuncMetadata{})),Var'Unds'DotVar2:SortK{})),Var'Unds'17:SortValstackCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'7:SortExportsCell{},Lbl'-LT-'types'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarTYPIDX:SortInt{}),inj{SortFuncType{}, SortKItem{}}(VarTYPE:SortFuncType{})),Var'Unds'DotVar7:SortMap{})),Var'Unds'8:SortNextTypeIdxCell{},Lbl'-LT-'funcAddrs'-GT-'{}(LblMap'Coln'update{}(VarADDRS:SortMap{},inj{SortInt{}, SortKItem{}}(VarNEXTIDX:SortInt{}),inj{SortInt{}, SortKItem{}}(VarNEXTADDR:SortInt{}))),Lbl'-LT-'nextFuncIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTIDX:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'9:SortTabIdsCell{},Var'Unds'10:SortTabAddrsCell{},Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortModuleMetadataCell{})),Var'Unds'DotVar5:SortModuleInstCellMap{})),Var'Unds'20:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Lbl'-LT-'nextFuncAddr'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTADDR:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'1:SortTabsCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'21:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(692,10,701,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("24fc14f5d633be29456ebde3c549a622a7b47a991bfefdf828d9e410b7598099")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`aGlobal.get`(IDX))~>_DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(_DotVar6,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _29,_19,_20,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_7,_8,_9,_10,_11,_12,_13,_14,_15,_16,`<globalAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(IDX),inj{Int,KItem}(GADDR)),_DotVar9)),_17,_18)),_DotVar7)) #as _32,_21,`<mainStore>`(_0,_1,_2,_3,_4,_5,`<globals>`(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(`<gAddr>`(GADDR),`<globalInst>`(`<gAddr>`(GADDR),`<gValue>`(VALUE),_DotVar5)),_DotVar4)),_6) #as _34,_22),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)),_29,_19,_20,_32,_21,_34,_22),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b43aa80838a79715926a9ecda36f898f68fa2f192f94b00187ec5cea394cadae), org.kframework.attributes.Location(Location(585,10,597,23)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule367LHS{}(SortInt{},SortInt{},SortInt{},SortValStack{},SortVal{},SortFuncsCell{},SortNextFuncAddrCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortModuleRegistryCell{},SortTabsCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortCurFrameCell{},SortNextTabAddrCell{},SortModuleInstancesCell{},SortMainStoreCell{},SortMemsCell{},SortNextMemAddrCell{},SortNextGlobAddrCell{},SortExportsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortGeneratedCounterCell{},SortK{},SortGlobalInstCellMap{},SortGMutCell{},SortLocalsCell{},SortModuleInstCellMap{},SortMap{}) : SortGeneratedTopCell{}
  where rule367LHS{}(VarCUR:SortInt{},VarGADDR:SortInt{},VarIDX:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Var'Unds'15:SortMemAddrsCell{},Var'Unds'16:SortGlobIdsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortModuleMetadataCell{},Var'Unds'19:SortModuleRegistryCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortModuleIdsCell{},Var'Unds'21:SortNextModuleIdxCell{},Var'Unds'22:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'34:SortMainStoreCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortGlobalInstCellMap{},Var'Unds'DotVar5:SortGMutCell{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{},Var'Unds'DotVar9:SortMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaGlobal'Stop'get{}(VarIDX:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'29:SortCurFrameCell{}),Var'Unds'19:SortModuleRegistryCell{},Var'Unds'20:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Var'Unds'15:SortMemAddrsCell{},Var'Unds'16:SortGlobIdsCell{},Lbl'-LT-'globalAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarIDX:SortInt{}),inj{SortInt{}, SortKItem{}}(VarGADDR:SortInt{})),Var'Unds'DotVar9:SortMap{})),Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortModuleMetadataCell{})),Var'Unds'DotVar7:SortModuleInstCellMap{})),Var'Unds'32:SortModuleInstancesCell{}),Var'Unds'21:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'globalInst'-GT-'{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'gValue'-GT-'{}(VarVALUE:SortVal{}),Var'Unds'DotVar5:SortGMutCell{})),Var'Unds'DotVar4:SortGlobalInstCellMap{})),Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'34:SortMainStoreCell{}),Var'Unds'22:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule367LHS{}(VarCUR:SortInt{},VarGADDR:SortInt{},VarIDX:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Var'Unds'15:SortMemAddrsCell{},Var'Unds'16:SortGlobIdsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortModuleMetadataCell{},Var'Unds'19:SortModuleRegistryCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortModuleIdsCell{},Var'Unds'21:SortNextModuleIdxCell{},Var'Unds'22:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'34:SortMainStoreCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortGlobalInstCellMap{},Var'Unds'DotVar5:SortGMutCell{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{},Var'Unds'DotVar9:SortMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{})),Var'Unds'29:SortCurFrameCell{},Var'Unds'19:SortModuleRegistryCell{},Var'Unds'20:SortModuleIdsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'21:SortNextModuleIdxCell{},Var'Unds'34:SortMainStoreCell{},Var'Unds'22:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(585,10,597,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b43aa80838a79715926a9ecda36f898f68fa2f192f94b00187ec5cea394cadae")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`aGlobal.set`(IDX))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)),`<curFrame>`(_DotVar6,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _31,_20,_21,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_8,_9,_10,_11,_12,_13,_14,_15,_16,_17,`<globalAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(IDX),inj{Int,KItem}(GADDR)),_DotVar9)),_18,_19)),_DotVar7)) #as _34,_22,`<mainStore>`(_1,_2,_3,_4,_5,_6,`<globals>`(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(`<gAddr>`(GADDR),`<globalInst>`(`<gAddr>`(GADDR),`<gValue>`(_0),_DotVar5)),_DotVar4)),_7),_23),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),`<valstack>`(VALSTACK),_31,_20,_21,_34,_22,`<mainStore>`(_1,_2,_3,_4,_5,_6,`<globals>`(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(`<gAddr>`(GADDR),`<globalInst>`(`<gAddr>`(GADDR),`<gValue>`(VALUE),_DotVar5)),_DotVar4)),_7),_23),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6528e8f742b77ca79f67a6a12097a8ff663143b40b2dfb0b422832467be52620), org.kframework.attributes.Location(Location(599,10,611,23)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule368LHS{}(SortInt{},SortInt{},SortInt{},SortValStack{},SortVal{},SortVal{},SortFuncsCell{},SortNextTypeIdxCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortNextFuncAddrCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortTabsCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortNextTabAddrCell{},SortMemsCell{},SortNextMemAddrCell{},SortNextGlobAddrCell{},SortExportsCell{},SortTypesCell{},SortGeneratedCounterCell{},SortK{},SortGlobalInstCellMap{},SortGMutCell{},SortLocalsCell{},SortModuleInstCellMap{},SortMap{}) : SortGeneratedTopCell{}
  where rule368LHS{}(VarCUR:SortInt{},VarGADDR:SortInt{},VarIDX:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortVal{},Var'Unds'1:SortFuncsCell{},Var'Unds'10:SortNextTypeIdxCell{},Var'Unds'11:SortFuncAddrsCell{},Var'Unds'12:SortNextFuncIdxCell{},Var'Unds'13:SortTabIdsCell{},Var'Unds'14:SortTabAddrsCell{},Var'Unds'15:SortMemIdsCell{},Var'Unds'16:SortMemAddrsCell{},Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortNextGlobIdxCell{},Var'Unds'19:SortModuleMetadataCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'22:SortNextModuleIdxCell{},Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortTabsCell{},Var'Unds'31:SortCurFrameCell{},Var'Unds'34:SortModuleInstancesCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortNextGlobAddrCell{},Var'Unds'8:SortExportsCell{},Var'Unds'9:SortTypesCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortGlobalInstCellMap{},Var'Unds'DotVar5:SortGMutCell{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{},Var'Unds'DotVar9:SortMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaGlobal'Stop'set{}(VarIDX:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'31:SortCurFrameCell{}),Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'8:SortExportsCell{},Var'Unds'9:SortTypesCell{},Var'Unds'10:SortNextTypeIdxCell{},Var'Unds'11:SortFuncAddrsCell{},Var'Unds'12:SortNextFuncIdxCell{},Var'Unds'13:SortTabIdsCell{},Var'Unds'14:SortTabAddrsCell{},Var'Unds'15:SortMemIdsCell{},Var'Unds'16:SortMemAddrsCell{},Var'Unds'17:SortGlobIdsCell{},Lbl'-LT-'globalAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarIDX:SortInt{}),inj{SortInt{}, SortKItem{}}(VarGADDR:SortInt{})),Var'Unds'DotVar9:SortMap{})),Var'Unds'18:SortNextGlobIdxCell{},Var'Unds'19:SortModuleMetadataCell{})),Var'Unds'DotVar7:SortModuleInstCellMap{})),Var'Unds'34:SortModuleInstancesCell{}),Var'Unds'22:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'1:SortFuncsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'3:SortTabsCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'globalInst'-GT-'{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'gValue'-GT-'{}(Var'Unds'0:SortVal{}),Var'Unds'DotVar5:SortGMutCell{})),Var'Unds'DotVar4:SortGlobalInstCellMap{})),Var'Unds'7:SortNextGlobAddrCell{}),Var'Unds'23:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule368LHS{}(VarCUR:SortInt{},VarGADDR:SortInt{},VarIDX:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortVal{},Var'Unds'1:SortFuncsCell{},Var'Unds'10:SortNextTypeIdxCell{},Var'Unds'11:SortFuncAddrsCell{},Var'Unds'12:SortNextFuncIdxCell{},Var'Unds'13:SortTabIdsCell{},Var'Unds'14:SortTabAddrsCell{},Var'Unds'15:SortMemIdsCell{},Var'Unds'16:SortMemAddrsCell{},Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortNextGlobIdxCell{},Var'Unds'19:SortModuleMetadataCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'22:SortNextModuleIdxCell{},Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortTabsCell{},Var'Unds'31:SortCurFrameCell{},Var'Unds'34:SortModuleInstancesCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortNextGlobAddrCell{},Var'Unds'8:SortExportsCell{},Var'Unds'9:SortTypesCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortGlobalInstCellMap{},Var'Unds'DotVar5:SortGMutCell{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{},Var'Unds'DotVar9:SortMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'31:SortCurFrameCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'34:SortModuleInstancesCell{},Var'Unds'22:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'1:SortFuncsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'3:SortTabsCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'globalInst'-GT-'{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'gValue'-GT-'{}(VarVALUE:SortVal{}),Var'Unds'DotVar5:SortGMutCell{})),Var'Unds'DotVar4:SortGlobalInstCellMap{})),Var'Unds'7:SortNextGlobAddrCell{}),Var'Unds'23:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(599,10,611,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6528e8f742b77ca79f67a6a12097a8ff663143b40b2dfb0b422832467be52620")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{GlobalDefn,KItem}(aGlobalDefn(TYP,IS,OID))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(`sequenceInstrs(_)_WASM_K_Instrs`(IS)~>inj{Alloc,KItem}(`allocglobal(_,_)_WASM_Alloc_OptionalId_GlobalType`(OID,TYP))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5cf48f4d9c402bf2318710cc6c0c1174aede81741250f902ba15a6768a5c1d65), org.kframework.attributes.Location(Location(554,10,554,127)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule369LHS{}(SortInstrs{},SortOptionalId{},SortGlobalType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule369LHS{}(VarIS:SortInstrs{},VarOID:SortOptionalId{},VarTYP:SortGlobalType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(LblaGlobalDefn{}(VarTYP:SortGlobalType{},VarIS:SortInstrs{},VarOID:SortOptionalId{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule369LHS{}(VarIS:SortInstrs{},VarOID:SortOptionalId{},VarTYP:SortGlobalType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(append{}(LblsequenceInstrs'LParUndsRParUnds'WASM'Unds'K'Unds'Instrs{}(VarIS:SortInstrs{}),kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(VarOID:SortOptionalId{},VarTYP:SortGlobalType{})),Var'Unds'DotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(554,10,554,127)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5cf48f4d9c402bf2318710cc6c0c1174aede81741250f902ba15a6768a5c1d65")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aGrow(.KList))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),N)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`grow__WASM_Instr_Int`(N))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c09f48fad706e32afda8da6fbe93be26e7a8009188af9b7117a5842e138f2cf1), org.kframework.attributes.Location(Location(1077,10,1078,65)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule370LHS{}(SortInt{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule370LHS{}(VarN:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaGrow{}()),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),VarN:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule370LHS{}(VarN:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(VarN:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1077,10,1078,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c09f48fad706e32afda8da6fbe93be26e7a8009188af9b7117a5842e138f2cf1")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aIBinOp(ITYPE,BOP))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,C2)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,C1)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Val,KItem}(`_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,BOP,C1,C2))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(11061b0acf10de62112cc8a2f3e7493a3e2029cab9913a399247e756952b22c8), org.kframework.attributes.Location(Location(348,10,349,83)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule371LHS{}(SortIBinOp{},SortInt{},SortInt{},SortIValType{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule371LHS{}(VarBOP:SortIBinOp{},VarC1:SortInt{},VarC2:SortInt{},VarITYPE:SortIValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaIBinOp{}(VarITYPE:SortIValType{},VarBOP:SortIBinOp{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarC2:SortInt{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarC1:SortInt{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule371LHS{}(VarBOP:SortIBinOp{},VarC1:SortInt{},VarC2:SortInt{},VarITYPE:SortIValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},VarBOP:SortIBinOp{},VarC1:SortInt{},VarC2:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(348,10,349,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("11061b0acf10de62112cc8a2f3e7493a3e2029cab9913a399247e756952b22c8")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aIConst(ITYPE,inj{Int,WasmInt}(VAL)))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{IVal,KItem}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,VAL)))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(367319e692df47ff8c3e1d70d07858a8e274391e7df151663df3e4994a7daffc), org.kframework.attributes.Location(Location(327,10,327,84)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule372LHS{}(SortIValType{},SortInt{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule372LHS{}(VarITYPE:SortIValType{},VarVAL:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaIConst{}(VarITYPE:SortIValType{},inj{SortInt{}, SortWasmInt{}}(VarVAL:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule372LHS{}(VarITYPE:SortIValType{},VarVAL:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortIVal{}, SortKItem{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarVAL:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(327,10,327,84)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("367319e692df47ff8c3e1d70d07858a8e274391e7df151663df3e4994a7daffc")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aIRelOp(ITYPE,ROP))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,C2)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,C1)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Val,KItem}(`_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(ITYPE,ROP,C1,C2))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8708edf99a5f8c4afb0a5409ca4dc69609c95e13a8ee9e7cea44a1f313cb1421), org.kframework.attributes.Location(Location(368,10,369,83)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule373LHS{}(SortInt{},SortInt{},SortIValType{},SortIRelOp{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule373LHS{}(VarC1:SortInt{},VarC2:SortInt{},VarITYPE:SortIValType{},VarROP:SortIRelOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaIRelOp{}(VarITYPE:SortIValType{},VarROP:SortIRelOp{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarC2:SortInt{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarC1:SortInt{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule373LHS{}(VarC1:SortInt{},VarC2:SortInt{},VarITYPE:SortIValType{},VarROP:SortIRelOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},VarROP:SortIRelOp{},VarC1:SortInt{},VarC2:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(368,10,369,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8708edf99a5f8c4afb0a5409ca4dc69609c95e13a8ee9e7cea44a1f313cb1421")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aIUnOp(ITYPE,UOP))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,C1)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_IValType_IUnOp_Int`(ITYPE,UOP,C1))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4d0022927dd85844495ebbb33effbe7ab5756cc99b1cceeee0b3211245378155), org.kframework.attributes.Location(Location(337,10,338,68)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule374LHS{}(SortInt{},SortIValType{},SortIUnOp{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule374LHS{}(VarC1:SortInt{},VarITYPE:SortIValType{},VarUOP:SortIUnOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaIUnOp{}(VarITYPE:SortIValType{},VarUOP:SortIUnOp{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarC1:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule374LHS{}(VarC1:SortInt{},VarITYPE:SortIValType{},VarUOP:SortIUnOp{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IUnOp'Unds'Int{}(VarITYPE:SortIValType{},VarUOP:SortIUnOp{},VarC1:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(337,10,338,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4d0022927dd85844495ebbb33effbe7ab5756cc99b1cceeee0b3211245378155")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(aIf(VECTYP,IS,_0,_1))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),VAL)),VALSTACK)),_2,_3,_4,_5,_6,_7,_8),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(`sequenceInstrs(_)_WASM_K_Instrs`(IS)~>inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(VECTYP,inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList)),VALSTACK))~>_DotVar2),`<valstack>`(VALSTACK),_2,_3,_4,_5,_6,_7,_8),_DotVar0) requires `_=/=Int_`(VAL,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(f15527828b3be0488acff8bc153dc195561afce4482108ebee3782ecab416e39), org.kframework.attributes.Location(Location(480,10,482,28)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule375LHS{}(SortInstrs{},SortInt{},SortValStack{},SortVecType{},SortInstrs{},SortBlockMetaData{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule375LHS{}(VarIS:SortInstrs{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},VarVECTYP:SortVecType{},Var'Unds'0:SortInstrs{},Var'Unds'1:SortBlockMetaData{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaIf{}(VarVECTYP:SortVecType{},VarIS:SortInstrs{},Var'Unds'0:SortInstrs{},Var'Unds'1:SortBlockMetaData{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),VarVAL:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule375LHS{}(VarIS:SortInstrs{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},VarVECTYP:SortVecType{},Var'Unds'0:SortInstrs{},Var'Unds'1:SortBlockMetaData{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(append{}(LblsequenceInstrs'LParUndsRParUnds'WASM'Unds'K'Unds'Instrs{}(VarIS:SortInstrs{}),kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(VarVECTYP:SortVecType{},inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),VarVALSTACK:SortValStack{})),Var'Unds'DotVar2:SortK{}))),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(480,10,482,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("f15527828b3be0488acff8bc153dc195561afce4482108ebee3782ecab416e39")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(aIf(VECTYP,_0,IS,_1))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),VAL)),VALSTACK)),_2,_3,_4,_5,_6,_7,_8),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(`sequenceInstrs(_)_WASM_K_Instrs`(IS)~>inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(VECTYP,inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList)),VALSTACK))~>_DotVar2),`<valstack>`(VALSTACK),_2,_3,_4,_5,_6,_7,_8),_DotVar0) requires `_==Int_`(VAL,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(16bafc440f193756fe69b0d56232bd637905d876e3890bd7663972710329d9cd), org.kframework.attributes.Location(Location(484,10,486,27)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule376LHS{}(SortInstrs{},SortInt{},SortValStack{},SortVecType{},SortInstrs{},SortBlockMetaData{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule376LHS{}(VarIS:SortInstrs{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},VarVECTYP:SortVecType{},Var'Unds'0:SortInstrs{},Var'Unds'1:SortBlockMetaData{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaIf{}(VarVECTYP:SortVecType{},Var'Unds'0:SortInstrs{},VarIS:SortInstrs{},Var'Unds'1:SortBlockMetaData{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),VarVAL:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule376LHS{}(VarIS:SortInstrs{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},VarVECTYP:SortVecType{},Var'Unds'0:SortInstrs{},Var'Unds'1:SortBlockMetaData{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(append{}(LblsequenceInstrs'LParUndsRParUnds'WASM'Unds'K'Unds'Instrs{}(VarIS:SortInstrs{}),kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(VarVECTYP:SortVecType{},inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),VarVALSTACK:SortValStack{})),Var'Unds'DotVar2:SortK{}))),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(484,10,486,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("16bafc440f193756fe69b0d56232bd637905d876e3890bd7663972710329d9cd")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{ImportDefn,KItem}(aImportDefn(MOD,NAME,aFuncDesc(_id0,TIDX)))~>_DotVar2),_32,`<curFrame>`(_DotVar7,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _42,`<moduleRegistry>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(MOD),inj{Int,KItem}(MODIDX)),_DotVar3)) #as _45,_33,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,`<types>`(TYPES),_12,`<funcAddrs>`(FS),`<nextFuncIdx>`(NEXT),_13,_14,_15,_16,_17,_18,_19,_20)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),IDX),_DotVar12)),_21,_22,`<funcAddrs>`(`_Map_`(`_|->_`(IDX,inj{Int,KItem}(ADDR)),_DotVar11)),_23,_24,_25,_26,_27,_28,_29,_30,_31))),_DotVar8)),_34,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`FuncDefCellMapItem`(`<fAddr>`(ADDR),`<funcDef>`(`<fAddr>`(ADDR),_0,`<fType>`(FTYPE),_1,_2,_3)),_DotVar5)),_4,_5,_6,_7,_8,_9,_10) #as _49,_35),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),_32,_42,_45,_33,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,`<types>`(TYPES),_12,`<funcAddrs>`(`Map:update`(FS,inj{Int,KItem}(NEXT),inj{Int,KItem}(ADDR))),`<nextFuncIdx>`(`_+Int_`(NEXT,#token("1","Int"))),_13,_14,_15,_16,_17,_18,_19,_20)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),IDX),_DotVar12)),_21,_22,`<funcAddrs>`(`_Map_`(`_|->_`(IDX,inj{Int,KItem}(ADDR)),_DotVar11)),_23,_24,_25,_26,_27,_28,_29,_30,_31))),_DotVar8)),_34,_49,_35),_DotVar0) requires `_==K_`(inj{Type,KItem}(FTYPE),`Map:lookup`(TYPES,inj{Int,KItem}(TIDX))) ensures #token("true","Bool") [UNIQUE_ID(880172271a5583c438fca91832b0a6c1564a1215414d084e332fde2915c143a1), org.kframework.attributes.Location(Location(1250,10,1271,37)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule377LHS{}(SortInt{},SortInt{},SortMap{},SortType{},SortKItem{},SortWasmString{},SortInt{},SortWasmString{},SortInt{},SortInt{},SortMap{},SortFCodeCell{},SortFLocalCell{},SortNextGlobAddrCell{},SortExportsCell{},SortNextTypeIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortFModInstCell{},SortModuleMetadataCell{},SortTypesCell{},SortNextTypeIdxCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortFuncMetadataCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortValstackCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFuncAddrCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortMainStoreCell{},SortTabsCell{},SortNextTabAddrCell{},SortMemsCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortGeneratedCounterCell{},SortMap{},SortMap{},SortK{},SortMap{},SortFuncDefCellMap{},SortLocalsCell{},SortModuleInstCellMap{},SortOptionalId{}) : SortGeneratedTopCell{}
  where rule377LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarFS:SortMap{},VarFTYPE:SortType{},VarIDX:SortKItem{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarNAME:SortWasmString{},VarNEXT:SortInt{},VarTIDX:SortInt{},VarTYPES:SortMap{},Var'Unds'0:SortFCodeCell{},Var'Unds'1:SortFLocalCell{},Var'Unds'10:SortNextGlobAddrCell{},Var'Unds'11:SortExportsCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortTabIdsCell{},Var'Unds'14:SortTabAddrsCell{},Var'Unds'15:SortMemIdsCell{},Var'Unds'16:SortMemAddrsCell{},Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortGlobalAddrsCell{},Var'Unds'19:SortNextGlobIdxCell{},Var'Unds'2:SortFModInstCell{},Var'Unds'20:SortModuleMetadataCell{},Var'Unds'21:SortTypesCell{},Var'Unds'22:SortNextTypeIdxCell{},Var'Unds'23:SortNextFuncIdxCell{},Var'Unds'24:SortTabIdsCell{},Var'Unds'25:SortTabAddrsCell{},Var'Unds'26:SortMemIdsCell{},Var'Unds'27:SortMemAddrsCell{},Var'Unds'28:SortGlobIdsCell{},Var'Unds'29:SortGlobalAddrsCell{},Var'Unds'3:SortFuncMetadataCell{},Var'Unds'30:SortNextGlobIdxCell{},Var'Unds'31:SortModuleMetadataCell{},Var'Unds'32:SortValstackCell{},Var'Unds'33:SortModuleIdsCell{},Var'Unds'34:SortNextModuleIdxCell{},Var'Unds'35:SortDeterministicMemoryGrowthCell{},Var'Unds'4:SortNextFuncAddrCell{},Var'Unds'42:SortCurFrameCell{},Var'Unds'45:SortModuleRegistryCell{},Var'Unds'49:SortMainStoreCell{},Var'Unds'5:SortTabsCell{},Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortMemsCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar11:SortMap{},Var'Unds'DotVar12:SortMap{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortMap{},Var'Unds'DotVar5:SortFuncDefCellMap{},Var'Unds'DotVar7:SortLocalsCell{},Var'Unds'DotVar8:SortModuleInstCellMap{},Var'Unds'id0:SortOptionalId{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(VarFTYPE:SortType{}),dotk{}()),kseq{}(LblMap'Coln'lookup{}(VarTYPES:SortMap{},inj{SortInt{}, SortKItem{}}(VarTIDX:SortInt{})),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(LblaImportDefn{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},LblaFuncDesc{}(Var'Unds'id0:SortOptionalId{},VarTIDX:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'32:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar7:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'42:SortCurFrameCell{}),\and{SortModuleRegistryCell{}}(Lbl'-LT-'moduleRegistry'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarMOD:SortWasmString{}),inj{SortInt{}, SortKItem{}}(VarMODIDX:SortInt{})),Var'Unds'DotVar3:SortMap{})),Var'Unds'45:SortModuleRegistryCell{}),Var'Unds'33:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'12:SortNextTypeIdxCell{},Lbl'-LT-'funcAddrs'-GT-'{}(VarFS:SortMap{}),Lbl'-LT-'nextFuncIdx'-GT-'{}(VarNEXT:SortInt{}),Var'Unds'13:SortTabIdsCell{},Var'Unds'14:SortTabAddrsCell{},Var'Unds'15:SortMemIdsCell{},Var'Unds'16:SortMemAddrsCell{},Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortGlobalAddrsCell{},Var'Unds'19:SortNextGlobIdxCell{},Var'Unds'20:SortModuleMetadataCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),VarIDX:SortKItem{}),Var'Unds'DotVar12:SortMap{})),Var'Unds'21:SortTypesCell{},Var'Unds'22:SortNextTypeIdxCell{},Lbl'-LT-'funcAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarIDX:SortKItem{},inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),Var'Unds'DotVar11:SortMap{})),Var'Unds'23:SortNextFuncIdxCell{},Var'Unds'24:SortTabIdsCell{},Var'Unds'25:SortTabAddrsCell{},Var'Unds'26:SortMemIdsCell{},Var'Unds'27:SortMemAddrsCell{},Var'Unds'28:SortGlobIdsCell{},Var'Unds'29:SortGlobalAddrsCell{},Var'Unds'30:SortNextGlobIdxCell{},Var'Unds'31:SortModuleMetadataCell{}))),Var'Unds'DotVar8:SortModuleInstCellMap{})),Var'Unds'34:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(Lbl'-LT-'fAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'funcDef'-GT-'{}(Lbl'-LT-'fAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortFCodeCell{},Lbl'-LT-'fType'-GT-'{}(VarFTYPE:SortType{}),Var'Unds'1:SortFLocalCell{},Var'Unds'2:SortFModInstCell{},Var'Unds'3:SortFuncMetadataCell{})),Var'Unds'DotVar5:SortFuncDefCellMap{})),Var'Unds'4:SortNextFuncAddrCell{},Var'Unds'5:SortTabsCell{},Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortMemsCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{},Var'Unds'10:SortNextGlobAddrCell{}),Var'Unds'49:SortMainStoreCell{}),Var'Unds'35:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule377LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarFS:SortMap{},VarFTYPE:SortType{},VarIDX:SortKItem{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarNAME:SortWasmString{},VarNEXT:SortInt{},VarTIDX:SortInt{},VarTYPES:SortMap{},Var'Unds'0:SortFCodeCell{},Var'Unds'1:SortFLocalCell{},Var'Unds'10:SortNextGlobAddrCell{},Var'Unds'11:SortExportsCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortTabIdsCell{},Var'Unds'14:SortTabAddrsCell{},Var'Unds'15:SortMemIdsCell{},Var'Unds'16:SortMemAddrsCell{},Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortGlobalAddrsCell{},Var'Unds'19:SortNextGlobIdxCell{},Var'Unds'2:SortFModInstCell{},Var'Unds'20:SortModuleMetadataCell{},Var'Unds'21:SortTypesCell{},Var'Unds'22:SortNextTypeIdxCell{},Var'Unds'23:SortNextFuncIdxCell{},Var'Unds'24:SortTabIdsCell{},Var'Unds'25:SortTabAddrsCell{},Var'Unds'26:SortMemIdsCell{},Var'Unds'27:SortMemAddrsCell{},Var'Unds'28:SortGlobIdsCell{},Var'Unds'29:SortGlobalAddrsCell{},Var'Unds'3:SortFuncMetadataCell{},Var'Unds'30:SortNextGlobIdxCell{},Var'Unds'31:SortModuleMetadataCell{},Var'Unds'32:SortValstackCell{},Var'Unds'33:SortModuleIdsCell{},Var'Unds'34:SortNextModuleIdxCell{},Var'Unds'35:SortDeterministicMemoryGrowthCell{},Var'Unds'4:SortNextFuncAddrCell{},Var'Unds'42:SortCurFrameCell{},Var'Unds'45:SortModuleRegistryCell{},Var'Unds'49:SortMainStoreCell{},Var'Unds'5:SortTabsCell{},Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortMemsCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar11:SortMap{},Var'Unds'DotVar12:SortMap{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortMap{},Var'Unds'DotVar5:SortFuncDefCellMap{},Var'Unds'DotVar7:SortLocalsCell{},Var'Unds'DotVar8:SortModuleInstCellMap{},Var'Unds'id0:SortOptionalId{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'32:SortValstackCell{},Var'Unds'42:SortCurFrameCell{},Var'Unds'45:SortModuleRegistryCell{},Var'Unds'33:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'12:SortNextTypeIdxCell{},Lbl'-LT-'funcAddrs'-GT-'{}(LblMap'Coln'update{}(VarFS:SortMap{},inj{SortInt{}, SortKItem{}}(VarNEXT:SortInt{}),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Lbl'-LT-'nextFuncIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXT:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'13:SortTabIdsCell{},Var'Unds'14:SortTabAddrsCell{},Var'Unds'15:SortMemIdsCell{},Var'Unds'16:SortMemAddrsCell{},Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortGlobalAddrsCell{},Var'Unds'19:SortNextGlobIdxCell{},Var'Unds'20:SortModuleMetadataCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),VarIDX:SortKItem{}),Var'Unds'DotVar12:SortMap{})),Var'Unds'21:SortTypesCell{},Var'Unds'22:SortNextTypeIdxCell{},Lbl'-LT-'funcAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarIDX:SortKItem{},inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),Var'Unds'DotVar11:SortMap{})),Var'Unds'23:SortNextFuncIdxCell{},Var'Unds'24:SortTabIdsCell{},Var'Unds'25:SortTabAddrsCell{},Var'Unds'26:SortMemIdsCell{},Var'Unds'27:SortMemAddrsCell{},Var'Unds'28:SortGlobIdsCell{},Var'Unds'29:SortGlobalAddrsCell{},Var'Unds'30:SortNextGlobIdxCell{},Var'Unds'31:SortModuleMetadataCell{}))),Var'Unds'DotVar8:SortModuleInstCellMap{})),Var'Unds'34:SortNextModuleIdxCell{},Var'Unds'49:SortMainStoreCell{},Var'Unds'35:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1250,10,1271,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("880172271a5583c438fca91832b0a6c1564a1215414d084e332fde2915c143a1")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{ImportDefn,KItem}(aImportDefn(MOD,NAME,aGlobalDesc(OID,aGlobalType(MUT,TYP))))~>_DotVar2),_28,`<curFrame>`(_DotVar6,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _39,`<moduleRegistry>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(MOD),inj{Int,KItem}(MODIDX)),_DotVar3)) #as _42,_29,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_8,_9,_10,_11,_12,_13,_14,_15,_16,`<globIds>`(IDS),`<globalAddrs>`(GS),`<nextGlobIdx>`(NEXT),_17)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),_DotVar11)),_18,_19,_20,_21,_22,_23,_24,_25,`<globIds>`(IDS'),`<globalAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),_DotVar10)),_26,_27))),_DotVar7)),_30,`<mainStore>`(_1,_2,_3,_4,_5,_6,`<globals>`(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(`<gAddr>`(ADDR),`<globalInst>`(`<gAddr>`(ADDR),`<gValue>`(`<_>__WASM-DATA_Val_ValType_Number`(TYP,_0)),`<gMut>`(MUT))),_DotVar5)),_7) #as _46,_31),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),_28,_39,_42,_29,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_8,_9,_10,_11,_12,_13,_14,_15,_16,`<globIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,NEXT)),`<globalAddrs>`(`Map:update`(GS,inj{Int,KItem}(NEXT),inj{Int,KItem}(ADDR))),`<nextGlobIdx>`(`_+Int_`(NEXT,#token("1","Int"))),_17)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),_DotVar11)),_18,_19,_20,_21,_22,_23,_24,_25,`<globIds>`(IDS'),`<globalAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),_DotVar10)),_26,_27))),_DotVar7)),_30,_46,_31),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(805cf72b07d81d8bdc237b530146c2c5c77f422a14b467f6eab63e9fa8485879), org.kframework.attributes.Location(Location(1321,10,1342,23)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule378LHS{}(SortInt{},SortInt{},SortMap{},SortMap{},SortMap{},SortWasmString{},SortInt{},SortMut{},SortWasmString{},SortInt{},SortOptionalId{},SortIndex{},SortValType{},SortNumber{},SortFuncsCell{},SortNextTypeIdxCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortModuleMetadataCell{},SortTypesCell{},SortNextTypeIdxCell{},SortNextFuncAddrCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortValstackCell{},SortModuleIdsCell{},SortTabsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortCurFrameCell{},SortNextTabAddrCell{},SortModuleRegistryCell{},SortMainStoreCell{},SortMemsCell{},SortNextMemAddrCell{},SortNextGlobAddrCell{},SortExportsCell{},SortTypesCell{},SortGeneratedCounterCell{},SortMap{},SortMap{},SortK{},SortMap{},SortGlobalInstCellMap{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule378LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarGS:SortMap{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarMUT:SortMut{},VarNAME:SortWasmString{},VarNEXT:SortInt{},VarOID:SortOptionalId{},VarTFIDX:SortIndex{},VarTYP:SortValType{},Var'Unds'0:SortNumber{},Var'Unds'1:SortFuncsCell{},Var'Unds'10:SortNextTypeIdxCell{},Var'Unds'11:SortFuncAddrsCell{},Var'Unds'12:SortNextFuncIdxCell{},Var'Unds'13:SortTabIdsCell{},Var'Unds'14:SortTabAddrsCell{},Var'Unds'15:SortMemIdsCell{},Var'Unds'16:SortMemAddrsCell{},Var'Unds'17:SortModuleMetadataCell{},Var'Unds'18:SortTypesCell{},Var'Unds'19:SortNextTypeIdxCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'20:SortFuncAddrsCell{},Var'Unds'21:SortNextFuncIdxCell{},Var'Unds'22:SortTabIdsCell{},Var'Unds'23:SortTabAddrsCell{},Var'Unds'24:SortMemIdsCell{},Var'Unds'25:SortMemAddrsCell{},Var'Unds'26:SortNextGlobIdxCell{},Var'Unds'27:SortModuleMetadataCell{},Var'Unds'28:SortValstackCell{},Var'Unds'29:SortModuleIdsCell{},Var'Unds'3:SortTabsCell{},Var'Unds'30:SortNextModuleIdxCell{},Var'Unds'31:SortDeterministicMemoryGrowthCell{},Var'Unds'39:SortCurFrameCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'42:SortModuleRegistryCell{},Var'Unds'46:SortMainStoreCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortNextGlobAddrCell{},Var'Unds'8:SortExportsCell{},Var'Unds'9:SortTypesCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar10:SortMap{},Var'Unds'DotVar11:SortMap{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortMap{},Var'Unds'DotVar5:SortGlobalInstCellMap{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(LblaImportDefn{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},LblaGlobalDesc{}(VarOID:SortOptionalId{},LblaGlobalType{}(VarMUT:SortMut{},VarTYP:SortValType{})))),Var'Unds'DotVar2:SortK{})),Var'Unds'28:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'39:SortCurFrameCell{}),\and{SortModuleRegistryCell{}}(Lbl'-LT-'moduleRegistry'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarMOD:SortWasmString{}),inj{SortInt{}, SortKItem{}}(VarMODIDX:SortInt{})),Var'Unds'DotVar3:SortMap{})),Var'Unds'42:SortModuleRegistryCell{}),Var'Unds'29:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'8:SortExportsCell{},Var'Unds'9:SortTypesCell{},Var'Unds'10:SortNextTypeIdxCell{},Var'Unds'11:SortFuncAddrsCell{},Var'Unds'12:SortNextFuncIdxCell{},Var'Unds'13:SortTabIdsCell{},Var'Unds'14:SortTabAddrsCell{},Var'Unds'15:SortMemIdsCell{},Var'Unds'16:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'globalAddrs'-GT-'{}(VarGS:SortMap{}),Lbl'-LT-'nextGlobIdx'-GT-'{}(VarNEXT:SortInt{}),Var'Unds'17:SortModuleMetadataCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),Var'Unds'DotVar11:SortMap{})),Var'Unds'18:SortTypesCell{},Var'Unds'19:SortNextTypeIdxCell{},Var'Unds'20:SortFuncAddrsCell{},Var'Unds'21:SortNextFuncIdxCell{},Var'Unds'22:SortTabIdsCell{},Var'Unds'23:SortTabAddrsCell{},Var'Unds'24:SortMemIdsCell{},Var'Unds'25:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'globalAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),Var'Unds'DotVar10:SortMap{})),Var'Unds'26:SortNextGlobIdxCell{},Var'Unds'27:SortModuleMetadataCell{}))),Var'Unds'DotVar7:SortModuleInstCellMap{})),Var'Unds'30:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'1:SortFuncsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'3:SortTabsCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(Lbl'-LT-'gAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'globalInst'-GT-'{}(Lbl'-LT-'gAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'gValue'-GT-'{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(VarTYP:SortValType{},Var'Unds'0:SortNumber{})),Lbl'-LT-'gMut'-GT-'{}(VarMUT:SortMut{}))),Var'Unds'DotVar5:SortGlobalInstCellMap{})),Var'Unds'7:SortNextGlobAddrCell{}),Var'Unds'46:SortMainStoreCell{}),Var'Unds'31:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule378LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarGS:SortMap{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarMUT:SortMut{},VarNAME:SortWasmString{},VarNEXT:SortInt{},VarOID:SortOptionalId{},VarTFIDX:SortIndex{},VarTYP:SortValType{},Var'Unds'0:SortNumber{},Var'Unds'1:SortFuncsCell{},Var'Unds'10:SortNextTypeIdxCell{},Var'Unds'11:SortFuncAddrsCell{},Var'Unds'12:SortNextFuncIdxCell{},Var'Unds'13:SortTabIdsCell{},Var'Unds'14:SortTabAddrsCell{},Var'Unds'15:SortMemIdsCell{},Var'Unds'16:SortMemAddrsCell{},Var'Unds'17:SortModuleMetadataCell{},Var'Unds'18:SortTypesCell{},Var'Unds'19:SortNextTypeIdxCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'20:SortFuncAddrsCell{},Var'Unds'21:SortNextFuncIdxCell{},Var'Unds'22:SortTabIdsCell{},Var'Unds'23:SortTabAddrsCell{},Var'Unds'24:SortMemIdsCell{},Var'Unds'25:SortMemAddrsCell{},Var'Unds'26:SortNextGlobIdxCell{},Var'Unds'27:SortModuleMetadataCell{},Var'Unds'28:SortValstackCell{},Var'Unds'29:SortModuleIdsCell{},Var'Unds'3:SortTabsCell{},Var'Unds'30:SortNextModuleIdxCell{},Var'Unds'31:SortDeterministicMemoryGrowthCell{},Var'Unds'39:SortCurFrameCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'42:SortModuleRegistryCell{},Var'Unds'46:SortMainStoreCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortNextGlobAddrCell{},Var'Unds'8:SortExportsCell{},Var'Unds'9:SortTypesCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar10:SortMap{},Var'Unds'DotVar11:SortMap{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortMap{},Var'Unds'DotVar5:SortGlobalInstCellMap{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'28:SortValstackCell{},Var'Unds'39:SortCurFrameCell{},Var'Unds'42:SortModuleRegistryCell{},Var'Unds'29:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'8:SortExportsCell{},Var'Unds'9:SortTypesCell{},Var'Unds'10:SortNextTypeIdxCell{},Var'Unds'11:SortFuncAddrsCell{},Var'Unds'12:SortNextFuncIdxCell{},Var'Unds'13:SortTabIdsCell{},Var'Unds'14:SortTabAddrsCell{},Var'Unds'15:SortMemIdsCell{},Var'Unds'16:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},VarNEXT:SortInt{})),Lbl'-LT-'globalAddrs'-GT-'{}(LblMap'Coln'update{}(VarGS:SortMap{},inj{SortInt{}, SortKItem{}}(VarNEXT:SortInt{}),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Lbl'-LT-'nextGlobIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXT:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'17:SortModuleMetadataCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),Var'Unds'DotVar11:SortMap{})),Var'Unds'18:SortTypesCell{},Var'Unds'19:SortNextTypeIdxCell{},Var'Unds'20:SortFuncAddrsCell{},Var'Unds'21:SortNextFuncIdxCell{},Var'Unds'22:SortTabIdsCell{},Var'Unds'23:SortTabAddrsCell{},Var'Unds'24:SortMemIdsCell{},Var'Unds'25:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'globalAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),Var'Unds'DotVar10:SortMap{})),Var'Unds'26:SortNextGlobIdxCell{},Var'Unds'27:SortModuleMetadataCell{}))),Var'Unds'DotVar7:SortModuleInstCellMap{})),Var'Unds'30:SortNextModuleIdxCell{},Var'Unds'46:SortMainStoreCell{},Var'Unds'31:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1321,10,1342,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("805cf72b07d81d8bdc237b530146c2c5c77f422a14b467f6eab63e9fa8485879")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{ImportDefn,KItem}(aImportDefn(MOD,NAME,aMemoryDesc(OID,LIM)))~>_DotVar2),_28,`<curFrame>`(_DotVar7,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _38,`<moduleRegistry>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(MOD),inj{Int,KItem}(MODIDX)),_DotVar3)) #as _41,_29,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_7,_8,_9,_10,_11,_12,_13,`<memIds>`(IDS),`<memAddrs>`(`.Map`(.KList)),_14,_15,_16,_17)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),_DotVar12)),_18,_19,_20,_21,_22,_23,`<memIds>`(IDS'),`<memAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),_DotVar11)),_24,_25,_26,_27))),_DotVar8)),_30,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),`<mmax>`(MAX),`<msize>`(SIZE),_DotVar6)),_DotVar5)),_4,_5,_6) #as _45,_31),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),_28,_38,_41,_29,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_7,_8,_9,_10,_11,_12,_13,`<memIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,#token("0","Int"))),`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_14,_15,_16,_17)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),_DotVar12)),_18,_19,_20,_21,_22,_23,`<memIds>`(IDS'),`<memAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),_DotVar11)),_24,_25,_26,_27))),_DotVar8)),_30,_45,_31),_DotVar0) requires `#limitsMatchImport(_,_,_)_WASM_Bool_Int_OptionalInt_Limits`(SIZE,MAX,LIM) ensures #token("true","Bool") [UNIQUE_ID(c88c74b732c696e5f5e4a35b15de82f22608e1d250b613b70665d113da3f6345), org.kframework.attributes.Location(Location(1297,10,1319,51)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule379LHS{}(SortInt{},SortInt{},SortMap{},SortMap{},SortLimits{},SortOptionalInt{},SortWasmString{},SortInt{},SortWasmString{},SortOptionalId{},SortInt{},SortIndex{},SortFuncsCell{},SortNextFuncAddrCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortTypesCell{},SortNextTypeIdxCell{},SortTabsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortValstackCell{},SortModuleIdsCell{},SortNextTabAddrCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortCurFrameCell{},SortNextMemAddrCell{},SortModuleRegistryCell{},SortMainStoreCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortExportsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortGeneratedCounterCell{},SortMap{},SortMap{},SortK{},SortMap{},SortMemInstCellMap{},SortMdataCell{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule379LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarLIM:SortLimits{},VarMAX:SortOptionalInt{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarNAME:SortWasmString{},VarOID:SortOptionalId{},VarSIZE:SortInt{},VarTFIDX:SortIndex{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortGlobIdsCell{},Var'Unds'15:SortGlobalAddrsCell{},Var'Unds'16:SortNextGlobIdxCell{},Var'Unds'17:SortModuleMetadataCell{},Var'Unds'18:SortTypesCell{},Var'Unds'19:SortNextTypeIdxCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortFuncAddrsCell{},Var'Unds'21:SortNextFuncIdxCell{},Var'Unds'22:SortTabIdsCell{},Var'Unds'23:SortTabAddrsCell{},Var'Unds'24:SortGlobIdsCell{},Var'Unds'25:SortGlobalAddrsCell{},Var'Unds'26:SortNextGlobIdxCell{},Var'Unds'27:SortModuleMetadataCell{},Var'Unds'28:SortValstackCell{},Var'Unds'29:SortModuleIdsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'30:SortNextModuleIdxCell{},Var'Unds'31:SortDeterministicMemoryGrowthCell{},Var'Unds'38:SortCurFrameCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'41:SortModuleRegistryCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar11:SortMap{},Var'Unds'DotVar12:SortMap{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortMap{},Var'Unds'DotVar5:SortMemInstCellMap{},Var'Unds'DotVar6:SortMdataCell{},Var'Unds'DotVar7:SortLocalsCell{},Var'Unds'DotVar8:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(VarSIZE:SortInt{},VarMAX:SortOptionalInt{},VarLIM:SortLimits{}),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(LblaImportDefn{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},LblaMemoryDesc{}(VarOID:SortOptionalId{},VarLIM:SortLimits{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'28:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar7:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'38:SortCurFrameCell{}),\and{SortModuleRegistryCell{}}(Lbl'-LT-'moduleRegistry'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarMOD:SortWasmString{}),inj{SortInt{}, SortKItem{}}(VarMODIDX:SortInt{})),Var'Unds'DotVar3:SortMap{})),Var'Unds'41:SortModuleRegistryCell{}),Var'Unds'29:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'14:SortGlobIdsCell{},Var'Unds'15:SortGlobalAddrsCell{},Var'Unds'16:SortNextGlobIdxCell{},Var'Unds'17:SortModuleMetadataCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),Var'Unds'DotVar12:SortMap{})),Var'Unds'18:SortTypesCell{},Var'Unds'19:SortNextTypeIdxCell{},Var'Unds'20:SortFuncAddrsCell{},Var'Unds'21:SortNextFuncIdxCell{},Var'Unds'22:SortTabIdsCell{},Var'Unds'23:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),Var'Unds'DotVar11:SortMap{})),Var'Unds'24:SortGlobIdsCell{},Var'Unds'25:SortGlobalAddrsCell{},Var'Unds'26:SortNextGlobIdxCell{},Var'Unds'27:SortModuleMetadataCell{}))),Var'Unds'DotVar8:SortModuleInstCellMap{})),Var'Unds'30:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'mmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Var'Unds'DotVar6:SortMdataCell{})),Var'Unds'DotVar5:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'45:SortMainStoreCell{}),Var'Unds'31:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule379LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarLIM:SortLimits{},VarMAX:SortOptionalInt{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarNAME:SortWasmString{},VarOID:SortOptionalId{},VarSIZE:SortInt{},VarTFIDX:SortIndex{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortGlobIdsCell{},Var'Unds'15:SortGlobalAddrsCell{},Var'Unds'16:SortNextGlobIdxCell{},Var'Unds'17:SortModuleMetadataCell{},Var'Unds'18:SortTypesCell{},Var'Unds'19:SortNextTypeIdxCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortFuncAddrsCell{},Var'Unds'21:SortNextFuncIdxCell{},Var'Unds'22:SortTabIdsCell{},Var'Unds'23:SortTabAddrsCell{},Var'Unds'24:SortGlobIdsCell{},Var'Unds'25:SortGlobalAddrsCell{},Var'Unds'26:SortNextGlobIdxCell{},Var'Unds'27:SortModuleMetadataCell{},Var'Unds'28:SortValstackCell{},Var'Unds'29:SortModuleIdsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'30:SortNextModuleIdxCell{},Var'Unds'31:SortDeterministicMemoryGrowthCell{},Var'Unds'38:SortCurFrameCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'41:SortModuleRegistryCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar11:SortMap{},Var'Unds'DotVar12:SortMap{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortMap{},Var'Unds'DotVar5:SortMemInstCellMap{},Var'Unds'DotVar6:SortMdataCell{},Var'Unds'DotVar7:SortLocalsCell{},Var'Unds'DotVar8:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'28:SortValstackCell{},Var'Unds'38:SortCurFrameCell{},Var'Unds'41:SortModuleRegistryCell{},Var'Unds'29:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},\dv{SortInt{}}("0"))),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'14:SortGlobIdsCell{},Var'Unds'15:SortGlobalAddrsCell{},Var'Unds'16:SortNextGlobIdxCell{},Var'Unds'17:SortModuleMetadataCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),Var'Unds'DotVar12:SortMap{})),Var'Unds'18:SortTypesCell{},Var'Unds'19:SortNextTypeIdxCell{},Var'Unds'20:SortFuncAddrsCell{},Var'Unds'21:SortNextFuncIdxCell{},Var'Unds'22:SortTabIdsCell{},Var'Unds'23:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),Var'Unds'DotVar11:SortMap{})),Var'Unds'24:SortGlobIdsCell{},Var'Unds'25:SortGlobalAddrsCell{},Var'Unds'26:SortNextGlobIdxCell{},Var'Unds'27:SortModuleMetadataCell{}))),Var'Unds'DotVar8:SortModuleInstCellMap{})),Var'Unds'30:SortNextModuleIdxCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'31:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1297,10,1319,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("c88c74b732c696e5f5e4a35b15de82f22608e1d250b613b70665d113da3f6345")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{ImportDefn,KItem}(aImportDefn(MOD,NAME,aTableDesc(OID,LIM)))~>_DotVar2),_28,`<curFrame>`(_DotVar7,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _38,`<moduleRegistry>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(MOD),inj{Int,KItem}(MODIDX)),_DotVar3)) #as _41,_29,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_7,_8,_9,_10,_11,`<tabIds>`(IDS),`<tabAddrs>`(`.Map`(.KList)),_12,_13,_14,_15,_16,_17)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),_DotVar12)),_18,_19,_20,_21,`<tabIds>`(IDS'),`<tabAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),_DotVar11)),_22,_23,_24,_25,_26,_27))),_DotVar8)),_30,`<mainStore>`(_0,_1,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),`<tmax>`(MAX),`<tsize>`(SIZE),_DotVar6)),_DotVar5)),_2,_3,_4,_5,_6) #as _45,_31),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),_28,_38,_41,_29,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_7,_8,_9,_10,_11,`<tabIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,#token("0","Int"))),`<tabAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_12,_13,_14,_15,_16,_17)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),_DotVar12)),_18,_19,_20,_21,`<tabIds>`(IDS'),`<tabAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),_DotVar11)),_22,_23,_24,_25,_26,_27))),_DotVar8)),_30,_45,_31),_DotVar0) requires `#limitsMatchImport(_,_,_)_WASM_Bool_Int_OptionalInt_Limits`(SIZE,MAX,LIM) ensures #token("true","Bool") [UNIQUE_ID(614c4e18eb78518da1aa567c83eccdd633d3391f504597682239943e647cb581), org.kframework.attributes.Location(Location(1273,10,1295,51)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule380LHS{}(SortInt{},SortInt{},SortMap{},SortMap{},SortLimits{},SortOptionalInt{},SortWasmString{},SortInt{},SortWasmString{},SortOptionalId{},SortInt{},SortIndex{},SortFuncsCell{},SortNextFuncAddrCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortTypesCell{},SortNextTypeIdxCell{},SortNextTabAddrCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortValstackCell{},SortModuleIdsCell{},SortMemsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortCurFrameCell{},SortNextMemAddrCell{},SortModuleRegistryCell{},SortMainStoreCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortExportsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortGeneratedCounterCell{},SortMap{},SortMap{},SortK{},SortMap{},SortTabInstCellMap{},SortTdataCell{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule380LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarLIM:SortLimits{},VarMAX:SortOptionalInt{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarNAME:SortWasmString{},VarOID:SortOptionalId{},VarSIZE:SortInt{},VarTFIDX:SortIndex{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortMemIdsCell{},Var'Unds'13:SortMemAddrsCell{},Var'Unds'14:SortGlobIdsCell{},Var'Unds'15:SortGlobalAddrsCell{},Var'Unds'16:SortNextGlobIdxCell{},Var'Unds'17:SortModuleMetadataCell{},Var'Unds'18:SortTypesCell{},Var'Unds'19:SortNextTypeIdxCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'20:SortFuncAddrsCell{},Var'Unds'21:SortNextFuncIdxCell{},Var'Unds'22:SortMemIdsCell{},Var'Unds'23:SortMemAddrsCell{},Var'Unds'24:SortGlobIdsCell{},Var'Unds'25:SortGlobalAddrsCell{},Var'Unds'26:SortNextGlobIdxCell{},Var'Unds'27:SortModuleMetadataCell{},Var'Unds'28:SortValstackCell{},Var'Unds'29:SortModuleIdsCell{},Var'Unds'3:SortMemsCell{},Var'Unds'30:SortNextModuleIdxCell{},Var'Unds'31:SortDeterministicMemoryGrowthCell{},Var'Unds'38:SortCurFrameCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'41:SortModuleRegistryCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar11:SortMap{},Var'Unds'DotVar12:SortMap{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortMap{},Var'Unds'DotVar5:SortTabInstCellMap{},Var'Unds'DotVar6:SortTdataCell{},Var'Unds'DotVar7:SortLocalsCell{},Var'Unds'DotVar8:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(VarSIZE:SortInt{},VarMAX:SortOptionalInt{},VarLIM:SortLimits{}),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(LblaImportDefn{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},LblaTableDesc{}(VarOID:SortOptionalId{},VarLIM:SortLimits{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'28:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar7:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'38:SortCurFrameCell{}),\and{SortModuleRegistryCell{}}(Lbl'-LT-'moduleRegistry'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarMOD:SortWasmString{}),inj{SortInt{}, SortKItem{}}(VarMODIDX:SortInt{})),Var'Unds'DotVar3:SortMap{})),Var'Unds'41:SortModuleRegistryCell{}),Var'Unds'29:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'12:SortMemIdsCell{},Var'Unds'13:SortMemAddrsCell{},Var'Unds'14:SortGlobIdsCell{},Var'Unds'15:SortGlobalAddrsCell{},Var'Unds'16:SortNextGlobIdxCell{},Var'Unds'17:SortModuleMetadataCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),Var'Unds'DotVar12:SortMap{})),Var'Unds'18:SortTypesCell{},Var'Unds'19:SortNextTypeIdxCell{},Var'Unds'20:SortFuncAddrsCell{},Var'Unds'21:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),Var'Unds'DotVar11:SortMap{})),Var'Unds'22:SortMemIdsCell{},Var'Unds'23:SortMemAddrsCell{},Var'Unds'24:SortGlobIdsCell{},Var'Unds'25:SortGlobalAddrsCell{},Var'Unds'26:SortNextGlobIdxCell{},Var'Unds'27:SortModuleMetadataCell{}))),Var'Unds'DotVar8:SortModuleInstCellMap{})),Var'Unds'30:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'tsize'-GT-'{}(VarSIZE:SortInt{}),Var'Unds'DotVar6:SortTdataCell{})),Var'Unds'DotVar5:SortTabInstCellMap{})),Var'Unds'2:SortNextTabAddrCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'45:SortMainStoreCell{}),Var'Unds'31:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule380LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarIDS:SortMap{},VarIDS'Apos':SortMap{},VarLIM:SortLimits{},VarMAX:SortOptionalInt{},VarMOD:SortWasmString{},VarMODIDX:SortInt{},VarNAME:SortWasmString{},VarOID:SortOptionalId{},VarSIZE:SortInt{},VarTFIDX:SortIndex{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortMemIdsCell{},Var'Unds'13:SortMemAddrsCell{},Var'Unds'14:SortGlobIdsCell{},Var'Unds'15:SortGlobalAddrsCell{},Var'Unds'16:SortNextGlobIdxCell{},Var'Unds'17:SortModuleMetadataCell{},Var'Unds'18:SortTypesCell{},Var'Unds'19:SortNextTypeIdxCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'20:SortFuncAddrsCell{},Var'Unds'21:SortNextFuncIdxCell{},Var'Unds'22:SortMemIdsCell{},Var'Unds'23:SortMemAddrsCell{},Var'Unds'24:SortGlobIdsCell{},Var'Unds'25:SortGlobalAddrsCell{},Var'Unds'26:SortNextGlobIdxCell{},Var'Unds'27:SortModuleMetadataCell{},Var'Unds'28:SortValstackCell{},Var'Unds'29:SortModuleIdsCell{},Var'Unds'3:SortMemsCell{},Var'Unds'30:SortNextModuleIdxCell{},Var'Unds'31:SortDeterministicMemoryGrowthCell{},Var'Unds'38:SortCurFrameCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'41:SortModuleRegistryCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar11:SortMap{},Var'Unds'DotVar12:SortMap{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortMap{},Var'Unds'DotVar5:SortTabInstCellMap{},Var'Unds'DotVar6:SortTdataCell{},Var'Unds'DotVar7:SortLocalsCell{},Var'Unds'DotVar8:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'28:SortValstackCell{},Var'Unds'38:SortCurFrameCell{},Var'Unds'41:SortModuleRegistryCell{},Var'Unds'29:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},\dv{SortInt{}}("0"))),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'12:SortMemIdsCell{},Var'Unds'13:SortMemAddrsCell{},Var'Unds'14:SortGlobIdsCell{},Var'Unds'15:SortGlobalAddrsCell{},Var'Unds'16:SortNextGlobIdxCell{},Var'Unds'17:SortModuleMetadataCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),Var'Unds'DotVar12:SortMap{})),Var'Unds'18:SortTypesCell{},Var'Unds'19:SortNextTypeIdxCell{},Var'Unds'20:SortFuncAddrsCell{},Var'Unds'21:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),Var'Unds'DotVar11:SortMap{})),Var'Unds'22:SortMemIdsCell{},Var'Unds'23:SortMemAddrsCell{},Var'Unds'24:SortGlobIdsCell{},Var'Unds'25:SortGlobalAddrsCell{},Var'Unds'26:SortNextGlobIdxCell{},Var'Unds'27:SortModuleMetadataCell{}))),Var'Unds'DotVar8:SortModuleInstCellMap{})),Var'Unds'30:SortNextModuleIdxCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'31:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1273,10,1295,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("614c4e18eb78518da1aa567c83eccdd633d3391f504597682239943e647cb581")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(aLoad(inj{IValType,ValType}(ITYPE),LOP,OFFSET))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),IDX)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`_.___WASM_Instr_IValType_LoadOp_Int`(ITYPE,LOP,`_+Int_`(IDX,OFFSET)))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(367860d7d78b9fc9677898977d917f47c6506d39fee832f59a8b4ec095663ea7), org.kframework.attributes.Location(Location(1007,10,1008,67)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule381LHS{}(SortInt{},SortIValType{},SortLoadOp{},SortInt{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule381LHS{}(VarIDX:SortInt{},VarITYPE:SortIValType{},VarLOP:SortLoadOp{},VarOFFSET:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaLoad{}(inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{}),VarLOP:SortLoadOp{},VarOFFSET:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),VarIDX:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule381LHS{}(VarIDX:SortInt{},VarITYPE:SortIValType{},VarLOP:SortLoadOp{},VarOFFSET:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},VarLOP:SortLoadOp{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},VarOFFSET:SortInt{}))),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1007,10,1008,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("367860d7d78b9fc9677898977d917f47c6506d39fee832f59a8b4ec095663ea7")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`aLocal.get`(I))~>_DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(`<locals>`(`_Map_`(`_|->_`(inj{Int,KItem}(I),inj{Val,KItem}(VALUE)),_DotVar4)),_DotVar3) #as _12,_0,_1,_2,_3,_4,_5),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)),_12,_0,_1,_2,_3,_4,_5),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ed85fbac028356f2c7dd2174bb696f38bd7e96729fde3ca3864e8ebdf18834e4), org.kframework.attributes.Location(Location(526,10,528,48)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule382LHS{}(SortInt{},SortValStack{},SortVal{},SortModuleRegistryCell{},SortModuleIdsCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{},SortCurModIdxCell{},SortMap{}) : SortGeneratedTopCell{}
  where rule382LHS{}(VarI:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortModuleRegistryCell{},Var'Unds'1:SortModuleIdsCell{},Var'Unds'12:SortCurFrameCell{},Var'Unds'2:SortModuleInstancesCell{},Var'Unds'3:SortNextModuleIdxCell{},Var'Unds'4:SortMainStoreCell{},Var'Unds'5:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortCurModIdxCell{},Var'Unds'DotVar4:SortMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaLocal'Stop'get{}(VarI:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),inj{SortVal{}, SortKItem{}}(VarVALUE:SortVal{})),Var'Unds'DotVar4:SortMap{})),Var'Unds'DotVar3:SortCurModIdxCell{}),Var'Unds'12:SortCurFrameCell{}),Var'Unds'0:SortModuleRegistryCell{},Var'Unds'1:SortModuleIdsCell{},Var'Unds'2:SortModuleInstancesCell{},Var'Unds'3:SortNextModuleIdxCell{},Var'Unds'4:SortMainStoreCell{},Var'Unds'5:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule382LHS{}(VarI:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortModuleRegistryCell{},Var'Unds'1:SortModuleIdsCell{},Var'Unds'12:SortCurFrameCell{},Var'Unds'2:SortModuleInstancesCell{},Var'Unds'3:SortNextModuleIdxCell{},Var'Unds'4:SortMainStoreCell{},Var'Unds'5:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortCurModIdxCell{},Var'Unds'DotVar4:SortMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{})),Var'Unds'12:SortCurFrameCell{},Var'Unds'0:SortModuleRegistryCell{},Var'Unds'1:SortModuleIdsCell{},Var'Unds'2:SortModuleInstancesCell{},Var'Unds'3:SortNextModuleIdxCell{},Var'Unds'4:SortMainStoreCell{},Var'Unds'5:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(526,10,528,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ed85fbac028356f2c7dd2174bb696f38bd7e96729fde3ca3864e8ebdf18834e4")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`aLocal.set`(I))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)),`<curFrame>`(`<locals>`(`_Map_`(`_|->_`(inj{Int,KItem}(I),_0),_DotVar4)),_DotVar3),_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(`<locals>`(`_Map_`(`_|->_`(inj{Int,KItem}(I),inj{Val,KItem}(VALUE)),_DotVar4)),_DotVar3),_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(53e1d5a44aff8f7851fb7be7bbbbc470146ba66c6d67f6b09044515baba6be6b), org.kframework.attributes.Location(Location(530,10,532,55)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule383LHS{}(SortInt{},SortValStack{},SortVal{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{},SortCurModIdxCell{},SortMap{}) : SortGeneratedTopCell{}
  where rule383LHS{}(VarI:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortKItem{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortCurModIdxCell{},Var'Unds'DotVar4:SortMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaLocal'Stop'set{}(VarI:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{})),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),Var'Unds'0:SortKItem{}),Var'Unds'DotVar4:SortMap{})),Var'Unds'DotVar3:SortCurModIdxCell{}),Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule383LHS{}(VarI:SortInt{},VarVALSTACK:SortValStack{},VarVALUE:SortVal{},Var'Unds'0:SortKItem{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortCurModIdxCell{},Var'Unds'DotVar4:SortMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),inj{SortVal{}, SortKItem{}}(VarVALUE:SortVal{})),Var'Unds'DotVar4:SortMap{})),Var'Unds'DotVar3:SortCurModIdxCell{}),Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(530,10,532,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("53e1d5a44aff8f7851fb7be7bbbbc470146ba66c6d67f6b09044515baba6be6b")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`aLocal.tee`(I))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,_VALSTACK)) #as _12,`<curFrame>`(`<locals>`(`_Map_`(`_|->_`(inj{Int,KItem}(I),_0),_DotVar4)),_DotVar3),_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),_12,`<curFrame>`(`<locals>`(`_Map_`(`_|->_`(inj{Int,KItem}(I),inj{Val,KItem}(VALUE)),_DotVar4)),_DotVar3),_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(af5dbcd6cec4c6d2a9db2d36e342952862c8c847bc47880f4928058e8419b6ef), org.kframework.attributes.Location(Location(534,10,536,55)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule384LHS{}(SortInt{},SortVal{},SortKItem{},SortModuleRegistryCell{},SortValstackCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{},SortCurModIdxCell{},SortMap{},SortValStack{}) : SortGeneratedTopCell{}
  where rule384LHS{}(VarI:SortInt{},VarVALUE:SortVal{},Var'Unds'0:SortKItem{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'12:SortValstackCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortCurModIdxCell{},Var'Unds'DotVar4:SortMap{},Var'Unds'VALSTACK:SortValStack{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaLocal'Stop'tee{}(VarI:SortInt{})),Var'Unds'DotVar2:SortK{})),\and{SortValstackCell{}}(Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},Var'Unds'VALSTACK:SortValStack{})),Var'Unds'12:SortValstackCell{}),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),Var'Unds'0:SortKItem{}),Var'Unds'DotVar4:SortMap{})),Var'Unds'DotVar3:SortCurModIdxCell{}),Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule384LHS{}(VarI:SortInt{},VarVALUE:SortVal{},Var'Unds'0:SortKItem{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'12:SortValstackCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortCurModIdxCell{},Var'Unds'DotVar4:SortMap{},Var'Unds'VALSTACK:SortValStack{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'12:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),inj{SortVal{}, SortKItem{}}(VarVALUE:SortVal{})),Var'Unds'DotVar4:SortMap{})),Var'Unds'DotVar3:SortCurModIdxCell{}),Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(534,10,536,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("af5dbcd6cec4c6d2a9db2d36e342952862c8c847bc47880f4928058e8419b6ef")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{MemoryDefn,KItem}(aMemoryDefn(limitsMin(MIN),OID))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Alloc,KItem}(`allocmemory(_,_,_)_WASM_Alloc_OptionalId_Int_OptionalInt`(OID,MIN,`.Int_WASM-DATA_OptionalInt`(.KList)))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires `_<=Int_`(MIN,`#maxMemorySize()_WASM_Int`(.KList)) ensures #token("true","Bool") [UNIQUE_ID(05e0916fa0165a98f04bf43fed3c1171acaead49b8464e3e0c55b4c9773d01ac), org.kframework.attributes.Location(Location(919,10,920,42)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule385LHS{}(SortInt{},SortOptionalId{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule385LHS{}(VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMIN:SortInt{},Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}()),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(LblaMemoryDefn{}(LbllimitsMin{}(VarMIN:SortInt{}),VarOID:SortOptionalId{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule385LHS{}(VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarOID:SortOptionalId{},VarMIN:SortInt{},Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(919,10,920,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("05e0916fa0165a98f04bf43fed3c1171acaead49b8464e3e0c55b4c9773d01ac")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{MemoryDefn,KItem}(aMemoryDefn(limitsMinMax(MIN,MAX),OID))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Alloc,KItem}(`allocmemory(_,_,_)_WASM_Alloc_OptionalId_Int_OptionalInt`(OID,MIN,inj{Int,OptionalInt}(MAX)))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires `_andBool_`(`_<=Int_`(MIN,`#maxMemorySize()_WASM_Int`(.KList)),`_<=Int_`(MAX,`#maxMemorySize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(35ac2dfbc87a29f7d0557b15120c40e532c493a14a0b26fefebf9a5378eaecb0), org.kframework.attributes.Location(Location(921,10,923,42)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule386LHS{}(SortInt{},SortInt{},SortOptionalId{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule386LHS{}(VarMAX:SortInt{},VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMIN:SortInt{},Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}()),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMAX:SortInt{},Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(LblaMemoryDefn{}(LbllimitsMinMax{}(VarMIN:SortInt{},VarMAX:SortInt{}),VarOID:SortOptionalId{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule386LHS{}(VarMAX:SortInt{},VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarOID:SortOptionalId{},VarMIN:SortInt{},inj{SortInt{}, SortOptionalInt{}}(VarMAX:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(921,10,923,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("35ac2dfbc87a29f7d0557b15120c40e532c493a14a0b26fefebf9a5378eaecb0")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{ModuleDecl,KItem}(aModuleDecl(TS,FS,TABS,MS,GS,EL,DAT,S,IS,ES,moduleMeta(OID,FIDS,FILE)))~>_DotVar2),_1,`<curFrame>`(_DotVar4,`<curModIdx>`(_0)),_2,`<moduleIds>`(IDS),`<moduleInstances>`(`_ModuleInstCellMap_`(`.ModuleInstCellMap`(.KList),_DotVar3)),`<nextModuleIdx>`(NEXT),_3,_4),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(`sequenceDefns(_)_WASM_K_Defns`(TS)~>`sequenceDefns(_)_WASM_K_Defns`(IS)~>`sequenceDefns(_)_WASM_K_Defns`(FS)~>`sequenceDefns(_)_WASM_K_Defns`(GS)~>`sequenceDefns(_)_WASM_K_Defns`(MS)~>`sequenceDefns(_)_WASM_K_Defns`(TABS)~>`sequenceDefns(_)_WASM_K_Defns`(ES)~>`sequenceDefns(_)_WASM_K_Defns`(EL)~>`sequenceDefns(_)_WASM_K_Defns`(DAT)~>`sequenceDefns(_)_WASM_K_Defns`(S)~>_DotVar2),_1,`<curFrame>`(_DotVar4,`<curModIdx>`(inj{Int,OptionalInt}(NEXT))),_2,`<moduleIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,NEXT)),`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(NEXT),`<moduleInst>`(`<modIdx>`(NEXT),initExportsCell(.KList),initTypesCell(.KList),initNextTypeIdxCell(.KList),initFuncAddrsCell(.KList),initNextFuncIdxCell(.KList),initTabIdsCell(.KList),initTabAddrsCell(.KList),initMemIdsCell(.KList),initMemAddrsCell(.KList),initGlobIdsCell(.KList),initGlobalAddrsCell(.KList),initNextGlobIdxCell(.KList),`<moduleMetadata>`(`<moduleFileName>`(FILE),`<moduleId>`(OID),`<funcIds>`(FIDS),initTypeIdsCell(.KList)))),_DotVar3)),`<nextModuleIdx>`(`_+Int_`(NEXT,#token("1","Int"))),_3,_4),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1c414ac0f74b52fa939a48b49ee4824fb9e7a3661928a5910bdc94d70a6b55a1), org.kframework.attributes.Location(Location(1391,10,1422,28)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule387LHS{}(SortDefns{},SortDefns{},SortDefns{},SortMap{},SortOptionalString{},SortDefns{},SortDefns{},SortMap{},SortDefns{},SortDefns{},SortInt{},SortOptionalId{},SortDefns{},SortDefns{},SortDefns{},SortOptionalInt{},SortValstackCell{},SortModuleRegistryCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{},SortModuleInstCellMap{},SortLocalsCell{}) : SortGeneratedTopCell{}
  where rule387LHS{}(VarDAT:SortDefns{},VarEL:SortDefns{},VarES:SortDefns{},VarFIDS:SortMap{},VarFILE:SortOptionalString{},VarFS:SortDefns{},VarGS:SortDefns{},VarIDS:SortMap{},VarIS:SortDefns{},VarMS:SortDefns{},VarNEXT:SortInt{},VarOID:SortOptionalId{},VarS:SortDefns{},VarTABS:SortDefns{},VarTS:SortDefns{},Var'Unds'0:SortOptionalInt{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortMainStoreCell{},Var'Unds'4:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortModuleInstCellMap{},Var'Unds'DotVar4:SortLocalsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortModuleDecl{}, SortKItem{}}(LblaModuleDecl{}(VarTS:SortDefns{},VarFS:SortDefns{},VarTABS:SortDefns{},VarMS:SortDefns{},VarGS:SortDefns{},VarEL:SortDefns{},VarDAT:SortDefns{},VarS:SortDefns{},VarIS:SortDefns{},VarES:SortDefns{},LblmoduleMeta{}(VarOID:SortOptionalId{},VarFIDS:SortMap{},VarFILE:SortOptionalString{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'1:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar4:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(Var'Unds'0:SortOptionalInt{})),Var'Unds'2:SortModuleRegistryCell{},Lbl'-LT-'moduleIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Stop'ModuleInstCellMap{}(),Var'Unds'DotVar3:SortModuleInstCellMap{})),Lbl'-LT-'nextModuleIdx'-GT-'{}(VarNEXT:SortInt{}),Var'Unds'3:SortMainStoreCell{},Var'Unds'4:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule387LHS{}(VarDAT:SortDefns{},VarEL:SortDefns{},VarES:SortDefns{},VarFIDS:SortMap{},VarFILE:SortOptionalString{},VarFS:SortDefns{},VarGS:SortDefns{},VarIDS:SortMap{},VarIS:SortDefns{},VarMS:SortDefns{},VarNEXT:SortInt{},VarOID:SortOptionalId{},VarS:SortDefns{},VarTABS:SortDefns{},VarTS:SortDefns{},Var'Unds'0:SortOptionalInt{},Var'Unds'1:SortValstackCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortMainStoreCell{},Var'Unds'4:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortModuleInstCellMap{},Var'Unds'DotVar4:SortLocalsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(append{}(LblsequenceDefns'LParUndsRParUnds'WASM'Unds'K'Unds'Defns{}(VarTS:SortDefns{}),append{}(LblsequenceDefns'LParUndsRParUnds'WASM'Unds'K'Unds'Defns{}(VarIS:SortDefns{}),append{}(LblsequenceDefns'LParUndsRParUnds'WASM'Unds'K'Unds'Defns{}(VarFS:SortDefns{}),append{}(LblsequenceDefns'LParUndsRParUnds'WASM'Unds'K'Unds'Defns{}(VarGS:SortDefns{}),append{}(LblsequenceDefns'LParUndsRParUnds'WASM'Unds'K'Unds'Defns{}(VarMS:SortDefns{}),append{}(LblsequenceDefns'LParUndsRParUnds'WASM'Unds'K'Unds'Defns{}(VarTABS:SortDefns{}),append{}(LblsequenceDefns'LParUndsRParUnds'WASM'Unds'K'Unds'Defns{}(VarES:SortDefns{}),append{}(LblsequenceDefns'LParUndsRParUnds'WASM'Unds'K'Unds'Defns{}(VarEL:SortDefns{}),append{}(LblsequenceDefns'LParUndsRParUnds'WASM'Unds'K'Unds'Defns{}(VarDAT:SortDefns{}),append{}(LblsequenceDefns'LParUndsRParUnds'WASM'Unds'K'Unds'Defns{}(VarS:SortDefns{}),Var'Unds'DotVar2:SortK{}))))))))))),Var'Unds'1:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar4:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarNEXT:SortInt{}))),Var'Unds'2:SortModuleRegistryCell{},Lbl'-LT-'moduleIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},VarNEXT:SortInt{})),Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarNEXT:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarNEXT:SortInt{}),LblinitExportsCell{}(),LblinitTypesCell{}(),LblinitNextTypeIdxCell{}(),LblinitFuncAddrsCell{}(),LblinitNextFuncIdxCell{}(),LblinitTabIdsCell{}(),LblinitTabAddrsCell{}(),LblinitMemIdsCell{}(),LblinitMemAddrsCell{}(),LblinitGlobIdsCell{}(),LblinitGlobalAddrsCell{}(),LblinitNextGlobIdxCell{}(),Lbl'-LT-'moduleMetadata'-GT-'{}(Lbl'-LT-'moduleFileName'-GT-'{}(VarFILE:SortOptionalString{}),Lbl'-LT-'moduleId'-GT-'{}(VarOID:SortOptionalId{}),Lbl'-LT-'funcIds'-GT-'{}(VarFIDS:SortMap{}),LblinitTypeIdsCell{}()))),Var'Unds'DotVar3:SortModuleInstCellMap{})),Lbl'-LT-'nextModuleIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXT:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'3:SortMainStoreCell{},Var'Unds'4:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1391,10,1422,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("1c414ac0f74b52fa939a48b49ee4824fb9e7a3661928a5910bdc94d70a6b55a1")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aNop(.KList))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(34d5dc85525403bc4dcd7ce46ac315938dda63df19e28cf37d20b8a1a009d053), org.kframework.attributes.Location(Location(415,10,415,41)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule388LHS{}(SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule388LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaNop{}()),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule388LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(415,10,415,41)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("34d5dc85525403bc4dcd7ce46ac315938dda63df19e28cf37d20b8a1a009d053")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aReturn(.KList))~>``inj{Frame,KItem}(_FR) #as _13``~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_13~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5738e3a2b611bcad58de3afd0de7a0b6792a99278dbd892893ac2fe180c81c20), org.kframework.attributes.Location(Location(769,10,769,59)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule389LHS{}(SortValstackCell{},SortCurFrameCell{},SortKItem{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{},SortFrame{}) : SortGeneratedTopCell{}
  where rule389LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'13:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'FR:SortFrame{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaReturn{}()),kseq{}(\and{SortKItem{}}(inj{SortFrame{}, SortKItem{}}(Var'Unds'FR:SortFrame{}),Var'Unds'13:SortKItem{}),Var'Unds'DotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule389LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'13:SortKItem{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'FR:SortFrame{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(Var'Unds'13:SortKItem{},Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(769,10,769,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5738e3a2b611bcad58de3afd0de7a0b6792a99278dbd892893ac2fe180c81c20")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aSelect(.KList))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),C)),`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_ValType_Number`(TYPE,V2),`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_ValType_Number`(TYPE,V1),VALSTACK)))),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_ValType_Number`(TYPE,`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Number}(`_=/=Int_`(C,#token("0","Int")),V1,V2)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b8f2c2ae47acc2d47e555f63503a227c967f54b16dbda23a19e701329ddaadf), org.kframework.attributes.Location(Location(402,10,406,21)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule390LHS{}(SortInt{},SortValType{},SortNumber{},SortNumber{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule390LHS{}(VarC:SortInt{},VarTYPE:SortValType{},VarV1:SortNumber{},VarV2:SortNumber{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaSelect{}()),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),VarC:SortInt{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(VarTYPE:SortValType{},VarV2:SortNumber{}),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(VarTYPE:SortValType{},VarV1:SortNumber{}),VarVALSTACK:SortValStack{})))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule390LHS{}(VarC:SortInt{},VarTYPE:SortValType{},VarV1:SortNumber{},VarV2:SortNumber{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(VarTYPE:SortValType{},Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortNumber{}}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarC:SortInt{},\dv{SortInt{}}("0")),VarV1:SortNumber{},VarV2:SortNumber{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(402,10,406,21)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3b8f2c2ae47acc2d47e555f63503a227c967f54b16dbda23a19e701329ddaadf")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aSize(.KList))~>_DotVar2),_21,`<curFrame>`(_DotVar6,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _31,_22,_23,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_9,_10,_11,_12,_13,_14,_15,_16,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_17,_18,_19,_20)),_DotVar7)) #as _34,_24,`<mainStore>`(_2,_3,_4,_5,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_0,`<msize>`(SIZE),_1)),_DotVar4)),_6,_7,_8) #as _36,_25),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{IVal,KItem}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),SIZE))~>_DotVar2),_21,_31,_22,_23,_34,_24,_36,_25),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c24a04175986e790a078e98e0d69497abbc6035abf80c6df875a4e885b70406c), org.kframework.attributes.Location(Location(1054,10,1065,20)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule391LHS{}(SortInt{},SortInt{},SortInt{},SortMmaxCell{},SortMdataCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortFuncsCell{},SortModuleMetadataCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFuncAddrCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortMainStoreCell{},SortTabsCell{},SortNextTabAddrCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortExportsCell{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule391LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarSIZE:SortInt{},Var'Unds'0:SortMmaxCell{},Var'Unds'1:SortMdataCell{},Var'Unds'10:SortTypesCell{},Var'Unds'11:SortNextTypeIdxCell{},Var'Unds'12:SortFuncAddrsCell{},Var'Unds'13:SortNextFuncIdxCell{},Var'Unds'14:SortTabIdsCell{},Var'Unds'15:SortTabAddrsCell{},Var'Unds'16:SortMemIdsCell{},Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortGlobalAddrsCell{},Var'Unds'19:SortNextGlobIdxCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'20:SortModuleMetadataCell{},Var'Unds'21:SortValstackCell{},Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Var'Unds'24:SortNextModuleIdxCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'31:SortCurFrameCell{},Var'Unds'34:SortModuleInstancesCell{},Var'Unds'36:SortMainStoreCell{},Var'Unds'4:SortTabsCell{},Var'Unds'5:SortNextTabAddrCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortExportsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaSize{}()),Var'Unds'DotVar2:SortK{})),Var'Unds'21:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'31:SortCurFrameCell{}),Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'9:SortExportsCell{},Var'Unds'10:SortTypesCell{},Var'Unds'11:SortNextTypeIdxCell{},Var'Unds'12:SortFuncAddrsCell{},Var'Unds'13:SortNextFuncIdxCell{},Var'Unds'14:SortTabIdsCell{},Var'Unds'15:SortTabAddrsCell{},Var'Unds'16:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortGlobalAddrsCell{},Var'Unds'19:SortNextGlobIdxCell{},Var'Unds'20:SortModuleMetadataCell{})),Var'Unds'DotVar7:SortModuleInstCellMap{})),Var'Unds'34:SortModuleInstancesCell{}),Var'Unds'24:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortTabsCell{},Var'Unds'5:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Var'Unds'1:SortMdataCell{})),Var'Unds'DotVar4:SortMemInstCellMap{})),Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'36:SortMainStoreCell{}),Var'Unds'25:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule391LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarSIZE:SortInt{},Var'Unds'0:SortMmaxCell{},Var'Unds'1:SortMdataCell{},Var'Unds'10:SortTypesCell{},Var'Unds'11:SortNextTypeIdxCell{},Var'Unds'12:SortFuncAddrsCell{},Var'Unds'13:SortNextFuncIdxCell{},Var'Unds'14:SortTabIdsCell{},Var'Unds'15:SortTabAddrsCell{},Var'Unds'16:SortMemIdsCell{},Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortGlobalAddrsCell{},Var'Unds'19:SortNextGlobIdxCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'20:SortModuleMetadataCell{},Var'Unds'21:SortValstackCell{},Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Var'Unds'24:SortNextModuleIdxCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'31:SortCurFrameCell{},Var'Unds'34:SortModuleInstancesCell{},Var'Unds'36:SortMainStoreCell{},Var'Unds'4:SortTabsCell{},Var'Unds'5:SortNextTabAddrCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortExportsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortIVal{}, SortKItem{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),VarSIZE:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'21:SortValstackCell{},Var'Unds'31:SortCurFrameCell{},Var'Unds'22:SortModuleRegistryCell{},Var'Unds'23:SortModuleIdsCell{},Var'Unds'34:SortModuleInstancesCell{},Var'Unds'24:SortNextModuleIdxCell{},Var'Unds'36:SortMainStoreCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1054,10,1065,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c24a04175986e790a078e98e0d69497abbc6035abf80c6df875a4e885b70406c")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{StartDefn,KItem}(aStartDefn(IDX))~>_DotVar2),_12,`<curFrame>`(_DotVar3,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _23,_13,_14,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_0,_1,_2,`<funcAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(IDX),inj{Int,KItem}(FADDR)),_DotVar6)),_3,_4,_5,_6,_7,_8,_9,_10,_11)),_DotVar4)) #as _26,_15,_16,_17),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`(invoke_)_WASM_Instr_Int`(FADDR))~>_DotVar2),_12,_23,_13,_14,_26,_15,_16,_17),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9f601865d9eea6d759533e4ebeed3b2f41977aba031d686b3bc4455b7953c934), org.kframework.attributes.Location(Location(1208,10,1214,23)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule392LHS{}(SortInt{},SortInt{},SortInt{},SortExportsCell{},SortTypesCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextTypeIdxCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortGeneratedCounterCell{},SortK{},SortLocalsCell{},SortModuleInstCellMap{},SortMap{}) : SortGeneratedTopCell{}
  where rule392LHS{}(VarCUR:SortInt{},VarFADDR:SortInt{},VarIDX:SortInt{},Var'Unds'0:SortExportsCell{},Var'Unds'1:SortTypesCell{},Var'Unds'10:SortNextGlobIdxCell{},Var'Unds'11:SortModuleMetadataCell{},Var'Unds'12:SortValstackCell{},Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortNextTypeIdxCell{},Var'Unds'23:SortCurFrameCell{},Var'Unds'26:SortModuleInstancesCell{},Var'Unds'3:SortNextFuncIdxCell{},Var'Unds'4:SortTabIdsCell{},Var'Unds'5:SortTabAddrsCell{},Var'Unds'6:SortMemIdsCell{},Var'Unds'7:SortMemAddrsCell{},Var'Unds'8:SortGlobIdsCell{},Var'Unds'9:SortGlobalAddrsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortLocalsCell{},Var'Unds'DotVar4:SortModuleInstCellMap{},Var'Unds'DotVar6:SortMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortStartDefn{}, SortKItem{}}(LblaStartDefn{}(VarIDX:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'12:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar3:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'23:SortCurFrameCell{}),Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'0:SortExportsCell{},Var'Unds'1:SortTypesCell{},Var'Unds'2:SortNextTypeIdxCell{},Lbl'-LT-'funcAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarIDX:SortInt{}),inj{SortInt{}, SortKItem{}}(VarFADDR:SortInt{})),Var'Unds'DotVar6:SortMap{})),Var'Unds'3:SortNextFuncIdxCell{},Var'Unds'4:SortTabIdsCell{},Var'Unds'5:SortTabAddrsCell{},Var'Unds'6:SortMemIdsCell{},Var'Unds'7:SortMemAddrsCell{},Var'Unds'8:SortGlobIdsCell{},Var'Unds'9:SortGlobalAddrsCell{},Var'Unds'10:SortNextGlobIdxCell{},Var'Unds'11:SortModuleMetadataCell{})),Var'Unds'DotVar4:SortModuleInstCellMap{})),Var'Unds'26:SortModuleInstancesCell{}),Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule392LHS{}(VarCUR:SortInt{},VarFADDR:SortInt{},VarIDX:SortInt{},Var'Unds'0:SortExportsCell{},Var'Unds'1:SortTypesCell{},Var'Unds'10:SortNextGlobIdxCell{},Var'Unds'11:SortModuleMetadataCell{},Var'Unds'12:SortValstackCell{},Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortNextTypeIdxCell{},Var'Unds'23:SortCurFrameCell{},Var'Unds'26:SortModuleInstancesCell{},Var'Unds'3:SortNextFuncIdxCell{},Var'Unds'4:SortTabIdsCell{},Var'Unds'5:SortTabAddrsCell{},Var'Unds'6:SortMemIdsCell{},Var'Unds'7:SortMemAddrsCell{},Var'Unds'8:SortGlobIdsCell{},Var'Unds'9:SortGlobalAddrsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortLocalsCell{},Var'Unds'DotVar4:SortModuleInstCellMap{},Var'Unds'DotVar6:SortMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(VarFADDR:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'12:SortValstackCell{},Var'Unds'23:SortCurFrameCell{},Var'Unds'13:SortModuleRegistryCell{},Var'Unds'14:SortModuleIdsCell{},Var'Unds'26:SortModuleInstancesCell{},Var'Unds'15:SortNextModuleIdxCell{},Var'Unds'16:SortMainStoreCell{},Var'Unds'17:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1208,10,1214,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9f601865d9eea6d759533e4ebeed3b2f41977aba031d686b3bc4455b7953c934")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(aStore(inj{IValType,ValType}(ITYPE),SOP,OFFSET))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,VAL)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),IDX)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(ITYPE,SOP,`_+Int_`(IDX,OFFSET),VAL))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d935763a73da4e0e1df9cae17078bfda4d7188df818822cbed6d65777b606faa), org.kframework.attributes.Location(Location(957,10,958,83)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule393LHS{}(SortInt{},SortIValType{},SortInt{},SortStoreOp{},SortInt{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule393LHS{}(VarIDX:SortInt{},VarITYPE:SortIValType{},VarOFFSET:SortInt{},VarSOP:SortStoreOp{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(LblaStore{}(inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{}),VarSOP:SortStoreOp{},VarOFFSET:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarVAL:SortInt{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),VarIDX:SortInt{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule393LHS{}(VarIDX:SortInt{},VarITYPE:SortIValType{},VarOFFSET:SortInt{},VarSOP:SortStoreOp{},VarVAL:SortInt{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},VarSOP:SortStoreOp{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},VarOFFSET:SortInt{}),VarVAL:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(957,10,958,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d935763a73da4e0e1df9cae17078bfda4d7188df818822cbed6d65777b606faa")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{TableDefn,KItem}(aTableDefn(limitsMin(MIN),OID))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Alloc,KItem}(`alloctable(_,_,_)_WASM_Alloc_OptionalId_Int_OptionalInt`(OID,MIN,`.Int_WASM-DATA_OptionalInt`(.KList)))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires `_<=Int_`(MIN,`#maxTableSize()_WASM_Int`(.KList)) ensures #token("true","Bool") [UNIQUE_ID(f79d3491816db985d4455c2db215eb3c15982f7505edd1b19b254a170a43e8e0), org.kframework.attributes.Location(Location(876,10,877,41)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule394LHS{}(SortInt{},SortOptionalId{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule394LHS{}(VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMIN:SortInt{},Lbl'Hash'maxTableSize'LParRParUnds'WASM'Unds'Int{}()),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(LblaTableDefn{}(LbllimitsMin{}(VarMIN:SortInt{}),VarOID:SortOptionalId{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule394LHS{}(VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarOID:SortOptionalId{},VarMIN:SortInt{},Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(876,10,877,41)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("f79d3491816db985d4455c2db215eb3c15982f7505edd1b19b254a170a43e8e0")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{TableDefn,KItem}(aTableDefn(limitsMinMax(MIN,MAX),OID))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Alloc,KItem}(`alloctable(_,_,_)_WASM_Alloc_OptionalId_Int_OptionalInt`(OID,MIN,inj{Int,OptionalInt}(MAX)))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires `_andBool_`(`_<=Int_`(MIN,`#maxTableSize()_WASM_Int`(.KList)),`_<=Int_`(MAX,`#maxTableSize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(c802af810623165965b734321a0a92308d9f21c266abf3321967ae44522f9c29), org.kframework.attributes.Location(Location(878,10,880,41)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule395LHS{}(SortInt{},SortInt{},SortOptionalId{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule395LHS{}(VarMAX:SortInt{},VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMIN:SortInt{},Lbl'Hash'maxTableSize'LParRParUnds'WASM'Unds'Int{}()),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMAX:SortInt{},Lbl'Hash'maxTableSize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(LblaTableDefn{}(LbllimitsMinMax{}(VarMIN:SortInt{},VarMAX:SortInt{}),VarOID:SortOptionalId{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule395LHS{}(VarMAX:SortInt{},VarMIN:SortInt{},VarOID:SortOptionalId{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarOID:SortOptionalId{},VarMIN:SortInt{},inj{SortInt{}, SortOptionalInt{}}(VarMAX:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(878,10,880,41)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("c802af810623165965b734321a0a92308d9f21c266abf3321967ae44522f9c29")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aTestOp(TYPE,TOP))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(TYPE,C1)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_IValType_TestOp_Int`(TYPE,TOP,C1))~>_DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(15f63c67fd1313eca45835341ffb1859b2e6a983f6e994a26b14c1f610d10f78), org.kframework.attributes.Location(Location(359,10,360,67)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule396LHS{}(SortInt{},SortTestOp{},SortIValType{},SortValStack{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule396LHS{}(VarC1:SortInt{},VarTOP:SortTestOp{},VarTYPE:SortIValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaTestOp{}(VarTYPE:SortIValType{},VarTOP:SortTestOp{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarTYPE:SortIValType{},VarC1:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule396LHS{}(VarC1:SortInt{},VarTOP:SortTestOp{},VarTYPE:SortIValType{},VarVALSTACK:SortValStack{},Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'TestOp'Unds'Int{}(VarTYPE:SortIValType{},VarTOP:SortTestOp{},VarC1:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(359,10,360,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("15f63c67fd1313eca45835341ffb1859b2e6a983f6e994a26b14c1f610d10f78")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{TypeDefn,KItem}(aTypeDefn(TYPE,OID))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Alloc,KItem}(`alloctype(_,_)_WASM_Alloc_OptionalId_FuncType`(OID,TYPE))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1a01c062c4d8f37a2d4ab3770e3cd7cd8dfa19f428643590cb657865e13a3933), org.kframework.attributes.Location(Location(663,10,663,93)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule397LHS{}(SortOptionalId{},SortFuncType{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule397LHS{}(VarOID:SortOptionalId{},VarTYPE:SortFuncType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortTypeDefn{}, SortKItem{}}(LblaTypeDefn{}(VarTYPE:SortFuncType{},VarOID:SortOptionalId{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule397LHS{}(VarOID:SortOptionalId{},VarTYPE:SortFuncType{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'FuncType{}(VarOID:SortOptionalId{},VarTYPE:SortFuncType{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(663,10,663,93)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("1a01c062c4d8f37a2d4ab3770e3cd7cd8dfa19f428643590cb657865e13a3933")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aUnreachable(.KList))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3a746ca22b1e3a82afa16fb5eace8d98e4d0626315ed299ac6b37acd6926d651), org.kframework.attributes.Location(Location(421,10,421,52)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule398LHS{}(SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule398LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaUnreachable{}()),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule398LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(421,10,421,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3a746ca22b1e3a82afa16fb5eace8d98e4d0626315ed299ac6b37acd6926d651")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Alloc,KItem}(`allocfunc(_,_,_,_,_,_)_WASM_Alloc_Int_Int_FuncType_VecType_Instrs_FuncMetadata`(MOD,ADDR,TYPE,LOCALS,INSTRS,funcMeta(OID,LIDS)))~>_DotVar2),_7,_8,_9,_10,_11,_12,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`.FuncDefCellMap`(.KList),_DotVar4)),_0,_1,_2,_3,_4,_5,_6),_13),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),_7,_8,_9,_10,_11,_12,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`FuncDefCellMapItem`(`<fAddr>`(ADDR),`<funcDef>`(`<fAddr>`(ADDR),`<fCode>`(INSTRS),`<fType>`(inj{FuncType,Type}(TYPE)),`<fLocal>`(inj{VecType,Type}(LOCALS)),`<fModInst>`(MOD),`<funcMetadata>`(`<funcId>`(OID),`<localIds>`(LIDS)))),_DotVar4)),_0,_1,_2,_3,_4,_5,_6),_13),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d3770743ebf36e24b4d3fb6116cd977236f1c17e859cf919f3b7ee4aa754512e), org.kframework.attributes.Location(Location(703,10,720,18)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule399LHS{}(SortInt{},SortInstrs{},SortMap{},SortVecType{},SortInt{},SortOptionalId{},SortFuncType{},SortNextFuncAddrCell{},SortTabsCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextTabAddrCell{},SortMemsCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortGeneratedCounterCell{},SortK{},SortFuncDefCellMap{}) : SortGeneratedTopCell{}
  where rule399LHS{}(VarADDR:SortInt{},VarINSTRS:SortInstrs{},VarLIDS:SortMap{},VarLOCALS:SortVecType{},VarMOD:SortInt{},VarOID:SortOptionalId{},VarTYPE:SortFuncType{},Var'Unds'0:SortNextFuncAddrCell{},Var'Unds'1:SortTabsCell{},Var'Unds'10:SortModuleIdsCell{},Var'Unds'11:SortModuleInstancesCell{},Var'Unds'12:SortNextModuleIdxCell{},Var'Unds'13:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortValstackCell{},Var'Unds'8:SortCurFrameCell{},Var'Unds'9:SortModuleRegistryCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortFuncDefCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblallocfunc'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'Int'Unds'Int'Unds'FuncType'Unds'VecType'Unds'Instrs'Unds'FuncMetadata{}(VarMOD:SortInt{},VarADDR:SortInt{},VarTYPE:SortFuncType{},VarLOCALS:SortVecType{},VarINSTRS:SortInstrs{},LblfuncMeta{}(VarOID:SortOptionalId{},VarLIDS:SortMap{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'7:SortValstackCell{},Var'Unds'8:SortCurFrameCell{},Var'Unds'9:SortModuleRegistryCell{},Var'Unds'10:SortModuleIdsCell{},Var'Unds'11:SortModuleInstancesCell{},Var'Unds'12:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(Lbl'Stop'FuncDefCellMap{}(),Var'Unds'DotVar4:SortFuncDefCellMap{})),Var'Unds'0:SortNextFuncAddrCell{},Var'Unds'1:SortTabsCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'13:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule399LHS{}(VarADDR:SortInt{},VarINSTRS:SortInstrs{},VarLIDS:SortMap{},VarLOCALS:SortVecType{},VarMOD:SortInt{},VarOID:SortOptionalId{},VarTYPE:SortFuncType{},Var'Unds'0:SortNextFuncAddrCell{},Var'Unds'1:SortTabsCell{},Var'Unds'10:SortModuleIdsCell{},Var'Unds'11:SortModuleInstancesCell{},Var'Unds'12:SortNextModuleIdxCell{},Var'Unds'13:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortValstackCell{},Var'Unds'8:SortCurFrameCell{},Var'Unds'9:SortModuleRegistryCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortFuncDefCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'7:SortValstackCell{},Var'Unds'8:SortCurFrameCell{},Var'Unds'9:SortModuleRegistryCell{},Var'Unds'10:SortModuleIdsCell{},Var'Unds'11:SortModuleInstancesCell{},Var'Unds'12:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(Lbl'-LT-'fAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'funcDef'-GT-'{}(Lbl'-LT-'fAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'fCode'-GT-'{}(VarINSTRS:SortInstrs{}),Lbl'-LT-'fType'-GT-'{}(inj{SortFuncType{}, SortType{}}(VarTYPE:SortFuncType{})),Lbl'-LT-'fLocal'-GT-'{}(inj{SortVecType{}, SortType{}}(VarLOCALS:SortVecType{})),Lbl'-LT-'fModInst'-GT-'{}(VarMOD:SortInt{}),Lbl'-LT-'funcMetadata'-GT-'{}(Lbl'-LT-'funcId'-GT-'{}(VarOID:SortOptionalId{}),Lbl'-LT-'localIds'-GT-'{}(VarLIDS:SortMap{})))),Var'Unds'DotVar4:SortFuncDefCellMap{})),Var'Unds'0:SortNextFuncAddrCell{},Var'Unds'1:SortTabsCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'13:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(703,10,720,18)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d3770743ebf36e24b4d3fb6116cd977236f1c17e859cf919f3b7ee4aa754512e")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Alloc,KItem}(`allocglobal(_,_)_WASM_Alloc_OptionalId_GlobalType`(OID,aGlobalType(MUT,TYP)))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_ValType_Number`(TYP,VAL) #as _28,STACK)),`<curFrame>`(_DotVar5,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _29,_16,_17,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_6,_7,_8,_9,_10,_11,_12,_13,_14,`<globIds>`(IDS),`<globalAddrs>`(GLOBS),`<nextGlobIdx>`(NEXTIDX),_15)),_DotVar6)),_18,`<mainStore>`(_0,_1,_2,_3,_4,_5,`<globals>`(`_GlobalInstCellMap_`(`.GlobalInstCellMap`(.KList),_DotVar4)),`<nextGlobAddr>`(NEXTADDR)),_19),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),`<valstack>`(STACK),_29,_16,_17,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_6,_7,_8,_9,_10,_11,_12,_13,_14,`<globIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,NEXTIDX)),`<globalAddrs>`(`Map:update`(GLOBS,inj{Int,KItem}(NEXTIDX),inj{Int,KItem}(NEXTADDR))),`<nextGlobIdx>`(`_+Int_`(NEXTIDX,#token("1","Int"))),_15)),_DotVar6)),_18,`<mainStore>`(_0,_1,_2,_3,_4,_5,`<globals>`(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(`<gAddr>`(NEXTADDR),`<globalInst>`(`<gAddr>`(NEXTADDR),`<gValue>`(_28),`<gMut>`(MUT))),_DotVar4)),`<nextGlobAddr>`(`_+Int_`(NEXTADDR,#token("1","Int")))),_19),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b9a860dba93b78f69ce395873de7d6ace4b70a7fefdc9f007629910989293a9), org.kframework.attributes.Location(Location(556,10,576,20)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule400LHS{}(SortInt{},SortMap{},SortMap{},SortMut{},SortInt{},SortInt{},SortOptionalId{},SortValStack{},SortValType{},SortNumber{},SortFuncsCell{},SortNextFuncAddrCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortModuleMetadataCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortTabsCell{},SortVal{},SortCurFrameCell{},SortNextTabAddrCell{},SortMemsCell{},SortNextMemAddrCell{},SortExportsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncAddrsCell{},SortGeneratedCounterCell{},SortK{},SortGlobalInstCellMap{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule400LHS{}(VarCUR:SortInt{},VarGLOBS:SortMap{},VarIDS:SortMap{},VarMUT:SortMut{},VarNEXTADDR:SortInt{},VarNEXTIDX:SortInt{},VarOID:SortOptionalId{},VarSTACK:SortValStack{},VarTYP:SortValType{},VarVAL:SortNumber{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortNextFuncIdxCell{},Var'Unds'11:SortTabIdsCell{},Var'Unds'12:SortTabAddrsCell{},Var'Unds'13:SortMemIdsCell{},Var'Unds'14:SortMemAddrsCell{},Var'Unds'15:SortModuleMetadataCell{},Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},Var'Unds'18:SortNextModuleIdxCell{},Var'Unds'19:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortTabsCell{},Var'Unds'28:SortVal{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Var'Unds'6:SortExportsCell{},Var'Unds'7:SortTypesCell{},Var'Unds'8:SortNextTypeIdxCell{},Var'Unds'9:SortFuncAddrsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortGlobalInstCellMap{},Var'Unds'DotVar5:SortLocalsCell{},Var'Unds'DotVar6:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblallocglobal'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'GlobalType{}(VarOID:SortOptionalId{},LblaGlobalType{}(VarMUT:SortMut{},VarTYP:SortValType{}))),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(\and{SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(VarTYP:SortValType{},VarVAL:SortNumber{}),Var'Unds'28:SortVal{}),VarSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar5:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'29:SortCurFrameCell{}),Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'6:SortExportsCell{},Var'Unds'7:SortTypesCell{},Var'Unds'8:SortNextTypeIdxCell{},Var'Unds'9:SortFuncAddrsCell{},Var'Unds'10:SortNextFuncIdxCell{},Var'Unds'11:SortTabIdsCell{},Var'Unds'12:SortTabAddrsCell{},Var'Unds'13:SortMemIdsCell{},Var'Unds'14:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'globalAddrs'-GT-'{}(VarGLOBS:SortMap{}),Lbl'-LT-'nextGlobIdx'-GT-'{}(VarNEXTIDX:SortInt{}),Var'Unds'15:SortModuleMetadataCell{})),Var'Unds'DotVar6:SortModuleInstCellMap{})),Var'Unds'18:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(Lbl'Stop'GlobalInstCellMap{}(),Var'Unds'DotVar4:SortGlobalInstCellMap{})),Lbl'-LT-'nextGlobAddr'-GT-'{}(VarNEXTADDR:SortInt{})),Var'Unds'19:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule400LHS{}(VarCUR:SortInt{},VarGLOBS:SortMap{},VarIDS:SortMap{},VarMUT:SortMut{},VarNEXTADDR:SortInt{},VarNEXTIDX:SortInt{},VarOID:SortOptionalId{},VarSTACK:SortValStack{},VarTYP:SortValType{},VarVAL:SortNumber{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortNextFuncIdxCell{},Var'Unds'11:SortTabIdsCell{},Var'Unds'12:SortTabAddrsCell{},Var'Unds'13:SortMemIdsCell{},Var'Unds'14:SortMemAddrsCell{},Var'Unds'15:SortModuleMetadataCell{},Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},Var'Unds'18:SortNextModuleIdxCell{},Var'Unds'19:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortTabsCell{},Var'Unds'28:SortVal{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Var'Unds'6:SortExportsCell{},Var'Unds'7:SortTypesCell{},Var'Unds'8:SortNextTypeIdxCell{},Var'Unds'9:SortFuncAddrsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortGlobalInstCellMap{},Var'Unds'DotVar5:SortLocalsCell{},Var'Unds'DotVar6:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarSTACK:SortValStack{}),Var'Unds'29:SortCurFrameCell{},Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'6:SortExportsCell{},Var'Unds'7:SortTypesCell{},Var'Unds'8:SortNextTypeIdxCell{},Var'Unds'9:SortFuncAddrsCell{},Var'Unds'10:SortNextFuncIdxCell{},Var'Unds'11:SortTabIdsCell{},Var'Unds'12:SortTabAddrsCell{},Var'Unds'13:SortMemIdsCell{},Var'Unds'14:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},VarNEXTIDX:SortInt{})),Lbl'-LT-'globalAddrs'-GT-'{}(LblMap'Coln'update{}(VarGLOBS:SortMap{},inj{SortInt{}, SortKItem{}}(VarNEXTIDX:SortInt{}),inj{SortInt{}, SortKItem{}}(VarNEXTADDR:SortInt{}))),Lbl'-LT-'nextGlobIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTIDX:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'15:SortModuleMetadataCell{})),Var'Unds'DotVar6:SortModuleInstCellMap{})),Var'Unds'18:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(Lbl'-LT-'gAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'globalInst'-GT-'{}(Lbl'-LT-'gAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'gValue'-GT-'{}(Var'Unds'28:SortVal{}),Lbl'-LT-'gMut'-GT-'{}(VarMUT:SortMut{}))),Var'Unds'DotVar4:SortGlobalInstCellMap{})),Lbl'-LT-'nextGlobAddr'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTADDR:SortInt{},\dv{SortInt{}}("1")))),Var'Unds'19:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(556,10,576,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5b9a860dba93b78f69ce395873de7d6ace4b70a7fefdc9f007629910989293a9")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Alloc,KItem}(`allocmemory(_,_,_)_WASM_Alloc_OptionalId_Int_OptionalInt`(ID,MIN,MAX))~>_DotVar2),_17,`<curFrame>`(_DotVar5,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _27,_18,_19,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_6,_7,_8,_9,_10,_11,_12,`<memIds>`(IDS),`<memAddrs>`(`.Map`(.KList)),_13,_14,_15,_16)),_DotVar6)),_20,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`.MemInstCellMap`(.KList),_DotVar4)),`<nextMemAddr>`(NEXTADDR),_4,_5),_21),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),_17,_27,_18,_19,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_6,_7,_8,_9,_10,_11,_12,`<memIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,ID,#token("0","Int"))),`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(NEXTADDR))),_13,_14,_15,_16)),_DotVar6)),_20,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(NEXTADDR),`<memInst>`(`<mAddr>`(NEXTADDR),`<mmax>`(MAX),`<msize>`(MIN),initMdataCell(.KList))),_DotVar4)),`<nextMemAddr>`(`_+Int_`(NEXTADDR,#token("1","Int"))),_4,_5),_21),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(450af4dfbe1db732de296e985261857e85aea77b4c40914b91157f5e0ba2c917), org.kframework.attributes.Location(Location(925,10,944,17)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule401LHS{}(SortInt{},SortOptionalId{},SortMap{},SortOptionalInt{},SortInt{},SortInt{},SortFuncsCell{},SortNextFuncAddrCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortTabsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortCurFrameCell{},SortNextTabAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortExportsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncAddrsCell{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule401LHS{}(VarCUR:SortInt{},VarID:SortOptionalId{},VarIDS:SortMap{},VarMAX:SortOptionalInt{},VarMIN:SortInt{},VarNEXTADDR:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortNextFuncIdxCell{},Var'Unds'11:SortTabIdsCell{},Var'Unds'12:SortTabAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortModuleMetadataCell{},Var'Unds'17:SortValstackCell{},Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortNextModuleIdxCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{},Var'Unds'6:SortExportsCell{},Var'Unds'7:SortTypesCell{},Var'Unds'8:SortNextTypeIdxCell{},Var'Unds'9:SortFuncAddrsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar5:SortLocalsCell{},Var'Unds'DotVar6:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblallocmemory'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarID:SortOptionalId{},VarMIN:SortInt{},VarMAX:SortOptionalInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'17:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar5:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'27:SortCurFrameCell{}),Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'6:SortExportsCell{},Var'Unds'7:SortTypesCell{},Var'Unds'8:SortNextTypeIdxCell{},Var'Unds'9:SortFuncAddrsCell{},Var'Unds'10:SortNextFuncIdxCell{},Var'Unds'11:SortTabIdsCell{},Var'Unds'12:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortModuleMetadataCell{})),Var'Unds'DotVar6:SortModuleInstCellMap{})),Var'Unds'20:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(Lbl'Stop'MemInstCellMap{}(),Var'Unds'DotVar4:SortMemInstCellMap{})),Lbl'-LT-'nextMemAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'21:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule401LHS{}(VarCUR:SortInt{},VarID:SortOptionalId{},VarIDS:SortMap{},VarMAX:SortOptionalInt{},VarMIN:SortInt{},VarNEXTADDR:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortNextFuncIdxCell{},Var'Unds'11:SortTabIdsCell{},Var'Unds'12:SortTabAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortModuleMetadataCell{},Var'Unds'17:SortValstackCell{},Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortNextModuleIdxCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{},Var'Unds'6:SortExportsCell{},Var'Unds'7:SortTypesCell{},Var'Unds'8:SortNextTypeIdxCell{},Var'Unds'9:SortFuncAddrsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar5:SortLocalsCell{},Var'Unds'DotVar6:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'17:SortValstackCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'6:SortExportsCell{},Var'Unds'7:SortTypesCell{},Var'Unds'8:SortNextTypeIdxCell{},Var'Unds'9:SortFuncAddrsCell{},Var'Unds'10:SortNextFuncIdxCell{},Var'Unds'11:SortTabIdsCell{},Var'Unds'12:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarID:SortOptionalId{},\dv{SortInt{}}("0"))),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarNEXTADDR:SortInt{}))),Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortModuleMetadataCell{})),Var'Unds'DotVar6:SortModuleInstCellMap{})),Var'Unds'20:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'mmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'msize'-GT-'{}(VarMIN:SortInt{}),LblinitMdataCell{}())),Var'Unds'DotVar4:SortMemInstCellMap{})),Lbl'-LT-'nextMemAddr'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTADDR:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'21:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(925,10,944,17)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("450af4dfbe1db732de296e985261857e85aea77b4c40914b91157f5e0ba2c917")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Alloc,KItem}(`alloctable(_,_,_)_WASM_Alloc_OptionalId_Int_OptionalInt`(ID,MIN,MAX))~>_DotVar2),_17,`<curFrame>`(_DotVar5,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _27,_18,_19,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_6,_7,_8,_9,_10,`<tabIds>`(IDS),`<tabAddrs>`(`.Map`(.KList)),_11,_12,_13,_14,_15,_16)),_DotVar6)),_20,`<mainStore>`(_0,_1,`<tabs>`(`_TabInstCellMap_`(`.TabInstCellMap`(.KList),_DotVar4)),`<nextTabAddr>`(NEXTADDR),_2,_3,_4,_5),_21),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),_17,_27,_18,_19,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_6,_7,_8,_9,_10,`<tabIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,ID,#token("0","Int"))),`<tabAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(NEXTADDR))),_11,_12,_13,_14,_15,_16)),_DotVar6)),_20,`<mainStore>`(_0,_1,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(NEXTADDR),`<tabInst>`(`<tAddr>`(NEXTADDR),`<tmax>`(MAX),`<tsize>`(MIN),`<tdata>`(`.Map`(.KList)))),_DotVar4)),`<nextTabAddr>`(`_+Int_`(NEXTADDR,#token("1","Int"))),_2,_3,_4,_5),_21),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(869ad06435559025c188168bdbe942664e1e156bbda0e404211796f582ba6870), org.kframework.attributes.Location(Location(882,10,901,17)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule402LHS{}(SortInt{},SortOptionalId{},SortMap{},SortOptionalInt{},SortInt{},SortInt{},SortFuncsCell{},SortNextFuncAddrCell{},SortNextFuncIdxCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortMemsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortCurFrameCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortExportsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncAddrsCell{},SortGeneratedCounterCell{},SortK{},SortTabInstCellMap{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule402LHS{}(VarCUR:SortInt{},VarID:SortOptionalId{},VarIDS:SortMap{},VarMAX:SortOptionalInt{},VarMIN:SortInt{},VarNEXTADDR:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortNextFuncIdxCell{},Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortModuleMetadataCell{},Var'Unds'17:SortValstackCell{},Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Var'Unds'2:SortMemsCell{},Var'Unds'20:SortNextModuleIdxCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{},Var'Unds'6:SortExportsCell{},Var'Unds'7:SortTypesCell{},Var'Unds'8:SortNextTypeIdxCell{},Var'Unds'9:SortFuncAddrsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortTabInstCellMap{},Var'Unds'DotVar5:SortLocalsCell{},Var'Unds'DotVar6:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblalloctable'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarID:SortOptionalId{},VarMIN:SortInt{},VarMAX:SortOptionalInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'17:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar5:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'27:SortCurFrameCell{}),Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'6:SortExportsCell{},Var'Unds'7:SortTypesCell{},Var'Unds'8:SortNextTypeIdxCell{},Var'Unds'9:SortFuncAddrsCell{},Var'Unds'10:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortModuleMetadataCell{})),Var'Unds'DotVar6:SortModuleInstCellMap{})),Var'Unds'20:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(Lbl'Stop'TabInstCellMap{}(),Var'Unds'DotVar4:SortTabInstCellMap{})),Lbl'-LT-'nextTabAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Var'Unds'2:SortMemsCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'21:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule402LHS{}(VarCUR:SortInt{},VarID:SortOptionalId{},VarIDS:SortMap{},VarMAX:SortOptionalInt{},VarMIN:SortInt{},VarNEXTADDR:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortNextFuncIdxCell{},Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortModuleMetadataCell{},Var'Unds'17:SortValstackCell{},Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Var'Unds'2:SortMemsCell{},Var'Unds'20:SortNextModuleIdxCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{},Var'Unds'6:SortExportsCell{},Var'Unds'7:SortTypesCell{},Var'Unds'8:SortNextTypeIdxCell{},Var'Unds'9:SortFuncAddrsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortTabInstCellMap{},Var'Unds'DotVar5:SortLocalsCell{},Var'Unds'DotVar6:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'17:SortValstackCell{},Var'Unds'27:SortCurFrameCell{},Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'6:SortExportsCell{},Var'Unds'7:SortTypesCell{},Var'Unds'8:SortNextTypeIdxCell{},Var'Unds'9:SortFuncAddrsCell{},Var'Unds'10:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarID:SortOptionalId{},\dv{SortInt{}}("0"))),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarNEXTADDR:SortInt{}))),Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{},Var'Unds'16:SortModuleMetadataCell{})),Var'Unds'DotVar6:SortModuleInstCellMap{})),Var'Unds'20:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'tmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'tsize'-GT-'{}(VarMIN:SortInt{}),Lbl'-LT-'tdata'-GT-'{}(Lbl'Stop'Map{}()))),Var'Unds'DotVar4:SortTabInstCellMap{})),Lbl'-LT-'nextTabAddr'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTADDR:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'2:SortMemsCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'21:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(882,10,901,17)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("869ad06435559025c188168bdbe942664e1e156bbda0e404211796f582ba6870")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Alloc,KItem}(`alloctype(_,_)_WASM_Alloc_OptionalId_FuncType`(OID,TYPE))~>_DotVar2),_13,`<curFrame>`(_DotVar3,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _24,_14,_15,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_3,`<types>`(TYPES),`<nextTypeIdx>`(NEXTIDX),_4,_5,_6,_7,_8,_9,_10,_11,_12,`<moduleMetadata>`(_0,_1,_2,`<typeIds>`(IDS)))),_DotVar4)),_16,_17,_18),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),_13,_24,_14,_15,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_3,`<types>`(`Map:update`(TYPES,inj{Int,KItem}(NEXTIDX),inj{FuncType,KItem}(TYPE))),`<nextTypeIdx>`(`_+Int_`(NEXTIDX,#token("1","Int"))),_4,_5,_6,_7,_8,_9,_10,_11,_12,`<moduleMetadata>`(_0,_1,_2,`<typeIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,NEXTIDX))))),_DotVar4)),_16,_17,_18),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cb63f9491a0c9a6978054f2f795928a80b21737cc896238100fb0b5526dbb4c8), org.kframework.attributes.Location(Location(665,10,673,23)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule403LHS{}(SortInt{},SortMap{},SortInt{},SortOptionalId{},SortFuncType{},SortMap{},SortModuleFileNameCell{},SortModuleIdCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortFuncIdsCell{},SortCurFrameCell{},SortExportsCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGeneratedCounterCell{},SortK{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule403LHS{}(VarCUR:SortInt{},VarIDS:SortMap{},VarNEXTIDX:SortInt{},VarOID:SortOptionalId{},VarTYPE:SortFuncType{},VarTYPES:SortMap{},Var'Unds'0:SortModuleFileNameCell{},Var'Unds'1:SortModuleIdCell{},Var'Unds'10:SortGlobIdsCell{},Var'Unds'11:SortGlobalAddrsCell{},Var'Unds'12:SortNextGlobIdxCell{},Var'Unds'13:SortValstackCell{},Var'Unds'14:SortModuleRegistryCell{},Var'Unds'15:SortModuleIdsCell{},Var'Unds'16:SortNextModuleIdxCell{},Var'Unds'17:SortMainStoreCell{},Var'Unds'18:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortFuncIdsCell{},Var'Unds'24:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'4:SortFuncAddrsCell{},Var'Unds'5:SortNextFuncIdxCell{},Var'Unds'6:SortTabIdsCell{},Var'Unds'7:SortTabAddrsCell{},Var'Unds'8:SortMemIdsCell{},Var'Unds'9:SortMemAddrsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortLocalsCell{},Var'Unds'DotVar4:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortAlloc{}, SortKItem{}}(Lblalloctype'LParUndsCommUndsRParUnds'WASM'Unds'Alloc'Unds'OptionalId'Unds'FuncType{}(VarOID:SortOptionalId{},VarTYPE:SortFuncType{})),Var'Unds'DotVar2:SortK{})),Var'Unds'13:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar3:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'24:SortCurFrameCell{}),Var'Unds'14:SortModuleRegistryCell{},Var'Unds'15:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'3:SortExportsCell{},Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Lbl'-LT-'nextTypeIdx'-GT-'{}(VarNEXTIDX:SortInt{}),Var'Unds'4:SortFuncAddrsCell{},Var'Unds'5:SortNextFuncIdxCell{},Var'Unds'6:SortTabIdsCell{},Var'Unds'7:SortTabAddrsCell{},Var'Unds'8:SortMemIdsCell{},Var'Unds'9:SortMemAddrsCell{},Var'Unds'10:SortGlobIdsCell{},Var'Unds'11:SortGlobalAddrsCell{},Var'Unds'12:SortNextGlobIdxCell{},Lbl'-LT-'moduleMetadata'-GT-'{}(Var'Unds'0:SortModuleFileNameCell{},Var'Unds'1:SortModuleIdCell{},Var'Unds'2:SortFuncIdsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarIDS:SortMap{})))),Var'Unds'DotVar4:SortModuleInstCellMap{})),Var'Unds'16:SortNextModuleIdxCell{},Var'Unds'17:SortMainStoreCell{},Var'Unds'18:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule403LHS{}(VarCUR:SortInt{},VarIDS:SortMap{},VarNEXTIDX:SortInt{},VarOID:SortOptionalId{},VarTYPE:SortFuncType{},VarTYPES:SortMap{},Var'Unds'0:SortModuleFileNameCell{},Var'Unds'1:SortModuleIdCell{},Var'Unds'10:SortGlobIdsCell{},Var'Unds'11:SortGlobalAddrsCell{},Var'Unds'12:SortNextGlobIdxCell{},Var'Unds'13:SortValstackCell{},Var'Unds'14:SortModuleRegistryCell{},Var'Unds'15:SortModuleIdsCell{},Var'Unds'16:SortNextModuleIdxCell{},Var'Unds'17:SortMainStoreCell{},Var'Unds'18:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortFuncIdsCell{},Var'Unds'24:SortCurFrameCell{},Var'Unds'3:SortExportsCell{},Var'Unds'4:SortFuncAddrsCell{},Var'Unds'5:SortNextFuncIdxCell{},Var'Unds'6:SortTabIdsCell{},Var'Unds'7:SortTabAddrsCell{},Var'Unds'8:SortMemIdsCell{},Var'Unds'9:SortMemAddrsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortLocalsCell{},Var'Unds'DotVar4:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'13:SortValstackCell{},Var'Unds'24:SortCurFrameCell{},Var'Unds'14:SortModuleRegistryCell{},Var'Unds'15:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'3:SortExportsCell{},Lbl'-LT-'types'-GT-'{}(LblMap'Coln'update{}(VarTYPES:SortMap{},inj{SortInt{}, SortKItem{}}(VarNEXTIDX:SortInt{}),inj{SortFuncType{}, SortKItem{}}(VarTYPE:SortFuncType{}))),Lbl'-LT-'nextTypeIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTIDX:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'4:SortFuncAddrsCell{},Var'Unds'5:SortNextFuncIdxCell{},Var'Unds'6:SortTabIdsCell{},Var'Unds'7:SortTabAddrsCell{},Var'Unds'8:SortMemIdsCell{},Var'Unds'9:SortMemAddrsCell{},Var'Unds'10:SortGlobIdsCell{},Var'Unds'11:SortGlobalAddrsCell{},Var'Unds'12:SortNextGlobIdxCell{},Lbl'-LT-'moduleMetadata'-GT-'{}(Var'Unds'0:SortModuleFileNameCell{},Var'Unds'1:SortModuleIdCell{},Var'Unds'2:SortFuncIdsCell{},Lbl'-LT-'typeIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},VarNEXTIDX:SortInt{}))))),Var'Unds'DotVar4:SortModuleInstCellMap{})),Var'Unds'16:SortNextModuleIdxCell{},Var'Unds'17:SortMainStoreCell{},Var'Unds'18:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(665,10,673,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("cb63f9491a0c9a6978054f2f795928a80b21737cc896238100fb0b5526dbb4c8")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(`call_indirect__WASM-COMMON-SYNTAX_PlainInstr_TypeUse`(TUSE))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_ValType_Number`(inj{IValType,ValType}(i32(.KList)),IDX),VALSTACK)),`<curFrame>`(_DotVar9,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _39,_25,_26,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_15,`<types>`(TYPES),_16,_17,_18,_19,`<tabAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_20,_21,_22,_23,_24,`<moduleMetadata>`(_12,_13,_14,`<typeIds>`(TYPEIDS)))),_DotVar10)) #as _42,_27,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`FuncDefCellMapItem`(`<fAddr>`(FADDR),`<funcDef>`(`<fAddr>`(FADDR),_2,`<fType>`(FTYPE),_3,_4,_5)),_DotVar7)),_6,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),_0,_1,`<tdata>`(`_Map_`(`_|->_`(inj{Number,KItem}(IDX),inj{Int,KItem}(FADDR)),_DotVar6)))),_DotVar4)),_7,_8,_9,_10,_11) #as _44,_28),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`(invoke_)_WASM_Instr_Int`(FADDR))~>_DotVar2),`<valstack>`(VALSTACK),_39,_25,_26,_42,_27,_44,_28),_DotVar0) requires `_==K_`(inj{FuncType,KItem}(`asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(TYPEIDS,TYPES,TUSE)),inj{Type,KItem}(FTYPE)) ensures #token("true","Bool") [UNIQUE_ID(0bb9e6d3f0984fa8177fa8b35cfa0ecc4ab176556b0a857d98a2f6caec517566), org.kframework.attributes.Location(Location(800,10,820,58)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule404LHS{}(SortInt{},SortInt{},SortInt{},SortType{},SortNumber{},SortTypeUse{},SortMap{},SortMap{},SortValStack{},SortTmaxCell{},SortTsizeCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortModuleFileNameCell{},SortModuleIdCell{},SortFuncIdsCell{},SortExportsCell{},SortNextTypeIdxCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortFCodeCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortFLocalCell{},SortCurFrameCell{},SortFModInstCell{},SortModuleInstancesCell{},SortMainStoreCell{},SortFuncMetadataCell{},SortNextFuncAddrCell{},SortNextTabAddrCell{},SortMemsCell{},SortNextMemAddrCell{},SortGeneratedCounterCell{},SortModuleInstCellMap{},SortK{},SortTabInstCellMap{},SortMap{},SortFuncDefCellMap{},SortLocalsCell{}) : SortGeneratedTopCell{}
  where rule404LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarFADDR:SortInt{},VarFTYPE:SortType{},VarIDX:SortNumber{},VarTUSE:SortTypeUse{},VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarVALSTACK:SortValStack{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortGlobalsCell{},Var'Unds'11:SortNextGlobAddrCell{},Var'Unds'12:SortModuleFileNameCell{},Var'Unds'13:SortModuleIdCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortExportsCell{},Var'Unds'16:SortNextTypeIdxCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFCodeCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortFLocalCell{},Var'Unds'39:SortCurFrameCell{},Var'Unds'4:SortFModInstCell{},Var'Unds'42:SortModuleInstancesCell{},Var'Unds'44:SortMainStoreCell{},Var'Unds'5:SortFuncMetadataCell{},Var'Unds'6:SortNextFuncAddrCell{},Var'Unds'7:SortNextTabAddrCell{},Var'Unds'8:SortMemsCell{},Var'Unds'9:SortNextMemAddrCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar10:SortModuleInstCellMap{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortTabInstCellMap{},Var'Unds'DotVar6:SortMap{},Var'Unds'DotVar7:SortFuncDefCellMap{},Var'Unds'DotVar9:SortLocalsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarTUSE:SortTypeUse{})),dotk{}()),kseq{}(inj{SortType{}, SortKItem{}}(VarFTYPE:SortType{}),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(VarTUSE:SortTypeUse{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(inj{SortIValType{}, SortValType{}}(Lbli32{}()),VarIDX:SortNumber{}),VarVALSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar9:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'39:SortCurFrameCell{}),Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'15:SortExportsCell{},Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'16:SortNextTypeIdxCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Lbl'-LT-'moduleMetadata'-GT-'{}(Var'Unds'12:SortModuleFileNameCell{},Var'Unds'13:SortModuleIdCell{},Var'Unds'14:SortFuncIdsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarTYPEIDS:SortMap{})))),Var'Unds'DotVar10:SortModuleInstCellMap{})),Var'Unds'42:SortModuleInstancesCell{}),Var'Unds'27:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Lbl'-LT-'funcDef'-GT-'{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Var'Unds'2:SortFCodeCell{},Lbl'-LT-'fType'-GT-'{}(VarFTYPE:SortType{}),Var'Unds'3:SortFLocalCell{},Var'Unds'4:SortFModInstCell{},Var'Unds'5:SortFuncMetadataCell{})),Var'Unds'DotVar7:SortFuncDefCellMap{})),Var'Unds'6:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Lbl'-LT-'tdata'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortNumber{}, SortKItem{}}(VarIDX:SortNumber{}),inj{SortInt{}, SortKItem{}}(VarFADDR:SortInt{})),Var'Unds'DotVar6:SortMap{})))),Var'Unds'DotVar4:SortTabInstCellMap{})),Var'Unds'7:SortNextTabAddrCell{},Var'Unds'8:SortMemsCell{},Var'Unds'9:SortNextMemAddrCell{},Var'Unds'10:SortGlobalsCell{},Var'Unds'11:SortNextGlobAddrCell{}),Var'Unds'44:SortMainStoreCell{}),Var'Unds'28:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule404LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarFADDR:SortInt{},VarFTYPE:SortType{},VarIDX:SortNumber{},VarTUSE:SortTypeUse{},VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarVALSTACK:SortValStack{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortGlobalsCell{},Var'Unds'11:SortNextGlobAddrCell{},Var'Unds'12:SortModuleFileNameCell{},Var'Unds'13:SortModuleIdCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortExportsCell{},Var'Unds'16:SortNextTypeIdxCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFCodeCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortFLocalCell{},Var'Unds'39:SortCurFrameCell{},Var'Unds'4:SortFModInstCell{},Var'Unds'42:SortModuleInstancesCell{},Var'Unds'44:SortMainStoreCell{},Var'Unds'5:SortFuncMetadataCell{},Var'Unds'6:SortNextFuncAddrCell{},Var'Unds'7:SortNextTabAddrCell{},Var'Unds'8:SortMemsCell{},Var'Unds'9:SortNextMemAddrCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar10:SortModuleInstCellMap{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortTabInstCellMap{},Var'Unds'DotVar6:SortMap{},Var'Unds'DotVar7:SortFuncDefCellMap{},Var'Unds'DotVar9:SortLocalsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(VarFADDR:SortInt{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'39:SortCurFrameCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'42:SortModuleInstancesCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'44:SortMainStoreCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(800,10,820,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("0bb9e6d3f0984fa8177fa8b35cfa0ecc4ab176556b0a857d98a2f6caec517566")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(`call_indirect__WASM-COMMON-SYNTAX_PlainInstr_TypeUse`(TUSE))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_ValType_Number`(inj{IValType,ValType}(i32(.KList)),IDX),VALSTACK)),`<curFrame>`(_DotVar9,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _39,_25,_26,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_15,`<types>`(TYPES),_16,_17,_18,_19,`<tabAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_20,_21,_22,_23,_24,`<moduleMetadata>`(_12,_13,_14,`<typeIds>`(TYPEIDS)))),_DotVar10)) #as _42,_27,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`FuncDefCellMapItem`(`<fAddr>`(FADDR),`<funcDef>`(`<fAddr>`(FADDR),_2,`<fType>`(FTYPE),_3,_4,_5)),_DotVar7)),_6,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),_0,_1,`<tdata>`(`_Map_`(`_|->_`(inj{Number,KItem}(IDX),inj{Int,KItem}(FADDR)),_DotVar6)))),_DotVar4)),_7,_8,_9,_10,_11) #as _44,_28),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>_DotVar2),`<valstack>`(VALSTACK),_39,_25,_26,_42,_27,_44,_28),_DotVar0) requires `_=/=K_`(inj{FuncType,KItem}(`asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(TYPEIDS,TYPES,TUSE)),inj{Type,KItem}(FTYPE)) ensures #token("true","Bool") [UNIQUE_ID(6da2e575bd6bce9b71aa75058ff47f8a6bc38e9ba587db193ea8cd46431dff9c), org.kframework.attributes.Location(Location(822,10,842,59)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule405LHS{}(SortInt{},SortInt{},SortInt{},SortType{},SortNumber{},SortTypeUse{},SortMap{},SortMap{},SortValStack{},SortTmaxCell{},SortTsizeCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortModuleFileNameCell{},SortModuleIdCell{},SortFuncIdsCell{},SortExportsCell{},SortNextTypeIdxCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortFCodeCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortFLocalCell{},SortCurFrameCell{},SortFModInstCell{},SortModuleInstancesCell{},SortMainStoreCell{},SortFuncMetadataCell{},SortNextFuncAddrCell{},SortNextTabAddrCell{},SortMemsCell{},SortNextMemAddrCell{},SortGeneratedCounterCell{},SortModuleInstCellMap{},SortK{},SortTabInstCellMap{},SortMap{},SortFuncDefCellMap{},SortLocalsCell{}) : SortGeneratedTopCell{}
  where rule405LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarFADDR:SortInt{},VarFTYPE:SortType{},VarIDX:SortNumber{},VarTUSE:SortTypeUse{},VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarVALSTACK:SortValStack{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortGlobalsCell{},Var'Unds'11:SortNextGlobAddrCell{},Var'Unds'12:SortModuleFileNameCell{},Var'Unds'13:SortModuleIdCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortExportsCell{},Var'Unds'16:SortNextTypeIdxCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFCodeCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortFLocalCell{},Var'Unds'39:SortCurFrameCell{},Var'Unds'4:SortFModInstCell{},Var'Unds'42:SortModuleInstancesCell{},Var'Unds'44:SortMainStoreCell{},Var'Unds'5:SortFuncMetadataCell{},Var'Unds'6:SortNextFuncAddrCell{},Var'Unds'7:SortNextTabAddrCell{},Var'Unds'8:SortMemsCell{},Var'Unds'9:SortNextMemAddrCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar10:SortModuleInstCellMap{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortTabInstCellMap{},Var'Unds'DotVar6:SortMap{},Var'Unds'DotVar7:SortFuncDefCellMap{},Var'Unds'DotVar9:SortLocalsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarTUSE:SortTypeUse{})),dotk{}()),kseq{}(inj{SortType{}, SortKItem{}}(VarFTYPE:SortType{}),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(VarTUSE:SortTypeUse{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(inj{SortIValType{}, SortValType{}}(Lbli32{}()),VarIDX:SortNumber{}),VarVALSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar9:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'39:SortCurFrameCell{}),Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'15:SortExportsCell{},Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'16:SortNextTypeIdxCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Lbl'-LT-'moduleMetadata'-GT-'{}(Var'Unds'12:SortModuleFileNameCell{},Var'Unds'13:SortModuleIdCell{},Var'Unds'14:SortFuncIdsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarTYPEIDS:SortMap{})))),Var'Unds'DotVar10:SortModuleInstCellMap{})),Var'Unds'42:SortModuleInstancesCell{}),Var'Unds'27:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Lbl'-LT-'funcDef'-GT-'{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Var'Unds'2:SortFCodeCell{},Lbl'-LT-'fType'-GT-'{}(VarFTYPE:SortType{}),Var'Unds'3:SortFLocalCell{},Var'Unds'4:SortFModInstCell{},Var'Unds'5:SortFuncMetadataCell{})),Var'Unds'DotVar7:SortFuncDefCellMap{})),Var'Unds'6:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Lbl'-LT-'tdata'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortNumber{}, SortKItem{}}(VarIDX:SortNumber{}),inj{SortInt{}, SortKItem{}}(VarFADDR:SortInt{})),Var'Unds'DotVar6:SortMap{})))),Var'Unds'DotVar4:SortTabInstCellMap{})),Var'Unds'7:SortNextTabAddrCell{},Var'Unds'8:SortMemsCell{},Var'Unds'9:SortNextMemAddrCell{},Var'Unds'10:SortGlobalsCell{},Var'Unds'11:SortNextGlobAddrCell{}),Var'Unds'44:SortMainStoreCell{}),Var'Unds'28:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule405LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarFADDR:SortInt{},VarFTYPE:SortType{},VarIDX:SortNumber{},VarTUSE:SortTypeUse{},VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarVALSTACK:SortValStack{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortGlobalsCell{},Var'Unds'11:SortNextGlobAddrCell{},Var'Unds'12:SortModuleFileNameCell{},Var'Unds'13:SortModuleIdCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortExportsCell{},Var'Unds'16:SortNextTypeIdxCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'2:SortFCodeCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortFLocalCell{},Var'Unds'39:SortCurFrameCell{},Var'Unds'4:SortFModInstCell{},Var'Unds'42:SortModuleInstancesCell{},Var'Unds'44:SortMainStoreCell{},Var'Unds'5:SortFuncMetadataCell{},Var'Unds'6:SortNextFuncAddrCell{},Var'Unds'7:SortNextTabAddrCell{},Var'Unds'8:SortMemsCell{},Var'Unds'9:SortNextMemAddrCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar10:SortModuleInstCellMap{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortTabInstCellMap{},Var'Unds'DotVar6:SortMap{},Var'Unds'DotVar7:SortFuncDefCellMap{},Var'Unds'DotVar9:SortLocalsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'39:SortCurFrameCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'42:SortModuleInstancesCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'44:SortMainStoreCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(822,10,842,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("6da2e575bd6bce9b71aa75058ff47f8a6bc38e9ba587db193ea8cd46431dff9c")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(`call_indirect__WASM-COMMON-SYNTAX_PlainInstr_TypeUse`(_TUSE))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_ValType_Number`(inj{IValType,ValType}(i32(.KList)),IDX),VALSTACK)),`<curFrame>`(_DotVar6,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _35,_21,_22,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_9,_10,_11,_12,_13,_14,`<tabAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_15,_16,_17,_18,_19,_20)),_DotVar7)) #as _38,_23,`<mainStore>`(_2,_3,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),_0,_1,`<tdata>`(TDATA))),_DotVar4)),_4,_5,_6,_7,_8) #as _40,_24),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>_DotVar2),`<valstack>`(VALSTACK),_35,_21,_22,_38,_23,_40,_24),_DotVar0) requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(inj{Number,KItem}(IDX),TDATA)) ensures #token("true","Bool") [UNIQUE_ID(297f181b7ef4b6d06f78fbdd314722e5e940eb39f2ae694a6adf30f3b007d3b8), org.kframework.attributes.Location(Location(844,10,857,42)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule406LHS{}(SortInt{},SortInt{},SortNumber{},SortMap{},SortValStack{},SortTmaxCell{},SortTsizeCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortFuncsCell{},SortModuleMetadataCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFuncAddrCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortNextTabAddrCell{},SortMainStoreCell{},SortMemsCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortExportsCell{},SortGeneratedCounterCell{},SortK{},SortTabInstCellMap{},SortLocalsCell{},SortModuleInstCellMap{},SortTypeUse{}) : SortGeneratedTopCell{}
  where rule406LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarIDX:SortNumber{},VarTDATA:SortMap{},VarVALSTACK:SortValStack{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortTypesCell{},Var'Unds'11:SortNextTypeIdxCell{},Var'Unds'12:SortFuncAddrsCell{},Var'Unds'13:SortNextFuncIdxCell{},Var'Unds'14:SortTabIdsCell{},Var'Unds'15:SortMemIdsCell{},Var'Unds'16:SortMemAddrsCell{},Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortGlobalAddrsCell{},Var'Unds'19:SortNextGlobIdxCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'20:SortModuleMetadataCell{},Var'Unds'21:SortModuleRegistryCell{},Var'Unds'22:SortModuleIdsCell{},Var'Unds'23:SortNextModuleIdxCell{},Var'Unds'24:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'35:SortCurFrameCell{},Var'Unds'38:SortModuleInstancesCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'40:SortMainStoreCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortExportsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortTabInstCellMap{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{},Var'Unds'TUSE:SortTypeUse{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortNumber{}, SortKItem{}}(VarIDX:SortNumber{}),VarTDATA:SortMap{})),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblcall'Unds'indirect'UndsUnds'WASM-COMMON-SYNTAX'Unds'PlainInstr'Unds'TypeUse{}(Var'Unds'TUSE:SortTypeUse{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'ValType'Unds'Number{}(inj{SortIValType{}, SortValType{}}(Lbli32{}()),VarIDX:SortNumber{}),VarVALSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'35:SortCurFrameCell{}),Var'Unds'21:SortModuleRegistryCell{},Var'Unds'22:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'9:SortExportsCell{},Var'Unds'10:SortTypesCell{},Var'Unds'11:SortNextTypeIdxCell{},Var'Unds'12:SortFuncAddrsCell{},Var'Unds'13:SortNextFuncIdxCell{},Var'Unds'14:SortTabIdsCell{},Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'15:SortMemIdsCell{},Var'Unds'16:SortMemAddrsCell{},Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortGlobalAddrsCell{},Var'Unds'19:SortNextGlobIdxCell{},Var'Unds'20:SortModuleMetadataCell{})),Var'Unds'DotVar7:SortModuleInstCellMap{})),Var'Unds'38:SortModuleInstancesCell{}),Var'Unds'23:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Lbl'-LT-'tdata'-GT-'{}(VarTDATA:SortMap{}))),Var'Unds'DotVar4:SortTabInstCellMap{})),Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'40:SortMainStoreCell{}),Var'Unds'24:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule406LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarIDX:SortNumber{},VarTDATA:SortMap{},VarVALSTACK:SortValStack{},Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Var'Unds'10:SortTypesCell{},Var'Unds'11:SortNextTypeIdxCell{},Var'Unds'12:SortFuncAddrsCell{},Var'Unds'13:SortNextFuncIdxCell{},Var'Unds'14:SortTabIdsCell{},Var'Unds'15:SortMemIdsCell{},Var'Unds'16:SortMemAddrsCell{},Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortGlobalAddrsCell{},Var'Unds'19:SortNextGlobIdxCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'20:SortModuleMetadataCell{},Var'Unds'21:SortModuleRegistryCell{},Var'Unds'22:SortModuleIdsCell{},Var'Unds'23:SortNextModuleIdxCell{},Var'Unds'24:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'35:SortCurFrameCell{},Var'Unds'38:SortModuleInstancesCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'40:SortMainStoreCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortExportsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortTabInstCellMap{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{},Var'Unds'TUSE:SortTypeUse{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'35:SortCurFrameCell{},Var'Unds'21:SortModuleRegistryCell{},Var'Unds'22:SortModuleIdsCell{},Var'Unds'38:SortModuleInstancesCell{},Var'Unds'23:SortNextModuleIdxCell{},Var'Unds'40:SortMainStoreCell{},Var'Unds'24:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(844,10,857,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("297f181b7ef4b6d06f78fbdd314722e5e940eb39f2ae694a6adf30f3b007d3b8")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{DataDefn,KItem}(`data{__}_WASM_DataDefn_Int_Bytes`(MEMIDX,DSBYTES))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),OFFSET)),STACK)),`<curFrame>`(_DotVar6,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _35,_21,_22,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_9,_10,_11,_12,_13,_14,_15,_16,`<memAddrs>`(`_|->_`(inj{Int,KItem}(MEMIDX),inj{Int,KItem}(ADDR))),_17,_18,_19,_20)),_DotVar7)) #as _38,_23,`<mainStore>`(_2,_3,_4,_5,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_0,_1,`<mdata>`(DATA))),_DotVar4)),_6,_7,_8),_24),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),`<valstack>`(STACK),_35,_21,_22,_38,_23,`<mainStore>`(_2,_3,_4,_5,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_0,_1,`<mdata>`(`#setRange(_,_,_,_)_WASM-DATA_Bytes_Bytes_Int_Int_Int`(DATA,OFFSET,`Bytes2Int(_,_,_)_BYTES-HOOKED_Int_Bytes_Endianness_Signedness`(DSBYTES,littleEndianBytes(.KList),unsignedBytes(.KList)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(DSBYTES))))),_DotVar4)),_6,_7,_8),_24),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f22a279069f2ab597ab43027e674a348e0996cb25c4be1d79fe85e7227d2e609), org.kframework.attributes.Location(Location(1181,10,1193,20)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule407LHS{}(SortInt{},SortInt{},SortBytes{},SortBytes{},SortInt{},SortInt{},SortValStack{},SortMmaxCell{},SortMsizeCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortFuncsCell{},SortModuleMetadataCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextFuncAddrCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortTabsCell{},SortNextTabAddrCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortExportsCell{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule407LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDATA:SortBytes{},VarDSBYTES:SortBytes{},VarMEMIDX:SortInt{},VarOFFSET:SortInt{},VarSTACK:SortValStack{},Var'Unds'0:SortMmaxCell{},Var'Unds'1:SortMsizeCell{},Var'Unds'10:SortTypesCell{},Var'Unds'11:SortNextTypeIdxCell{},Var'Unds'12:SortFuncAddrsCell{},Var'Unds'13:SortNextFuncIdxCell{},Var'Unds'14:SortTabIdsCell{},Var'Unds'15:SortTabAddrsCell{},Var'Unds'16:SortMemIdsCell{},Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortGlobalAddrsCell{},Var'Unds'19:SortNextGlobIdxCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'20:SortModuleMetadataCell{},Var'Unds'21:SortModuleRegistryCell{},Var'Unds'22:SortModuleIdsCell{},Var'Unds'23:SortNextModuleIdxCell{},Var'Unds'24:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'35:SortCurFrameCell{},Var'Unds'38:SortModuleInstancesCell{},Var'Unds'4:SortTabsCell{},Var'Unds'5:SortNextTabAddrCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortExportsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Int'Unds'Bytes{}(VarMEMIDX:SortInt{},VarDSBYTES:SortBytes{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),VarOFFSET:SortInt{})),VarSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'35:SortCurFrameCell{}),Var'Unds'21:SortModuleRegistryCell{},Var'Unds'22:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'9:SortExportsCell{},Var'Unds'10:SortTypesCell{},Var'Unds'11:SortNextTypeIdxCell{},Var'Unds'12:SortFuncAddrsCell{},Var'Unds'13:SortNextFuncIdxCell{},Var'Unds'14:SortTabIdsCell{},Var'Unds'15:SortTabAddrsCell{},Var'Unds'16:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarMEMIDX:SortInt{}),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortGlobalAddrsCell{},Var'Unds'19:SortNextGlobIdxCell{},Var'Unds'20:SortModuleMetadataCell{})),Var'Unds'DotVar7:SortModuleInstCellMap{})),Var'Unds'38:SortModuleInstancesCell{}),Var'Unds'23:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortTabsCell{},Var'Unds'5:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortMmaxCell{},Var'Unds'1:SortMsizeCell{},Lbl'-LT-'mdata'-GT-'{}(VarDATA:SortBytes{}))),Var'Unds'DotVar4:SortMemInstCellMap{})),Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'24:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule407LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDATA:SortBytes{},VarDSBYTES:SortBytes{},VarMEMIDX:SortInt{},VarOFFSET:SortInt{},VarSTACK:SortValStack{},Var'Unds'0:SortMmaxCell{},Var'Unds'1:SortMsizeCell{},Var'Unds'10:SortTypesCell{},Var'Unds'11:SortNextTypeIdxCell{},Var'Unds'12:SortFuncAddrsCell{},Var'Unds'13:SortNextFuncIdxCell{},Var'Unds'14:SortTabIdsCell{},Var'Unds'15:SortTabAddrsCell{},Var'Unds'16:SortMemIdsCell{},Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortGlobalAddrsCell{},Var'Unds'19:SortNextGlobIdxCell{},Var'Unds'2:SortFuncsCell{},Var'Unds'20:SortModuleMetadataCell{},Var'Unds'21:SortModuleRegistryCell{},Var'Unds'22:SortModuleIdsCell{},Var'Unds'23:SortNextModuleIdxCell{},Var'Unds'24:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'35:SortCurFrameCell{},Var'Unds'38:SortModuleInstancesCell{},Var'Unds'4:SortTabsCell{},Var'Unds'5:SortNextTabAddrCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{},Var'Unds'9:SortExportsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarSTACK:SortValStack{}),Var'Unds'35:SortCurFrameCell{},Var'Unds'21:SortModuleRegistryCell{},Var'Unds'22:SortModuleIdsCell{},Var'Unds'38:SortModuleInstancesCell{},Var'Unds'23:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortTabsCell{},Var'Unds'5:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortMmaxCell{},Var'Unds'1:SortMsizeCell{},Lbl'-LT-'mdata'-GT-'{}(Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int'Unds'Int{}(VarDATA:SortBytes{},VarOFFSET:SortInt{},LblBytes2Int'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes'Unds'Endianness'Unds'Signedness{}(VarDSBYTES:SortBytes{},LbllittleEndianBytes{}(),LblunsignedBytes{}()),LbllengthBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes{}(VarDSBYTES:SortBytes{}))))),Var'Unds'DotVar4:SortMemInstCellMap{})),Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'24:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1181,10,1193,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f22a279069f2ab597ab43027e674a348e0996cb25c4be1d79fe85e7227d2e609")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{ElemDefn,KItem}(`elem{__}_WASM_ElemDefn_Int_Ints`(TABIDX,ELEMSEGMENT))~>_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),OFFSET)),STACK)),`<curFrame>`(_DotVar3,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _26,_11,_12,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_0,_1,_2,`<funcAddrs>`(FADDRS),_3,_4,`<tabAddrs>`(`_|->_`(inj{Int,KItem}(TABIDX),inj{Int,KItem}(ADDR))),_5,_6,_7,_8,_9,_10)),_DotVar4)) #as _29,_13,_14,_15),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Stmt,KItem}(`#initElements(_,_,_,_)_WASM_Stmt_Int_Int_Map_Ints`(ADDR,OFFSET,FADDRS,ELEMSEGMENT))~>_DotVar2),`<valstack>`(STACK),_26,_11,_12,_29,_13,_14,_15),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(74fc4f0d1cb4bad78e5e2f40f7bd468e0a778741e9bf547d12a91358574dec8c), org.kframework.attributes.Location(Location(1149,10,1157,23)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule408LHS{}(SortInt{},SortInt{},SortInts{},SortMap{},SortInt{},SortValStack{},SortInt{},SortExportsCell{},SortTypesCell{},SortModuleMetadataCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextTypeIdxCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortMemIdsCell{},SortMemAddrsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortGeneratedCounterCell{},SortK{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule408LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarELEMSEGMENT:SortInts{},VarFADDRS:SortMap{},VarOFFSET:SortInt{},VarSTACK:SortValStack{},VarTABIDX:SortInt{},Var'Unds'0:SortExportsCell{},Var'Unds'1:SortTypesCell{},Var'Unds'10:SortModuleMetadataCell{},Var'Unds'11:SortModuleRegistryCell{},Var'Unds'12:SortModuleIdsCell{},Var'Unds'13:SortNextModuleIdxCell{},Var'Unds'14:SortMainStoreCell{},Var'Unds'15:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortNextTypeIdxCell{},Var'Unds'26:SortCurFrameCell{},Var'Unds'29:SortModuleInstancesCell{},Var'Unds'3:SortNextFuncIdxCell{},Var'Unds'4:SortTabIdsCell{},Var'Unds'5:SortMemIdsCell{},Var'Unds'6:SortMemAddrsCell{},Var'Unds'7:SortGlobIdsCell{},Var'Unds'8:SortGlobalAddrsCell{},Var'Unds'9:SortNextGlobIdxCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortLocalsCell{},Var'Unds'DotVar4:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Int'Unds'Ints{}(VarTABIDX:SortInt{},VarELEMSEGMENT:SortInts{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),VarOFFSET:SortInt{})),VarSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar3:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'26:SortCurFrameCell{}),Var'Unds'11:SortModuleRegistryCell{},Var'Unds'12:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'0:SortExportsCell{},Var'Unds'1:SortTypesCell{},Var'Unds'2:SortNextTypeIdxCell{},Lbl'-LT-'funcAddrs'-GT-'{}(VarFADDRS:SortMap{}),Var'Unds'3:SortNextFuncIdxCell{},Var'Unds'4:SortTabIdsCell{},Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarTABIDX:SortInt{}),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'5:SortMemIdsCell{},Var'Unds'6:SortMemAddrsCell{},Var'Unds'7:SortGlobIdsCell{},Var'Unds'8:SortGlobalAddrsCell{},Var'Unds'9:SortNextGlobIdxCell{},Var'Unds'10:SortModuleMetadataCell{})),Var'Unds'DotVar4:SortModuleInstCellMap{})),Var'Unds'29:SortModuleInstancesCell{}),Var'Unds'13:SortNextModuleIdxCell{},Var'Unds'14:SortMainStoreCell{},Var'Unds'15:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule408LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarELEMSEGMENT:SortInts{},VarFADDRS:SortMap{},VarOFFSET:SortInt{},VarSTACK:SortValStack{},VarTABIDX:SortInt{},Var'Unds'0:SortExportsCell{},Var'Unds'1:SortTypesCell{},Var'Unds'10:SortModuleMetadataCell{},Var'Unds'11:SortModuleRegistryCell{},Var'Unds'12:SortModuleIdsCell{},Var'Unds'13:SortNextModuleIdxCell{},Var'Unds'14:SortMainStoreCell{},Var'Unds'15:SortDeterministicMemoryGrowthCell{},Var'Unds'2:SortNextTypeIdxCell{},Var'Unds'26:SortCurFrameCell{},Var'Unds'29:SortModuleInstancesCell{},Var'Unds'3:SortNextFuncIdxCell{},Var'Unds'4:SortTabIdsCell{},Var'Unds'5:SortMemIdsCell{},Var'Unds'6:SortMemAddrsCell{},Var'Unds'7:SortGlobIdsCell{},Var'Unds'8:SortGlobalAddrsCell{},Var'Unds'9:SortNextGlobIdxCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortLocalsCell{},Var'Unds'DotVar4:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Ints{}(VarADDR:SortInt{},VarOFFSET:SortInt{},VarFADDRS:SortMap{},VarELEMSEGMENT:SortInts{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarSTACK:SortValStack{}),Var'Unds'26:SortCurFrameCell{},Var'Unds'11:SortModuleRegistryCell{},Var'Unds'12:SortModuleIdsCell{},Var'Unds'29:SortModuleInstancesCell{},Var'Unds'13:SortNextModuleIdxCell{},Var'Unds'14:SortMainStoreCell{},Var'Unds'15:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1149,10,1157,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("74fc4f0d1cb4bad78e5e2f40f7bd468e0a778741e9bf547d12a91358574dec8c")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Frame,KItem}(`frame_____WASM_Frame_Int_ValTypes_ValStack_Map`(MODIDX',TRANGE,VALSTACK',LOCAL'))~>_DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(`<locals>`(_0),`<curModIdx>`(_1)),_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),`<valstack>`(`_++__WASM-DATA_ValStack_ValStack_ValStack`(`#take(_,_)_WASM-DATA_ValStack_Int_ValStack`(`lengthValTypes(_)_WASM-DATA_Int_ValTypes`(TRANGE),VALSTACK),VALSTACK')),`<curFrame>`(`<locals>`(LOCAL'),`<curModIdx>`(inj{Int,OptionalInt}(MODIDX'))),_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(99c7abfb0620459d6701b5cd76a1b2b9f3991fdb82fe6ca77848f5d28241421a), org.kframework.attributes.Location(Location(735,10,738,47)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule409LHS{}(SortMap{},SortInt{},SortValTypes{},SortValStack{},SortValStack{},SortMap{},SortOptionalInt{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule409LHS{}(VarLOCAL'Apos':SortMap{},VarMODIDX'Apos':SortInt{},VarTRANGE:SortValTypes{},VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{},Var'Unds'0:SortMap{},Var'Unds'1:SortOptionalInt{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortFrame{}, SortKItem{}}(Lblframe'UndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map{}(VarMODIDX'Apos':SortInt{},VarTRANGE:SortValTypes{},VarVALSTACK'Apos':SortValStack{},VarLOCAL'Apos':SortMap{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Var'Unds'0:SortMap{}),Lbl'-LT-'curModIdx'-GT-'{}(Var'Unds'1:SortOptionalInt{})),Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule409LHS{}(VarLOCAL'Apos':SortMap{},VarMODIDX'Apos':SortInt{},VarTRANGE:SortValTypes{},VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{},Var'Unds'0:SortMap{},Var'Unds'1:SortOptionalInt{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(VarTRANGE:SortValTypes{}),VarVALSTACK:SortValStack{}),VarVALSTACK'Apos':SortValStack{})),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(VarLOCAL'Apos':SortMap{}),Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarMODIDX'Apos':SortInt{}))),Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(735,10,738,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("99c7abfb0620459d6701b5cd76a1b2b9f3991fdb82fe6ca77848f5d28241421a")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`grow__WASM_Instr_Int`(N))~>_DotVar2),_19,`<curFrame>`(_DotVar6,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _28,_20,_21,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_7,_8,_9,_10,_11,_12,_13,_14,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_15,_16,_17,_18)),_DotVar7)) #as _31,_22,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),`<mmax>`(MAX),`<msize>`(SIZE),_DotVar5)),_DotVar4)),_4,_5,_6) #as _33,`<deterministicMemoryGrowth>`(DET) #as _36),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{IVal,KItem}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(i32(.KList),#token("-1","Int"))))~>_DotVar2),_19,_28,_20,_21,_31,_22,_33,_36),_DotVar0) requires `_orBool_`(`notBool_`(DET),`notBool_`(`#growthAllowed(_,_)_WASM_Bool_Int_OptionalInt`(`_+Int_`(SIZE,N),MAX))) ensures #token("true","Bool") [UNIQUE_ID(1218010d808855f0b70ae139a629331f647ee1e5fdcd7c2d6e5cb127e708564e), org.kframework.attributes.Location(Location(1095,10,1110,56)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule410LHS{}(SortInt{},SortInt{},SortBool{},SortOptionalInt{},SortInt{},SortInt{},SortFuncsCell{},SortNextFuncAddrCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortValstackCell{},SortTabsCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortCurFrameCell{},SortNextTabAddrCell{},SortModuleInstancesCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortExportsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortMdataCell{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule410LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDET:SortBool{},VarMAX:SortOptionalInt{},VarN:SortInt{},VarSIZE:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortModuleMetadataCell{},Var'Unds'19:SortValstackCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'22:SortNextModuleIdxCell{},Var'Unds'28:SortCurFrameCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'31:SortModuleInstancesCell{},Var'Unds'33:SortMainStoreCell{},Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar5:SortMdataCell{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'orBool'Unds'{}(LblnotBool'Unds'{}(VarDET:SortBool{}),LblnotBool'Unds'{}(Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(Lbl'UndsPlus'Int'Unds'{}(VarSIZE:SortInt{},VarN:SortInt{}),VarMAX:SortOptionalInt{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(VarN:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'19:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'28:SortCurFrameCell{}),Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortModuleMetadataCell{})),Var'Unds'DotVar7:SortModuleInstCellMap{})),Var'Unds'31:SortModuleInstancesCell{}),Var'Unds'22:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'mmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Var'Unds'DotVar5:SortMdataCell{})),Var'Unds'DotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'33:SortMainStoreCell{}),\and{SortDeterministicMemoryGrowthCell{}}(Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(VarDET:SortBool{}),Var'Unds'36:SortDeterministicMemoryGrowthCell{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule410LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDET:SortBool{},VarMAX:SortOptionalInt{},VarN:SortInt{},VarSIZE:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortModuleMetadataCell{},Var'Unds'19:SortValstackCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'22:SortNextModuleIdxCell{},Var'Unds'28:SortCurFrameCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'31:SortModuleInstancesCell{},Var'Unds'33:SortMainStoreCell{},Var'Unds'36:SortDeterministicMemoryGrowthCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar5:SortMdataCell{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortIVal{}, SortKItem{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Lbli32{}(),\dv{SortInt{}}("-1")))),Var'Unds'DotVar2:SortK{})),Var'Unds'19:SortValstackCell{},Var'Unds'28:SortCurFrameCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'31:SortModuleInstancesCell{},Var'Unds'22:SortNextModuleIdxCell{},Var'Unds'33:SortMainStoreCell{},Var'Unds'36:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1095,10,1110,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("1218010d808855f0b70ae139a629331f647ee1e5fdcd7c2d6e5cb127e708564e")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`grow__WASM_Instr_Int`(N))~>_DotVar2),_19,`<curFrame>`(_DotVar6,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _29,_20,_21,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_7,_8,_9,_10,_11,_12,_13,_14,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_15,_16,_17,_18)),_DotVar7)) #as _32,_22,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),`<mmax>`(MAX),`<msize>`(SIZE),_DotVar5)),_DotVar4)),_4,_5,_6),_23),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{IVal,KItem}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),SIZE))~>_DotVar2),_19,_29,_20,_21,_32,_22,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),`<mmax>`(MAX),`<msize>`(`_+Int_`(SIZE,N)),_DotVar5)),_DotVar4)),_4,_5,_6),_23),_DotVar0) requires `#growthAllowed(_,_)_WASM_Bool_Int_OptionalInt`(`_+Int_`(SIZE,N),MAX) ensures #token("true","Bool") [UNIQUE_ID(20075f2ce0878363b3b7821bd28f7ba9d620e2dd2935896ea231df48c8a094e3), org.kframework.attributes.Location(Location(1080,10,1093,48)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule411LHS{}(SortInt{},SortInt{},SortOptionalInt{},SortInt{},SortInt{},SortFuncsCell{},SortNextFuncAddrCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortValstackCell{},SortTabsCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortCurFrameCell{},SortNextTabAddrCell{},SortModuleInstancesCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortExportsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortMdataCell{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule411LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarMAX:SortOptionalInt{},VarN:SortInt{},VarSIZE:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortModuleMetadataCell{},Var'Unds'19:SortValstackCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'22:SortNextModuleIdxCell{},Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar5:SortMdataCell{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(Lbl'UndsPlus'Int'Unds'{}(VarSIZE:SortInt{},VarN:SortInt{}),VarMAX:SortOptionalInt{}),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(VarN:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'19:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'29:SortCurFrameCell{}),Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortModuleMetadataCell{})),Var'Unds'DotVar7:SortModuleInstCellMap{})),Var'Unds'32:SortModuleInstancesCell{}),Var'Unds'22:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'mmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Var'Unds'DotVar5:SortMdataCell{})),Var'Unds'DotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'23:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule411LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarMAX:SortOptionalInt{},VarN:SortInt{},VarSIZE:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortModuleMetadataCell{},Var'Unds'19:SortValstackCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'22:SortNextModuleIdxCell{},Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar5:SortMdataCell{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortIVal{}, SortKItem{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),VarSIZE:SortInt{})),Var'Unds'DotVar2:SortK{})),Var'Unds'19:SortValstackCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'22:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'mmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'msize'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarSIZE:SortInt{},VarN:SortInt{})),Var'Unds'DotVar5:SortMdataCell{})),Var'Unds'DotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'23:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1080,10,1093,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("20075f2ce0878363b3b7821bd28f7ba9d620e2dd2935896ea231df48c8a094e3")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`init_local___WASM_Instr_Int_Val`(INDEX,VALUE))~>_DotVar2),_0,`<curFrame>`(`<locals>`(LOCALS),_DotVar3),_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),_0,`<curFrame>`(`<locals>`(`Map:update`(LOCALS,inj{Int,KItem}(INDEX),inj{Val,KItem}(VALUE))),_DotVar3),_1,_2,_3,_4,_5,_6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e79540b0a106a5f59c8e9e04776e4922daa7c06b052cb477154a3ad61c1fd72e), org.kframework.attributes.Location(Location(506,10,507,64)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule412LHS{}(SortInt{},SortMap{},SortVal{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{},SortCurModIdxCell{}) : SortGeneratedTopCell{}
  where rule412LHS{}(VarINDEX:SortInt{},VarLOCALS:SortMap{},VarVALUE:SortVal{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortCurModIdxCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(VarINDEX:SortInt{},VarVALUE:SortVal{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(VarLOCALS:SortMap{}),Var'Unds'DotVar3:SortCurModIdxCell{}),Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule412LHS{}(VarINDEX:SortInt{},VarLOCALS:SortMap{},VarVALUE:SortVal{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar3:SortCurModIdxCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'0:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(LblMap'Coln'update{}(VarLOCALS:SortMap{},inj{SortInt{}, SortKItem{}}(VarINDEX:SortInt{}),inj{SortVal{}, SortKItem{}}(VarVALUE:SortVal{}))),Var'Unds'DotVar3:SortCurModIdxCell{}),Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(506,10,507,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e79540b0a106a5f59c8e9e04776e4922daa7c06b052cb477154a3ad61c1fd72e")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`init_locals__WASM_Instr_ValStack`(VALUES))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`#init_locals___WASM_Instr_Int_ValStack`(#token("0","Int"),VALUES))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ab614279988dd818fb3e50afbc15b858f339482009011268860ef25ac4a15bf0), org.kframework.attributes.Location(Location(509,10,509,76)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule413LHS{}(SortValStack{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule413LHS{}(VarVALUES:SortValStack{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(VarVALUES:SortValStack{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule413LHS{}(VarVALUES:SortValStack{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(\dv{SortInt{}}("0"),VarVALUES:SortValStack{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(509,10,509,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ab614279988dd818fb3e50afbc15b858f339482009011268860ef25ac4a15bf0")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(aVecType(TYPES),_0,VALSTACK'))~>_DotVar2),`<valstack>`(VALSTACK),_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),`<valstack>`(`_++__WASM-DATA_ValStack_ValStack_ValStack`(`#take(_,_)_WASM-DATA_ValStack_Int_ValStack`(`lengthValTypes(_)_WASM-DATA_Int_ValTypes`(TYPES),VALSTACK),VALSTACK')),_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bbeb3de5cae217d3b4805f2c4157b9a0775d9a9fbd3a823314149ba54b22dd45), org.kframework.attributes.Location(Location(434,10,435,96)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule414LHS{}(SortValTypes{},SortValStack{},SortValStack{},SortInstrs{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule414LHS{}(VarTYPES:SortValTypes{},VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{},Var'Unds'0:SortInstrs{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(LblaVecType{}(VarTYPES:SortValTypes{}),Var'Unds'0:SortInstrs{},VarVALSTACK'Apos':SortValStack{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule414LHS{}(VarTYPES:SortValTypes{},VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{},Var'Unds'0:SortInstrs{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'Int'Unds'ValStack{}(LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(VarTYPES:SortValTypes{}),VarVALSTACK:SortValStack{}),VarVALSTACK'Apos':SortValStack{})),Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(434,10,435,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("bbeb3de5cae217d3b4805f2c4157b9a0775d9a9fbd3a823314149ba54b22dd45")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`load{_____}_WASM_Instr_IValType_Int_Int_Signedness_Bytes`(ITYPE,WIDTH,EA,signedBytes(.KList),DATA))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{IVal,KItem}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(WIDTH,`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(DATA,EA,WIDTH)))))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(351f7a06bb9a9d7df4fb5fd923fe8ef2ec6611d51cb9471ec9c5d6630bfdf0c9), org.kframework.attributes.Location(Location(1047,10,1047,138)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule415LHS{}(SortBytes{},SortInt{},SortIValType{},SortInt{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule415LHS{}(VarDATA:SortBytes{},VarEA:SortInt{},VarITYPE:SortIValType{},VarWIDTH:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(VarITYPE:SortIValType{},VarWIDTH:SortInt{},VarEA:SortInt{},LblsignedBytes{}(),VarDATA:SortBytes{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule415LHS{}(VarDATA:SortBytes{},VarEA:SortInt{},VarITYPE:SortIValType{},VarWIDTH:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortIVal{}, SortKItem{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarWIDTH:SortInt{},Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarDATA:SortBytes{},VarEA:SortInt{},VarWIDTH:SortInt{}))))),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1047,10,1047,138)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("351f7a06bb9a9d7df4fb5fd923fe8ef2ec6611d51cb9471ec9c5d6630bfdf0c9")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`load{_____}_WASM_Instr_IValType_Int_Int_Signedness_Bytes`(ITYPE,WIDTH,EA,unsignedBytes(.KList),DATA))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{IVal,KItem}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(DATA,EA,WIDTH)))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8edb3375d284f4c230cf55560d75a7efd91accf9e22920ffe5a26fd44e7c0ee4), org.kframework.attributes.Location(Location(1048,10,1048,110)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule416LHS{}(SortBytes{},SortInt{},SortIValType{},SortInt{},SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule416LHS{}(VarDATA:SortBytes{},VarEA:SortInt{},VarITYPE:SortIValType{},VarWIDTH:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(VarITYPE:SortIValType{},VarWIDTH:SortInt{},VarEA:SortInt{},LblunsignedBytes{}(),VarDATA:SortBytes{})),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule416LHS{}(VarDATA:SortBytes{},VarEA:SortInt{},VarITYPE:SortIValType{},VarWIDTH:SortInt{},Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortIVal{}, SortKItem{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarDATA:SortBytes{},VarEA:SortInt{},VarWIDTH:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1048,10,1048,110)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8edb3375d284f4c230cf55560d75a7efd91accf9e22920ffe5a26fd44e7c0ee4")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,WIDTH,EA,SIGN))~>_DotVar2),_19,`<curFrame>`(_DotVar6,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _29,_20,_21,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_7,_8,_9,_10,_11,_12,_13,_14,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_15,_16,_17,_18)),_DotVar7)) #as _32,_22,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_DotVar5,`<msize>`(SIZE),`<mdata>`(DATA))),_DotVar4)),_4,_5,_6) #as _34,_23),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`load{_____}_WASM_Instr_IValType_Int_Int_Signedness_Bytes`(ITYPE,WIDTH,EA,SIGN,DATA))~>_DotVar2),_19,_29,_20,_21,_32,_22,_34,_23),_DotVar0) requires `_<=Int_`(`_+Int_`(EA,WIDTH),`_*Int_`(SIZE,`#pageSize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(85b29000e6df8dae83a387d1306d4c2f1c3011a8e53499890fa25423449cfabd), org.kframework.attributes.Location(Location(1018,10,1031,61)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule417LHS{}(SortInt{},SortInt{},SortBytes{},SortInt{},SortIValType{},SortSignedness{},SortInt{},SortInt{},SortFuncsCell{},SortNextFuncAddrCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortValstackCell{},SortTabsCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortCurFrameCell{},SortNextTabAddrCell{},SortModuleInstancesCell{},SortMainStoreCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortExportsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortMmaxCell{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule417LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDATA:SortBytes{},VarEA:SortInt{},VarITYPE:SortIValType{},VarSIGN:SortSignedness{},VarSIZE:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortModuleMetadataCell{},Var'Unds'19:SortValstackCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'22:SortNextModuleIdxCell{},Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'34:SortMainStoreCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar5:SortMmaxCell{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarEA:SortInt{},VarWIDTH:SortInt{}),Lbl'UndsStar'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},VarWIDTH:SortInt{},VarEA:SortInt{},VarSIGN:SortSignedness{})),Var'Unds'DotVar2:SortK{})),Var'Unds'19:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'29:SortCurFrameCell{}),Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortModuleMetadataCell{})),Var'Unds'DotVar7:SortModuleInstCellMap{})),Var'Unds'32:SortModuleInstancesCell{}),Var'Unds'22:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'DotVar5:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Lbl'-LT-'mdata'-GT-'{}(VarDATA:SortBytes{}))),Var'Unds'DotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'34:SortMainStoreCell{}),Var'Unds'23:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule417LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDATA:SortBytes{},VarEA:SortInt{},VarITYPE:SortIValType{},VarSIGN:SortSignedness{},VarSIZE:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortModuleMetadataCell{},Var'Unds'19:SortValstackCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'22:SortNextModuleIdxCell{},Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'34:SortMainStoreCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar5:SortMmaxCell{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness'Unds'Bytes{}(VarITYPE:SortIValType{},VarWIDTH:SortInt{},VarEA:SortInt{},VarSIGN:SortSignedness{},VarDATA:SortBytes{})),Var'Unds'DotVar2:SortK{})),Var'Unds'19:SortValstackCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'22:SortNextModuleIdxCell{},Var'Unds'34:SortMainStoreCell{},Var'Unds'23:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1018,10,1031,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("85b29000e6df8dae83a387d1306d4c2f1c3011a8e53499890fa25423449cfabd")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(_0,WIDTH,EA,_1))~>_DotVar2),_23,`<curFrame>`(_DotVar6,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _33,_24,_25,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,_12,_13,_14,_15,_16,_17,_18,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_19,_20,_21,_22)),_DotVar7)) #as _36,_26,`<mainStore>`(_4,_5,_6,_7,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_2,`<msize>`(SIZE),_3)),_DotVar4)),_8,_9,_10) #as _38,_27),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>_DotVar2),_23,_33,_24,_25,_36,_26,_38,_27),_DotVar0) requires `_>Int_`(`_+Int_`(EA,WIDTH),`_*Int_`(SIZE,`#pageSize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(1d6b2b74eb7269433b9d153e9c770d4a64f6d9931ab94cf99f9a46d762a7795d), org.kframework.attributes.Location(Location(1033,10,1045,60)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule418LHS{}(SortInt{},SortInt{},SortInt{},SortInt{},SortInt{},SortIValType{},SortSignedness{},SortNextGlobAddrCell{},SortExportsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortGlobIdsCell{},SortMmaxCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortMdataCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortMainStoreCell{},SortFuncsCell{},SortNextFuncAddrCell{},SortTabsCell{},SortNextTabAddrCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule418LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarEA:SortInt{},VarSIZE:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortIValType{},Var'Unds'1:SortSignedness{},Var'Unds'10:SortNextGlobAddrCell{},Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Var'Unds'16:SortTabIdsCell{},Var'Unds'17:SortTabAddrsCell{},Var'Unds'18:SortMemIdsCell{},Var'Unds'19:SortGlobIdsCell{},Var'Unds'2:SortMmaxCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{},Var'Unds'22:SortModuleMetadataCell{},Var'Unds'23:SortValstackCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortMdataCell{},Var'Unds'33:SortCurFrameCell{},Var'Unds'36:SortModuleInstancesCell{},Var'Unds'38:SortMainStoreCell{},Var'Unds'4:SortFuncsCell{},Var'Unds'5:SortNextFuncAddrCell{},Var'Unds'6:SortTabsCell{},Var'Unds'7:SortNextTabAddrCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-GT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarEA:SortInt{},VarWIDTH:SortInt{}),Lbl'UndsStar'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Var'Unds'0:SortIValType{},VarWIDTH:SortInt{},VarEA:SortInt{},Var'Unds'1:SortSignedness{})),Var'Unds'DotVar2:SortK{})),Var'Unds'23:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'33:SortCurFrameCell{}),Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Var'Unds'16:SortTabIdsCell{},Var'Unds'17:SortTabAddrsCell{},Var'Unds'18:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'19:SortGlobIdsCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{},Var'Unds'22:SortModuleMetadataCell{})),Var'Unds'DotVar7:SortModuleInstCellMap{})),Var'Unds'36:SortModuleInstancesCell{}),Var'Unds'26:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'4:SortFuncsCell{},Var'Unds'5:SortNextFuncAddrCell{},Var'Unds'6:SortTabsCell{},Var'Unds'7:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'2:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Var'Unds'3:SortMdataCell{})),Var'Unds'DotVar4:SortMemInstCellMap{})),Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{},Var'Unds'10:SortNextGlobAddrCell{}),Var'Unds'38:SortMainStoreCell{}),Var'Unds'27:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule418LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarEA:SortInt{},VarSIZE:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortIValType{},Var'Unds'1:SortSignedness{},Var'Unds'10:SortNextGlobAddrCell{},Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncAddrsCell{},Var'Unds'15:SortNextFuncIdxCell{},Var'Unds'16:SortTabIdsCell{},Var'Unds'17:SortTabAddrsCell{},Var'Unds'18:SortMemIdsCell{},Var'Unds'19:SortGlobIdsCell{},Var'Unds'2:SortMmaxCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{},Var'Unds'22:SortModuleMetadataCell{},Var'Unds'23:SortValstackCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortMdataCell{},Var'Unds'33:SortCurFrameCell{},Var'Unds'36:SortModuleInstancesCell{},Var'Unds'38:SortMainStoreCell{},Var'Unds'4:SortFuncsCell{},Var'Unds'5:SortNextFuncAddrCell{},Var'Unds'6:SortTabsCell{},Var'Unds'7:SortNextTabAddrCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'DotVar2:SortK{})),Var'Unds'23:SortValstackCell{},Var'Unds'33:SortCurFrameCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'36:SortModuleInstancesCell{},Var'Unds'26:SortNextModuleIdxCell{},Var'Unds'38:SortMainStoreCell{},Var'Unds'27:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1033,10,1045,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("1d6b2b74eb7269433b9d153e9c770d4a64f6d9931ab94cf99f9a46d762a7795d")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(WIDTH,EA,_0))~>_DotVar2),_22,`<curFrame>`(_DotVar6,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _32,_23,_24,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_10,_11,_12,_13,_14,_15,_16,_17,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_18,_19,_20,_21)),_DotVar7)) #as _35,_25,`<mainStore>`(_3,_4,_5,_6,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_1,`<msize>`(SIZE),_2)),_DotVar4)),_7,_8,_9) #as _37,_26),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>_DotVar2),_22,_32,_23,_24,_35,_25,_37,_26),_DotVar0) requires `_>Int_`(`_+Int_`(EA,WIDTH),`_*Int_`(SIZE,`#pageSize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(b49062f06b628f7a2a2d5dd8cdfa975d81986e2d3fec053c8531c2fc84c773d2), org.kframework.attributes.Location(Location(975,10,987,63)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule419LHS{}(SortInt{},SortInt{},SortInt{},SortInt{},SortInt{},SortNumber{},SortMmaxCell{},SortExportsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortMdataCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortValstackCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortFuncsCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortMainStoreCell{},SortNextFuncAddrCell{},SortTabsCell{},SortNextTabAddrCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule419LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarEA:SortInt{},VarSIZE:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortNumber{},Var'Unds'1:SortMmaxCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncAddrsCell{},Var'Unds'14:SortNextFuncIdxCell{},Var'Unds'15:SortTabIdsCell{},Var'Unds'16:SortTabAddrsCell{},Var'Unds'17:SortMemIdsCell{},Var'Unds'18:SortGlobIdsCell{},Var'Unds'19:SortGlobalAddrsCell{},Var'Unds'2:SortMdataCell{},Var'Unds'20:SortNextGlobIdxCell{},Var'Unds'21:SortModuleMetadataCell{},Var'Unds'22:SortValstackCell{},Var'Unds'23:SortModuleRegistryCell{},Var'Unds'24:SortModuleIdsCell{},Var'Unds'25:SortNextModuleIdxCell{},Var'Unds'26:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortFuncsCell{},Var'Unds'32:SortCurFrameCell{},Var'Unds'35:SortModuleInstancesCell{},Var'Unds'37:SortMainStoreCell{},Var'Unds'4:SortNextFuncAddrCell{},Var'Unds'5:SortTabsCell{},Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortNextMemAddrCell{},Var'Unds'8:SortGlobalsCell{},Var'Unds'9:SortNextGlobAddrCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-GT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarEA:SortInt{},VarWIDTH:SortInt{}),Lbl'UndsStar'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(VarWIDTH:SortInt{},VarEA:SortInt{},Var'Unds'0:SortNumber{})),Var'Unds'DotVar2:SortK{})),Var'Unds'22:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'32:SortCurFrameCell{}),Var'Unds'23:SortModuleRegistryCell{},Var'Unds'24:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncAddrsCell{},Var'Unds'14:SortNextFuncIdxCell{},Var'Unds'15:SortTabIdsCell{},Var'Unds'16:SortTabAddrsCell{},Var'Unds'17:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'18:SortGlobIdsCell{},Var'Unds'19:SortGlobalAddrsCell{},Var'Unds'20:SortNextGlobIdxCell{},Var'Unds'21:SortModuleMetadataCell{})),Var'Unds'DotVar7:SortModuleInstCellMap{})),Var'Unds'35:SortModuleInstancesCell{}),Var'Unds'25:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'3:SortFuncsCell{},Var'Unds'4:SortNextFuncAddrCell{},Var'Unds'5:SortTabsCell{},Var'Unds'6:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'1:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Var'Unds'2:SortMdataCell{})),Var'Unds'DotVar4:SortMemInstCellMap{})),Var'Unds'7:SortNextMemAddrCell{},Var'Unds'8:SortGlobalsCell{},Var'Unds'9:SortNextGlobAddrCell{}),Var'Unds'37:SortMainStoreCell{}),Var'Unds'26:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule419LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarEA:SortInt{},VarSIZE:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortNumber{},Var'Unds'1:SortMmaxCell{},Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypesCell{},Var'Unds'12:SortNextTypeIdxCell{},Var'Unds'13:SortFuncAddrsCell{},Var'Unds'14:SortNextFuncIdxCell{},Var'Unds'15:SortTabIdsCell{},Var'Unds'16:SortTabAddrsCell{},Var'Unds'17:SortMemIdsCell{},Var'Unds'18:SortGlobIdsCell{},Var'Unds'19:SortGlobalAddrsCell{},Var'Unds'2:SortMdataCell{},Var'Unds'20:SortNextGlobIdxCell{},Var'Unds'21:SortModuleMetadataCell{},Var'Unds'22:SortValstackCell{},Var'Unds'23:SortModuleRegistryCell{},Var'Unds'24:SortModuleIdsCell{},Var'Unds'25:SortNextModuleIdxCell{},Var'Unds'26:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortFuncsCell{},Var'Unds'32:SortCurFrameCell{},Var'Unds'35:SortModuleInstancesCell{},Var'Unds'37:SortMainStoreCell{},Var'Unds'4:SortNextFuncAddrCell{},Var'Unds'5:SortTabsCell{},Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortNextMemAddrCell{},Var'Unds'8:SortGlobalsCell{},Var'Unds'9:SortNextGlobAddrCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'DotVar2:SortK{})),Var'Unds'22:SortValstackCell{},Var'Unds'32:SortCurFrameCell{},Var'Unds'23:SortModuleRegistryCell{},Var'Unds'24:SortModuleIdsCell{},Var'Unds'35:SortModuleInstancesCell{},Var'Unds'25:SortNextModuleIdxCell{},Var'Unds'37:SortMainStoreCell{},Var'Unds'26:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(975,10,987,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("b49062f06b628f7a2a2d5dd8cdfa975d81986e2d3fec053c8531c2fc84c773d2")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(WIDTH,EA,inj{Int,Number}(VAL)))~>_DotVar2),_19,`<curFrame>`(_DotVar6,`<curModIdx>`(inj{Int,OptionalInt}(CUR))) #as _30,_20,_21,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_7,_8,_9,_10,_11,_12,_13,_14,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_15,_16,_17,_18)),_DotVar7)) #as _33,_22,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_DotVar5,`<msize>`(SIZE),`<mdata>`(DATA))),_DotVar4)),_4,_5,_6),_23),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),_19,_30,_20,_21,_33,_22,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_DotVar5,`<msize>`(SIZE),`<mdata>`(`#setRange(_,_,_,_)_WASM-DATA_Bytes_Bytes_Int_Int_Int`(DATA,EA,VAL,WIDTH)))),_DotVar4)),_4,_5,_6),_23),_DotVar0) requires `_<=Int_`(`_+Int_`(EA,WIDTH),`_*Int_`(SIZE,`#pageSize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(fcab0ff3b93a1c3fb50a6b99dbb548c88f8379d6d0a6c3bf0886ec22dd1ab5e6), org.kframework.attributes.Location(Location(960,10,973,64)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  alias rule420LHS{}(SortInt{},SortInt{},SortBytes{},SortInt{},SortInt{},SortInt{},SortInt{},SortFuncsCell{},SortNextFuncAddrCell{},SortFuncAddrsCell{},SortNextFuncIdxCell{},SortTabIdsCell{},SortTabAddrsCell{},SortMemIdsCell{},SortGlobIdsCell{},SortGlobalAddrsCell{},SortNextGlobIdxCell{},SortModuleMetadataCell{},SortValstackCell{},SortTabsCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortNextModuleIdxCell{},SortDeterministicMemoryGrowthCell{},SortNextTabAddrCell{},SortCurFrameCell{},SortModuleInstancesCell{},SortNextMemAddrCell{},SortGlobalsCell{},SortNextGlobAddrCell{},SortExportsCell{},SortTypesCell{},SortNextTypeIdxCell{},SortGeneratedCounterCell{},SortK{},SortMemInstCellMap{},SortMmaxCell{},SortLocalsCell{},SortModuleInstCellMap{}) : SortGeneratedTopCell{}
  where rule420LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDATA:SortBytes{},VarEA:SortInt{},VarSIZE:SortInt{},VarVAL:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortModuleMetadataCell{},Var'Unds'19:SortValstackCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'22:SortNextModuleIdxCell{},Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'30:SortCurFrameCell{},Var'Unds'33:SortModuleInstancesCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar5:SortMmaxCell{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarEA:SortInt{},VarWIDTH:SortInt{}),Lbl'UndsStar'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(VarWIDTH:SortInt{},VarEA:SortInt{},inj{SortInt{}, SortNumber{}}(VarVAL:SortInt{}))),Var'Unds'DotVar2:SortK{})),Var'Unds'19:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'30:SortCurFrameCell{}),Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortModuleMetadataCell{})),Var'Unds'DotVar7:SortModuleInstCellMap{})),Var'Unds'33:SortModuleInstancesCell{}),Var'Unds'22:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'DotVar5:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Lbl'-LT-'mdata'-GT-'{}(VarDATA:SortBytes{}))),Var'Unds'DotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'23:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule420LHS{}(VarADDR:SortInt{},VarCUR:SortInt{},VarDATA:SortBytes{},VarEA:SortInt{},VarSIZE:SortInt{},VarVAL:SortInt{},VarWIDTH:SortInt{},Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'10:SortFuncAddrsCell{},Var'Unds'11:SortNextFuncIdxCell{},Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{},Var'Unds'18:SortModuleMetadataCell{},Var'Unds'19:SortValstackCell{},Var'Unds'2:SortTabsCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'22:SortNextModuleIdxCell{},Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'30:SortCurFrameCell{},Var'Unds'33:SortModuleInstancesCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{},Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypesCell{},Var'Unds'9:SortNextTypeIdxCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{},Var'Unds'DotVar4:SortMemInstCellMap{},Var'Unds'DotVar5:SortMmaxCell{},Var'Unds'DotVar6:SortLocalsCell{},Var'Unds'DotVar7:SortModuleInstCellMap{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'19:SortValstackCell{},Var'Unds'30:SortCurFrameCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Var'Unds'33:SortModuleInstancesCell{},Var'Unds'22:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'DotVar5:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Lbl'-LT-'mdata'-GT-'{}(Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int'Unds'Int{}(VarDATA:SortBytes{},VarEA:SortInt{},VarVAL:SortInt{},VarWIDTH:SortInt{})))),Var'Unds'DotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'23:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(960,10,973,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("fcab0ff3b93a1c3fb50a6b99dbb548c88f8379d6d0a6c3bf0886ec22dd1ab5e6")]

// rule `<generatedTop>`(`<wasm>`(`<instrs>`(inj{Val,KItem}(`undefined_WASM-DATA_Val`(.KList))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>_DotVar2),_0,_1,_2,_3,_4,_5,_6,_7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(16961dd871f8d2b1391158f555562ba8cfb03438da452d8892550df4ae77a191), org.kframework.attributes.Location(Location(309,10,309,50)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule421LHS{}(SortValstackCell{},SortCurFrameCell{},SortModuleRegistryCell{},SortModuleIdsCell{},SortModuleInstancesCell{},SortNextModuleIdxCell{},SortMainStoreCell{},SortDeterministicMemoryGrowthCell{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule421LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lblundefined'Unds'WASM-DATA'Unds'Val{}()),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule421LHS{}(Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar2:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'DotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(309,10,309,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("16961dd871f8d2b1391158f555562ba8cfb03438da452d8892550df4ae77a191")]

// rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("false","Bool"))=>#token("\"false\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f), org.kframework.attributes.Location(Location(1450,8,1450,37)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortString{},R} (
        LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(X0:SortBool{}),
        \dv{SortString{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1450,8,1450,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f")]

// rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("true","Bool"))=>#token("\"true\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d), org.kframework.attributes.Location(Location(1449,8,1449,36)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortString{},R} (
        LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(X0:SortBool{}),
        \dv{SortString{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1449,8,1449,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d")]

// rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(#token("-1","Int") #as _0,E,signedBytes(.KList))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(#token("1","Int"),_0,E) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eb42fdb8d47684fe0754a59e24241769879512c74964fb4370764b280c2be8df), org.kframework.attributes.Location(Location(1968,8,1968,67)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            \and{SortInt{}}(\dv{SortInt{}}("-1"),Var'Unds'0:SortInt{})
          ),\and{R} (
          \in{SortEndianness{}, R} (
            X1:SortEndianness{},
            VarE:SortEndianness{}
          ),\and{R} (
          \in{SortSignedness{}, R} (
            X2:SortSignedness{},
            LblsignedBytes{}()
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortBytes{},R} (
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(X0:SortInt{},X1:SortEndianness{},X2:SortSignedness{}),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(\dv{SortInt{}}("1"),Var'Unds'0:SortInt{},VarE:SortEndianness{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1968,8,1968,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("eb42fdb8d47684fe0754a59e24241769879512c74964fb4370764b280c2be8df")]

// rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(I,E,signedBytes(.KList))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(`_/Int_`(`_+Int_`(`log2Int(_)_INT-COMMON_Int_Int`(I),#token("9","Int")),#token("8","Int")),I,E) requires `_>Int_`(I,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(952b7a87238b66d0a67d8de14089536952ea1301aaf02de206dcb998a414953c), org.kframework.attributes.Location(Location(1964,8,1965,22)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortEndianness{}, R} (
            X1:SortEndianness{},
            VarE:SortEndianness{}
          ),\and{R} (
          \in{SortSignedness{}, R} (
            X2:SortSignedness{},
            LblsignedBytes{}()
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortBytes{},R} (
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(X0:SortInt{},X1:SortEndianness{},X2:SortSignedness{}),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(Lbl'UndsSlsh'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI:SortInt{}),\dv{SortInt{}}("9")),\dv{SortInt{}}("8")),VarI:SortInt{},VarE:SortEndianness{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1964,8,1965,22)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("952b7a87238b66d0a67d8de14089536952ea1301aaf02de206dcb998a414953c")]

// rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(I,E,signedBytes(.KList))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(`_/Int_`(`_+Int_`(`log2Int(_)_INT-COMMON_Int_Int`(`~Int_`(I)),#token("9","Int")),#token("8","Int")),I,E) requires `_<Int_`(I,#token("-1","Int")) ensures #token("true","Bool") [UNIQUE_ID(fd5609e7b5d53d83c40abbe06159dfe57f85733b7cc65ec7fcd0f875f3d70519), org.kframework.attributes.Location(Location(1966,8,1967,23)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("-1")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortEndianness{}, R} (
            X1:SortEndianness{},
            VarE:SortEndianness{}
          ),\and{R} (
          \in{SortSignedness{}, R} (
            X2:SortSignedness{},
            LblsignedBytes{}()
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortBytes{},R} (
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(X0:SortInt{},X1:SortEndianness{},X2:SortSignedness{}),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(Lbl'UndsSlsh'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(Lbl'Tild'Int'Unds'{}(VarI:SortInt{})),\dv{SortInt{}}("9")),\dv{SortInt{}}("8")),VarI:SortInt{},VarE:SortEndianness{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1966,8,1967,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("fd5609e7b5d53d83c40abbe06159dfe57f85733b7cc65ec7fcd0f875f3d70519")]

// rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(I,E,unsignedBytes(.KList))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(`_/Int_`(`_+Int_`(`log2Int(_)_INT-COMMON_Int_Int`(I),#token("8","Int")),#token("8","Int")),I,E) requires `_>Int_`(I,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(2f8606bd48806c67696314387ebef888a62d153f7769fce58aff8c81c2c3fe8f), org.kframework.attributes.Location(Location(1961,8,1962,22)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortEndianness{}, R} (
            X1:SortEndianness{},
            VarE:SortEndianness{}
          ),\and{R} (
          \in{SortSignedness{}, R} (
            X2:SortSignedness{},
            LblunsignedBytes{}()
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortBytes{},R} (
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(X0:SortInt{},X1:SortEndianness{},X2:SortSignedness{}),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(Lbl'UndsSlsh'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI:SortInt{}),\dv{SortInt{}}("8")),\dv{SortInt{}}("8")),VarI:SortInt{},VarE:SortEndianness{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1961,8,1962,22)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("2f8606bd48806c67696314387ebef888a62d153f7769fce58aff8c81c2c3fe8f")]

// rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(#token("0","Int"),_0,_1)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ad08d8ce571c0693310ac494b47ac920c1da18996f142d504e0de7d5e1c4d375), org.kframework.attributes.Location(Location(1963,8,1963,48)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            \dv{SortInt{}}("0")
          ),\and{R} (
          \in{SortEndianness{}, R} (
            X1:SortEndianness{},
            Var'Unds'0:SortEndianness{}
          ),\and{R} (
          \in{SortSignedness{}, R} (
            X2:SortSignedness{},
            Var'Unds'1:SortSignedness{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortBytes{},R} (
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(X0:SortInt{},X1:SortEndianness{},X2:SortSignedness{}),
        Lbl'Stop'Bytes'Unds'BYTES-HOOKED'Unds'Bytes{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1963,8,1963,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ad08d8ce571c0693310ac494b47ac920c1da18996f142d504e0de7d5e1c4d375")]

// rule `Map:lookup`(`Map:update`(_MAP,KEY,VAL),KEY)=>VAL requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(62b2ada4bcfda605a44c00fb52dc346f75f57253bcb0b544f4b3450feae2f83a), org.kframework.attributes.Location(Location(271,10,271,45)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKItem{},R} (
        LblMap'Coln'lookup{}(LblMap'Coln'update{}(Var'Unds'MAP:SortMap{},VarKEY:SortKItem{},VarVAL:SortKItem{}),VarKEY:SortKItem{}),
        VarVAL:SortKItem{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(271,10,271,45)"), simplification{}(""), UNIQUE'Unds'ID{}("62b2ada4bcfda605a44c00fb52dc346f75f57253bcb0b544f4b3450feae2f83a")]

// rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"false\"","String"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835), org.kframework.attributes.Location(Location(1456,8,1456,37)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            \dv{SortString{}}("false")
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(X0:SortString{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1456,8,1456,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835")]

// rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"true\"","String"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8), org.kframework.attributes.Location(Location(1455,8,1455,36)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            \dv{SortString{}}("true")
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(X0:SortString{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1455,8,1455,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8")]

// rule `WasmInt`(VAL)=>inj{Int,WasmInt}(`WasmIntToken2Int(_)_WASM-TEXT_Int_WasmIntToken`(VAL)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8d8920ee8503b76e495a294efeb4474a738703cae2f56152dc84bc1c43278672), org.kframework.attributes.Location(Location(346,10,346,49)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortWasmIntToken{}, R} (
            X0:SortWasmIntToken{},
            VarVAL:SortWasmIntToken{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortWasmInt{},R} (
        LblWasmInt{}(X0:SortWasmIntToken{}),
        inj{SortInt{}, SortWasmInt{}}(LblWasmIntToken2Int'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'WasmIntToken{}(VarVAL:SortWasmIntToken{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(346,10,346,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8d8920ee8503b76e495a294efeb4474a738703cae2f56152dc84bc1c43278672")]

// rule `WasmIntToken2Int(_)_WASM-TEXT_Int_WasmIntToken`(VAL)=>`WasmIntTokenString2Int(_)_WASM-TEXT_Int_String`(`replaceAll(_,_,_)_STRING-COMMON_String_String_String_String`(`WasmIntToken2String(_)_WASM-TEXT_String_WasmIntToken`(VAL),#token("\"_\"","String"),#token("\"\"","String"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9208ad14fb730a01b8216326b3374f20c6de40f6f2e4f9a5f9d7b695dcc7e020), org.kframework.attributes.Location(Location(355,10,355,104)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortWasmIntToken{}, R} (
            X0:SortWasmIntToken{},
            VarVAL:SortWasmIntToken{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        LblWasmIntToken2Int'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'WasmIntToken{}(X0:SortWasmIntToken{}),
        LblWasmIntTokenString2Int'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'String{}(LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(LblWasmIntToken2String'LParUndsRParUnds'WASM-TEXT'Unds'String'Unds'WasmIntToken{}(VarVAL:SortWasmIntToken{}),\dv{SortString{}}("_"),\dv{SortString{}}("")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(355,10,355,104)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9208ad14fb730a01b8216326b3374f20c6de40f6f2e4f9a5f9d7b695dcc7e020")]

// rule `WasmIntTokenString2Int(_)_WASM-TEXT_Int_String`(S)=>`String2Base(_,_)_STRING-COMMON_Int_String_Int`(S,#token("10","Int")) requires `_==Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S,#token("\"0x\"","String"),#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [UNIQUE_ID(d21d624464f80a36fac6d1f39e081add665a38e1e9a52317a8a183e9da2d104a), org.kframework.attributes.Location(Location(353,10,353,124)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},\dv{SortString{}}("0x"),\dv{SortInt{}}("0")),\dv{SortInt{}}("-1")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        LblWasmIntTokenString2Int'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'String{}(X0:SortString{}),
        LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(VarS:SortString{},\dv{SortInt{}}("10"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(353,10,353,124)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("d21d624464f80a36fac6d1f39e081add665a38e1e9a52317a8a183e9da2d104a")]

// rule `WasmIntTokenString2Int(_)_WASM-TEXT_Int_String`(S)=>`String2Base(_,_)_STRING-COMMON_Int_String_Int`(`replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(S,#token("\"0x\"","String"),#token("\"\"","String")),#token("16","Int")) requires `_=/=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S,#token("\"0x\"","String"),#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [UNIQUE_ID(ce88384d148a15ea29d53f514f140a00cfb66cbd9da1afb8bf86a06b77ffc8bd), org.kframework.attributes.Location(Location(352,10,352,124)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},\dv{SortString{}}("0x"),\dv{SortInt{}}("0")),\dv{SortInt{}}("-1")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        LblWasmIntTokenString2Int'LParUndsRParUnds'WASM-TEXT'Unds'Int'Unds'String{}(X0:SortString{}),
        LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(VarS:SortString{},\dv{SortString{}}("0x"),\dv{SortString{}}("")),\dv{SortInt{}}("16"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(352,10,352,124)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("ce88384d148a15ea29d53f514f140a00cfb66cbd9da1afb8bf86a06b77ffc8bd")]

// rule `_%Int_`(X,N)=>X requires `_andBool_`(`_<=Int_`(#token("0","Int"),X),`_<Int_`(X,N)) ensures #token("true","Bool") [UNIQUE_ID(3c6a6ed93c91491e78006950a229b91fe57edd207091cb418b88655e3af66f94), org.kframework.attributes.Location(Location(1040,8,1040,59)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarX:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'UndsPerc'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),
        VarX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1040,8,1040,59)"), simplification{}(""), UNIQUE'Unds'ID{}("3c6a6ed93c91491e78006950a229b91fe57edd207091cb418b88655e3af66f94")]

// rule `_&Int_`(I1,`_&Int_`(I2,C))=>`_&Int_`(`_&Int_`(I1,I2),C) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1b7de709091a3290862d7a9ca2625659b666b89c5a3b27bdfee178b1628fd179), concrete(I1, I2), org.kframework.attributes.Location(Location(1074,8,1074,50)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'UndsAnd-'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsAnd-'Int'Unds'{}(VarI2:SortInt{},VarC:SortInt{})),
        Lbl'UndsAnd-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),VarC:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI1:SortInt{},VarI2:SortInt{}), symbolic{}(VarC:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1074,8,1074,50)"), simplification{}(""), UNIQUE'Unds'ID{}("1b7de709091a3290862d7a9ca2625659b666b89c5a3b27bdfee178b1628fd179")]

// rule `_++__WASM-DATA_ValStack_ValStack_ValStack`(`.ValStack_WASM-DATA_ValStack`(.KList),VALSTACK')=>VALSTACK' requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5ef453867f222d2110ff708a75f703787532fa68afff4d4de7c457827914a042), org.kframework.attributes.Location(Location(411,10,411,51)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValStack{}, R} (
            X0:SortValStack{},
            Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()
          ),\and{R} (
          \in{SortValStack{}, R} (
            X1:SortValStack{},
            VarVALSTACK'Apos':SortValStack{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(X0:SortValStack{},X1:SortValStack{}),
        VarVALSTACK'Apos':SortValStack{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(411,10,411,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5ef453867f222d2110ff708a75f703787532fa68afff4d4de7c457827914a042")]

// rule `_++__WASM-DATA_ValStack_ValStack_ValStack`(`_:__WASM-DATA_ValStack_Val_ValStack`(SI,VALSTACK),VALSTACK')=>`_:__WASM-DATA_ValStack_Val_ValStack`(SI,`_++__WASM-DATA_ValStack_ValStack_ValStack`(VALSTACK,VALSTACK')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8c491853c23a63f91ac7528b55dc76a0e892b8e581f204ae26294c096dcd3d74), org.kframework.attributes.Location(Location(412,10,412,70)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValStack{}, R} (
            X0:SortValStack{},
            Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarSI:SortVal{},VarVALSTACK:SortValStack{})
          ),\and{R} (
          \in{SortValStack{}, R} (
            X1:SortValStack{},
            VarVALSTACK'Apos':SortValStack{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(X0:SortValStack{},X1:SortValStack{}),
        Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarSI:SortVal{},Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(412,10,412,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8c491853c23a63f91ac7528b55dc76a0e892b8e581f204ae26294c096dcd3d74")]

// rule `_+Int_`(I,B)=>`_+Int_`(B,I) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f414cbac7ca5c0f2f75da04135615fea6af0646bed9962865d7b02a45901a09b), concrete(I), org.kframework.attributes.Location(Location(1061,8,1061,28)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(51), symbolic(B)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},VarB:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(VarB:SortInt{},VarI:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI:SortInt{}), symbolic{}(VarB:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1061,8,1061,28)"), simplification{}("51"), UNIQUE'Unds'ID{}("f414cbac7ca5c0f2f75da04135615fea6af0646bed9962865d7b02a45901a09b")]

// rule `_+Int_`(I,#token("0","Int"))=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d8b4ae4926d8ec7b1d5abaa5fed68fd6c7f3f5a21c76a51231394a2b36fbf995), org.kframework.attributes.Location(Location(1036,8,1036,21)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")),
        VarI:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1036,8,1036,21)"), simplification{}(""), UNIQUE'Unds'ID{}("d8b4ae4926d8ec7b1d5abaa5fed68fd6c7f3f5a21c76a51231394a2b36fbf995")]

// rule `_+Int_`(I1,`_+Int_`(B,I3))=>`_+Int_`(B,`_+Int_`(I1,I3)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(268b9a7c15e96c6d7eca16bc9022dc880f06a15ca8018eb1854b9836fc3e965c), concrete(I1, I3), org.kframework.attributes.Location(Location(1065,8,1065,50)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(B)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarB:SortInt{},VarI3:SortInt{})),
        Lbl'UndsPlus'Int'Unds'{}(VarB:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI3:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI1:SortInt{},VarI3:SortInt{}), symbolic{}(VarB:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1065,8,1065,50)"), simplification{}(""), UNIQUE'Unds'ID{}("268b9a7c15e96c6d7eca16bc9022dc880f06a15ca8018eb1854b9836fc3e965c")]

// rule `_+Int_`(I1,`_+Int_`(I2,C))=>`_+Int_`(`_+Int_`(I1,I2),C) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(945eee1b50c7ee86f3997715061349a7d77bf7ede65b292713da34b6ba2e568e), concrete(I1, I2), org.kframework.attributes.Location(Location(1067,8,1067,50)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarI2:SortInt{},VarC:SortInt{})),
        Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),VarC:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI1:SortInt{},VarI2:SortInt{}), symbolic{}(VarC:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1067,8,1067,50)"), simplification{}(""), UNIQUE'Unds'ID{}("945eee1b50c7ee86f3997715061349a7d77bf7ede65b292713da34b6ba2e568e")]

// rule `_+Int_`(I1,`_-Int_`(I2,C))=>`_-Int_`(`_+Int_`(I1,I2),C) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3f8e2290240b516c1395fc1e6f038dc63b8fe27951133eb2a64b65a0d71e1cf1), concrete(I1, I2), org.kframework.attributes.Location(Location(1068,8,1068,50)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'-Int'Unds'{}(VarI2:SortInt{},VarC:SortInt{})),
        Lbl'Unds'-Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),VarC:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI1:SortInt{},VarI2:SortInt{}), symbolic{}(VarC:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1068,8,1068,50)"), simplification{}(""), UNIQUE'Unds'ID{}("3f8e2290240b516c1395fc1e6f038dc63b8fe27951133eb2a64b65a0d71e1cf1")]

// rule `_+Int_`(`_+Int_`(A,I2),I3)=>`_+Int_`(A,`_+Int_`(I2,I3)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bd1f111a70bb9802e01754c9b95e7bbc5e924e2cd3749d93c73a02b7d01377a9), concrete(I2, I3), org.kframework.attributes.Location(Location(1064,8,1064,50)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(A)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarA:SortInt{},VarI2:SortInt{}),VarI3:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(VarA:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarI2:SortInt{},VarI3:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI2:SortInt{},VarI3:SortInt{}), symbolic{}(VarA:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1064,8,1064,50)"), simplification{}(""), UNIQUE'Unds'ID{}("bd1f111a70bb9802e01754c9b95e7bbc5e924e2cd3749d93c73a02b7d01377a9")]

// rule `_+Int_`(`_-Int_`(I1,B),I3)=>`_-Int_`(`_+Int_`(I1,I3),B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a0ccce19dfe6142c052181702bc6afa92bef00189634e2cd81e3df72d18b6f72), concrete(I1, I3), org.kframework.attributes.Location(Location(1069,8,1069,50)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(B)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarB:SortInt{}),VarI3:SortInt{}),
        Lbl'Unds'-Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI3:SortInt{}),VarB:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI1:SortInt{},VarI3:SortInt{}), symbolic{}(VarB:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1069,8,1069,50)"), simplification{}(""), UNIQUE'Unds'ID{}("a0ccce19dfe6142c052181702bc6afa92bef00189634e2cd81e3df72d18b6f72")]

// rule `_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(`.List{"listValTypes"}_ValTypes`(.KList),VTYPES')=>VTYPES' requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(54909094d75460553767ab50caea9eeb1dcbe2cb9a13d8879a119f81d4cdd3f0), org.kframework.attributes.Location(Location(268,10,268,42)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValTypes{}, R} (
            X0:SortValTypes{},
            Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}()
          ),\and{R} (
          \in{SortValTypes{}, R} (
            X1:SortValTypes{},
            VarVTYPES'Apos':SortValTypes{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(X0:SortValTypes{},X1:SortValTypes{}),
        VarVTYPES'Apos':SortValTypes{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(268,10,268,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("54909094d75460553767ab50caea9eeb1dcbe2cb9a13d8879a119f81d4cdd3f0")]

// rule `_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(listValTypes(VT,VTYPES),VTYPES')=>listValTypes(VT,`_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(VTYPES,VTYPES')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(78afb13f51db1940eb1551740b5e0591b92fc13235f2e4b47b208cbb6fc29ad5), org.kframework.attributes.Location(Location(269,10,269,56)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValTypes{}, R} (
            X0:SortValTypes{},
            LbllistValTypes{}(VarVT:SortValType{},VarVTYPES:SortValTypes{})
          ),\and{R} (
          \in{SortValTypes{}, R} (
            X1:SortValTypes{},
            VarVTYPES'Apos':SortValTypes{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(X0:SortValTypes{},X1:SortValTypes{}),
        LbllistValTypes{}(VarVT:SortValType{},Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarVTYPES:SortValTypes{},VarVTYPES'Apos':SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(269,10,269,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("78afb13f51db1940eb1551740b5e0591b92fc13235f2e4b47b208cbb6fc29ad5")]

// rule `_-Int_`(A,I)=>`_+Int_`(A,`_-Int_`(#token("0","Int"),I)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5006e67cf607e7b0d114a5cf79189eef34941e4c1136f2bcfa0ecb4a5f409aaa), concrete(I), org.kframework.attributes.Location(Location(1062,8,1062,37)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification(51), symbolic(A)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'-Int'Unds'{}(VarA:SortInt{},VarI:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(VarA:SortInt{},Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),VarI:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI:SortInt{}), symbolic{}(VarA:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1062,8,1062,37)"), simplification{}("51"), UNIQUE'Unds'ID{}("5006e67cf607e7b0d114a5cf79189eef34941e4c1136f2bcfa0ecb4a5f409aaa")]

// rule `_-Int_`(I,#token("0","Int"))=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d86d26d8f81aca004f9bc8ad3e99c8c73cbf1c3dd4c60d3f44c3a524af1dff49), org.kframework.attributes.Location(Location(1037,8,1037,21)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'-Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")),
        VarI:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1037,8,1037,21)"), simplification{}(""), UNIQUE'Unds'ID{}("d86d26d8f81aca004f9bc8ad3e99c8c73cbf1c3dd4c60d3f44c3a524af1dff49")]

// rule `_-Int_`(I1,`_+Int_`(B,I3))=>`_-Int_`(`_-Int_`(I1,I3),B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f3dfc3d737ef13caec61d97df64b52c7385de0bdcbe1ad7df52e5782b021d3bc), concrete(I1, I3), org.kframework.attributes.Location(Location(1066,8,1066,50)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(B)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarB:SortInt{},VarI3:SortInt{})),
        Lbl'Unds'-Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarI3:SortInt{}),VarB:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI1:SortInt{},VarI3:SortInt{}), symbolic{}(VarB:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1066,8,1066,50)"), simplification{}(""), UNIQUE'Unds'ID{}("f3dfc3d737ef13caec61d97df64b52c7385de0bdcbe1ad7df52e5782b021d3bc")]

// rule `_-Int_`(I1,`_+Int_`(I2,C))=>`_-Int_`(`_-Int_`(I1,I2),C) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(40f6808fcbd77c0ad816055dc5c3128e2140c47840910c8141267828c3289f60), concrete(I1, I2), org.kframework.attributes.Location(Location(1070,8,1070,50)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarI2:SortInt{},VarC:SortInt{})),
        Lbl'Unds'-Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),VarC:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI1:SortInt{},VarI2:SortInt{}), symbolic{}(VarC:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1070,8,1070,50)"), simplification{}(""), UNIQUE'Unds'ID{}("40f6808fcbd77c0ad816055dc5c3128e2140c47840910c8141267828c3289f60")]

// rule `_-Int_`(I1,`_-Int_`(I2,C))=>`_+Int_`(`_-Int_`(I1,I2),C) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1c038450af0ca2c7dbe53cab1a50de6a5afebca70825506f82586b79697c8685), concrete(I1, I2), org.kframework.attributes.Location(Location(1071,8,1071,50)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'-Int'Unds'{}(VarI2:SortInt{},VarC:SortInt{})),
        Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),VarC:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI1:SortInt{},VarI2:SortInt{}), symbolic{}(VarC:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1071,8,1071,50)"), simplification{}(""), UNIQUE'Unds'ID{}("1c038450af0ca2c7dbe53cab1a50de6a5afebca70825506f82586b79697c8685")]

// rule `_-Int_`(`_-Int_`(C,I2),I3)=>`_-Int_`(C,`_+Int_`(I2,I3)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2f0c45ab27fd9a31e04bd48a211c47471e15e88ed3a5ab72217ae49fc4480ba9), concrete(I2, I3), org.kframework.attributes.Location(Location(1072,8,1072,50)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification, symbolic(C)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'-Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarC:SortInt{},VarI2:SortInt{}),VarI3:SortInt{}),
        Lbl'Unds'-Int'Unds'{}(VarC:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarI2:SortInt{},VarI3:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(VarI2:SortInt{},VarI3:SortInt{}), symbolic{}(VarC:SortInt{}), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1072,8,1072,50)"), simplification{}(""), UNIQUE'Unds'ID{}("2f0c45ab27fd9a31e04bd48a211c47471e15e88ed3a5ab72217ae49fc4480ba9")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,aAbs(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`absFloat(_)_FLOAT_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5323bdf0f52edef572b66a5c818954f370634747b53e12eb32e9a07f20387430), org.kframework.attributes.Location(Location(176,10,176,55)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFUnOp{}, R} (
            X1:SortFUnOp{},
            LblaAbs{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF:SortFloat{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(X0:SortFValType{},X1:SortFUnOp{},X2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblabsFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(176,10,176,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5323bdf0f52edef572b66a5c818954f370634747b53e12eb32e9a07f20387430")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,aCeil(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`ceilFloat(_)_FLOAT_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(99a6376f077d3ccb8b9f39c41e2c2dfcb938b2530842094c0415c5aa179b2eac), org.kframework.attributes.Location(Location(180,10,180,55)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFUnOp{}, R} (
            X1:SortFUnOp{},
            LblaCeil{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF:SortFloat{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(X0:SortFValType{},X1:SortFUnOp{},X2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblceilFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(180,10,180,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("99a6376f077d3ccb8b9f39c41e2c2dfcb938b2530842094c0415c5aa179b2eac")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,aFloor(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`floorFloat(_)_FLOAT_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7778cf66692c413ff4f080abf1ef5c15bbd7b74eceab0cdd263fdb2b7d038231), org.kframework.attributes.Location(Location(179,10,179,55)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFUnOp{}, R} (
            X1:SortFUnOp{},
            LblaFloor{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF:SortFloat{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(X0:SortFValType{},X1:SortFUnOp{},X2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblfloorFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,10,179,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7778cf66692c413ff4f080abf1ef5c15bbd7b74eceab0cdd263fdb2b7d038231")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,aNearest(.KList),F)=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,inj{Int,Number}(`Float2Int(_)_FLOAT_Int_Float`(F)))) requires `_andBool_`(`notBool_`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F)),`notBool_`(`_andBool_`(`_==Int_`(`Float2Int(_)_FLOAT_Int_Float`(F),#token("0","Int")),`signFloat(_)_FLOAT_Bool_Float`(F)))) ensures #token("true","Bool") [UNIQUE_ID(83e13c7ee222ad153c539ade95daeceb90663c45a9acc14ebbb1913327be5567), org.kframework.attributes.Location(Location(183,10,183,158)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(LblnotBool'Unds'{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{})),LblnotBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}),\dv{SortInt{}}("0")),LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{})))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFUnOp{}, R} (
            X1:SortFUnOp{},
            LblaNearest{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF:SortFloat{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(X0:SortFValType{},X1:SortFUnOp{},X2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},inj{SortInt{}, SortNumber{}}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(183,10,183,158)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("83e13c7ee222ad153c539ade95daeceb90663c45a9acc14ebbb1913327be5567")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,aNearest(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,F)) requires `#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F) ensures #token("true","Bool") [UNIQUE_ID(f27da61e079434caa4e942b2ea5965f87a8a5dbc2242cabd30d5bc3585941fe4), org.kframework.attributes.Location(Location(182,10,182,97)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFUnOp{}, R} (
            X1:SortFUnOp{},
            LblaNearest{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF:SortFloat{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(X0:SortFValType{},X1:SortFUnOp{},X2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarF:SortFloat{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(182,10,182,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("f27da61e079434caa4e942b2ea5965f87a8a5dbc2242cabd30d5bc3585941fe4")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,aNearest(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,#token("-0.0","Float"))) requires `_andBool_`(`_andBool_`(`notBool_`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F)),`_==Int_`(`Float2Int(_)_FLOAT_Int_Float`(F),#token("0","Int"))),`signFloat(_)_FLOAT_Bool_Float`(F)) ensures #token("true","Bool") [UNIQUE_ID(ea54a37f35cecbd35d54e5d9ba0ab5153fb72bede9efafeb94fa14b8d45f5551), org.kframework.attributes.Location(Location(184,10,184,157)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblnotBool'Unds'{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{})),Lbl'UndsEqlsEqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}),\dv{SortInt{}}("0"))),LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{})),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFUnOp{}, R} (
            X1:SortFUnOp{},
            LblaNearest{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF:SortFloat{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(X0:SortFValType{},X1:SortFUnOp{},X2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},\dv{SortFloat{}}("-0.0")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(184,10,184,157)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("ea54a37f35cecbd35d54e5d9ba0ab5153fb72bede9efafeb94fa14b8d45f5551")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,aNeg(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`--Float__FLOAT_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(952d499bb0614abd66dadfe0202ee5e3168f3091fdada846215aa54415acd171), org.kframework.attributes.Location(Location(177,10,177,54)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFUnOp{}, R} (
            X1:SortFUnOp{},
            LblaNeg{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF:SortFloat{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(X0:SortFValType{},X1:SortFUnOp{},X2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl--Float'UndsUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(177,10,177,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("952d499bb0614abd66dadfe0202ee5e3168f3091fdada846215aa54415acd171")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,aSqrt(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`sqrtFloat(_)_FLOAT_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(046ae60087d91f1d3ab56c8854039b8412fe904e9e6c8fb5ea1a07bb5982b1a7), org.kframework.attributes.Location(Location(178,10,178,55)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFUnOp{}, R} (
            X1:SortFUnOp{},
            LblaSqrt{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF:SortFloat{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(X0:SortFValType{},X1:SortFUnOp{},X2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblsqrtFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(178,10,178,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("046ae60087d91f1d3ab56c8854039b8412fe904e9e6c8fb5ea1a07bb5982b1a7")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,aTrunc(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8ccfb0d699ccce30f0f60e2aa52a8b11ba4fb045e47f433c8edddf709210e6b1), org.kframework.attributes.Location(Location(181,10,181,55)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFUnOp{}, R} (
            X1:SortFUnOp{},
            LblaTrunc{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF:SortFloat{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(X0:SortFValType{},X1:SortFUnOp{},X2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(181,10,181,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8ccfb0d699ccce30f0f60e2aa52a8b11ba4fb045e47f433c8edddf709210e6b1")]

// rule `_.___WASM-NUMERIC_Val_IValType_IUnOp_Int`(ITYPE,aClz(.KList),I1)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_-Int_`(`#width(_)_WASM-DATA_Int_IValType`(ITYPE),`#minWidth(_)_WASM-NUMERIC_Int_Int`(I1)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9bc264d243cc97af28fb177f0d115bd402627431c677d0e0be24dd8f686db4b0), org.kframework.attributes.Location(Location(129,10,129,73)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIUnOp{}, R} (
            X1:SortIUnOp{},
            LblaClz{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IUnOp'Unds'Int{}(X0:SortIValType{},X1:SortIUnOp{},X2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds'-Int'Unds'{}(Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),Lbl'Hash'minWidth'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(VarI1:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(129,10,129,73)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9bc264d243cc97af28fb177f0d115bd402627431c677d0e0be24dd8f686db4b0")]

// rule `_.___WASM-NUMERIC_Val_IValType_IUnOp_Int`(ITYPE,aCtz(.KList),I1)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(I1,#token("0","Int")),`#width(_)_WASM-DATA_Int_IValType`(ITYPE),`#ctz(_)_WASM-NUMERIC_Int_Int`(I1)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(98cdb6f13810b081553364e656e256c6ca5c35e654e82194dddf2efa606273f9), org.kframework.attributes.Location(Location(130,10,130,94)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIUnOp{}, R} (
            X1:SortIUnOp{},
            LblaCtz{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IUnOp'Unds'Int{}(X0:SortIValType{},X1:SortIUnOp{},X2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},\dv{SortInt{}}("0")),Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),Lbl'Hash'ctz'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(VarI1:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(130,10,130,94)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("98cdb6f13810b081553364e656e256c6ca5c35e654e82194dddf2efa606273f9")]

// rule `_.___WASM-NUMERIC_Val_IValType_IUnOp_Int`(ITYPE,aPopcnt(.KList),I1)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#popcnt(_)_WASM-NUMERIC_Int_Int`(I1))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f3b637e3b7f77a63c63fdac75cf4b2202f2e196a4e4558b0888159e73f7b5ab0), org.kframework.attributes.Location(Location(131,10,131,52)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIUnOp{}, R} (
            X1:SortIUnOp{},
            LblaPopcnt{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IUnOp'Unds'Int{}(X0:SortIValType{},X1:SortIUnOp{},X2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'popcnt'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(VarI1:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(131,10,131,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f3b637e3b7f77a63c63fdac75cf4b2202f2e196a4e4558b0888159e73f7b5ab0")]

// rule `_.___WASM-NUMERIC_Val_IValType_TestOp_Int`(_0,aEqz(.KList),I)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_==Int_`(I,#token("0","Int"))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dfe397ce5ac76f462722b94f067d9846061a77465e471ed9c2cf263f81257c71), org.kframework.attributes.Location(Location(322,10,322,47)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Var'Unds'0:SortIValType{}
          ),\and{R} (
          \in{SortTestOp{}, R} (
            X1:SortTestOp{},
            LblaEqz{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'TestOp'Unds'Int{}(X0:SortIValType{},X1:SortTestOp{},X2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(322,10,322,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("dfe397ce5ac76f462722b94f067d9846061a77465e471ed9c2cf263f81257c71")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{FValType,ValType}(f32(.KList) #as _1),inj{Cvtf64Op,CvtOp}(`aDemote_f64`(.KList)),F)=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(_1,F)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cc610230940aef7972c5009f7753c107a7b329ee09486a6921b60ddabff03ebe), org.kframework.attributes.Location(Location(430,10,430,50)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortFValType{}, SortValType{}}(\and{SortFValType{}}(Lblf32{}(),Var'Unds'1:SortFValType{}))
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvtf64Op{}, SortCvtOp{}}(LblaDemote'Unds'f64{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            VarF:SortNumber{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(Var'Unds'1:SortFValType{},VarF:SortNumber{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(430,10,430,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("cc610230940aef7972c5009f7753c107a7b329ee09486a6921b60ddabff03ebe")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{FValType,ValType}(f64(.KList) #as _1),inj{Cvtf32Op,CvtOp}(`aPromote_f32`(.KList)),F)=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(_1,F)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9d3540a84a2180b3b7ed9dc067972d604eb3f92995a6b23f2fa9da35bffadb6c), org.kframework.attributes.Location(Location(428,10,428,50)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortFValType{}, SortValType{}}(\and{SortFValType{}}(Lblf64{}(),Var'Unds'1:SortFValType{}))
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvtf32Op{}, SortCvtOp{}}(LblaPromote'Unds'f32{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            VarF:SortNumber{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(Var'Unds'1:SortFValType{},VarF:SortNumber{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(428,10,428,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9d3540a84a2180b3b7ed9dc067972d604eb3f92995a6b23f2fa9da35bffadb6c")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{IValType,ValType}(i32(.KList) #as _1),inj{Cvti64Op,CvtOp}(`aWrap_i64`(.KList)),inj{Int,Number}(I))=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(_1,I))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(caaf4b41e40ffade4b5ffb019029f8453830064931352e74138eefbe5589ae7c), org.kframework.attributes.Location(Location(404,10,404,46)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortIValType{}, SortValType{}}(\and{SortIValType{}}(Lbli32{}(),Var'Unds'1:SortIValType{}))
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvti64Op{}, SortCvtOp{}}(LblaWrap'Unds'i64{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            inj{SortInt{}, SortNumber{}}(VarI:SortInt{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Var'Unds'1:SortIValType{},VarI:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(404,10,404,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("caaf4b41e40ffade4b5ffb019029f8453830064931352e74138eefbe5589ae7c")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{IValType,ValType}(i64(.KList) #as _1),inj{Cvti32Op,CvtOp}(`aExtend_i32_s`(.KList)),inj{Int,Number}(I))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(_1,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(_1,`#signed(_,_)_WASM-DATA_Int_IValType_Int`(i32(.KList),I)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c7cdf3cb2caaaa21ed1a34c0ccb5bf219beb7c4c4d4e9d9bea15a022e08d2481), org.kframework.attributes.Location(Location(411,10,411,77)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortIValType{}, SortValType{}}(\and{SortIValType{}}(Lbli64{}(),Var'Unds'1:SortIValType{}))
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvti32Op{}, SortCvtOp{}}(LblaExtend'Unds'i32'Unds's{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            inj{SortInt{}, SortNumber{}}(VarI:SortInt{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Var'Unds'1:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Var'Unds'1:SortIValType{},Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Lbli32{}(),VarI:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(411,10,411,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c7cdf3cb2caaaa21ed1a34c0ccb5bf219beb7c4c4d4e9d9bea15a022e08d2481")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{IValType,ValType}(i64(.KList) #as _1),inj{Cvti32Op,CvtOp}(`aExtend_i32_u`(.KList)),inj{Int,Number}(I))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(_1,I)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a4a733c33b73a7bb84682cf75a8335cc476a12bd089ec13d6b066bbb3e8c2d1c), org.kframework.attributes.Location(Location(410,10,410,47)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortIValType{}, SortValType{}}(\and{SortIValType{}}(Lbli64{}(),Var'Unds'1:SortIValType{}))
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvti32Op{}, SortCvtOp{}}(LblaExtend'Unds'i32'Unds'u{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            inj{SortInt{}, SortNumber{}}(VarI:SortInt{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Var'Unds'1:SortIValType{},VarI:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(410,10,410,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a4a733c33b73a7bb84682cf75a8335cc476a12bd089ec13d6b066bbb3e8c2d1c")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{FValType,ValType}(FTYPE),inj{Cvti32Op,CvtOp}(`aConvert_i32_s`(.KList)),inj{Int,Number}(I))=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,inj{Int,Number}(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(i32(.KList),I)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ac7a4ed4d7372ca481fc25b27237fa891bdc1c055de68da1236e50b32e42687a), org.kframework.attributes.Location(Location(417,10,417,74)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortFValType{}, SortValType{}}(VarFTYPE:SortFValType{})
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvti32Op{}, SortCvtOp{}}(LblaConvert'Unds'i32'Unds's{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            inj{SortInt{}, SortNumber{}}(VarI:SortInt{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},inj{SortInt{}, SortNumber{}}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Lbli32{}(),VarI:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(417,10,417,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ac7a4ed4d7372ca481fc25b27237fa891bdc1c055de68da1236e50b32e42687a")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{FValType,ValType}(FTYPE),inj{Cvti32Op,CvtOp}(`aConvert_i32_u`(.KList)),inj{Int,Number}(I) #as _3)=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,_3)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c33a3a04d496ede95ca53295415d3f0e2cabcef98d6e59e09d47ee47728e09a4), org.kframework.attributes.Location(Location(418,10,418,60)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortFValType{}, SortValType{}}(VarFTYPE:SortFValType{})
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvti32Op{}, SortCvtOp{}}(LblaConvert'Unds'i32'Unds'u{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            \and{SortNumber{}}(inj{SortInt{}, SortNumber{}}(VarI:SortInt{}),Var'Unds'3:SortNumber{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},Var'Unds'3:SortNumber{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(418,10,418,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c33a3a04d496ede95ca53295415d3f0e2cabcef98d6e59e09d47ee47728e09a4")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{FValType,ValType}(FTYPE),inj{Cvti64Op,CvtOp}(`aConvert_i64_s`(.KList)),inj{Int,Number}(I))=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,inj{Int,Number}(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(i64(.KList),I)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(46e0ede420e610531592bf930e2a58e65c988933e38e7546ce7eff27ee14de5e), org.kframework.attributes.Location(Location(420,10,420,74)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortFValType{}, SortValType{}}(VarFTYPE:SortFValType{})
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvti64Op{}, SortCvtOp{}}(LblaConvert'Unds'i64'Unds's{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            inj{SortInt{}, SortNumber{}}(VarI:SortInt{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},inj{SortInt{}, SortNumber{}}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Lbli64{}(),VarI:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(420,10,420,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("46e0ede420e610531592bf930e2a58e65c988933e38e7546ce7eff27ee14de5e")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{FValType,ValType}(FTYPE),inj{Cvti64Op,CvtOp}(`aConvert_i64_u`(.KList)),inj{Int,Number}(I) #as _3)=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,_3)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1a2edd47daff6de75995c5fea8a569ccd7dbb16019d0c393f41e054521bd8106), org.kframework.attributes.Location(Location(421,10,421,60)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortFValType{}, SortValType{}}(VarFTYPE:SortFValType{})
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvti64Op{}, SortCvtOp{}}(LblaConvert'Unds'i64'Unds'u{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            \and{SortNumber{}}(inj{SortInt{}, SortNumber{}}(VarI:SortInt{}),Var'Unds'3:SortNumber{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},Var'Unds'3:SortNumber{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(421,10,421,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("1a2edd47daff6de75995c5fea8a569ccd7dbb16019d0c393f41e054521bd8106")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{IValType,ValType}(ITYPE),inj{Cvtf32Op,CvtOp}(`aTrunc_f32_s`(.KList)),inj{Float,Number}(F))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))))) requires `notBool_`(`_orBool_`(`_orBool_`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))),`_>Int_`(`_-Int_`(#token("0","Int"),`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE)))) ensures #token("true","Bool") [UNIQUE_ID(f53fcd2a6cba5e7982e87266c103d1ec15c90f62544bb38c0c9fc2307589bb72), org.kframework.attributes.Location(Location(441,10,442,159)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'orBool'Unds'{}(Lbl'Unds'orBool'Unds'{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-GT-'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{})
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvtf32Op{}, SortCvtOp{}}(LblaTrunc'Unds'f32'Unds's{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(441,10,442,159)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("f53fcd2a6cba5e7982e87266c103d1ec15c90f62544bb38c0c9fc2307589bb72")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{IValType,ValType}(ITYPE),inj{Cvtf32Op,CvtOp}(`aTrunc_f32_s`(.KList)),inj{Float,Number}(F))=>`undefined_WASM-DATA_Val`(.KList) requires `_orBool_`(`_orBool_`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))),`_>Int_`(`_-Int_`(#token("0","Int"),`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(ac17d2f59cd80700bacb3db53e772bbf60673c34cf109c6b6f1c356188085c08), org.kframework.attributes.Location(Location(436,10,437,149)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'orBool'Unds'{}(Lbl'Unds'orBool'Unds'{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-GT-'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{})
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvtf32Op{}, SortCvtOp{}}(LblaTrunc'Unds'f32'Unds's{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(436,10,437,149)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("ac17d2f59cd80700bacb3db53e772bbf60673c34cf109c6b6f1c356188085c08")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{IValType,ValType}(ITYPE),inj{Cvtf32Op,CvtOp}(`aTrunc_f32_u`(.KList)),inj{Float,Number}(F))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)))) requires `notBool_`(`_orBool_`(`_orBool_`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))),`_<Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),#token("0","Int")))) ensures #token("true","Bool") [UNIQUE_ID(6252c59b850d7cc90cc80be8d61510b5996ed3c2dfe0efad3c8e3dbe0ae0ab37), org.kframework.attributes.Location(Location(443,10,444,140)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'orBool'Unds'{}(Lbl'Unds'orBool'Unds'{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-LT-'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),\dv{SortInt{}}("0")))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{})
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvtf32Op{}, SortCvtOp{}}(LblaTrunc'Unds'f32'Unds'u{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(443,10,444,140)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("6252c59b850d7cc90cc80be8d61510b5996ed3c2dfe0efad3c8e3dbe0ae0ab37")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{IValType,ValType}(ITYPE),inj{Cvtf32Op,CvtOp}(`aTrunc_f32_u`(.KList)),inj{Float,Number}(F))=>`undefined_WASM-DATA_Val`(.KList) requires `_orBool_`(`_orBool_`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))),`_<Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(f39b7817a3300a3279dfa4d2bd2d15a5003fc58fec795437c3fb54fa435c8fb8), org.kframework.attributes.Location(Location(438,10,439,130)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'orBool'Unds'{}(Lbl'Unds'orBool'Unds'{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-LT-'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{})
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvtf32Op{}, SortCvtOp{}}(LblaTrunc'Unds'f32'Unds'u{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(438,10,439,130)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("f39b7817a3300a3279dfa4d2bd2d15a5003fc58fec795437c3fb54fa435c8fb8")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{IValType,ValType}(ITYPE),inj{Cvtf64Op,CvtOp}(`aTrunc_f64_s`(.KList)),inj{Float,Number}(F))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))))) requires `notBool_`(`_orBool_`(`_orBool_`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))),`_>Int_`(`_-Int_`(#token("0","Int"),`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE)))) ensures #token("true","Bool") [UNIQUE_ID(57e6f484fa335265bc59d7a7514b4d65e931850583a389b7edd85b3e57bec83a), org.kframework.attributes.Location(Location(451,10,452,159)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'orBool'Unds'{}(Lbl'Unds'orBool'Unds'{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-GT-'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{})
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvtf64Op{}, SortCvtOp{}}(LblaTrunc'Unds'f64'Unds's{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(451,10,452,159)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("57e6f484fa335265bc59d7a7514b4d65e931850583a389b7edd85b3e57bec83a")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{IValType,ValType}(ITYPE),inj{Cvtf64Op,CvtOp}(`aTrunc_f64_s`(.KList)),inj{Float,Number}(F))=>`undefined_WASM-DATA_Val`(.KList) requires `_orBool_`(`_orBool_`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))),`_>Int_`(`_-Int_`(#token("0","Int"),`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(32d84b5702e73252ce6f2352dda78c47dc538a386e4d03096319c844d20a383a), org.kframework.attributes.Location(Location(446,10,447,149)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'orBool'Unds'{}(Lbl'Unds'orBool'Unds'{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-GT-'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{})
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvtf64Op{}, SortCvtOp{}}(LblaTrunc'Unds'f64'Unds's{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(446,10,447,149)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("32d84b5702e73252ce6f2352dda78c47dc538a386e4d03096319c844d20a383a")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{IValType,ValType}(ITYPE),inj{Cvtf64Op,CvtOp}(`aTrunc_f64_u`(.KList)),inj{Float,Number}(F))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)))) requires `notBool_`(`_orBool_`(`_orBool_`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))),`_<Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),#token("0","Int")))) ensures #token("true","Bool") [UNIQUE_ID(2905ebb8e08dae63276b2b47cbc73c01766553db213dd0ae45d5fbf11cc8a98b), org.kframework.attributes.Location(Location(453,10,454,140)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'orBool'Unds'{}(Lbl'Unds'orBool'Unds'{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-LT-'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),\dv{SortInt{}}("0")))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{})
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvtf64Op{}, SortCvtOp{}}(LblaTrunc'Unds'f64'Unds'u{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(453,10,454,140)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("2905ebb8e08dae63276b2b47cbc73c01766553db213dd0ae45d5fbf11cc8a98b")]

// rule `_.___WASM-NUMERIC_Val_ValType_CvtOp_Number`(inj{IValType,ValType}(ITYPE),inj{Cvtf64Op,CvtOp}(`aTrunc_f64_u`(.KList)),inj{Float,Number}(F))=>`undefined_WASM-DATA_Val`(.KList) requires `_orBool_`(`_orBool_`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))),`_<Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(89f37ba0a6871031b147297f5edb209a840ecb500811715240f36cf759adfb1a), org.kframework.attributes.Location(Location(448,10,449,130)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'orBool'Unds'{}(Lbl'Unds'orBool'Unds'{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-LT-'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortValType{}, R} (
            X0:SortValType{},
            inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{})
          ),\and{R} (
          \in{SortCvtOp{}, R} (
            X1:SortCvtOp{},
            inj{SortCvtf64Op{}, SortCvtOp{}}(LblaTrunc'Unds'f64'Unds'u{}())
          ),\and{R} (
          \in{SortNumber{}, R} (
            X2:SortNumber{},
            inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'ValType'Unds'CvtOp'Unds'Number{}(X0:SortValType{},X1:SortCvtOp{},X2:SortNumber{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(448,10,449,130)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("89f37ba0a6871031b147297f5edb209a840ecb500811715240f36cf759adfb1a")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,floatAdd(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`_+Float__FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(22643064d0161f2dc7f1369f169293b78965f6fe4ccec53a5ee08e67994b18c6), org.kframework.attributes.Location(Location(297,10,297,67)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFBinOp{}, R} (
            X1:SortFBinOp{},
            LblfloatAdd{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF1:SortFloat{}
          ),\and{R} (
          \in{SortFloat{}, R} (
            X3:SortFloat{},
            VarF2:SortFloat{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(X0:SortFValType{},X1:SortFBinOp{},X2:SortFloat{},X3:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl'UndsPlus'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(297,10,297,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("22643064d0161f2dc7f1369f169293b78965f6fe4ccec53a5ee08e67994b18c6")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,floatCopysign(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,F1)) requires `_==Bool_`(`signFloat(_)_FLOAT_Bool_Float`(F1),`signFloat(_)_FLOAT_Bool_Float`(F2)) ensures #token("true","Bool") [UNIQUE_ID(1f118d3071d3e488475421332a1bb1360e225d1d01a7926c9ad3544b447292a3), org.kframework.attributes.Location(Location(303,10,303,119)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Bool'Unds'{}(LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF1:SortFloat{}),LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF2:SortFloat{})),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFBinOp{}, R} (
            X1:SortFBinOp{},
            LblfloatCopysign{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF1:SortFloat{}
          ),\and{R} (
          \in{SortFloat{}, R} (
            X3:SortFloat{},
            VarF2:SortFloat{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(X0:SortFValType{},X1:SortFBinOp{},X2:SortFloat{},X3:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarF1:SortFloat{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(303,10,303,119)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("1f118d3071d3e488475421332a1bb1360e225d1d01a7926c9ad3544b447292a3")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,floatCopysign(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`--Float__FLOAT_Float_Float`(F1))) requires `_=/=Bool_`(`signFloat(_)_FLOAT_Bool_Float`(F1),`signFloat(_)_FLOAT_Bool_Float`(F2)) ensures #token("true","Bool") [UNIQUE_ID(a0f98ca80f09f5a50de71f12c78366345c199f42c6a426fab64cc5065a8baf63), org.kframework.attributes.Location(Location(304,10,304,119)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF1:SortFloat{}),LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF2:SortFloat{})),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFBinOp{}, R} (
            X1:SortFBinOp{},
            LblfloatCopysign{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF1:SortFloat{}
          ),\and{R} (
          \in{SortFloat{}, R} (
            X3:SortFloat{},
            VarF2:SortFloat{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(X0:SortFValType{},X1:SortFBinOp{},X2:SortFloat{},X3:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl--Float'UndsUnds'FLOAT'Unds'Float'Unds'Float{}(VarF1:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(304,10,304,119)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("a0f98ca80f09f5a50de71f12c78366345c199f42c6a426fab64cc5065a8baf63")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,floatDiv(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`_/Float__FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dc3ea710e4c8ad7771826d97f53d8951f579d00008645182c614279fbf8b8dbd), org.kframework.attributes.Location(Location(300,10,300,67)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFBinOp{}, R} (
            X1:SortFBinOp{},
            LblfloatDiv{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF1:SortFloat{}
          ),\and{R} (
          \in{SortFloat{}, R} (
            X3:SortFloat{},
            VarF2:SortFloat{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(X0:SortFValType{},X1:SortFBinOp{},X2:SortFloat{},X3:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl'UndsSlsh'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(300,10,300,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("dc3ea710e4c8ad7771826d97f53d8951f579d00008645182c614279fbf8b8dbd")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,floatMax(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`maxFloat(_,_)_FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(188ff689008c795a8747fe99677ea62c97554b60e94a0b34c016b27fa52bae93), org.kframework.attributes.Location(Location(302,10,302,72)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFBinOp{}, R} (
            X1:SortFBinOp{},
            LblfloatMax{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF1:SortFloat{}
          ),\and{R} (
          \in{SortFloat{}, R} (
            X3:SortFloat{},
            VarF2:SortFloat{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(X0:SortFValType{},X1:SortFBinOp{},X2:SortFloat{},X3:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblmaxFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(302,10,302,72)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("188ff689008c795a8747fe99677ea62c97554b60e94a0b34c016b27fa52bae93")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,floatMin(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`minFloat(_,_)_FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(04ea63a9fde538dcdafb8d88138b5e6dd55809eb38110731e1fd0fb288392611), org.kframework.attributes.Location(Location(301,10,301,72)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFBinOp{}, R} (
            X1:SortFBinOp{},
            LblfloatMin{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF1:SortFloat{}
          ),\and{R} (
          \in{SortFloat{}, R} (
            X3:SortFloat{},
            VarF2:SortFloat{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(X0:SortFValType{},X1:SortFBinOp{},X2:SortFloat{},X3:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblminFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(301,10,301,72)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("04ea63a9fde538dcdafb8d88138b5e6dd55809eb38110731e1fd0fb288392611")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,floatMul(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`_*Float__FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d909059375308ba97ee71e917d250a5c83c06f324c3f3ff8593079cf8c218283), org.kframework.attributes.Location(Location(299,10,299,67)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFBinOp{}, R} (
            X1:SortFBinOp{},
            LblfloatMul{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF1:SortFloat{}
          ),\and{R} (
          \in{SortFloat{}, R} (
            X3:SortFloat{},
            VarF2:SortFloat{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(X0:SortFValType{},X1:SortFBinOp{},X2:SortFloat{},X3:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl'UndsStar'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,10,299,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d909059375308ba97ee71e917d250a5c83c06f324c3f3ff8593079cf8c218283")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,floatSub(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`_-Float__FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(67d4122c0258e7e14f6e058143a34dfbd4611f68d0325120bc8b7487dff9cdb3), org.kframework.attributes.Location(Location(298,10,298,67)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            VarFTYPE:SortFValType{}
          ),\and{R} (
          \in{SortFBinOp{}, R} (
            X1:SortFBinOp{},
            LblfloatSub{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF1:SortFloat{}
          ),\and{R} (
          \in{SortFloat{}, R} (
            X3:SortFloat{},
            VarF2:SortFloat{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(X0:SortFValType{},X1:SortFBinOp{},X2:SortFloat{},X3:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl'Unds'-Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(298,10,298,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("67d4122c0258e7e14f6e058143a34dfbd4611f68d0325120bc8b7487dff9cdb3")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,floatEq(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_==Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e1fb0fb7bca207229f7b1336db1050677eb54bf99c42bdc602365b774c4b5e5), org.kframework.attributes.Location(Location(385,10,385,64)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            Var'Unds'0:SortFValType{}
          ),\and{R} (
          \in{SortFRelOp{}, R} (
            X1:SortFRelOp{},
            LblfloatEq{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF1:SortFloat{}
          ),\and{R} (
          \in{SortFloat{}, R} (
            X3:SortFloat{},
            VarF2:SortFloat{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(X0:SortFValType{},X1:SortFRelOp{},X2:SortFloat{},X3:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(385,10,385,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9e1fb0fb7bca207229f7b1336db1050677eb54bf99c42bdc602365b774c4b5e5")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,floatGe(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>=Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(080ca029136497e38f4bd606816c9eb07e937b59d9d0b7f47f573b01d97466a1), org.kframework.attributes.Location(Location(384,10,384,64)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            Var'Unds'0:SortFValType{}
          ),\and{R} (
          \in{SortFRelOp{}, R} (
            X1:SortFRelOp{},
            LblfloatGe{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF1:SortFloat{}
          ),\and{R} (
          \in{SortFloat{}, R} (
            X3:SortFloat{},
            VarF2:SortFloat{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(X0:SortFValType{},X1:SortFRelOp{},X2:SortFloat{},X3:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-Eqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(384,10,384,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("080ca029136497e38f4bd606816c9eb07e937b59d9d0b7f47f573b01d97466a1")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,floatGt(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(96c6507f3ec97eb638866b290be84da0271411f6bc051901b7bfa43a45b81c46), org.kframework.attributes.Location(Location(382,10,382,64)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            Var'Unds'0:SortFValType{}
          ),\and{R} (
          \in{SortFRelOp{}, R} (
            X1:SortFRelOp{},
            LblfloatGt{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF1:SortFloat{}
          ),\and{R} (
          \in{SortFloat{}, R} (
            X3:SortFloat{},
            VarF2:SortFloat{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(X0:SortFValType{},X1:SortFRelOp{},X2:SortFloat{},X3:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(382,10,382,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("96c6507f3ec97eb638866b290be84da0271411f6bc051901b7bfa43a45b81c46")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,floatLe(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<=Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f12227cb5b99fd60428f183886feb05c53f7d4b673841d2152b9534bedd5582b), org.kframework.attributes.Location(Location(383,10,383,64)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            Var'Unds'0:SortFValType{}
          ),\and{R} (
          \in{SortFRelOp{}, R} (
            X1:SortFRelOp{},
            LblfloatLe{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF1:SortFloat{}
          ),\and{R} (
          \in{SortFloat{}, R} (
            X3:SortFloat{},
            VarF2:SortFloat{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(X0:SortFValType{},X1:SortFRelOp{},X2:SortFloat{},X3:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-Eqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,10,383,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f12227cb5b99fd60428f183886feb05c53f7d4b673841d2152b9534bedd5582b")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,floatLt(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4a35d7d1ce2a1a9ec2d52387830360fc35b023537da3d46959718c708eb97bac), org.kframework.attributes.Location(Location(381,10,381,64)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            Var'Unds'0:SortFValType{}
          ),\and{R} (
          \in{SortFRelOp{}, R} (
            X1:SortFRelOp{},
            LblfloatLt{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF1:SortFloat{}
          ),\and{R} (
          \in{SortFloat{}, R} (
            X3:SortFloat{},
            VarF2:SortFloat{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(X0:SortFValType{},X1:SortFRelOp{},X2:SortFloat{},X3:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(381,10,381,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4a35d7d1ce2a1a9ec2d52387830360fc35b023537da3d46959718c708eb97bac")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,floatNe(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_=/=Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9d2cb886901b3b293c7a2f278d28c0078ad9c14b10f8c2d43993dc77e12aefef), org.kframework.attributes.Location(Location(386,10,386,64)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFValType{}, R} (
            X0:SortFValType{},
            Var'Unds'0:SortFValType{}
          ),\and{R} (
          \in{SortFRelOp{}, R} (
            X1:SortFRelOp{},
            LblfloatNe{}()
          ),\and{R} (
          \in{SortFloat{}, R} (
            X2:SortFloat{},
            VarF1:SortFloat{}
          ),\and{R} (
          \in{SortFloat{}, R} (
            X3:SortFloat{},
            VarF2:SortFloat{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(X0:SortFValType{},X1:SortFRelOp{},X2:SortFloat{},X3:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsSlshEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(386,10,386,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9d2cb886901b3b293c7a2f278d28c0078ad9c14b10f8c2d43993dc77e12aefef")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,intAdd(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_+Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(050f61925fb514cd8e5f7dd53ae9610ac58068fd7c218067fe457b246891ad1a), org.kframework.attributes.Location(Location(210,10,210,67)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintAdd{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(210,10,210,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("050f61925fb514cd8e5f7dd53ae9610ac58068fd7c218067fe457b246891ad1a")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,intAnd(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_&Int_`(I1,I2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a69227219656ac41394b3156d9c9cf596d2602cd7c1e183236c55d67e55a27e0), org.kframework.attributes.Location(Location(253,10,253,59)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintAnd{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsAnd-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(253,10,253,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a69227219656ac41394b3156d9c9cf596d2602cd7c1e183236c55d67e55a27e0")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`intDiv_s`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,`_/Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires `_andBool_`(`_=/=Int_`(I2,#token("0","Int")),`_=/=Int_`(`_/Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(35f13c15546b19050da9bdbf61d8bdd610f46cad56f3afaca2e0617bfc6f1612), org.kframework.attributes.Location(Location(227,10,229,78)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),Lbl'UndsEqlsSlshEqls'Int'Unds'{}(Lbl'UndsSlsh'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintDiv'Unds's{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsSlsh'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(227,10,229,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("35f13c15546b19050da9bdbf61d8bdd610f46cad56f3afaca2e0617bfc6f1612")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`intDiv_s`(.KList),I1,I2)=>`undefined_WASM-DATA_Val`(.KList) requires `_andBool_`(`_=/=Int_`(I2,#token("0","Int")),`_==Int_`(`_/Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(dd3da442587e6f0927c5dc908a98bf43bda679bb65a08d95c898c5b51bced4dc), org.kframework.attributes.Location(Location(234,10,236,77)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsSlsh'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintDiv'Unds's{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(234,10,236,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("dd3da442587e6f0927c5dc908a98bf43bda679bb65a08d95c898c5b51bced4dc")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`intDiv_u`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_/Int_`(I1,I2))) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(8dd6ac956e475ed6f6208433ee88f31a523402c7d64b50520cb31a0c406f5bc0), org.kframework.attributes.Location(Location(221,11,221,76)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintDiv'Unds'u{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsSlsh'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(221,11,221,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("8dd6ac956e475ed6f6208433ee88f31a523402c7d64b50520cb31a0c406f5bc0")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,intMul(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_*Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(40a621cd6f4a957706e39ba5fe887fc5bef5f9d6bb0734dbcf2c1840eca5b7b0), org.kframework.attributes.Location(Location(212,10,212,67)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintMul{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsStar'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(212,10,212,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("40a621cd6f4a957706e39ba5fe887fc5bef5f9d6bb0734dbcf2c1840eca5b7b0")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,intOr(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_|Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0cbc535dadee0c8790231c6763e060a4272ef1f179cd137bfcd62669cf8100cf), org.kframework.attributes.Location(Location(254,10,254,60)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintOr{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPipe'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(254,10,254,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("0cbc535dadee0c8790231c6763e060a4272ef1f179cd137bfcd62669cf8100cf")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`intRem_s`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,`_%Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(66c1f71ce478b69ca057f6ddb983137d41076c5b96a4e5283493eeabfbd4ba8f), org.kframework.attributes.Location(Location(238,10,239,27)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintRem'Unds's{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPerc'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(238,10,239,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("66c1f71ce478b69ca057f6ddb983137d41076c5b96a4e5283493eeabfbd4ba8f")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`intRem_u`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_%Int_`(I1,I2))) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(7ac37e25359b146abfa5a93ebe3ac0fed5b7afa298fd45fd34be2607ab53465d), org.kframework.attributes.Location(Location(224,11,224,76)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintRem'Unds'u{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(224,11,224,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("7ac37e25359b146abfa5a93ebe3ac0fed5b7afa298fd45fd34be2607ab53465d")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,intRotl(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_+Int_`(`_<<Int_`(I1,`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE))),`_>>Int_`(I1,`_-Int_`(`#width(_)_WASM-DATA_Int_IValType`(ITYPE),`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE)))))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1d5c14fa05b03c9ac63d3d012cf7f6a29701d2db59ddfe536e3eef5a350dacf4), org.kframework.attributes.Location(Location(278,10,278,144)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintRotl{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-GT--GT-'Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'-Int'Unds'{}(Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))))))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(278,10,278,144)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("1d5c14fa05b03c9ac63d3d012cf7f6a29701d2db59ddfe536e3eef5a350dacf4")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,intRotr(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_+Int_`(`_>>Int_`(I1,`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE))),`_<<Int_`(I1,`_-Int_`(`#width(_)_WASM-DATA_Int_IValType`(ITYPE),`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE)))))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(00ef7baddbb037f0c9812d3d775648f2327d1d59cd147e164570e5799053ccd2), org.kframework.attributes.Location(Location(279,10,279,144)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintRotr{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-LT--LT-'Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'-Int'Unds'{}(Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))))))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(279,10,279,144)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("00ef7baddbb037f0c9812d3d775648f2327d1d59cd147e164570e5799053ccd2")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,intShl(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_<<Int_`(I1,`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE)))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(66645b0eabf1ec898709709b61c0c1c1845ac6e0592fccea10309e8509fc077b), org.kframework.attributes.Location(Location(266,10,266,82)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintShl{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds-LT--LT-'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(266,10,266,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("66645b0eabf1ec898709709b61c0c1c1845ac6e0592fccea10309e8509fc077b")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`intShr_s`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,`_>>Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE)))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4c08746ebe0cdbb0c50f317b138b6c60d4723be15ac1c666c7a38d1e3f7d9c89), org.kframework.attributes.Location(Location(269,10,269,109)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintShr'Unds's{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(269,10,269,109)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4c08746ebe0cdbb0c50f317b138b6c60d4723be15ac1c666c7a38d1e3f7d9c89")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`intShr_u`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_>>Int_`(I1,`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1e9f6786ccc22a8ed94ab100757c7494c1abe4f3fc2ca5368996b533bf240143), org.kframework.attributes.Location(Location(267,10,267,81)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintShr'Unds'u{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds-GT--GT-'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(267,10,267,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("1e9f6786ccc22a8ed94ab100757c7494c1abe4f3fc2ca5368996b533bf240143")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,intSub(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_-Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f91a8897dfdd68e9197b61c187fc74746bfcdfa46334ce12bbc41b234026c739), org.kframework.attributes.Location(Location(211,10,211,67)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintSub{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(211,10,211,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f91a8897dfdd68e9197b61c187fc74746bfcdfa46334ce12bbc41b234026c739")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,intXor(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_xorInt_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aacdb0f840dcfd0b32faaa75e8bd44483b6bc4a4e2302210797230a6dcac1566), org.kframework.attributes.Location(Location(255,10,255,60)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintXor{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds'xorInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(255,10,255,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("aacdb0f840dcfd0b32faaa75e8bd44483b6bc4a4e2302210797230a6dcac1566")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(_ITYPE,`intDiv_s`(.KList),_I1,I2)=>`undefined_WASM-DATA_Val`(.KList) requires `_==Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(5909dc1ec10788a1249eecf5eaf1d036a04e063a40b0fa8209b7911c33987f74), org.kframework.attributes.Location(Location(231,10,232,26)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Var'Unds'ITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintDiv'Unds's{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'I1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(231,10,232,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("5909dc1ec10788a1249eecf5eaf1d036a04e063a40b0fa8209b7911c33987f74")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(_ITYPE,`intDiv_u`(.KList),_I1,I2)=>`undefined_WASM-DATA_Val`(.KList) requires `_==Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(0a433ca090ab6374864e22865ba6083ccf4e5f36bc980a3b02eab7397e23891d), org.kframework.attributes.Location(Location(222,10,222,76)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Var'Unds'ITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintDiv'Unds'u{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'I1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(222,10,222,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("0a433ca090ab6374864e22865ba6083ccf4e5f36bc980a3b02eab7397e23891d")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(_ITYPE,`intRem_s`(.KList),_I1,I2)=>`undefined_WASM-DATA_Val`(.KList) requires `_==Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(376a181477a32c75f1c10f5b7ce84e95b9cb49401743d84f3983e1bd51f263e1), org.kframework.attributes.Location(Location(241,10,242,26)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Var'Unds'ITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintRem'Unds's{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'I1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(241,10,242,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("376a181477a32c75f1c10f5b7ce84e95b9cb49401743d84f3983e1bd51f263e1")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(_ITYPE,`intRem_u`(.KList),_I1,I2)=>`undefined_WASM-DATA_Val`(.KList) requires `_==Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(c6c97d10513e44a9c06e110d5b3e8a59bdb801765f208bf5566a6194c2d8230d), org.kframework.attributes.Location(Location(225,10,225,76)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Var'Unds'ITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIBinOp{}, R} (
            X1:SortIBinOp{},
            LblintRem'Unds'u{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'I1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIBinOp{},X2:SortInt{},X3:SortInt{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(225,10,225,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("c6c97d10513e44a9c06e110d5b3e8a59bdb801765f208bf5566a6194c2d8230d")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(ITYPE,`intGe_s`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>=Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(715f1c29da5894212176a0d7d315fadfd7647c4a1d5dd840528fd69177a39607), org.kframework.attributes.Location(Location(366,10,366,90)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIRelOp{}, R} (
            X1:SortIRelOp{},
            LblintGe'Unds's{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIRelOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(366,10,366,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("715f1c29da5894212176a0d7d315fadfd7647c4a1d5dd840528fd69177a39607")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(ITYPE,`intGt_s`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4ed9b69a37d073a91434c03f4b590051e47bf6722ff14ea0568d987e3dc4de85), org.kframework.attributes.Location(Location(355,10,355,89)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIRelOp{}, R} (
            X1:SortIRelOp{},
            LblintGt'Unds's{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIRelOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(355,10,355,89)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4ed9b69a37d073a91434c03f4b590051e47bf6722ff14ea0568d987e3dc4de85")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(ITYPE,`intLe_s`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<=Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5f2e4cb22d756a1d95bda043820e086abef695ca031cd3b5583034492282f665), org.kframework.attributes.Location(Location(365,10,365,90)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIRelOp{}, R} (
            X1:SortIRelOp{},
            LblintLe'Unds's{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIRelOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(365,10,365,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5f2e4cb22d756a1d95bda043820e086abef695ca031cd3b5583034492282f665")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(ITYPE,`intLt_s`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2136887af262ccf71e42c52689dc4815c2976ce67ec94e3d98c0ca95a63077da), org.kframework.attributes.Location(Location(354,10,354,89)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            VarITYPE:SortIValType{}
          ),\and{R} (
          \in{SortIRelOp{}, R} (
            X1:SortIRelOp{},
            LblintLt'Unds's{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIRelOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(354,10,354,89)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("2136887af262ccf71e42c52689dc4815c2976ce67ec94e3d98c0ca95a63077da")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,intEq(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_==Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f55b22d5adde5873b3a8014abf9a3c03be2884698dbc5e4567c300d6e23b5c83), org.kframework.attributes.Location(Location(343,10,343,62)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Var'Unds'0:SortIValType{}
          ),\and{R} (
          \in{SortIRelOp{}, R} (
            X1:SortIRelOp{},
            LblintEq{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIRelOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(343,10,343,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f55b22d5adde5873b3a8014abf9a3c03be2884698dbc5e4567c300d6e23b5c83")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,`intGe_u`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>=Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b10bb80c4bacf02849c80bd39f073c623c7a9750a6078e04c073781c44ac675f), org.kframework.attributes.Location(Location(363,10,363,58)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Var'Unds'0:SortIValType{}
          ),\and{R} (
          \in{SortIRelOp{}, R} (
            X1:SortIRelOp{},
            LblintGe'Unds'u{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIRelOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(363,10,363,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b10bb80c4bacf02849c80bd39f073c623c7a9750a6078e04c073781c44ac675f")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,`intGt_u`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7dc1d9cd8f0360006f2567456eeb802fd9c74274340b206b2f9a07d3d1c79f04), org.kframework.attributes.Location(Location(352,10,352,57)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Var'Unds'0:SortIValType{}
          ),\and{R} (
          \in{SortIRelOp{}, R} (
            X1:SortIRelOp{},
            LblintGt'Unds'u{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIRelOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(352,10,352,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7dc1d9cd8f0360006f2567456eeb802fd9c74274340b206b2f9a07d3d1c79f04")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,`intLe_u`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<=Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c500592578b65ff7dceea34cdaa0169bb142f9ca6bdd73e3247a095ccf12ba1f), org.kframework.attributes.Location(Location(362,10,362,58)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Var'Unds'0:SortIValType{}
          ),\and{R} (
          \in{SortIRelOp{}, R} (
            X1:SortIRelOp{},
            LblintLe'Unds'u{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIRelOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(362,10,362,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c500592578b65ff7dceea34cdaa0169bb142f9ca6bdd73e3247a095ccf12ba1f")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,`intLt_u`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0bc2e925568ffe5fe9c744c8a6482d36ed765e42710322d6b10e34bfd63608b1), org.kframework.attributes.Location(Location(351,10,351,57)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Var'Unds'0:SortIValType{}
          ),\and{R} (
          \in{SortIRelOp{}, R} (
            X1:SortIRelOp{},
            LblintLt'Unds'u{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIRelOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(351,10,351,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("0bc2e925568ffe5fe9c744c8a6482d36ed765e42710322d6b10e34bfd63608b1")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,intNe(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(i32(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_=/=Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(41a5a4754bc0daff2a10949ded7cac347383154354a28e220ce93202fdc8a926), org.kframework.attributes.Location(Location(344,10,344,62)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIValType{}, R} (
            X0:SortIValType{},
            Var'Unds'0:SortIValType{}
          ),\and{R} (
          \in{SortIRelOp{}, R} (
            X1:SortIRelOp{},
            LblintNe{}()
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(X0:SortIValType{},X1:SortIRelOp{},X2:SortInt{},X3:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(344,10,344,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("41a5a4754bc0daff2a10949ded7cac347383154354a28e220ce93202fdc8a926")]

// rule `_<<Int_`(X,#token("0","Int"))=>X requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d9cace14bde6a604c371ca45e9ea6900a124efc18d91742ed49ef2efd97baa33), org.kframework.attributes.Location(Location(1043,8,1043,22)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},\dv{SortInt{}}("0")),
        VarX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1043,8,1043,22)"), simplification{}(""), UNIQUE'Unds'ID{}("d9cace14bde6a604c371ca45e9ea6900a124efc18d91742ed49ef2efd97baa33")]

// rule `_<<Int_`(`_<<Int_`(X,N),M)=>`_<<Int_`(X,`_+Int_`(N,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ea5645de077215759bc27389bdc7e5fd50038120bac1997b27271b414d547b3a), org.kframework.attributes.Location(Location(180,10,180,51)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(180,10,180,51)"), simplification{}(""), UNIQUE'Unds'ID{}("ea5645de077215759bc27389bdc7e5fd50038120bac1997b27271b414d547b3a")]

// rule `_<<Int_`(#token("0","Int"),_0)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d402e237d3a3b4ebf2358cc61e77cbb3ec03989d9be016003b2916d1935a8e9), org.kframework.attributes.Location(Location(1044,8,1044,22)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("0"),Var'Unds'0:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1044,8,1044,22)"), simplification{}(""), UNIQUE'Unds'ID{}("2d402e237d3a3b4ebf2358cc61e77cbb3ec03989d9be016003b2916d1935a8e9")]

// rule `_<=Int_`(#token("0","Int"),`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(_0,_1,_2))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d70dc9bc7240333e3c0c6010a54aec7a63def36fd351e682855088e4813aafe0), org.kframework.attributes.Location(Location(280,10,280,44)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Var'Unds'0:SortBytes{},Var'Unds'1:SortInt{},Var'Unds'2:SortInt{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(280,10,280,44)"), simplification{}(""), UNIQUE'Unds'ID{}("d70dc9bc7240333e3c0c6010a54aec7a63def36fd351e682855088e4813aafe0")]

// rule `_<=Int_`(#token("0","Int"),`_+Int_`(VAL1,VAL2))=>#token("true","Bool") requires `_andBool_`(`_<=Int_`(#token("0","Int"),VAL1),`_<=Int_`(#token("0","Int"),VAL2)) ensures #token("true","Bool") [UNIQUE_ID(bf87e35bdc42a37eaf1488aa26ee28415b660422b8b7157bf97d9d6a078766f3), org.kframework.attributes.Location(Location(282,10,282,87)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarVAL1:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarVAL2:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),Lbl'UndsPlus'Int'Unds'{}(VarVAL1:SortInt{},VarVAL2:SortInt{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(282,10,282,87)"), simplification{}(""), UNIQUE'Unds'ID{}("bf87e35bdc42a37eaf1488aa26ee28415b660422b8b7157bf97d9d6a078766f3")]

// rule `_<=Int_`(#token("0","Int"),`_<<Int_`(VAL,SHIFT))=>#token("true","Bool") requires `_andBool_`(`_<=Int_`(#token("0","Int"),VAL),`_<=Int_`(#token("0","Int"),SHIFT)) ensures #token("true","Bool") [UNIQUE_ID(c51ee6033062281369bcc346105590be67939a08f978d9796c688d3ee0233b2b), org.kframework.attributes.Location(Location(281,10,281,88)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarVAL:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarSHIFT:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),Lbl'Unds-LT--LT-'Int'Unds'{}(VarVAL:SortInt{},VarSHIFT:SortInt{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,10,281,88)"), simplification{}(""), UNIQUE'Unds'ID{}("c51ee6033062281369bcc346105590be67939a08f978d9796c688d3ee0233b2b")]

// rule `_<=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80), org.kframework.attributes.Location(Location(1549,8,1549,63)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
        LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1549,8,1549,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80")]

// rule `_<Int_`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(_0,_1,WIDTH),MAX)=>#token("true","Bool") requires `_<=Int_`(`_^Int_`(#token("2","Int"),`_*Int_`(#token("8","Int"),WIDTH)),MAX) ensures #token("true","Bool") [UNIQUE_ID(3ef3090e7a8c9050c0f7f47ca105515d9ed69f3ded38df656a48c35b1145b3fa), org.kframework.attributes.Location(Location(284,10,284,102)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),Lbl'UndsStar'Int'Unds'{}(\dv{SortInt{}}("8"),VarWIDTH:SortInt{})),VarMAX:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Var'Unds'0:SortBytes{},Var'Unds'1:SortInt{},VarWIDTH:SortInt{}),VarMAX:SortInt{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,10,284,102)"), simplification{}(""), UNIQUE'Unds'ID{}("3ef3090e7a8c9050c0f7f47ca105515d9ed69f3ded38df656a48c35b1145b3fa")]

// rule `_<Int_`(`_+Int_`(VAL1,VAL2),MAX)=>#token("true","Bool") requires `_andBool_`(`_andBool_`(`_<Int_`(VAL1,MAX),`_<Int_`(VAL2,MAX)),`#distinctBits(_,_)_KWASM-LEMMAS_Bool_Int_Int`(VAL1,VAL2)) ensures #token("true","Bool") [UNIQUE_ID(69e33d5602dda33cf6fac778c8f85162df93f8c220900624b134c62831f68355), org.kframework.attributes.Location(Location(286,10,286,140)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarVAL1:SortInt{},VarMAX:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarVAL2:SortInt{},VarMAX:SortInt{})),Lbl'Hash'distinctBits'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'Int'Unds'Int{}(VarVAL1:SortInt{},VarVAL2:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarVAL1:SortInt{},VarVAL2:SortInt{}),VarMAX:SortInt{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(286,10,286,140)"), simplification{}(""), UNIQUE'Unds'ID{}("69e33d5602dda33cf6fac778c8f85162df93f8c220900624b134c62831f68355")]

// rule `_<Int_`(`_<<Int_`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(_0,_1,WIDTH),SHIFT),MAX)=>#token("true","Bool") requires `_<=Int_`(`_^Int_`(#token("2","Int"),`_+Int_`(`_*Int_`(#token("8","Int"),WIDTH),SHIFT)),MAX) ensures #token("true","Bool") [UNIQUE_ID(f1b2c20219158428c1383a2636a2cd12d1d57e692b37dea97a1011e7ad4006bc), org.kframework.attributes.Location(Location(285,10,285,115)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsStar'Int'Unds'{}(\dv{SortInt{}}("8"),VarWIDTH:SortInt{}),VarSHIFT:SortInt{})),VarMAX:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Var'Unds'0:SortBytes{},Var'Unds'1:SortInt{},VarWIDTH:SortInt{}),VarSHIFT:SortInt{}),VarMAX:SortInt{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(285,10,285,115)"), simplification{}(""), UNIQUE'Unds'ID{}("f1b2c20219158428c1383a2636a2cd12d1d57e692b37dea97a1011e7ad4006bc")]

// rule `_=/=Bool_`(B1,B2)=>`notBool_`(`_==Bool_`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f), org.kframework.attributes.Location(Location(868,8,868,57)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB1:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB2:SortBool{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(868,8,868,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f")]

// rule `_=/=Float__FLOAT_Bool_Float_Float`(F1,F2)=>`notBool_`(`_==Float__FLOAT_Bool_Float_Float`(F1,F2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7c87c7e74c316556cd4c45461f1ac4e722f5cade89974f4617cbb45396835a14), org.kframework.attributes.Location(Location(1311,8,1311,61)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFloat{}, R} (
            X0:SortFloat{},
            VarF1:SortFloat{}
          ),\and{R} (
          \in{SortFloat{}, R} (
            X1:SortFloat{},
            VarF2:SortFloat{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(X0:SortFloat{},X1:SortFloat{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1311,8,1311,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7c87c7e74c316556cd4c45461f1ac4e722f5cade89974f4617cbb45396835a14")]

// rule `_=/=Int_`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3), org.kframework.attributes.Location(Location(1116,8,1116,53)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(X0:SortInt{},X1:SortInt{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1116,8,1116,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3")]

// rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c), org.kframework.attributes.Location(Location(2074,8,2074,45)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarK2:SortK{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(X0:SortK{},X1:SortK{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2074,8,2074,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c")]

// rule `_=/=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_==String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7), org.kframework.attributes.Location(Location(1529,8,1529,65)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1529,8,1529,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7")]

// rule `_==Int_`(`#bool(_)_WASM-DATA_Int_Bool`(P),#token("0","Int"))=>`notBool_`(P) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d514429190f06f20179980b9512b0b94e5107f4e6da2f5ff439807ee95cd5a72), org.kframework.attributes.Location(Location(18,10,18,39)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(VarP:SortBool{}),\dv{SortInt{}}("0")),
        LblnotBool'Unds'{}(VarP:SortBool{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,10,18,39)"), simplification{}(""), UNIQUE'Unds'ID{}("d514429190f06f20179980b9512b0b94e5107f4e6da2f5ff439807ee95cd5a72")]

// rule `_==K_`(inj{Int,KItem}(I1),inj{Int,KItem}(I2))=>`_==Int_`(I1,I2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8bf41fa14e6cef57ebcd77d165461911b0f45874319eafd20a311466ff77ac6f), org.kframework.attributes.Location(Location(1090,8,1090,40)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarI1:SortInt{}),dotk{}())
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}())
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'K'Unds'{}(X0:SortK{},X1:SortK{}),
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1090,8,1090,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8bf41fa14e6cef57ebcd77d165461911b0f45874319eafd20a311466ff77ac6f")]

// rule `_==K_`(inj{Bool,KItem}(K1),inj{Bool,KItem}(K2))=>`_==Bool_`(K1,K2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(51ca403f7048793055685a9e3a051e86807f14b2d4901ae81d0b4eedff7b1d77), org.kframework.attributes.Location(Location(2056,8,2056,43)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarK1:SortBool{}),dotk{}())
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarK2:SortBool{}),dotk{}())
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'K'Unds'{}(X0:SortK{},X1:SortK{}),
        Lbl'UndsEqlsEqls'Bool'Unds'{}(VarK1:SortBool{},VarK2:SortBool{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2056,8,2056,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("51ca403f7048793055685a9e3a051e86807f14b2d4901ae81d0b4eedff7b1d77")]

// rule `_==K_`(inj{String,KItem}(S1),inj{String,KItem}(S2))=>`_==String__STRING-COMMON_Bool_String_String`(S1,S2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(512288fc69c52cbd01cf38881d419b391f66a3d428beddb746e0012a9f880325), org.kframework.attributes.Location(Location(1591,8,1591,49)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarS1:SortString{}),dotk{}())
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarS2:SortString{}),dotk{}())
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'K'Unds'{}(X0:SortK{},X1:SortK{}),
        Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1591,8,1591,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("512288fc69c52cbd01cf38881d419b391f66a3d428beddb746e0012a9f880325")]

// rule `_>=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17), org.kframework.attributes.Location(Location(1551,8,1551,63)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
        LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1551,8,1551,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17")]

// rule `_>>Int_`(X,N)=>#token("0","Int") requires `_<Int_`(X,`_^Int_`(#token("2","Int"),N)) ensures #token("true","Bool") [UNIQUE_ID(371d69d89580232dff00b9bc706f51df21e04c4a69cb45a61a93e40d3486e325), org.kframework.attributes.Location(Location(176,10,176,61)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(VarX:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(176,10,176,61)"), simplification{}(""), UNIQUE'Unds'ID{}("371d69d89580232dff00b9bc706f51df21e04c4a69cb45a61a93e40d3486e325")]

// rule `_>>Int_`(X,#token("0","Int"))=>X requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(572bf49a8ddd18981c88d4573e09bebfa4ca9f0d3d1caaea04d9fa30b5d20c39), org.kframework.attributes.Location(Location(1045,8,1045,22)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},\dv{SortInt{}}("0")),
        VarX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1045,8,1045,22)"), simplification{}(""), UNIQUE'Unds'ID{}("572bf49a8ddd18981c88d4573e09bebfa4ca9f0d3d1caaea04d9fa30b5d20c39")]

// rule `_>>Int_`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,ADDR,WIDTH),SHIFT)=>`_>>Int_`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,`_+Int_`(ADDR,#token("1","Int")),`_-Int_`(WIDTH,#token("1","Int"))),`_-Int_`(SHIFT,#token("8","Int"))) requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),ADDR),`_<Int_`(#token("0","Int"),WIDTH)),`_<=Int_`(#token("8","Int"),SHIFT)) ensures #token("true","Bool") [UNIQUE_ID(97663516ba1be76274480851e7c7bccef057580cf8b9b1fb1a6bebfc8d88c9fa), org.kframework.attributes.Location(Location(304,10,307,29)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarADDR:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{})),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("8"),VarSHIFT:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},VarADDR:SortInt{},VarWIDTH:SortInt{}),VarSHIFT:SortInt{}),
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("1")),Lbl'Unds'-Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("1"))),Lbl'Unds'-Int'Unds'{}(VarSHIFT:SortInt{},\dv{SortInt{}}("8")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(304,10,307,29)"), simplification{}(""), UNIQUE'Unds'ID{}("97663516ba1be76274480851e7c7bccef057580cf8b9b1fb1a6bebfc8d88c9fa")]

// rule `_>>Int_`(`_+Int_`(Y,`_<<Int_`(X,M)),N)=>`_+Int_`(`_<<Int_`(X,`_-Int_`(M,N)),`_>>Int_`(Y,N)) requires `_>=Int_`(M,N) ensures #token("true","Bool") [UNIQUE_ID(187440eaa3c22ca40f1fd0dc1fec4af00bbbc6611ac5eb9c4e72afe5dd19d53d), org.kframework.attributes.Location(Location(190,10,190,98)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarM:SortInt{},VarN:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarY:SortInt{},Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarM:SortInt{})),VarN:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},Lbl'Unds'-Int'Unds'{}(VarM:SortInt{},VarN:SortInt{})),Lbl'Unds-GT--GT-'Int'Unds'{}(VarY:SortInt{},VarN:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,10,190,98)"), simplification{}(""), UNIQUE'Unds'ID{}("187440eaa3c22ca40f1fd0dc1fec4af00bbbc6611ac5eb9c4e72afe5dd19d53d")]

// rule `_>>Int_`(`_+Int_`(`_<<Int_`(X,M),Y),N)=>`_+Int_`(`_<<Int_`(X,`_-Int_`(M,N)),`_>>Int_`(Y,N)) requires `_>=Int_`(M,N) ensures #token("true","Bool") [UNIQUE_ID(4f33d536634cab62ce7dcfcfe1c71a857038222fbf8daf3297b5b20b557a4a13), org.kframework.attributes.Location(Location(189,10,189,98)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarM:SortInt{},VarN:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarM:SortInt{}),VarY:SortInt{}),VarN:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},Lbl'Unds'-Int'Unds'{}(VarM:SortInt{},VarN:SortInt{})),Lbl'Unds-GT--GT-'Int'Unds'{}(VarY:SortInt{},VarN:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(189,10,189,98)"), simplification{}(""), UNIQUE'Unds'ID{}("4f33d536634cab62ce7dcfcfe1c71a857038222fbf8daf3297b5b20b557a4a13")]

// rule `_>>Int_`(`_<<Int_`(X,N),M)=>`_<<Int_`(X,`_-Int_`(N,M)) requires `_>=Int_`(N,M) ensures #token("true","Bool") [UNIQUE_ID(e9eaafd699dbc93a406ee303b802789d8351cea45a9f9fe83772df9c853eb84b), org.kframework.attributes.Location(Location(184,10,184,81)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(184,10,184,81)"), simplification{}(""), UNIQUE'Unds'ID{}("e9eaafd699dbc93a406ee303b802789d8351cea45a9f9fe83772df9c853eb84b")]

// rule `_>>Int_`(`_<<Int_`(X,N),M)=>`_>>Int_`(X,`_-Int_`(M,N)) requires `notBool_`(`_>=Int_`(N,M)) ensures #token("true","Bool") [UNIQUE_ID(021d6e6901c2858e5bcf31629392b571c85ee15ff259f4bfc0c6bf31b1680c71), org.kframework.attributes.Location(Location(185,10,185,82)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},Lbl'Unds'-Int'Unds'{}(VarM:SortInt{},VarN:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,10,185,82)"), simplification{}(""), UNIQUE'Unds'ID{}("021d6e6901c2858e5bcf31629392b571c85ee15ff259f4bfc0c6bf31b1680c71")]

// rule `_>>Int_`(`_>>Int_`(X,N),M)=>`_>>Int_`(X,`_+Int_`(N,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(66d16a528b6d21c25feff1dd7384e0d389acbfca14a50f732b8041b9a388530e), org.kframework.attributes.Location(Location(179,10,179,51)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,10,179,51)"), simplification{}(""), UNIQUE'Unds'ID{}("66d16a528b6d21c25feff1dd7384e0d389acbfca14a50f732b8041b9a388530e")]

// rule `_>>Int_`(`_modInt_`(X,POW),N)=>`_modInt_`(`_>>Int_`(X,N),`_/Int_`(POW,`_^Int_`(#token("2","Int"),N))) requires `_andBool_`(`_andBool_`(`_>=Int_`(N,#token("0","Int")),`_>Int_`(POW,#token("0","Int"))),`_==Int_`(`_modInt_`(POW,`_^Int_`(#token("2","Int"),N)),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(6c169929cf58dac8aa5756055d65b30d2d86a2b552ed93d03f7987fad074049f), org.kframework.attributes.Location(Location(212,10,215,45)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarPOW:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarPOW:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{})),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarPOW:SortInt{}),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),Lbl'UndsSlsh'Int'Unds'{}(VarPOW:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(212,10,215,45)"), simplification{}(""), UNIQUE'Unds'ID{}("6c169929cf58dac8aa5756055d65b30d2d86a2b552ed93d03f7987fad074049f")]

// rule `_>>Int_`(#token("0","Int"),_0)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1cf22edfe70c5e6f01624499522c9b110616a96e9f7894de7508ebb4a51091b9), org.kframework.attributes.Location(Location(1046,8,1046,22)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(\dv{SortInt{}}("0"),Var'Unds'0:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1046,8,1046,22)"), simplification{}(""), UNIQUE'Unds'ID{}("1cf22edfe70c5e6f01624499522c9b110616a96e9f7894de7508ebb4a51091b9")]

// rule `_>String__STRING-COMMON_Bool_String_String`(S1,S2)=>`_<String__STRING-COMMON_Bool_String_String`(S2,S1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0), org.kframework.attributes.Location(Location(1550,8,1550,52)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
        Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1550,8,1550,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0")]

// rule `_andBool_`(#token("false","Bool") #as _1,_0)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497), org.kframework.attributes.Location(Location(841,8,841,37)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'0:SortBool{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        Var'Unds'1:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(841,8,841,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497")]

// rule `_andBool_`(B,#token("true","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98), org.kframework.attributes.Location(Location(840,8,840,37)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(840,8,840,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98")]

// rule `_andBool_`(_0,#token("false","Bool") #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca), org.kframework.attributes.Location(Location(842,8,842,37)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'1:SortBool{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        Var'Unds'1:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(842,8,842,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca")]

// rule `_andBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f), org.kframework.attributes.Location(Location(839,8,839,37)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(839,8,839,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f")]

// rule `_andThenBool_`(#token("false","Bool") #as _1,_0)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d), org.kframework.attributes.Location(Location(846,8,846,36)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'0:SortBool{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        Var'Unds'1:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(846,8,846,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d")]

// rule `_andThenBool_`(K,#token("true","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c), org.kframework.attributes.Location(Location(845,8,845,37)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        VarK:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(845,8,845,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c")]

// rule `_andThenBool_`(_0,#token("false","Bool") #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2), org.kframework.attributes.Location(Location(847,8,847,36)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'1:SortBool{})
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        Var'Unds'1:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(847,8,847,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2")]

// rule `_andThenBool_`(#token("true","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689), org.kframework.attributes.Location(Location(844,8,844,37)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        VarK:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(844,8,844,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689")]

// rule `_appendDefn__WASM-TEXT_Defns_Defns_Defn`(inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)) #as _0,D')=>`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(D',_0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(52c25d3dc177126f9669a5b0789fdeebe62bfc4f51a8e77ae7202a4e11a1aa1a), org.kframework.attributes.Location(Location(406,10,406,43)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            \and{SortDefns{}}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'0:SortDefns{})
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            VarD'Apos':SortDefn{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Unds'appendDefn'UndsUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Defn{}(X0:SortDefns{},X1:SortDefn{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(VarD'Apos':SortDefn{},Var'Unds'0:SortDefns{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(406,10,406,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("52c25d3dc177126f9669a5b0789fdeebe62bfc4f51a8e77ae7202a4e11a1aa1a")]

// rule `_appendDefn__WASM-TEXT_Defns_Defns_Defn`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(D,DS),D')=>`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(D,`_appendDefn__WASM-TEXT_Defns_Defns_Defn`(DS,D')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b0641b7bc08b50469adccb1ee5deb85c16a9684422d8515761e0f74aec689220), org.kframework.attributes.Location(Location(405,10,405,54)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(VarD:SortDefn{},VarDS:SortDefns{})
          ),\and{R} (
          \in{SortDefn{}, R} (
            X1:SortDefn{},
            VarD'Apos':SortDefn{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Unds'appendDefn'UndsUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Defn{}(X0:SortDefns{},X1:SortDefn{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(VarD:SortDefn{},Lbl'Unds'appendDefn'UndsUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Defn{}(VarDS:SortDefns{},VarD'Apos':SortDefn{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(405,10,405,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b0641b7bc08b50469adccb1ee5deb85c16a9684422d8515761e0f74aec689220")]

// rule `_appendInstrs__WASM-TEXT_Instrs_Instrs_Instrs`(IS,IS')=>`#appendInstrs(_,_)_WASM-TEXT_Instrs_Instrs_Instrs`(`#reverseInstrs(_,_)_WASM-TEXT_Instrs_Instrs_Instrs`(IS,inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList))),IS') requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(336964a92ae099445b31810ddf01d65af2cebf28e2a7c4de0ec791c9e9654906), org.kframework.attributes.Location(Location(569,10,569,80)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            VarIS:SortInstrs{}
          ),\and{R} (
          \in{SortInstrs{}, R} (
            X1:SortInstrs{},
            VarIS'Apos':SortInstrs{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lbl'Unds'appendInstrs'UndsUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortInstrs{},X1:SortInstrs{}),
        Lbl'Hash'appendInstrs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Lbl'Hash'reverseInstrs'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(VarIS:SortInstrs{},inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())),VarIS'Apos':SortInstrs{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(569,10,569,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("336964a92ae099445b31810ddf01d65af2cebf28e2a7c4de0ec791c9e9654906")]

// rule `_divInt_`(I1,I2)=>`_/Int_`(`_-Int_`(I1,`_modInt_`(I1,I2)),I2) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4), org.kframework.attributes.Location(Location(1105,8,1106,23)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'divInt'Unds'{}(X0:SortInt{},X1:SortInt{}),
        Lbl'UndsSlsh'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarI2:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1105,8,1106,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4")]

// rule `_dividesInt__INT-COMMON_Bool_Int_Int`(I1,I2)=>`_==Int_`(`_%Int_`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5), org.kframework.attributes.Location(Location(1117,8,1117,58)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
        Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},VarI1:SortInt{}),\dv{SortInt{}}("0"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1117,8,1117,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5")]

// rule `_impliesBool_`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96), org.kframework.attributes.Location(Location(866,8,866,45)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        LblnotBool'Unds'{}(VarB:SortBool{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(866,8,866,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96")]

// rule `_impliesBool_`(_0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712), org.kframework.attributes.Location(Location(865,8,865,39)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(865,8,865,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712")]

// rule `_impliesBool_`(#token("false","Bool"),_0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e), org.kframework.attributes.Location(Location(864,8,864,40)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'0:SortBool{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(864,8,864,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e")]

// rule `_impliesBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d), org.kframework.attributes.Location(Location(863,8,863,36)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(863,8,863,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d")]

// rule `_modInt_`(I1,I2)=>`_%Int_`(`_+Int_`(`_%Int_`(I1,`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6), concrete, org.kframework.attributes.Location(Location(1108,5,1111,23)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsPerc'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1108,5,1111,23)"), simplification{}(""), UNIQUE'Unds'ID{}("adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6")]

// rule `_modInt_`(X,N)=>X requires `_andBool_`(`_<=Int_`(#token("0","Int"),X),`_<Int_`(X,N)) ensures #token("true","Bool") [UNIQUE_ID(3a397a001af2fcd0eaf3c29fa026cf37c07fb9b8d6245bae8906780b5e74f503), org.kframework.attributes.Location(Location(1039,8,1039,59)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarX:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarN:SortInt{}),
        VarX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1039,8,1039,59)"), simplification{}(""), UNIQUE'Unds'ID{}("3a397a001af2fcd0eaf3c29fa026cf37c07fb9b8d6245bae8906780b5e74f503")]

// rule `_modInt_`(X,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))=>`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,X) requires `#inSignedRange(_,_)_KWASM-LEMMAS_Bool_IValType_Int`(ITYPE,X) ensures #token("true","Bool") [UNIQUE_ID(9e2dd0e7c48b1ca34f44bbd9f294f2c5b11789a29e51acc0cc41979c24191ac6), org.kframework.attributes.Location(Location(252,10,253,41)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Hash'inSignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarX:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})),
        Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarX:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(252,10,253,41)"), simplification{}(""), UNIQUE'Unds'ID{}("9e2dd0e7c48b1ca34f44bbd9f294f2c5b11789a29e51acc0cc41979c24191ac6")]

// rule `_modInt_`(_X,#token("1","Int"))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8783ea14c81ffed252b4e64dc47700fdbb020ab706b96979ff9e0949fab514dd), org.kframework.attributes.Location(Location(48,10,48,26)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Var'Unds'X:SortInt{},\dv{SortInt{}}("1")),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(48,10,48,26)"), simplification{}(""), UNIQUE'Unds'ID{}("8783ea14c81ffed252b4e64dc47700fdbb020ab706b96979ff9e0949fab514dd")]

// rule `_modInt_`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,ADDR,WIDTH),MAX)=>`_modInt_`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,ADDR,`_-Int_`(WIDTH,#token("1","Int"))),MAX) requires `_andBool_`(`_andBool_`(`_<Int_`(#token("0","Int"),MAX),`_<Int_`(#token("0","Int"),WIDTH)),`_==Int_`(`_modInt_`(`_^Int_`(#token("2","Int"),`_*Int_`(#token("8","Int"),`_-Int_`(WIDTH,#token("1","Int")))),MAX),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(d32a9beea528460689a921983c186deaadd1d521d4dc37b53ba0a0e10c0c5031), org.kframework.attributes.Location(Location(310,10,312,65)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarMAX:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(\dv{SortInt{}}("0"),VarWIDTH:SortInt{})),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),Lbl'UndsStar'Int'Unds'{}(\dv{SortInt{}}("8"),Lbl'Unds'-Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("1")))),VarMAX:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},VarADDR:SortInt{},VarWIDTH:SortInt{}),VarMAX:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},VarADDR:SortInt{},Lbl'Unds'-Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("1"))),VarMAX:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(310,10,312,65)"), simplification{}(""), UNIQUE'Unds'ID{}("d32a9beea528460689a921983c186deaadd1d521d4dc37b53ba0a0e10c0c5031")]

// rule `_modInt_`(`_+Int_`(X,`_<<Int_`(_Y,N)),POW)=>`_modInt_`(X,POW) requires `_andBool_`(`_andBool_`(`_>=Int_`(N,#token("0","Int")),`_>Int_`(POW,#token("0","Int"))),`_==Int_`(`_modInt_`(`_^Int_`(#token("2","Int"),N),POW),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(dba96320df01ad0f1c486b71c323b192618ce52fb2c75e32c1ef72134fb11f7f), org.kframework.attributes.Location(Location(231,10,234,45)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarPOW:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{}),VarPOW:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},Lbl'Unds-LT--LT-'Int'Unds'{}(Var'Unds'Y:SortInt{},VarN:SortInt{})),VarPOW:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarPOW:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(231,10,234,45)"), simplification{}(""), UNIQUE'Unds'ID{}("dba96320df01ad0f1c486b71c323b192618ce52fb2c75e32c1ef72134fb11f7f")]

// rule `_modInt_`(`_+Int_`(X,`_modInt_`(Y,M)),N)=>`_modInt_`(`_+Int_`(X,Y),N) requires `_andBool_`(`_andBool_`(`_>Int_`(M,#token("0","Int")),`_>Int_`(N,#token("0","Int"))),`_==Int_`(`_modInt_`(M,N),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(66853769494662ad9ac7997e37f44271055e0558640cccbee7150f1e242ee3a4), org.kframework.attributes.Location(Location(135,10,138,34)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarM:SortInt{},VarN:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},Lbl'Unds'modInt'Unds'{}(VarY:SortInt{},VarM:SortInt{})),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},VarY:SortInt{}),VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(135,10,138,34)"), simplification{}(""), UNIQUE'Unds'ID{}("66853769494662ad9ac7997e37f44271055e0558640cccbee7150f1e242ee3a4")]

// rule `_modInt_`(`_+Int_`(Y,`_*Int_`(_X,M)),N)=>`_modInt_`(Y,N) requires `_andBool_`(`_andBool_`(`_>Int_`(M,#token("0","Int")),`_>Int_`(N,#token("0","Int"))),`_==Int_`(`_modInt_`(M,N),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(7f90672b9160a12a7a5b8a47efa056b43e1c88c5e416313061eea640fbd4e975), org.kframework.attributes.Location(Location(104,10,107,34)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarM:SortInt{},VarN:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarY:SortInt{},Lbl'UndsStar'Int'Unds'{}(Var'Unds'X:SortInt{},VarM:SortInt{})),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarY:SortInt{},VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(104,10,107,34)"), simplification{}(""), UNIQUE'Unds'ID{}("7f90672b9160a12a7a5b8a47efa056b43e1c88c5e416313061eea640fbd4e975")]

// rule `_modInt_`(`_+Int_`(`_*Int_`(_X,M),Y),N)=>`_modInt_`(Y,N) requires `_andBool_`(`_andBool_`(`_>Int_`(M,#token("0","Int")),`_>Int_`(N,#token("0","Int"))),`_==Int_`(`_modInt_`(M,N),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(57f2735a8c9b79594a692a4207c31d018ccbb3e686c7065d7b0215195c77d953), org.kframework.attributes.Location(Location(98,10,101,34)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarM:SortInt{},VarN:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsStar'Int'Unds'{}(Var'Unds'X:SortInt{},VarM:SortInt{}),VarY:SortInt{}),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarY:SortInt{},VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(98,10,101,34)"), simplification{}(""), UNIQUE'Unds'ID{}("57f2735a8c9b79594a692a4207c31d018ccbb3e686c7065d7b0215195c77d953")]

// rule `_modInt_`(`_+Int_`(`_<<Int_`(_Y,N),X),POW)=>`_modInt_`(X,POW) requires `_andBool_`(`_andBool_`(`_>=Int_`(N,#token("0","Int")),`_>Int_`(POW,#token("0","Int"))),`_==Int_`(`_modInt_`(`_^Int_`(#token("2","Int"),N),POW),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(292b8e568af7181a06b7995c29c9e09370998a1461c04e5b877f5005e3e66506), org.kframework.attributes.Location(Location(237,10,240,45)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarPOW:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{}),VarPOW:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(Var'Unds'Y:SortInt{},VarN:SortInt{}),VarX:SortInt{}),VarPOW:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarPOW:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(237,10,240,45)"), simplification{}(""), UNIQUE'Unds'ID{}("292b8e568af7181a06b7995c29c9e09370998a1461c04e5b877f5005e3e66506")]

// rule `_modInt_`(`_+Int_`(`_modInt_`(X,M),Y),N)=>`_modInt_`(`_+Int_`(X,Y),N) requires `_andBool_`(`_andBool_`(`_>Int_`(M,#token("0","Int")),`_>Int_`(N,#token("0","Int"))),`_==Int_`(`_modInt_`(M,N),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(c2e5401ab6f9727b1c704b391f8a4559b53baa12ff89cc86573390d9f55604e5), org.kframework.attributes.Location(Location(129,10,132,34)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarM:SortInt{},VarN:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarM:SortInt{}),VarY:SortInt{}),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},VarY:SortInt{}),VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(129,10,132,34)"), simplification{}(""), UNIQUE'Unds'ID{}("c2e5401ab6f9727b1c704b391f8a4559b53baa12ff89cc86573390d9f55604e5")]

// rule `_modInt_`(`_<<Int_`(X,N),POW)=>`_<<Int_`(`_modInt_`(X,`_/Int_`(POW,`_^Int_`(#token("2","Int"),N))),N) requires `_andBool_`(`_andBool_`(`_>=Int_`(N,#token("0","Int")),`_>Int_`(POW,#token("0","Int"))),`_==Int_`(`_modInt_`(POW,`_^Int_`(#token("2","Int"),N)),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(90668a7e426a05f766e9fe00c1c049933a8655cf7f5380d535204462ba5f0b08), org.kframework.attributes.Location(Location(218,10,221,45)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarPOW:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarPOW:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{})),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarPOW:SortInt{}),
        Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},Lbl'UndsSlsh'Int'Unds'{}(VarPOW:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{}))),VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(218,10,221,45)"), simplification{}(""), UNIQUE'Unds'ID{}("90668a7e426a05f766e9fe00c1c049933a8655cf7f5380d535204462ba5f0b08")]

// rule `_modInt_`(`_<<Int_`(_X,N),M)=>#token("0","Int") requires `_==Int_`(`_modInt_`(`_^Int_`(#token("2","Int"),N),M),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(24a7740fb7c5ea6beb2a049a1eabd875fc80bc5000c77d5a5147ad21619317b8), org.kframework.attributes.Location(Location(168,10,169,43)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{}),VarM:SortInt{}),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(Var'Unds'X:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,10,169,43)"), simplification{}(""), UNIQUE'Unds'ID{}("24a7740fb7c5ea6beb2a049a1eabd875fc80bc5000c77d5a5147ad21619317b8")]

// rule `_modInt_`(`_<<Int_`(_X,N),M)=>#token("0","Int") requires `_<Int_`(M,`_^Int_`(#token("2","Int"),N)) ensures #token("true","Bool") [UNIQUE_ID(587c10aa7693b7c15febd47a7cb952f48ac1bf0f27910cd6d55f10b6eb0de07c), org.kframework.attributes.Location(Location(177,10,177,61)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(VarM:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(Var'Unds'X:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(177,10,177,61)"), simplification{}(""), UNIQUE'Unds'ID{}("587c10aa7693b7c15febd47a7cb952f48ac1bf0f27910cd6d55f10b6eb0de07c")]

// rule `_modInt_`(`_modInt_`(X,M),N)=>`_modInt_`(X,M) requires `_andBool_`(`_>Int_`(M,#token("0","Int")),`_<=Int_`(M,N)) ensures #token("true","Bool") [UNIQUE_ID(65e774073c80d26c43db7700e24cdff3dbf4428b0f8b9cc189bb170dcf0e9b01), org.kframework.attributes.Location(Location(55,10,57,25)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarM:SortInt{},VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarM:SortInt{}),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarM:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(55,10,57,25)"), simplification{}(""), UNIQUE'Unds'ID{}("65e774073c80d26c43db7700e24cdff3dbf4428b0f8b9cc189bb170dcf0e9b01")]

// rule `_modInt_`(`_modInt_`(X,M),N)=>`_modInt_`(X,N) requires `_andBool_`(`_andBool_`(`_>Int_`(M,#token("0","Int")),`_>Int_`(N,#token("0","Int"))),`_==Int_`(`_modInt_`(M,N),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(954ff401dc83a70760be2a54cfa53262059f898ffcc88c478eceaa7704cfa3d9), org.kframework.attributes.Location(Location(72,10,75,34)), org.kframework.attributes.Source(Source(wasm-semantics/kwasm-lemmas.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarM:SortInt{},VarN:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarM:SortInt{}),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(72,10,75,34)"), simplification{}(""), UNIQUE'Unds'ID{}("954ff401dc83a70760be2a54cfa53262059f898ffcc88c478eceaa7704cfa3d9")]

// rule `_orBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26), org.kframework.attributes.Location(Location(856,8,856,32)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(856,8,856,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26")]

// rule `_orBool_`(_0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3), org.kframework.attributes.Location(Location(854,8,854,34)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(854,8,854,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3")]

// rule `_orBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b), org.kframework.attributes.Location(Location(855,8,855,32)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(855,8,855,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b")]

// rule `_orBool_`(#token("true","Bool"),_0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2), org.kframework.attributes.Location(Location(853,8,853,34)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'0:SortBool{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(853,8,853,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2")]

// rule `_orElseBool_`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480), org.kframework.attributes.Location(Location(861,8,861,37)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        VarK:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(861,8,861,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480")]

// rule `_orElseBool_`(_0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14), org.kframework.attributes.Location(Location(859,8,859,33)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(859,8,859,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14")]

// rule `_orElseBool_`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf), org.kframework.attributes.Location(Location(860,8,860,37)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        VarK:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(860,8,860,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf")]

// rule `_orElseBool_`(#token("true","Bool"),_0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6), org.kframework.attributes.Location(Location(858,8,858,33)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'0:SortBool{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(858,8,858,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6")]

// rule `_up/Int__WASM_Int_Int_Int`(I1,I2)=>`_/Int_`(`_+Int_`(I1,`_-Int_`(I2,#token("1","Int"))),I2) requires `_>Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(828cf8002b1684fb793149bba520dbbcfcd2822d7735ef1d9a542a118a4e141a), org.kframework.attributes.Location(Location(1197,10,1197,74)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'up'Slsh'Int'UndsUnds'WASM'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
        Lbl'UndsSlsh'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'-Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("1"))),VarI2:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1197,10,1197,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("828cf8002b1684fb793149bba520dbbcfcd2822d7735ef1d9a542a118a4e141a")]

// rule `_xorBool_`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f), org.kframework.attributes.Location(Location(851,8,851,38)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(851,8,851,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f")]

// rule `_xorBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75), org.kframework.attributes.Location(Location(850,8,850,38)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(850,8,850,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75")]

// rule `_xorBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf), org.kframework.attributes.Location(Location(849,8,849,38)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(849,8,849,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf")]

// rule `_|Set__SET_Set_Set_Set`(S1,S2)=>`_Set_`(S1,`Set:difference`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62), org.kframework.attributes.Location(Location(555,8,555,45)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortSet{}, R} (
            X0:SortSet{},
            VarS1:SortSet{}
          ),\and{R} (
          \in{SortSet{}, R} (
            X1:SortSet{},
            VarS2:SortSet{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(X0:SortSet{},X1:SortSet{}),
        Lbl'Unds'Set'Unds'{}(VarS1:SortSet{},LblSet'Coln'difference{}(VarS2:SortSet{},VarS1:SortSet{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(555,8,555,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62")]

// rule `asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS)=>aFuncType(`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`param_WASM-COMMON-SYNTAX_TypeKeyWord`(.KList),TDECLS),`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`result_WASM-COMMON-SYNTAX_TypeKeyWord`(.KList),TDECLS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f88f3843de024f296546cf1412fe9839a80d9d42167b29f156a57f38f7cc54b6), org.kframework.attributes.Location(Location(646,10,646,121)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTypeDecls{}, R} (
            X0:SortTypeDecls{},
            VarTDECLS:SortTypeDecls{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncType{},R} (
        LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(X0:SortTypeDecls{}),
        LblaFuncType{}(LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblparam'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}(),VarTDECLS:SortTypeDecls{}),LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblresult'Unds'WASM-COMMON-SYNTAX'Unds'TypeKeyWord{}(),VarTDECLS:SortTypeDecls{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(646,10,646,121)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f88f3843de024f296546cf1412fe9839a80d9d42167b29f156a57f38f7cc54b6")]

// rule `asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(TYPEIDS,TYPES,`(type_)_WASM-COMMON-SYNTAX_TypeUse_Index`(TFIDX))=>`project:FuncType`(`Map:lookup`(TYPES,inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(TYPEIDS,TFIDX)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0c682adc498693e32cc9bf9518217fd35f646507180b9cebbde39e69bdc1086a), org.kframework.attributes.Location(Location(648,10,648,113)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarTYPEIDS:SortMap{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X1:SortMap{},
            VarTYPES:SortMap{}
          ),\and{R} (
          \in{SortTypeUse{}, R} (
            X2:SortTypeUse{},
            Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(VarTFIDX:SortIndex{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortFuncType{},R} (
        LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(X0:SortMap{},X1:SortMap{},X2:SortTypeUse{}),
        Lblproject'Coln'FuncType{}(kseq{}(LblMap'Coln'lookup{}(VarTYPES:SortMap{},inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarTYPEIDS:SortMap{},VarTFIDX:SortIndex{}))),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(648,10,648,113)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("0c682adc498693e32cc9bf9518217fd35f646507180b9cebbde39e69bdc1086a")]

// rule `asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(TYPEIDS,TYPES,`(type_)__WASM-COMMON-SYNTAX_TypeUse_Index_TypeDecls`(TFIDX,TDECLS))=>`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS) requires `_==K_`(`Map:lookup`(TYPES,inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(TYPEIDS,TFIDX))),inj{FuncType,KItem}(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS))) ensures #token("true","Bool") [UNIQUE_ID(e89233a167745acde006727dedffad1130043f58c44fb18c84935debf50770f8), org.kframework.attributes.Location(Location(649,10,650,76)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(LblMap'Coln'lookup{}(VarTYPES:SortMap{},inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarTYPEIDS:SortMap{},VarTFIDX:SortIndex{}))),dotk{}()),kseq{}(inj{SortFuncType{}, SortKItem{}}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{})),dotk{}())),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarTYPEIDS:SortMap{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X1:SortMap{},
            VarTYPES:SortMap{}
          ),\and{R} (
          \in{SortTypeUse{}, R} (
            X2:SortTypeUse{},
            Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(VarTFIDX:SortIndex{},VarTDECLS:SortTypeDecls{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortFuncType{},R} (
        LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(X0:SortMap{},X1:SortMap{},X2:SortTypeUse{}),
        LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(649,10,650,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("e89233a167745acde006727dedffad1130043f58c44fb18c84935debf50770f8")]

// rule `asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(_0,_1,inj{TypeDecls,TypeUse}(TDECLS))=>`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8fb9e77c3566501599df8e1116e8310a7463e11a83ce82e88882b022043c255e), org.kframework.attributes.Location(Location(647,10,647,82)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            Var'Unds'0:SortMap{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X1:SortMap{},
            Var'Unds'1:SortMap{}
          ),\and{R} (
          \in{SortTypeUse{}, R} (
            X2:SortTypeUse{},
            inj{SortTypeDecls{}, SortTypeUse{}}(VarTDECLS:SortTypeDecls{})
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortFuncType{},R} (
        LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(X0:SortMap{},X1:SortMap{},X2:SortTypeUse{}),
        LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(647,10,647,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8fb9e77c3566501599df8e1116e8310a7463e11a83ce82e88882b022043c255e")]

// rule `asGMut(_)_WASM-TEXT_GlobalType_TextFormatGlobalType`(`(mut_)_WASM-TEXT-COMMON-SYNTAX_TextFormatGlobalType_ValType`(T))=>aGlobalType(mutVar(.KList),T) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(94f5b04949407d65b9a2ec62b4bcc7ad5779f77ff68fa2ffcbeed67a93af2c5a), org.kframework.attributes.Location(Location(521,10,521,48)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTextFormatGlobalType{}, R} (
            X0:SortTextFormatGlobalType{},
            Lbl'LPar'mut'UndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TextFormatGlobalType'Unds'ValType{}(VarT:SortValType{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobalType{},R} (
        LblasGMut'LParUndsRParUnds'WASM-TEXT'Unds'GlobalType'Unds'TextFormatGlobalType{}(X0:SortTextFormatGlobalType{}),
        LblaGlobalType{}(LblmutVar{}(),VarT:SortValType{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(521,10,521,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("94f5b04949407d65b9a2ec62b4bcc7ad5779f77ff68fa2ffcbeed67a93af2c5a")]

// rule `asGMut(_)_WASM-TEXT_GlobalType_TextFormatGlobalType`(inj{ValType,TextFormatGlobalType}(T))=>aGlobalType(mutConst(.KList),T) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7c585a40fbe0519c6a954a69ebcc75fbb7370d3ec3b23469597d789d5ead1cd5), org.kframework.attributes.Location(Location(522,10,522,48)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTextFormatGlobalType{}, R} (
            X0:SortTextFormatGlobalType{},
            inj{SortValType{}, SortTextFormatGlobalType{}}(VarT:SortValType{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobalType{},R} (
        LblasGMut'LParUndsRParUnds'WASM-TEXT'Unds'GlobalType'Unds'TextFormatGlobalType{}(X0:SortTextFormatGlobalType{}),
        LblaGlobalType{}(LblmutConst{}(),VarT:SortValType{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(522,10,522,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7c585a40fbe0519c6a954a69ebcc75fbb7370d3ec3b23469597d789d5ead1cd5")]

// rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_modInt_`(`_>>Int_`(I,IDX),`_<<Int_`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119), org.kframework.attributes.Location(Location(1101,8,1101,85)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInt{},R} (
        LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI:SortInt{},VarIDX:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1101,8,1101,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToCount)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToCount)) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e), org.kframework.attributes.Location(Location(1560,8,1561,60)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToCount:SortString{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToCount:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToCount:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1560,8,1561,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>#token("0","Int") requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84), org.kframework.attributes.Location(Location(1558,8,1559,59)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToCount:SortString{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1558,8,1559,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84")]

// rule `elemSegment2Indices(_,_,_)_WASM-TEXT_ElemSegment_ElemSegment_Int_Map`(`.List{"___WASM-DATA-COMMON-SYNTAX_ElemSegment_Index_ElemSegment"}_ElemSegment`(.KList) #as _0,_DEPTH,_M)=>_0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fc2220ec3ff282c2b58cbab12176db32b4ff9601cee963b31cd1ee0eaf495368), org.kframework.attributes.Location(Location(593,10,593,75)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortElemSegment{}, R} (
            X0:SortElemSegment{},
            \and{SortElemSegment{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}(),Var'Unds'0:SortElemSegment{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            Var'Unds'DEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            Var'Unds'M:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortElemSegment{},R} (
        LblelemSegment2Indices'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'ElemSegment'Unds'ElemSegment'Unds'Int'Unds'Map{}(X0:SortElemSegment{},X1:SortInt{},X2:SortMap{}),
        Var'Unds'0:SortElemSegment{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(593,10,593,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("fc2220ec3ff282c2b58cbab12176db32b4ff9601cee963b31cd1ee0eaf495368")]

// rule `elemSegment2Indices(_,_,_)_WASM-TEXT_ElemSegment_ElemSegment_Int_Map`(`___WASM-DATA-COMMON-SYNTAX_ElemSegment_Index_ElemSegment`(E,ES),DEPTH,M)=>`___WASM-DATA-COMMON-SYNTAX_ElemSegment_Index_ElemSegment`(E,`elemSegment2Indices(_,_,_)_WASM-TEXT_ElemSegment_ElemSegment_Int_Map`(ES,DEPTH,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(47047767ad16c55ea80dba20ca7b51f8e26da990edbda1f5124fedffc09e1ee2), org.kframework.attributes.Location(Location(595,10,595,130)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortMap{},
          \exists{R} (Var'Unds'1:SortInt{},
          \exists{R} (Var'Unds'0:SortElemSegment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortElemSegment{}, R} (
                  X0:SortElemSegment{},
                  \and{SortElemSegment{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}(),Var'Unds'0:SortElemSegment{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'1:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'2:SortMap{}
                ),
                \top{R} ()
              )))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'3:SortIdentifier{},
          \exists{R} (Var'Unds'6:SortMap{},
          \exists{R} (Var'Unds'5:SortInt{},
          \exists{R} (Var'Unds'4:SortElemSegment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortElemSegment{}, R} (
                  X0:SortElemSegment{},
                  Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(inj{SortIdentifier{}, SortIndex{}}(Var'Unds'3:SortIdentifier{}),Var'Unds'4:SortElemSegment{})
                ),\and{R} (
                \in{SortInt{}, R} (
                  X1:SortInt{},
                  Var'Unds'5:SortInt{}
                ),\and{R} (
                \in{SortMap{}, R} (
                  X2:SortMap{},
                  Var'Unds'6:SortMap{}
                ),
                \top{R} ()
              )))
          ))))),
          \bottom{R}()
        ))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortElemSegment{}, R} (
            X0:SortElemSegment{},
            Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(VarE:SortIndex{},VarES:SortElemSegment{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarDEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            VarM:SortMap{}
          ),
          \top{R} ()
        )))
    )),
    \and{R} (
      \equals{SortElemSegment{},R} (
        LblelemSegment2Indices'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'ElemSegment'Unds'ElemSegment'Unds'Int'Unds'Map{}(X0:SortElemSegment{},X1:SortInt{},X2:SortMap{}),
        Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(VarE:SortIndex{},LblelemSegment2Indices'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'ElemSegment'Unds'ElemSegment'Unds'Int'Unds'Map{}(VarES:SortElemSegment{},VarDEPTH:SortInt{},VarM:SortMap{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(595,10,595,130)"), owise{}(), UNIQUE'Unds'ID{}("47047767ad16c55ea80dba20ca7b51f8e26da990edbda1f5124fedffc09e1ee2")]

// rule `elemSegment2Indices(_,_,_)_WASM-TEXT_ElemSegment_ElemSegment_Int_Map`(`___WASM-DATA-COMMON-SYNTAX_ElemSegment_Index_ElemSegment`(inj{Identifier,Index}(ID),ES),DEPTH,M)=>`___WASM-DATA-COMMON-SYNTAX_ElemSegment_Index_ElemSegment`(inj{Int,Index}(`_-Int_`(`_-Int_`(DEPTH,`project:Int`(`Map:lookup`(M,inj{Identifier,KItem}(ID)))),#token("1","Int"))),`elemSegment2Indices(_,_,_)_WASM-TEXT_ElemSegment_ElemSegment_Int_Map`(ES,DEPTH,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17b5c9b0f0cf7d31632a4a43eb3416189451287d504c98702b72851a36062f61), org.kframework.attributes.Location(Location(594,10,594,130)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortElemSegment{}, R} (
            X0:SortElemSegment{},
            Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{}),VarES:SortElemSegment{})
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarDEPTH:SortInt{}
          ),\and{R} (
          \in{SortMap{}, R} (
            X2:SortMap{},
            VarM:SortMap{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortElemSegment{},R} (
        LblelemSegment2Indices'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'ElemSegment'Unds'ElemSegment'Unds'Int'Unds'Map{}(X0:SortElemSegment{},X1:SortInt{},X2:SortMap{}),
        Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(inj{SortInt{}, SortIndex{}}(Lbl'Unds'-Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarDEPTH:SortInt{},Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarM:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}()))),\dv{SortInt{}}("1"))),LblelemSegment2Indices'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'ElemSegment'Unds'ElemSegment'Unds'Int'Unds'Map{}(VarES:SortElemSegment{},VarDEPTH:SortInt{},VarM:SortMap{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(594,10,594,130)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("17b5c9b0f0cf7d31632a4a43eb3416189451287d504c98702b72851a36062f61")]

// rule `elemSegment2Ints(_)_WASM-DATA_Ints_ElemSegment`(`.List{"___WASM-DATA-COMMON-SYNTAX_ElemSegment_Index_ElemSegment"}_ElemSegment`(.KList))=>`.List{"listInt"}_Ints`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eca400f70912cc379c56a10f0c8e687a8efeda3135becc1673ad577a4f888cea), org.kframework.attributes.Location(Location(215,10,215,49)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortElemSegment{}, R} (
            X0:SortElemSegment{},
            Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}()
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInts{},R} (
        LblelemSegment2Ints'LParUndsRParUnds'WASM-DATA'Unds'Ints'Unds'ElemSegment{}(X0:SortElemSegment{}),
        Lbl'Stop'List'LBraQuot'listInt'QuotRBraUnds'Ints{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(215,10,215,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("eca400f70912cc379c56a10f0c8e687a8efeda3135becc1673ad577a4f888cea")]

// rule `elemSegment2Ints(_)_WASM-DATA_Ints_ElemSegment`(`___WASM-DATA-COMMON-SYNTAX_ElemSegment_Index_ElemSegment`(inj{Int,Index}(E),ES))=>listInt(E,`elemSegment2Ints(_)_WASM-DATA_Ints_ElemSegment`(ES)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(143349358b059881cba75089c832d1d66de9d53fa7485ac3ef941b3e18f21d64), org.kframework.attributes.Location(Location(216,10,216,66)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortElemSegment{}, R} (
            X0:SortElemSegment{},
            Lbl'UndsUndsUnds'WASM-DATA-COMMON-SYNTAX'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(inj{SortInt{}, SortIndex{}}(VarE:SortInt{}),VarES:SortElemSegment{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInts{},R} (
        LblelemSegment2Ints'LParUndsRParUnds'WASM-DATA'Unds'Ints'Unds'ElemSegment{}(X0:SortElemSegment{}),
        LbllistInt{}(VarE:SortInt{},LblelemSegment2Ints'LParUndsRParUnds'WASM-DATA'Unds'Ints'Unds'ElemSegment{}(VarES:SortElemSegment{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(216,10,216,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("143349358b059881cba75089c832d1d66de9d53fa7485ac3ef941b3e18f21d64")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),#token("-1","Int")),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT-COMMON_Int_Int_Int`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)))) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295), org.kframework.attributes.Location(Location(1553,8,1553,431)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInt{},R} (
        LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1553,8,1553,431)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_0,#token("\"\"","String"),_1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117), org.kframework.attributes.Location(Location(1554,8,1554,32)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            Var'Unds'0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            \dv{SortString{}}("")
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'1:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInt{},R} (
        LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
        \dv{SortInt{}}("-1")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1554,8,1554,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117")]

// rule `freshInt(_)_INT_Int_Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b), org.kframework.attributes.Location(Location(1120,8,1120,28)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(X0:SortInt{}),
        VarI:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1120,8,1120,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b")]

// rule `gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(TKW,TDECLS)=>`#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(TKW,TDECLS,`.List{"listValTypes"}_ValTypes`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(af3a2887b182538a2203a5401f8bab99c9c1734112e5c6fc2659f5d0dc87237a), org.kframework.attributes.Location(Location(626,11,626,86)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTypeKeyWord{}, R} (
            X0:SortTypeKeyWord{},
            VarTKW:SortTypeKeyWord{}
          ),\and{R} (
          \in{SortTypeDecls{}, R} (
            X1:SortTypeDecls{},
            VarTDECLS:SortTypeDecls{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortVecType{},R} (
        LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(X0:SortTypeKeyWord{},X1:SortTypeDecls{}),
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(VarTKW:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{},Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(626,11,626,86)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("af3a2887b182538a2203a5401f8bab99c9c1734112e5c6fc2659f5d0dc87237a")]

// rule getGeneratedCounterCell(`<generatedTop>`(_DotVar0,Cell))=>Cell requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortGeneratedTopCell{}, R} (
            X0:SortGeneratedTopCell{},
            Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'DotVar0:SortWasmCell{},VarCell:SortGeneratedCounterCell{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGeneratedCounterCell{},R} (
        LblgetGeneratedCounterCell{}(X0:SortGeneratedTopCell{}),
        VarCell:SortGeneratedCounterCell{}),
      \top{R}()))
  []

// rule initCurFrameCell(.KList)=>`<curFrame>`(initLocalsCell(.KList),initCurModIdxCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(12388e415c45998286483b00252abb2ade3fe1e67409ffa5af1899040eb9255b), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortCurFrameCell{},R} (
        LblinitCurFrameCell{}(),
        Lbl'-LT-'curFrame'-GT-'{}(LblinitLocalsCell{}(),LblinitCurModIdxCell{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("12388e415c45998286483b00252abb2ade3fe1e67409ffa5af1899040eb9255b")]

// rule initCurModIdxCell(.KList)=>`<curModIdx>`(`.Int_WASM-DATA_OptionalInt`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f6558de48f2ae75e90b47aaded210fbf55bc3d0a86aee42605c19ec01ce20738), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortCurModIdxCell{},R} (
        LblinitCurModIdxCell{}(),
        Lbl'-LT-'curModIdx'-GT-'{}(Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("f6558de48f2ae75e90b47aaded210fbf55bc3d0a86aee42605c19ec01ce20738")]

// rule initDeterministicMemoryGrowthCell(.KList)=>`<deterministicMemoryGrowth>`(#token("true","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f8d92ad93aa9926cfed588149f20467d32c6cc71cfbd7d4be20d0e24c1e81881), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortDeterministicMemoryGrowthCell{},R} (
        LblinitDeterministicMemoryGrowthCell{}(),
        Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(\dv{SortBool{}}("true"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("f8d92ad93aa9926cfed588149f20467d32c6cc71cfbd7d4be20d0e24c1e81881")]

// rule initExportsCell(.KList)=>`<exports>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31f66578373b7be7c31b0bf330c29843e02387d9e9ea2432e6bd8b308d4edf03), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortExportsCell{},R} (
        LblinitExportsCell{}(),
        Lbl'-LT-'exports'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("31f66578373b7be7c31b0bf330c29843e02387d9e9ea2432e6bd8b308d4edf03")]

// rule initFAddrCell(.KList)=>`<fAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a4f10052af64df9d08ab19bcaeb89d286cfdbabf0c9930044ef4b78f5f374739), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortFAddrCell{},R} (
        LblinitFAddrCell{}(),
        Lbl'-LT-'fAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("a4f10052af64df9d08ab19bcaeb89d286cfdbabf0c9930044ef4b78f5f374739")]

// rule initFCodeCell(.KList)=>`<fCode>`(inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(239f57d2420913d08efcd559152ff4df4c892724050c69409aca06dfa5337319), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortFCodeCell{},R} (
        LblinitFCodeCell{}(),
        Lbl'-LT-'fCode'-GT-'{}(inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("239f57d2420913d08efcd559152ff4df4c892724050c69409aca06dfa5337319")]

// rule initFLocalCell(.KList)=>`<fLocal>`(`.Type_WASM-DATA_Type`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c2914d3f8c85b538e3b3160fd5fae9fcb17632b228f400a740a59c9f9ab5355), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortFLocalCell{},R} (
        LblinitFLocalCell{}(),
        Lbl'-LT-'fLocal'-GT-'{}(Lbl'Stop'Type'Unds'WASM-DATA'Unds'Type{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("9c2914d3f8c85b538e3b3160fd5fae9fcb17632b228f400a740a59c9f9ab5355")]

// rule initFModInstCell(.KList)=>`<fModInst>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c6d8880d8c62556d2b0fac79d691a8068cb5d6e12dd35258b96e0309065e4167), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortFModInstCell{},R} (
        LblinitFModInstCell{}(),
        Lbl'-LT-'fModInst'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("c6d8880d8c62556d2b0fac79d691a8068cb5d6e12dd35258b96e0309065e4167")]

// rule initFTypeCell(.KList)=>`<fType>`(`.Type_WASM-DATA_Type`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7a6c0a75b1f834b044737cdc4e7ccd6db554514b81e8d57c5758dccab4413c42), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortFTypeCell{},R} (
        LblinitFTypeCell{}(),
        Lbl'-LT-'fType'-GT-'{}(Lbl'Stop'Type'Unds'WASM-DATA'Unds'Type{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("7a6c0a75b1f834b044737cdc4e7ccd6db554514b81e8d57c5758dccab4413c42")]

// rule initFuncAddrsCell(.KList)=>`<funcAddrs>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3d416863e92f6af0e4b0a0d8d981cda115cb588b74208fd084fcc966686d664f), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortFuncAddrsCell{},R} (
        LblinitFuncAddrsCell{}(),
        Lbl'-LT-'funcAddrs'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("3d416863e92f6af0e4b0a0d8d981cda115cb588b74208fd084fcc966686d664f")]

// rule initFuncDefCell(.KList)=>`FuncDefCellMapItem`(initFAddrCell(.KList),`<funcDef>`(initFAddrCell(.KList),initFCodeCell(.KList),initFTypeCell(.KList),initFLocalCell(.KList),initFModInstCell(.KList),initFuncMetadataCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0222ac0494c3eaa72c9b4d9fa81128b41dceebd6aa4193c81435385f04ec3011), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortFuncDefCellMap{},R} (
        LblinitFuncDefCell{}(),
        LblFuncDefCellMapItem{}(LblinitFAddrCell{}(),Lbl'-LT-'funcDef'-GT-'{}(LblinitFAddrCell{}(),LblinitFCodeCell{}(),LblinitFTypeCell{}(),LblinitFLocalCell{}(),LblinitFModInstCell{}(),LblinitFuncMetadataCell{}()))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("0222ac0494c3eaa72c9b4d9fa81128b41dceebd6aa4193c81435385f04ec3011")]

// rule initFuncIdCell(.KList)=>`<funcId>`(`.Identifier`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bc0395bcb960a11f2ae2bc9ba67e63d7ead6e7e9a86ddfddd5af5b8bb502e981), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortFuncIdCell{},R} (
        LblinitFuncIdCell{}(),
        Lbl'-LT-'funcId'-GT-'{}(Lbl'Stop'Identifier{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("bc0395bcb960a11f2ae2bc9ba67e63d7ead6e7e9a86ddfddd5af5b8bb502e981")]

// rule initFuncIdsCell(.KList)=>`<funcIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(13b95a90a2b0a798806c51cc3b66a837da59b8bdbb911ae72655a9da612a8bac), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortFuncIdsCell{},R} (
        LblinitFuncIdsCell{}(),
        Lbl'-LT-'funcIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("13b95a90a2b0a798806c51cc3b66a837da59b8bdbb911ae72655a9da612a8bac")]

// rule initFuncMetadataCell(.KList)=>`<funcMetadata>`(initFuncIdCell(.KList),initLocalIdsCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(904ce9f3be9303ae780c86303bac6d2c640a13e835ddab95cad59ef92d92a436), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortFuncMetadataCell{},R} (
        LblinitFuncMetadataCell{}(),
        Lbl'-LT-'funcMetadata'-GT-'{}(LblinitFuncIdCell{}(),LblinitLocalIdsCell{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("904ce9f3be9303ae780c86303bac6d2c640a13e835ddab95cad59ef92d92a436")]

// rule initFuncsCell(.KList)=>`<funcs>`(`.FuncDefCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0ca6683355f446170148cef6c3f9b8d7e6f164f1879f14fe04fb94b2850e7ccb), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortFuncsCell{},R} (
        LblinitFuncsCell{}(),
        Lbl'-LT-'funcs'-GT-'{}(Lbl'Stop'FuncDefCellMap{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("0ca6683355f446170148cef6c3f9b8d7e6f164f1879f14fe04fb94b2850e7ccb")]

// rule initGAddrCell(.KList)=>`<gAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(29a56e2848e0c17aeaa39db4280e7a01f0dbd63ebc14e35268e426927b5a0373), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortGAddrCell{},R} (
        LblinitGAddrCell{}(),
        Lbl'-LT-'gAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("29a56e2848e0c17aeaa39db4280e7a01f0dbd63ebc14e35268e426927b5a0373")]

// rule initGMutCell(.KList)=>`<gMut>`(`.Mut_WASM-DATA_Mut`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(94500effc9b88b27d4b379096c3fab7cd0b5f5d24d99f4be320b0e991a8a8cce), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortGMutCell{},R} (
        LblinitGMutCell{}(),
        Lbl'-LT-'gMut'-GT-'{}(Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("94500effc9b88b27d4b379096c3fab7cd0b5f5d24d99f4be320b0e991a8a8cce")]

// rule initGValueCell(.KList)=>`<gValue>`(`undefined_WASM-DATA_Val`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1fee14e5b693621edfd1822e13994e7a2f73ab18d2538831fe8885ba6b177fef), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortGValueCell{},R} (
        LblinitGValueCell{}(),
        Lbl'-LT-'gValue'-GT-'{}(Lblundefined'Unds'WASM-DATA'Unds'Val{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("1fee14e5b693621edfd1822e13994e7a2f73ab18d2538831fe8885ba6b177fef")]

// rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortGeneratedCounterCell{},R} (
        LblinitGeneratedCounterCell{}(),
        Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initGeneratedTopCell(.KList)=>`<generatedTop>`(initWasmCell(.KList),initGeneratedCounterCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortGeneratedTopCell{},R} (
        LblinitGeneratedTopCell{}(),
        Lbl'-LT-'generatedTop'-GT-'{}(LblinitWasmCell{}(),LblinitGeneratedCounterCell{}())),
      \top{R}()))
  [initializer{}()]

// rule initGlobIdsCell(.KList)=>`<globIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d2e0b8e2047f7ee790e9cf8b0ee81a15b8016a629d28dc4f6ebb2b2fbeef0b67), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortGlobIdsCell{},R} (
        LblinitGlobIdsCell{}(),
        Lbl'-LT-'globIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("d2e0b8e2047f7ee790e9cf8b0ee81a15b8016a629d28dc4f6ebb2b2fbeef0b67")]

// rule initGlobalAddrsCell(.KList)=>`<globalAddrs>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(db4e29a672e8f52e37122f3b865fb28a4d3b41b099a16876cf6057154d7cda09), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortGlobalAddrsCell{},R} (
        LblinitGlobalAddrsCell{}(),
        Lbl'-LT-'globalAddrs'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("db4e29a672e8f52e37122f3b865fb28a4d3b41b099a16876cf6057154d7cda09")]

// rule initGlobalInstCell(.KList)=>`GlobalInstCellMapItem`(initGAddrCell(.KList),`<globalInst>`(initGAddrCell(.KList),initGValueCell(.KList),initGMutCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(daa59319b92a2c6f863fe454b369fc88df66ebcc4074395c82ff60fd7d137bb3), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortGlobalInstCellMap{},R} (
        LblinitGlobalInstCell{}(),
        LblGlobalInstCellMapItem{}(LblinitGAddrCell{}(),Lbl'-LT-'globalInst'-GT-'{}(LblinitGAddrCell{}(),LblinitGValueCell{}(),LblinitGMutCell{}()))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("daa59319b92a2c6f863fe454b369fc88df66ebcc4074395c82ff60fd7d137bb3")]

// rule initGlobalsCell(.KList)=>`<globals>`(`.GlobalInstCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(16af033ae9733972acb43c18edbc160f28f99214145916cf7fb4fc1bdfedb00b), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortGlobalsCell{},R} (
        LblinitGlobalsCell{}(),
        Lbl'-LT-'globals'-GT-'{}(Lbl'Stop'GlobalInstCellMap{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("16af033ae9733972acb43c18edbc160f28f99214145916cf7fb4fc1bdfedb00b")]

// rule initInstrsCell(.KList)=>`<instrs>`(.K) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ffb1621b76885068a367c3af3cad24333843553b6581f431a27f9c408b1fc39a), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortInstrsCell{},R} (
        LblinitInstrsCell{}(),
        Lbl'-LT-'instrs'-GT-'{}(dotk{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("ffb1621b76885068a367c3af3cad24333843553b6581f431a27f9c408b1fc39a")]

// rule initLocalIdsCell(.KList)=>`<localIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ea31a01e4b5c97dda76136550c50427bd6e09a11041cce1d63fd7c700597d2f2), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortLocalIdsCell{},R} (
        LblinitLocalIdsCell{}(),
        Lbl'-LT-'localIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("ea31a01e4b5c97dda76136550c50427bd6e09a11041cce1d63fd7c700597d2f2")]

// rule initLocalsCell(.KList)=>`<locals>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e947b2c399c88fba84e6a94367be2461718693d8c99740c6024210f85f036079), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortLocalsCell{},R} (
        LblinitLocalsCell{}(),
        Lbl'-LT-'locals'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("e947b2c399c88fba84e6a94367be2461718693d8c99740c6024210f85f036079")]

// rule initMAddrCell(.KList)=>`<mAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dfa69ec7642eb1560656a587b6453a4d5d52726980adbece633dc74a3031c9d2), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortMAddrCell{},R} (
        LblinitMAddrCell{}(),
        Lbl'-LT-'mAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("dfa69ec7642eb1560656a587b6453a4d5d52726980adbece633dc74a3031c9d2")]

// rule initMainStoreCell(.KList)=>`<mainStore>`(initFuncsCell(.KList),initNextFuncAddrCell(.KList),initTabsCell(.KList),initNextTabAddrCell(.KList),initMemsCell(.KList),initNextMemAddrCell(.KList),initGlobalsCell(.KList),initNextGlobAddrCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(366bc0f44909cfe8054909eb8525e285714096ed2fc3cf75e165225682319940), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortMainStoreCell{},R} (
        LblinitMainStoreCell{}(),
        Lbl'-LT-'mainStore'-GT-'{}(LblinitFuncsCell{}(),LblinitNextFuncAddrCell{}(),LblinitTabsCell{}(),LblinitNextTabAddrCell{}(),LblinitMemsCell{}(),LblinitNextMemAddrCell{}(),LblinitGlobalsCell{}(),LblinitNextGlobAddrCell{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("366bc0f44909cfe8054909eb8525e285714096ed2fc3cf75e165225682319940")]

// rule initMdataCell(.KList)=>`<mdata>`(`.Bytes_BYTES-HOOKED_Bytes`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a3daf1010ae3c26bf222ef676f9b1d115a2cbe6bc807e2250d39eb4fd2524497), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortMdataCell{},R} (
        LblinitMdataCell{}(),
        Lbl'-LT-'mdata'-GT-'{}(Lbl'Stop'Bytes'Unds'BYTES-HOOKED'Unds'Bytes{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("a3daf1010ae3c26bf222ef676f9b1d115a2cbe6bc807e2250d39eb4fd2524497")]

// rule initMemAddrsCell(.KList)=>`<memAddrs>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fbc8393a7c6ae12cd79a6ddc080e0c94cd42e8a0555ecdfe6e9088260f1132e5), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortMemAddrsCell{},R} (
        LblinitMemAddrsCell{}(),
        Lbl'-LT-'memAddrs'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("fbc8393a7c6ae12cd79a6ddc080e0c94cd42e8a0555ecdfe6e9088260f1132e5")]

// rule initMemIdsCell(.KList)=>`<memIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(157a939c290de36ba5ce22e377a2c7a6fa183355efc8b5c23192e15d16e40302), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortMemIdsCell{},R} (
        LblinitMemIdsCell{}(),
        Lbl'-LT-'memIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("157a939c290de36ba5ce22e377a2c7a6fa183355efc8b5c23192e15d16e40302")]

// rule initMemInstCell(.KList)=>`MemInstCellMapItem`(initMAddrCell(.KList),`<memInst>`(initMAddrCell(.KList),initMmaxCell(.KList),initMsizeCell(.KList),initMdataCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2c3bf40b5004b4760be4d66b8c2aeba878c6d735121e8f28b9d6655c9086d67e), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortMemInstCellMap{},R} (
        LblinitMemInstCell{}(),
        LblMemInstCellMapItem{}(LblinitMAddrCell{}(),Lbl'-LT-'memInst'-GT-'{}(LblinitMAddrCell{}(),LblinitMmaxCell{}(),LblinitMsizeCell{}(),LblinitMdataCell{}()))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("2c3bf40b5004b4760be4d66b8c2aeba878c6d735121e8f28b9d6655c9086d67e")]

// rule initMemsCell(.KList)=>`<mems>`(`.MemInstCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(788bd2331cbdc3c368a8ab545ee75138d76ccba516f5ce4b22d2e9a613a7ce38), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortMemsCell{},R} (
        LblinitMemsCell{}(),
        Lbl'-LT-'mems'-GT-'{}(Lbl'Stop'MemInstCellMap{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("788bd2331cbdc3c368a8ab545ee75138d76ccba516f5ce4b22d2e9a613a7ce38")]

// rule initMmaxCell(.KList)=>`<mmax>`(`.Int_WASM-DATA_OptionalInt`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(990a27f257f0cebd0c84aee48de262ca43c4101f96e24f88d913ec87bdfc4a07), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortMmaxCell{},R} (
        LblinitMmaxCell{}(),
        Lbl'-LT-'mmax'-GT-'{}(Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("990a27f257f0cebd0c84aee48de262ca43c4101f96e24f88d913ec87bdfc4a07")]

// rule initModIdxCell(.KList)=>`<modIdx>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ee46b07c35db78751e2b06be9c3d723cb046de7ce181bd46438c6cee5d5763f2), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortModIdxCell{},R} (
        LblinitModIdxCell{}(),
        Lbl'-LT-'modIdx'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("ee46b07c35db78751e2b06be9c3d723cb046de7ce181bd46438c6cee5d5763f2")]

// rule initModuleFileNameCell(.KList)=>`<moduleFileName>`(`.String`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6ce00289f8a312c145280620f73a2a41705535127a4415ce4bc50d2d95e405ef), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortModuleFileNameCell{},R} (
        LblinitModuleFileNameCell{}(),
        Lbl'-LT-'moduleFileName'-GT-'{}(Lbl'Stop'String{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("6ce00289f8a312c145280620f73a2a41705535127a4415ce4bc50d2d95e405ef")]

// rule initModuleIdCell(.KList)=>`<moduleId>`(`.Identifier`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7b5337746ecbf487b1902b0ce5ad257fea82fc09e4f8b6469a8c5c66bb93e091), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortModuleIdCell{},R} (
        LblinitModuleIdCell{}(),
        Lbl'-LT-'moduleId'-GT-'{}(Lbl'Stop'Identifier{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("7b5337746ecbf487b1902b0ce5ad257fea82fc09e4f8b6469a8c5c66bb93e091")]

// rule initModuleIdsCell(.KList)=>`<moduleIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(67375f12e03cd5589cf0e6a72af652dfce5d2fbe6858beccdbeaf50f707ef646), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortModuleIdsCell{},R} (
        LblinitModuleIdsCell{}(),
        Lbl'-LT-'moduleIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("67375f12e03cd5589cf0e6a72af652dfce5d2fbe6858beccdbeaf50f707ef646")]

// rule initModuleInstCell(.KList)=>`ModuleInstCellMapItem`(initModIdxCell(.KList),`<moduleInst>`(initModIdxCell(.KList),initExportsCell(.KList),initTypesCell(.KList),initNextTypeIdxCell(.KList),initFuncAddrsCell(.KList),initNextFuncIdxCell(.KList),initTabIdsCell(.KList),initTabAddrsCell(.KList),initMemIdsCell(.KList),initMemAddrsCell(.KList),initGlobIdsCell(.KList),initGlobalAddrsCell(.KList),initNextGlobIdxCell(.KList),initModuleMetadataCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(251e31fb2a04866f10c9fae97df1b617a26136b3962cdf3805f80f8efc63d394), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortModuleInstCellMap{},R} (
        LblinitModuleInstCell{}(),
        LblModuleInstCellMapItem{}(LblinitModIdxCell{}(),Lbl'-LT-'moduleInst'-GT-'{}(LblinitModIdxCell{}(),LblinitExportsCell{}(),LblinitTypesCell{}(),LblinitNextTypeIdxCell{}(),LblinitFuncAddrsCell{}(),LblinitNextFuncIdxCell{}(),LblinitTabIdsCell{}(),LblinitTabAddrsCell{}(),LblinitMemIdsCell{}(),LblinitMemAddrsCell{}(),LblinitGlobIdsCell{}(),LblinitGlobalAddrsCell{}(),LblinitNextGlobIdxCell{}(),LblinitModuleMetadataCell{}()))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("251e31fb2a04866f10c9fae97df1b617a26136b3962cdf3805f80f8efc63d394")]

// rule initModuleInstancesCell(.KList)=>`<moduleInstances>`(`.ModuleInstCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a0aabc48f3ce3e04b2266291b74f8ab83c5e2bd215d79dc03669605ee9ea4234), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortModuleInstancesCell{},R} (
        LblinitModuleInstancesCell{}(),
        Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Stop'ModuleInstCellMap{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("a0aabc48f3ce3e04b2266291b74f8ab83c5e2bd215d79dc03669605ee9ea4234")]

// rule initModuleMetadataCell(.KList)=>`<moduleMetadata>`(initModuleFileNameCell(.KList),initModuleIdCell(.KList),initFuncIdsCell(.KList),initTypeIdsCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(80890804e58f2d194d637e6c5cf624656ee9f26d1a5ade33660d1bdf66b5a1f1), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortModuleMetadataCell{},R} (
        LblinitModuleMetadataCell{}(),
        Lbl'-LT-'moduleMetadata'-GT-'{}(LblinitModuleFileNameCell{}(),LblinitModuleIdCell{}(),LblinitFuncIdsCell{}(),LblinitTypeIdsCell{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("80890804e58f2d194d637e6c5cf624656ee9f26d1a5ade33660d1bdf66b5a1f1")]

// rule initModuleRegistryCell(.KList)=>`<moduleRegistry>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bdf0b9b91baf4f57d8826a09eaa4ca9c0aa5e62516c69590f0305382c0c368c9), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortModuleRegistryCell{},R} (
        LblinitModuleRegistryCell{}(),
        Lbl'-LT-'moduleRegistry'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("bdf0b9b91baf4f57d8826a09eaa4ca9c0aa5e62516c69590f0305382c0c368c9")]

// rule initMsizeCell(.KList)=>`<msize>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0641294fc9f324f8b0cace1f10280d8cbc88ed6dad2b6130ca70cbf975246604), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortMsizeCell{},R} (
        LblinitMsizeCell{}(),
        Lbl'-LT-'msize'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("0641294fc9f324f8b0cace1f10280d8cbc88ed6dad2b6130ca70cbf975246604")]

// rule initNextFuncAddrCell(.KList)=>`<nextFuncAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(93e79f9768c4ce75ca3343f4a8953a2bb657443428db7ed75b6a51ec7785c1aa), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortNextFuncAddrCell{},R} (
        LblinitNextFuncAddrCell{}(),
        Lbl'-LT-'nextFuncAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("93e79f9768c4ce75ca3343f4a8953a2bb657443428db7ed75b6a51ec7785c1aa")]

// rule initNextFuncIdxCell(.KList)=>`<nextFuncIdx>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9f4baf25f5dc7303f1315a73d1fdd71fc9a88a151228266958d5c4ecde705faa), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortNextFuncIdxCell{},R} (
        LblinitNextFuncIdxCell{}(),
        Lbl'-LT-'nextFuncIdx'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("9f4baf25f5dc7303f1315a73d1fdd71fc9a88a151228266958d5c4ecde705faa")]

// rule initNextGlobAddrCell(.KList)=>`<nextGlobAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e110378cebfb2a6fa5dde47abc7aa2c0820beff6c232f7105d0ec16e8a87a9a6), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortNextGlobAddrCell{},R} (
        LblinitNextGlobAddrCell{}(),
        Lbl'-LT-'nextGlobAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("e110378cebfb2a6fa5dde47abc7aa2c0820beff6c232f7105d0ec16e8a87a9a6")]

// rule initNextGlobIdxCell(.KList)=>`<nextGlobIdx>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f3f48f4405a2310fb454a339b5ab392872dec5fa2d002eba7d2eded7f7307964), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortNextGlobIdxCell{},R} (
        LblinitNextGlobIdxCell{}(),
        Lbl'-LT-'nextGlobIdx'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("f3f48f4405a2310fb454a339b5ab392872dec5fa2d002eba7d2eded7f7307964")]

// rule initNextMemAddrCell(.KList)=>`<nextMemAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(24ebddb347b7d617f60b52a1c682640953e96f0f627e98429a8b5d58ca2f27dc), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortNextMemAddrCell{},R} (
        LblinitNextMemAddrCell{}(),
        Lbl'-LT-'nextMemAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("24ebddb347b7d617f60b52a1c682640953e96f0f627e98429a8b5d58ca2f27dc")]

// rule initNextModuleIdxCell(.KList)=>`<nextModuleIdx>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(be70fe4c436d7d7d9174aa9085140824cd9c062a54344aa1d1e0e58f91ba5449), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortNextModuleIdxCell{},R} (
        LblinitNextModuleIdxCell{}(),
        Lbl'-LT-'nextModuleIdx'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("be70fe4c436d7d7d9174aa9085140824cd9c062a54344aa1d1e0e58f91ba5449")]

// rule initNextTabAddrCell(.KList)=>`<nextTabAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c5ccbff06d821a5dba40fc071c5a64aaa86d2544f84ad67b26ab80ea3dec9cb), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortNextTabAddrCell{},R} (
        LblinitNextTabAddrCell{}(),
        Lbl'-LT-'nextTabAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("9c5ccbff06d821a5dba40fc071c5a64aaa86d2544f84ad67b26ab80ea3dec9cb")]

// rule initNextTypeIdxCell(.KList)=>`<nextTypeIdx>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d29e5b909e4af5b27be088b4e83f242a1d1e6b968000ec35c233ab640df677d8), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortNextTypeIdxCell{},R} (
        LblinitNextTypeIdxCell{}(),
        Lbl'-LT-'nextTypeIdx'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("d29e5b909e4af5b27be088b4e83f242a1d1e6b968000ec35c233ab640df677d8")]

// rule initTAddrCell(.KList)=>`<tAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(87da67ad8236e2f70b5d81047a51ceffebaec91cf6aefaefd945e31be0a4c673), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortTAddrCell{},R} (
        LblinitTAddrCell{}(),
        Lbl'-LT-'tAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("87da67ad8236e2f70b5d81047a51ceffebaec91cf6aefaefd945e31be0a4c673")]

// rule initTabAddrsCell(.KList)=>`<tabAddrs>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a7addedaa586975627c804adc6f01580ef19b16b6c77932d8c55b13d77e584c4), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortTabAddrsCell{},R} (
        LblinitTabAddrsCell{}(),
        Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("a7addedaa586975627c804adc6f01580ef19b16b6c77932d8c55b13d77e584c4")]

// rule initTabIdsCell(.KList)=>`<tabIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a94465bc181c7ccae7d84e10d1c5cf61bc1a23c9affd40b12e4e3012984a11a7), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortTabIdsCell{},R} (
        LblinitTabIdsCell{}(),
        Lbl'-LT-'tabIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("a94465bc181c7ccae7d84e10d1c5cf61bc1a23c9affd40b12e4e3012984a11a7")]

// rule initTabInstCell(.KList)=>`TabInstCellMapItem`(initTAddrCell(.KList),`<tabInst>`(initTAddrCell(.KList),initTmaxCell(.KList),initTsizeCell(.KList),initTdataCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fa9e3aa1f5dc293c16d1cabc7030fc45b0597263168f86dd3ce60f902e4cb733), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortTabInstCellMap{},R} (
        LblinitTabInstCell{}(),
        LblTabInstCellMapItem{}(LblinitTAddrCell{}(),Lbl'-LT-'tabInst'-GT-'{}(LblinitTAddrCell{}(),LblinitTmaxCell{}(),LblinitTsizeCell{}(),LblinitTdataCell{}()))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("fa9e3aa1f5dc293c16d1cabc7030fc45b0597263168f86dd3ce60f902e4cb733")]

// rule initTabsCell(.KList)=>`<tabs>`(`.TabInstCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dc467548aa94dff844fc589b84845d04d78dccb686e1376a92974562a7e0a7f5), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortTabsCell{},R} (
        LblinitTabsCell{}(),
        Lbl'-LT-'tabs'-GT-'{}(Lbl'Stop'TabInstCellMap{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("dc467548aa94dff844fc589b84845d04d78dccb686e1376a92974562a7e0a7f5")]

// rule initTdataCell(.KList)=>`<tdata>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(145b118a3e2b3747a0b9055945c43eaa9ddcc8003ecb297312d4d1e54b7e4ea8), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortTdataCell{},R} (
        LblinitTdataCell{}(),
        Lbl'-LT-'tdata'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("145b118a3e2b3747a0b9055945c43eaa9ddcc8003ecb297312d4d1e54b7e4ea8")]

// rule initTmaxCell(.KList)=>`<tmax>`(`.Int_WASM-DATA_OptionalInt`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d792868c0670c4b00e833ed32cea9f2c6343e54227356820820a6b4e84125c37), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortTmaxCell{},R} (
        LblinitTmaxCell{}(),
        Lbl'-LT-'tmax'-GT-'{}(Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("d792868c0670c4b00e833ed32cea9f2c6343e54227356820820a6b4e84125c37")]

// rule initTsizeCell(.KList)=>`<tsize>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8b8304e4887c02db6536308b5f73cb79b604ad2a7586d811105229f920fc6a94), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortTsizeCell{},R} (
        LblinitTsizeCell{}(),
        Lbl'-LT-'tsize'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("8b8304e4887c02db6536308b5f73cb79b604ad2a7586d811105229f920fc6a94")]

// rule initTypeIdsCell(.KList)=>`<typeIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d543efb175808b3e26dd2d1b8c1a1c122bcc3cb2acc2b9ca3585d73374719f30), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortTypeIdsCell{},R} (
        LblinitTypeIdsCell{}(),
        Lbl'-LT-'typeIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("d543efb175808b3e26dd2d1b8c1a1c122bcc3cb2acc2b9ca3585d73374719f30")]

// rule initTypesCell(.KList)=>`<types>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(574a514a3f64075f34b541d135c7fb40a8c72a34fd81ac18a42a5f1240c45b2d), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortTypesCell{},R} (
        LblinitTypesCell{}(),
        Lbl'-LT-'types'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("574a514a3f64075f34b541d135c7fb40a8c72a34fd81ac18a42a5f1240c45b2d")]

// rule initValstackCell(.KList)=>`<valstack>`(`.ValStack_WASM-DATA_ValStack`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b814400df3717eeed65986ed47b67c90af3b80e62bc213b745b6e51da9105c5f), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortValstackCell{},R} (
        LblinitValstackCell{}(),
        Lbl'-LT-'valstack'-GT-'{}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("b814400df3717eeed65986ed47b67c90af3b80e62bc213b745b6e51da9105c5f")]

// rule initWasmCell(.KList)=>`<wasm>`(initInstrsCell(.KList),initValstackCell(.KList),initCurFrameCell(.KList),initModuleRegistryCell(.KList),initModuleIdsCell(.KList),initModuleInstancesCell(.KList),initNextModuleIdxCell(.KList),initMainStoreCell(.KList),initDeterministicMemoryGrowthCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ca43473ba7d5a042cc73d63040a3576a20e29c56abf89671b728b88ed2cddc48), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \and{R} (
      \equals{SortWasmCell{},R} (
        LblinitWasmCell{}(),
        Lbl'-LT-'wasm'-GT-'{}(LblinitInstrsCell{}(),LblinitValstackCell{}(),LblinitCurFrameCell{}(),LblinitModuleRegistryCell{}(),LblinitModuleIdsCell{}(),LblinitModuleInstancesCell{}(),LblinitNextModuleIdxCell{}(),LblinitMainStoreCell{}(),LblinitDeterministicMemoryGrowthCell{}())),
      \top{R}()))
  [initializer{}(), UNIQUE'Unds'ID{}("ca43473ba7d5a042cc73d63040a3576a20e29c56abf89671b728b88ed2cddc48")]

// rule `is#Layout`(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:Sort'Hash'Layout{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{Sort'Hash'Layout{}, SortKItem{}}(Var'Unds'0:Sort'Hash'Layout{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        Lblis'Hash'Layout{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `is#Layout`(inj{#Layout,KItem}(#Layout))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{Sort'Hash'Layout{}, SortKItem{}}(Var'Hash'Layout:Sort'Hash'Layout{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        Lblis'Hash'Layout{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAlignArg(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortAlignArg{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortAlignArg{}, SortKItem{}}(Var'Unds'0:SortAlignArg{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAlignArg{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAlignArg(inj{AlignArg,KItem}(AlignArg))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortAlignArg{}, SortKItem{}}(VarAlignArg:SortAlignArg{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAlignArg{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAlloc(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortAlloc{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortAlloc{}, SortKItem{}}(Var'Unds'0:SortAlloc{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAlloc{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAlloc(inj{Alloc,KItem}(Alloc))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortAlloc{}, SortKItem{}}(VarAlloc:SortAlloc{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAlloc{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAllocatedKind(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortAllocatedKind{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortAllocatedKind{}, SortKItem{}}(Var'Unds'0:SortAllocatedKind{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAllocatedKind{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAllocatedKind(inj{AllocatedKind,KItem}(AllocatedKind))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortAllocatedKind{}, SortKItem{}}(VarAllocatedKind:SortAllocatedKind{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAllocatedKind{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBlockInstr(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortBlockInstr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Var'Unds'1:SortBlockInstr{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBlockInstr{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBlockInstr(inj{BlockInstr,KItem}(BlockInstr))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlockInstr{}, SortKItem{}}(VarBlockInstr:SortBlockInstr{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBlockInstr{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBlockMetaData(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortBlockMetaData{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBlockMetaData{}, SortKItem{}}(Var'Unds'0:SortBlockMetaData{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBlockMetaData{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBlockMetaData(inj{BlockMetaData,KItem}(BlockMetaData))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlockMetaData{}, SortKItem{}}(VarBlockMetaData:SortBlockMetaData{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBlockMetaData{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBool(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortBool{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'0:SortBool{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBool{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBool(inj{Bool,KItem}(Bool))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBool{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBytes(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortBytes{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBytes{}, SortKItem{}}(Var'Unds'1:SortBytes{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBytes{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBytes(inj{Bytes,KItem}(Bytes))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBytes{}, SortKItem{}}(VarBytes:SortBytes{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBytes{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isContext(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortContext{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortContext{}, SortKItem{}}(Var'Unds'1:SortContext{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisContext{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isContext(inj{Context,KItem}(Context))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortContext{}, SortKItem{}}(VarContext:SortContext{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisContext{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCurFrameCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCurFrameCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCurFrameCell{}, SortKItem{}}(Var'Unds'0:SortCurFrameCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCurFrameCell(inj{CurFrameCell,KItem}(CurFrameCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurFrameCell{}, SortKItem{}}(VarCurFrameCell:SortCurFrameCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCurFrameCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCurFrameCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCurFrameCellFragment{}, SortKItem{}}(Var'Unds'1:SortCurFrameCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCurFrameCellFragment(inj{CurFrameCellFragment,KItem}(CurFrameCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurFrameCellFragment{}, SortKItem{}}(VarCurFrameCellFragment:SortCurFrameCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCurFrameCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCurFrameCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCurFrameCellOpt{}, SortKItem{}}(Var'Unds'0:SortCurFrameCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCurFrameCellOpt(inj{CurFrameCellOpt,KItem}(CurFrameCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurFrameCellOpt{}, SortKItem{}}(VarCurFrameCellOpt:SortCurFrameCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCurModIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCurModIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCurModIdxCell{}, SortKItem{}}(Var'Unds'1:SortCurModIdxCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurModIdxCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCurModIdxCell(inj{CurModIdxCell,KItem}(CurModIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurModIdxCell{}, SortKItem{}}(VarCurModIdxCell:SortCurModIdxCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurModIdxCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCurModIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCurModIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCurModIdxCellOpt{}, SortKItem{}}(Var'Unds'0:SortCurModIdxCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurModIdxCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCurModIdxCellOpt(inj{CurModIdxCellOpt,KItem}(CurModIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurModIdxCellOpt{}, SortKItem{}}(VarCurModIdxCellOpt:SortCurModIdxCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurModIdxCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCvtOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCvtOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCvtOp{}, SortKItem{}}(Var'Unds'0:SortCvtOp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtOp{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCvtOp(inj{CvtOp,KItem}(CvtOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCvtOp{}, SortKItem{}}(VarCvtOp:SortCvtOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtOp{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCvtf32Op(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCvtf32Op{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCvtf32Op{}, SortKItem{}}(Var'Unds'1:SortCvtf32Op{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtf32Op{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCvtf32Op(inj{Cvtf32Op,KItem}(Cvtf32Op))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCvtf32Op{}, SortKItem{}}(VarCvtf32Op:SortCvtf32Op{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtf32Op{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCvtf64Op(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCvtf64Op{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCvtf64Op{}, SortKItem{}}(Var'Unds'1:SortCvtf64Op{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtf64Op{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCvtf64Op(inj{Cvtf64Op,KItem}(Cvtf64Op))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCvtf64Op{}, SortKItem{}}(VarCvtf64Op:SortCvtf64Op{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtf64Op{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCvti32Op(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCvti32Op{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCvti32Op{}, SortKItem{}}(Var'Unds'0:SortCvti32Op{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvti32Op{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCvti32Op(inj{Cvti32Op,KItem}(Cvti32Op))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCvti32Op{}, SortKItem{}}(VarCvti32Op:SortCvti32Op{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvti32Op{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCvti64Op(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCvti64Op{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCvti64Op{}, SortKItem{}}(Var'Unds'0:SortCvti64Op{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvti64Op{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCvti64Op(inj{Cvti64Op,KItem}(Cvti64Op))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCvti64Op{}, SortKItem{}}(VarCvti64Op:SortCvti64Op{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvti64Op{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDataDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDataDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortDataDefn{}, SortKItem{}}(Var'Unds'1:SortDataDefn{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDataDefn{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDataDefn(inj{DataDefn,KItem}(DataDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortDataDefn{}, SortKItem{}}(VarDataDefn:SortDataDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDataDefn{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDataString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDataString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortDataString{}, SortKItem{}}(Var'Unds'1:SortDataString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDataString{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDataString(inj{DataString,KItem}(DataString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortDataString{}, SortKItem{}}(VarDataString:SortDataString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDataString{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortDefn{}, SortKItem{}}(Var'Unds'0:SortDefn{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefn{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDefn(inj{Defn,KItem}(Defn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortDefn{}, SortKItem{}}(VarDefn:SortDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefn{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDefns(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDefns{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortDefns{}, SortKItem{}}(Var'Unds'1:SortDefns{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefns{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDefns(inj{Defns,KItem}(Defns))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortDefns{}, SortKItem{}}(VarDefns:SortDefns{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefns{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDeterministicMemoryGrowthCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDeterministicMemoryGrowthCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortDeterministicMemoryGrowthCell{}, SortKItem{}}(Var'Unds'1:SortDeterministicMemoryGrowthCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeterministicMemoryGrowthCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDeterministicMemoryGrowthCell(inj{DeterministicMemoryGrowthCell,KItem}(DeterministicMemoryGrowthCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortDeterministicMemoryGrowthCell{}, SortKItem{}}(VarDeterministicMemoryGrowthCell:SortDeterministicMemoryGrowthCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeterministicMemoryGrowthCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDeterministicMemoryGrowthCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDeterministicMemoryGrowthCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}}(Var'Unds'1:SortDeterministicMemoryGrowthCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeterministicMemoryGrowthCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDeterministicMemoryGrowthCellOpt(inj{DeterministicMemoryGrowthCellOpt,KItem}(DeterministicMemoryGrowthCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}}(VarDeterministicMemoryGrowthCellOpt:SortDeterministicMemoryGrowthCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeterministicMemoryGrowthCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isElemDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortElemDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortElemDefn{}, SortKItem{}}(Var'Unds'1:SortElemDefn{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisElemDefn{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isElemDefn(inj{ElemDefn,KItem}(ElemDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortElemDefn{}, SortKItem{}}(VarElemDefn:SortElemDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisElemDefn{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isElemSegment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortElemSegment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortElemSegment{}, SortKItem{}}(Var'Unds'1:SortElemSegment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisElemSegment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isElemSegment(inj{ElemSegment,KItem}(ElemSegment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortElemSegment{}, SortKItem{}}(VarElemSegment:SortElemSegment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisElemSegment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isEmptyStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortEmptyStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortEmptyStmt{}, SortKItem{}}(Var'Unds'1:SortEmptyStmt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEmptyStmt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isEmptyStmt(inj{EmptyStmt,KItem}(EmptyStmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEmptyStmt{}, SortKItem{}}(VarEmptyStmt:SortEmptyStmt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEmptyStmt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isEmptyStmts(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortEmptyStmts{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortEmptyStmts{}, SortKItem{}}(Var'Unds'1:SortEmptyStmts{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEmptyStmts{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isEmptyStmts(inj{EmptyStmts,KItem}(EmptyStmts))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEmptyStmts{}, SortKItem{}}(VarEmptyStmts:SortEmptyStmts{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEmptyStmts{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isEndianness(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortEndianness{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortEndianness{}, SortKItem{}}(Var'Unds'1:SortEndianness{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEndianness{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isEndianness(inj{Endianness,KItem}(Endianness))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEndianness{}, SortKItem{}}(VarEndianness:SortEndianness{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEndianness{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isExportDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortExportDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExportDefn{}, SortKItem{}}(Var'Unds'0:SortExportDefn{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportDefn{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isExportDefn(inj{ExportDefn,KItem}(ExportDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExportDefn{}, SortKItem{}}(VarExportDefn:SortExportDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportDefn{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isExportsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortExportsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExportsCell{}, SortKItem{}}(Var'Unds'1:SortExportsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isExportsCell(inj{ExportsCell,KItem}(ExportsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExportsCell{}, SortKItem{}}(VarExportsCell:SortExportsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isExportsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortExportsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExportsCellOpt{}, SortKItem{}}(Var'Unds'0:SortExportsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isExportsCellOpt(inj{ExportsCellOpt,KItem}(ExportsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExportsCellOpt{}, SortKItem{}}(VarExportsCellOpt:SortExportsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isExternval(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortExternval{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExternval{}, SortKItem{}}(Var'Unds'1:SortExternval{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExternval{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isExternval(inj{Externval,KItem}(Externval))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExternval{}, SortKItem{}}(VarExternval:SortExternval{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExternval{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFAddrCell{}, SortKItem{}}(Var'Unds'1:SortFAddrCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFAddrCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFAddrCell(inj{FAddrCell,KItem}(FAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFAddrCell{}, SortKItem{}}(VarFAddrCell:SortFAddrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFAddrCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFAddrCellOpt{}, SortKItem{}}(Var'Unds'0:SortFAddrCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFAddrCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFAddrCellOpt(inj{FAddrCellOpt,KItem}(FAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFAddrCellOpt{}, SortKItem{}}(VarFAddrCellOpt:SortFAddrCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFAddrCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFBinOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFBinOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFBinOp{}, SortKItem{}}(Var'Unds'1:SortFBinOp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFBinOp{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFBinOp(inj{FBinOp,KItem}(FBinOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFBinOp{}, SortKItem{}}(VarFBinOp:SortFBinOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFBinOp{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFCodeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFCodeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFCodeCell{}, SortKItem{}}(Var'Unds'1:SortFCodeCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFCodeCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFCodeCell(inj{FCodeCell,KItem}(FCodeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFCodeCell{}, SortKItem{}}(VarFCodeCell:SortFCodeCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFCodeCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFCodeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFCodeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFCodeCellOpt{}, SortKItem{}}(Var'Unds'1:SortFCodeCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFCodeCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFCodeCellOpt(inj{FCodeCellOpt,KItem}(FCodeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFCodeCellOpt{}, SortKItem{}}(VarFCodeCellOpt:SortFCodeCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFCodeCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFLocalCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFLocalCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFLocalCell{}, SortKItem{}}(Var'Unds'1:SortFLocalCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFLocalCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFLocalCell(inj{FLocalCell,KItem}(FLocalCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFLocalCell{}, SortKItem{}}(VarFLocalCell:SortFLocalCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFLocalCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFLocalCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFLocalCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFLocalCellOpt{}, SortKItem{}}(Var'Unds'1:SortFLocalCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFLocalCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFLocalCellOpt(inj{FLocalCellOpt,KItem}(FLocalCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFLocalCellOpt{}, SortKItem{}}(VarFLocalCellOpt:SortFLocalCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFLocalCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFModInstCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFModInstCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFModInstCell{}, SortKItem{}}(Var'Unds'0:SortFModInstCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFModInstCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFModInstCell(inj{FModInstCell,KItem}(FModInstCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFModInstCell{}, SortKItem{}}(VarFModInstCell:SortFModInstCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFModInstCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFModInstCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFModInstCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFModInstCellOpt{}, SortKItem{}}(Var'Unds'1:SortFModInstCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFModInstCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFModInstCellOpt(inj{FModInstCellOpt,KItem}(FModInstCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFModInstCellOpt{}, SortKItem{}}(VarFModInstCellOpt:SortFModInstCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFModInstCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFRelOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFRelOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFRelOp{}, SortKItem{}}(Var'Unds'1:SortFRelOp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFRelOp{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFRelOp(inj{FRelOp,KItem}(FRelOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFRelOp{}, SortKItem{}}(VarFRelOp:SortFRelOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFRelOp{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFTypeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFTypeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFTypeCell{}, SortKItem{}}(Var'Unds'0:SortFTypeCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFTypeCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFTypeCell(inj{FTypeCell,KItem}(FTypeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFTypeCell{}, SortKItem{}}(VarFTypeCell:SortFTypeCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFTypeCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFTypeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFTypeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFTypeCellOpt{}, SortKItem{}}(Var'Unds'1:SortFTypeCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFTypeCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFTypeCellOpt(inj{FTypeCellOpt,KItem}(FTypeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFTypeCellOpt{}, SortKItem{}}(VarFTypeCellOpt:SortFTypeCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFTypeCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFUnOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFUnOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFUnOp{}, SortKItem{}}(Var'Unds'1:SortFUnOp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFUnOp{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFUnOp(inj{FUnOp,KItem}(FUnOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFUnOp{}, SortKItem{}}(VarFUnOp:SortFUnOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFUnOp{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFVal(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFVal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFVal{}, SortKItem{}}(Var'Unds'0:SortFVal{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFVal{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFVal(inj{FVal,KItem}(FVal))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFVal{}, SortKItem{}}(VarFVal:SortFVal{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFVal{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFValType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFValType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFValType{}, SortKItem{}}(Var'Unds'1:SortFValType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFValType{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFValType(inj{FValType,KItem}(FValType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFValType{}, SortKItem{}}(VarFValType:SortFValType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFValType{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFloat(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFloat{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFloat{}, SortKItem{}}(Var'Unds'1:SortFloat{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFloat{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFloat(inj{Float,KItem}(Float))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFloat{}, SortKItem{}}(VarFloat:SortFloat{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFloat{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFoldedInstr(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFoldedInstr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Var'Unds'1:SortFoldedInstr{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFoldedInstr{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFoldedInstr(inj{FoldedInstr,KItem}(FoldedInstr))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(VarFoldedInstr:SortFoldedInstr{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFoldedInstr{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFrame(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFrame{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFrame{}, SortKItem{}}(Var'Unds'1:SortFrame{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFrame{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFrame(inj{Frame,KItem}(Frame))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFrame{}, SortKItem{}}(VarFrame:SortFrame{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFrame{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncAddrsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncAddrsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncAddrsCell{}, SortKItem{}}(Var'Unds'1:SortFuncAddrsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncAddrsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncAddrsCell(inj{FuncAddrsCell,KItem}(FuncAddrsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncAddrsCell{}, SortKItem{}}(VarFuncAddrsCell:SortFuncAddrsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncAddrsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncAddrsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncAddrsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncAddrsCellOpt{}, SortKItem{}}(Var'Unds'1:SortFuncAddrsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncAddrsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncAddrsCellOpt(inj{FuncAddrsCellOpt,KItem}(FuncAddrsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncAddrsCellOpt{}, SortKItem{}}(VarFuncAddrsCellOpt:SortFuncAddrsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncAddrsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncDefCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncDefCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncDefCell{}, SortKItem{}}(Var'Unds'0:SortFuncDefCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncDefCell(inj{FuncDefCell,KItem}(FuncDefCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncDefCell{}, SortKItem{}}(VarFuncDefCell:SortFuncDefCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncDefCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncDefCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncDefCellFragment{}, SortKItem{}}(Var'Unds'0:SortFuncDefCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncDefCellFragment(inj{FuncDefCellFragment,KItem}(FuncDefCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncDefCellFragment{}, SortKItem{}}(VarFuncDefCellFragment:SortFuncDefCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncDefCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncDefCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncDefCellMap{}, SortKItem{}}(Var'Unds'0:SortFuncDefCellMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCellMap{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncDefCellMap(inj{FuncDefCellMap,KItem}(FuncDefCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncDefCellMap{}, SortKItem{}}(VarFuncDefCellMap:SortFuncDefCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCellMap{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncDefn{}, SortKItem{}}(Var'Unds'1:SortFuncDefn{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefn{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncDefn(inj{FuncDefn,KItem}(FuncDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncDefn{}, SortKItem{}}(VarFuncDefn:SortFuncDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefn{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncIdCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncIdCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncIdCell{}, SortKItem{}}(Var'Unds'1:SortFuncIdCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncIdCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncIdCell(inj{FuncIdCell,KItem}(FuncIdCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncIdCell{}, SortKItem{}}(VarFuncIdCell:SortFuncIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncIdCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncIdCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncIdCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncIdCellOpt{}, SortKItem{}}(Var'Unds'1:SortFuncIdCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncIdCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncIdCellOpt(inj{FuncIdCellOpt,KItem}(FuncIdCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncIdCellOpt{}, SortKItem{}}(VarFuncIdCellOpt:SortFuncIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncIdCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncIdsCell{}, SortKItem{}}(Var'Unds'1:SortFuncIdsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncIdsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncIdsCell(inj{FuncIdsCell,KItem}(FuncIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncIdsCell{}, SortKItem{}}(VarFuncIdsCell:SortFuncIdsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncIdsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncIdsCellOpt{}, SortKItem{}}(Var'Unds'1:SortFuncIdsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncIdsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncIdsCellOpt(inj{FuncIdsCellOpt,KItem}(FuncIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncIdsCellOpt{}, SortKItem{}}(VarFuncIdsCellOpt:SortFuncIdsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncIdsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncMetadata(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncMetadata{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncMetadata{}, SortKItem{}}(Var'Unds'1:SortFuncMetadata{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncMetadata{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncMetadata(inj{FuncMetadata,KItem}(FuncMetadata))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncMetadata{}, SortKItem{}}(VarFuncMetadata:SortFuncMetadata{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncMetadata{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncMetadataCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncMetadataCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncMetadataCell{}, SortKItem{}}(Var'Unds'1:SortFuncMetadataCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncMetadataCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncMetadataCell(inj{FuncMetadataCell,KItem}(FuncMetadataCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncMetadataCell{}, SortKItem{}}(VarFuncMetadataCell:SortFuncMetadataCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncMetadataCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncMetadataCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncMetadataCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncMetadataCellFragment{}, SortKItem{}}(Var'Unds'0:SortFuncMetadataCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncMetadataCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncMetadataCellFragment(inj{FuncMetadataCellFragment,KItem}(FuncMetadataCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncMetadataCellFragment{}, SortKItem{}}(VarFuncMetadataCellFragment:SortFuncMetadataCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncMetadataCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncMetadataCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncMetadataCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncMetadataCellOpt{}, SortKItem{}}(Var'Unds'1:SortFuncMetadataCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncMetadataCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncMetadataCellOpt(inj{FuncMetadataCellOpt,KItem}(FuncMetadataCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncMetadataCellOpt{}, SortKItem{}}(VarFuncMetadataCellOpt:SortFuncMetadataCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncMetadataCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncSpec(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncSpec{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncSpec{}, SortKItem{}}(Var'Unds'1:SortFuncSpec{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncSpec{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncSpec(inj{FuncSpec,KItem}(FuncSpec))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncSpec{}, SortKItem{}}(VarFuncSpec:SortFuncSpec{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncSpec{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncType{}, SortKItem{}}(Var'Unds'1:SortFuncType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncType{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncType(inj{FuncType,KItem}(FuncType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncType{}, SortKItem{}}(VarFuncType:SortFuncType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncType{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncsCell{}, SortKItem{}}(Var'Unds'1:SortFuncsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncsCell(inj{FuncsCell,KItem}(FuncsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncsCell{}, SortKItem{}}(VarFuncsCell:SortFuncsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncsCellFragment{}, SortKItem{}}(Var'Unds'1:SortFuncsCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncsCellFragment(inj{FuncsCellFragment,KItem}(FuncsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncsCellFragment{}, SortKItem{}}(VarFuncsCellFragment:SortFuncsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFuncsCellOpt{}, SortKItem{}}(Var'Unds'1:SortFuncsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncsCellOpt(inj{FuncsCellOpt,KItem}(FuncsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncsCellOpt{}, SortKItem{}}(VarFuncsCellOpt:SortFuncsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGAddrCell{}, SortKItem{}}(Var'Unds'1:SortGAddrCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGAddrCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGAddrCell(inj{GAddrCell,KItem}(GAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGAddrCell{}, SortKItem{}}(VarGAddrCell:SortGAddrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGAddrCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGAddrCellOpt{}, SortKItem{}}(Var'Unds'0:SortGAddrCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGAddrCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGAddrCellOpt(inj{GAddrCellOpt,KItem}(GAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGAddrCellOpt{}, SortKItem{}}(VarGAddrCellOpt:SortGAddrCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGAddrCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGMutCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGMutCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGMutCell{}, SortKItem{}}(Var'Unds'1:SortGMutCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGMutCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGMutCell(inj{GMutCell,KItem}(GMutCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGMutCell{}, SortKItem{}}(VarGMutCell:SortGMutCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGMutCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGMutCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGMutCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGMutCellOpt{}, SortKItem{}}(Var'Unds'1:SortGMutCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGMutCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGMutCellOpt(inj{GMutCellOpt,KItem}(GMutCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGMutCellOpt{}, SortKItem{}}(VarGMutCellOpt:SortGMutCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGMutCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGValueCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGValueCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGValueCell{}, SortKItem{}}(Var'Unds'1:SortGValueCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGValueCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGValueCell(inj{GValueCell,KItem}(GValueCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGValueCell{}, SortKItem{}}(VarGValueCell:SortGValueCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGValueCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGValueCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGValueCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGValueCellOpt{}, SortKItem{}}(Var'Unds'1:SortGValueCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGValueCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGValueCellOpt(inj{GValueCellOpt,KItem}(GValueCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGValueCellOpt{}, SortKItem{}}(VarGValueCellOpt:SortGValueCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGValueCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedCounterCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGeneratedCounterCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(Var'Unds'1:SortGeneratedCounterCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedCounterCell(inj{GeneratedCounterCell,KItem}(GeneratedCounterCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedCounterCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGeneratedCounterCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(Var'Unds'1:SortGeneratedCounterCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedCounterCellOpt(inj{GeneratedCounterCellOpt,KItem}(GeneratedCounterCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarGeneratedCounterCellOpt:SortGeneratedCounterCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedTopCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGeneratedTopCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(Var'Unds'1:SortGeneratedTopCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedTopCell(inj{GeneratedTopCell,KItem}(GeneratedTopCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedTopCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGeneratedTopCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(Var'Unds'0:SortGeneratedTopCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedTopCellFragment(inj{GeneratedTopCellFragment,KItem}(GeneratedTopCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGlobIdsCell{}, SortKItem{}}(Var'Unds'1:SortGlobIdsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobIdsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobIdsCell(inj{GlobIdsCell,KItem}(GlobIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobIdsCell{}, SortKItem{}}(VarGlobIdsCell:SortGlobIdsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobIdsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGlobIdsCellOpt{}, SortKItem{}}(Var'Unds'1:SortGlobIdsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobIdsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobIdsCellOpt(inj{GlobIdsCellOpt,KItem}(GlobIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobIdsCellOpt{}, SortKItem{}}(VarGlobIdsCellOpt:SortGlobIdsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobIdsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalAddrsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalAddrsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGlobalAddrsCell{}, SortKItem{}}(Var'Unds'1:SortGlobalAddrsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalAddrsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalAddrsCell(inj{GlobalAddrsCell,KItem}(GlobalAddrsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalAddrsCell{}, SortKItem{}}(VarGlobalAddrsCell:SortGlobalAddrsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalAddrsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalAddrsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalAddrsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGlobalAddrsCellOpt{}, SortKItem{}}(Var'Unds'1:SortGlobalAddrsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalAddrsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalAddrsCellOpt(inj{GlobalAddrsCellOpt,KItem}(GlobalAddrsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalAddrsCellOpt{}, SortKItem{}}(VarGlobalAddrsCellOpt:SortGlobalAddrsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalAddrsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(Var'Unds'1:SortGlobalDefn{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalDefn{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalDefn(inj{GlobalDefn,KItem}(GlobalDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(VarGlobalDefn:SortGlobalDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalDefn{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalInstCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalInstCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGlobalInstCell{}, SortKItem{}}(Var'Unds'1:SortGlobalInstCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalInstCell(inj{GlobalInstCell,KItem}(GlobalInstCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalInstCell{}, SortKItem{}}(VarGlobalInstCell:SortGlobalInstCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalInstCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGlobalInstCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGlobalInstCellFragment{}, SortKItem{}}(Var'Unds'0:SortGlobalInstCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalInstCellFragment(inj{GlobalInstCellFragment,KItem}(GlobalInstCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalInstCellFragment{}, SortKItem{}}(VarGlobalInstCellFragment:SortGlobalInstCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalInstCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalInstCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGlobalInstCellMap{}, SortKItem{}}(Var'Unds'1:SortGlobalInstCellMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCellMap{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalInstCellMap(inj{GlobalInstCellMap,KItem}(GlobalInstCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalInstCellMap{}, SortKItem{}}(VarGlobalInstCellMap:SortGlobalInstCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCellMap{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalSpec(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalSpec{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGlobalSpec{}, SortKItem{}}(Var'Unds'1:SortGlobalSpec{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalSpec{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalSpec(inj{GlobalSpec,KItem}(GlobalSpec))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalSpec{}, SortKItem{}}(VarGlobalSpec:SortGlobalSpec{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalSpec{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGlobalType{}, SortKItem{}}(Var'Unds'1:SortGlobalType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalType{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalType(inj{GlobalType,KItem}(GlobalType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalType{}, SortKItem{}}(VarGlobalType:SortGlobalType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalType{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGlobalsCell{}, SortKItem{}}(Var'Unds'1:SortGlobalsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalsCell(inj{GlobalsCell,KItem}(GlobalsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalsCell{}, SortKItem{}}(VarGlobalsCell:SortGlobalsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGlobalsCellFragment{}, SortKItem{}}(Var'Unds'1:SortGlobalsCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalsCellFragment(inj{GlobalsCellFragment,KItem}(GlobalsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalsCellFragment{}, SortKItem{}}(VarGlobalsCellFragment:SortGlobalsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGlobalsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGlobalsCellOpt{}, SortKItem{}}(Var'Unds'0:SortGlobalsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalsCellOpt(inj{GlobalsCellOpt,KItem}(GlobalsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalsCellOpt{}, SortKItem{}}(VarGlobalsCellOpt:SortGlobalsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIBinOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortIBinOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIBinOp{}, SortKItem{}}(Var'Unds'0:SortIBinOp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIBinOp{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIBinOp(inj{IBinOp,KItem}(IBinOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIBinOp{}, SortKItem{}}(VarIBinOp:SortIBinOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIBinOp{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIRelOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIRelOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIRelOp{}, SortKItem{}}(Var'Unds'1:SortIRelOp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIRelOp{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIRelOp(inj{IRelOp,KItem}(IRelOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIRelOp{}, SortKItem{}}(VarIRelOp:SortIRelOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIRelOp{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIUnOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortIUnOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIUnOp{}, SortKItem{}}(Var'Unds'0:SortIUnOp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIUnOp{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIUnOp(inj{IUnOp,KItem}(IUnOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIUnOp{}, SortKItem{}}(VarIUnOp:SortIUnOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIUnOp{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIVal(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIVal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIVal{}, SortKItem{}}(Var'Unds'1:SortIVal{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIVal{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIVal(inj{IVal,KItem}(IVal))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIVal{}, SortKItem{}}(VarIVal:SortIVal{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIVal{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIValType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIValType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIValType{}, SortKItem{}}(Var'Unds'1:SortIValType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIValType{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIValType(inj{IValType,KItem}(IValType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIValType{}, SortKItem{}}(VarIValType:SortIValType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIValType{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIdentifier(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIdentifier{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIdentifier{}, SortKItem{}}(Var'Unds'1:SortIdentifier{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdentifier{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIdentifier(inj{Identifier,KItem}(Identifier))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdentifier{}, SortKItem{}}(VarIdentifier:SortIdentifier{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdentifier{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIdentifierToken(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIdentifierToken{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIdentifierToken{}, SortKItem{}}(Var'Unds'1:SortIdentifierToken{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdentifierToken{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIdentifierToken(inj{IdentifierToken,KItem}(IdentifierToken))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdentifierToken{}, SortKItem{}}(VarIdentifierToken:SortIdentifierToken{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdentifierToken{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isImportDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortImportDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortImportDefn{}, SortKItem{}}(Var'Unds'1:SortImportDefn{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisImportDefn{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isImportDefn(inj{ImportDefn,KItem}(ImportDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortImportDefn{}, SortKItem{}}(VarImportDefn:SortImportDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisImportDefn{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isImportDesc(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortImportDesc{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortImportDesc{}, SortKItem{}}(Var'Unds'0:SortImportDesc{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisImportDesc{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isImportDesc(inj{ImportDesc,KItem}(ImportDesc))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortImportDesc{}, SortKItem{}}(VarImportDesc:SortImportDesc{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisImportDesc{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIndex(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIndex{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIndex{}, SortKItem{}}(Var'Unds'1:SortIndex{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIndex{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIndex(inj{Index,KItem}(Index))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIndex{}, SortKItem{}}(VarIndex:SortIndex{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIndex{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `isInfinite(_)_FLOAT_Bool_Float`(F)=>`_orBool_`(`_>Float__FLOAT_Bool_Float_Float`(F,`maxValueFloat(_,_)_FLOAT_Float_Int_Int`(`precisionFloat(_)_FLOAT_Int_Float`(F),`exponentBitsFloat(_)_FLOAT_Int_Float`(F))),`_<Float__FLOAT_Bool_Float_Float`(F,`--Float__FLOAT_Float_Float`(`maxValueFloat(_,_)_FLOAT_Float_Int_Int`(`precisionFloat(_)_FLOAT_Int_Float`(F),`exponentBitsFloat(_)_FLOAT_Int_Float`(F))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3cdc5592e45f5e75bc58bec28b36bce08dccca0fb7bdaa72e4489b9501776c41), org.kframework.attributes.Location(Location(1336,8,1336,173)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFloat{}, R} (
            X0:SortFloat{},
            VarF:SortFloat{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInfinite'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(X0:SortFloat{}),
        Lbl'Unds'orBool'Unds'{}(Lbl'Unds-GT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF:SortFloat{},LblmaxValueFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int{}(LblprecisionFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}),LblexponentBitsFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}))),Lbl'Unds-LT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF:SortFloat{},Lbl--Float'UndsUnds'FLOAT'Unds'Float'Unds'Float{}(LblmaxValueFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int{}(LblprecisionFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}),LblexponentBitsFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1336,8,1336,173)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3cdc5592e45f5e75bc58bec28b36bce08dccca0fb7bdaa72e4489b9501776c41")]

// rule isInlineExport(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortInlineExport{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInlineExport{}, SortKItem{}}(Var'Unds'0:SortInlineExport{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInlineExport{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInlineExport(inj{InlineExport,KItem}(InlineExport))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInlineExport{}, SortKItem{}}(VarInlineExport:SortInlineExport{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInlineExport{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInlineImport(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortInlineImport{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInlineImport{}, SortKItem{}}(Var'Unds'1:SortInlineImport{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInlineImport{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInlineImport(inj{InlineImport,KItem}(InlineImport))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInlineImport{}, SortKItem{}}(VarInlineImport:SortInlineImport{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInlineImport{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInstr(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortInstr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInstr{}, SortKItem{}}(Var'Unds'1:SortInstr{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInstr{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInstr(inj{Instr,KItem}(Instr))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInstr{}, SortKItem{}}(VarInstr:SortInstr{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInstr{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInstrs(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortInstrs{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInstrs{}, SortKItem{}}(Var'Unds'1:SortInstrs{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInstrs{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInstrs(inj{Instrs,KItem}(Instrs))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInstrs{}, SortKItem{}}(VarInstrs:SortInstrs{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInstrs{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInstrsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortInstrsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInstrsCell{}, SortKItem{}}(Var'Unds'1:SortInstrsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInstrsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInstrsCell(inj{InstrsCell,KItem}(InstrsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInstrsCell{}, SortKItem{}}(VarInstrsCell:SortInstrsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInstrsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInstrsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortInstrsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInstrsCellOpt{}, SortKItem{}}(Var'Unds'0:SortInstrsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInstrsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInstrsCellOpt(inj{InstrsCellOpt,KItem}(InstrsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInstrsCellOpt{}, SortKItem{}}(VarInstrsCellOpt:SortInstrsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInstrsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'1:SortInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInt(inj{Int,KItem}(Int))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInts(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortInts{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInts{}, SortKItem{}}(Var'Unds'1:SortInts{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInts{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInts(inj{Ints,KItem}(Ints))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInts{}, SortKItem{}}(VarInts:SortInts{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInts{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isK(K)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisK{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKConfigVar(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKConfigVar{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKConfigVar{}, SortKItem{}}(Var'Unds'1:SortKConfigVar{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKConfigVar{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKConfigVar(inj{KConfigVar,KItem}(KConfigVar))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKConfigVar{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(Var'Unds'1:SortKItem{},dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKItem{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKItem(KItem)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarKItem:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKItem{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLabel(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLabel{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortLabel{}, SortKItem{}}(Var'Unds'1:SortLabel{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabel{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLabel(inj{Label,KItem}(Label))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLabel{}, SortKItem{}}(VarLabel:SortLabel{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabel{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLimits(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortLimits{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortLimits{}, SortKItem{}}(Var'Unds'0:SortLimits{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLimits{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLimits(inj{Limits,KItem}(Limits))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLimits{}, SortKItem{}}(VarLimits:SortLimits{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLimits{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortList{}, SortKItem{}}(Var'Unds'0:SortList{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisList{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isList(inj{List,KItem}(List))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisList{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLoadOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLoadOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortLoadOp{}, SortKItem{}}(Var'Unds'1:SortLoadOp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLoadOp{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLoadOp(inj{LoadOp,KItem}(LoadOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLoadOp{}, SortKItem{}}(VarLoadOp:SortLoadOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLoadOp{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLoadOpM(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLoadOpM{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortLoadOpM{}, SortKItem{}}(Var'Unds'1:SortLoadOpM{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLoadOpM{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLoadOpM(inj{LoadOpM,KItem}(LoadOpM))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLoadOpM{}, SortKItem{}}(VarLoadOpM:SortLoadOpM{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLoadOpM{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalDecl(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocalDecl{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortLocalDecl{}, SortKItem{}}(Var'Unds'1:SortLocalDecl{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalDecl{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalDecl(inj{LocalDecl,KItem}(LocalDecl))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLocalDecl{}, SortKItem{}}(VarLocalDecl:SortLocalDecl{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalDecl{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalDecls(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocalDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortLocalDecls{}, SortKItem{}}(Var'Unds'1:SortLocalDecls{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalDecls{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalDecls(inj{LocalDecls,KItem}(LocalDecls))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLocalDecls{}, SortKItem{}}(VarLocalDecls:SortLocalDecls{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalDecls{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocalIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortLocalIdsCell{}, SortKItem{}}(Var'Unds'1:SortLocalIdsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalIdsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalIdsCell(inj{LocalIdsCell,KItem}(LocalIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLocalIdsCell{}, SortKItem{}}(VarLocalIdsCell:SortLocalIdsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalIdsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocalIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortLocalIdsCellOpt{}, SortKItem{}}(Var'Unds'1:SortLocalIdsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalIdsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalIdsCellOpt(inj{LocalIdsCellOpt,KItem}(LocalIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLocalIdsCellOpt{}, SortKItem{}}(VarLocalIdsCellOpt:SortLocalIdsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalIdsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocalsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortLocalsCell{}, SortKItem{}}(Var'Unds'1:SortLocalsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalsCell(inj{LocalsCell,KItem}(LocalsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLocalsCell{}, SortKItem{}}(VarLocalsCell:SortLocalsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocalsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortLocalsCellOpt{}, SortKItem{}}(Var'Unds'1:SortLocalsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalsCellOpt(inj{LocalsCellOpt,KItem}(LocalsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLocalsCellOpt{}, SortKItem{}}(VarLocalsCellOpt:SortLocalsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMAddrCell{}, SortKItem{}}(Var'Unds'0:SortMAddrCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMAddrCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMAddrCell(inj{MAddrCell,KItem}(MAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMAddrCell{}, SortKItem{}}(VarMAddrCell:SortMAddrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMAddrCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortMAddrCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMAddrCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMAddrCellOpt(inj{MAddrCellOpt,KItem}(MAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMAddrCellOpt{}, SortKItem{}}(VarMAddrCellOpt:SortMAddrCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMAddrCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMainStoreCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMainStoreCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMainStoreCell{}, SortKItem{}}(Var'Unds'1:SortMainStoreCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMainStoreCell(inj{MainStoreCell,KItem}(MainStoreCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMainStoreCell{}, SortKItem{}}(VarMainStoreCell:SortMainStoreCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMainStoreCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMainStoreCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMainStoreCellFragment{}, SortKItem{}}(Var'Unds'0:SortMainStoreCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMainStoreCellFragment(inj{MainStoreCellFragment,KItem}(MainStoreCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMainStoreCellFragment{}, SortKItem{}}(VarMainStoreCellFragment:SortMainStoreCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMainStoreCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMainStoreCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMainStoreCellOpt{}, SortKItem{}}(Var'Unds'1:SortMainStoreCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMainStoreCellOpt(inj{MainStoreCellOpt,KItem}(MainStoreCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMainStoreCellOpt{}, SortKItem{}}(VarMainStoreCellOpt:SortMainStoreCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMap{}, SortKItem{}}(Var'Unds'1:SortMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMap{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMap(inj{Map,KItem}(Map))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMap{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMdataCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMdataCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMdataCell{}, SortKItem{}}(Var'Unds'1:SortMdataCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMdataCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMdataCell(inj{MdataCell,KItem}(MdataCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMdataCell{}, SortKItem{}}(VarMdataCell:SortMdataCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMdataCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMdataCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMdataCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMdataCellOpt{}, SortKItem{}}(Var'Unds'1:SortMdataCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMdataCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMdataCellOpt(inj{MdataCellOpt,KItem}(MdataCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMdataCellOpt{}, SortKItem{}}(VarMdataCellOpt:SortMdataCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMdataCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemAddrsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemAddrsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMemAddrsCell{}, SortKItem{}}(Var'Unds'0:SortMemAddrsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemAddrsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemAddrsCell(inj{MemAddrsCell,KItem}(MemAddrsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemAddrsCell{}, SortKItem{}}(VarMemAddrsCell:SortMemAddrsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemAddrsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemAddrsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemAddrsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMemAddrsCellOpt{}, SortKItem{}}(Var'Unds'1:SortMemAddrsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemAddrsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemAddrsCellOpt(inj{MemAddrsCellOpt,KItem}(MemAddrsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemAddrsCellOpt{}, SortKItem{}}(VarMemAddrsCellOpt:SortMemAddrsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemAddrsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemArg(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemArg{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMemArg{}, SortKItem{}}(Var'Unds'1:SortMemArg{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemArg{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemArg(inj{MemArg,KItem}(MemArg))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemArg{}, SortKItem{}}(VarMemArg:SortMemArg{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemArg{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMemIdsCell{}, SortKItem{}}(Var'Unds'1:SortMemIdsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemIdsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemIdsCell(inj{MemIdsCell,KItem}(MemIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemIdsCell{}, SortKItem{}}(VarMemIdsCell:SortMemIdsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemIdsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMemIdsCellOpt{}, SortKItem{}}(Var'Unds'1:SortMemIdsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemIdsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemIdsCellOpt(inj{MemIdsCellOpt,KItem}(MemIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemIdsCellOpt{}, SortKItem{}}(VarMemIdsCellOpt:SortMemIdsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemIdsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemInstCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemInstCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMemInstCell{}, SortKItem{}}(Var'Unds'1:SortMemInstCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemInstCell(inj{MemInstCell,KItem}(MemInstCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemInstCell{}, SortKItem{}}(VarMemInstCell:SortMemInstCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemInstCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemInstCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMemInstCellFragment{}, SortKItem{}}(Var'Unds'1:SortMemInstCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemInstCellFragment(inj{MemInstCellFragment,KItem}(MemInstCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemInstCellFragment{}, SortKItem{}}(VarMemInstCellFragment:SortMemInstCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemInstCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemInstCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMemInstCellMap{}, SortKItem{}}(Var'Unds'1:SortMemInstCellMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCellMap{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemInstCellMap(inj{MemInstCellMap,KItem}(MemInstCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemInstCellMap{}, SortKItem{}}(VarMemInstCellMap:SortMemInstCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCellMap{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMemType{}, SortKItem{}}(Var'Unds'0:SortMemType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemType{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemType(inj{MemType,KItem}(MemType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemType{}, SortKItem{}}(VarMemType:SortMemType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemType{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemoryDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemoryDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Var'Unds'1:SortMemoryDefn{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemoryDefn{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemoryDefn(inj{MemoryDefn,KItem}(MemoryDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(VarMemoryDefn:SortMemoryDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemoryDefn{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemorySpec(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemorySpec{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMemorySpec{}, SortKItem{}}(Var'Unds'1:SortMemorySpec{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemorySpec{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemorySpec(inj{MemorySpec,KItem}(MemorySpec))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemorySpec{}, SortKItem{}}(VarMemorySpec:SortMemorySpec{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemorySpec{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMemsCell{}, SortKItem{}}(Var'Unds'0:SortMemsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemsCell(inj{MemsCell,KItem}(MemsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemsCell{}, SortKItem{}}(VarMemsCell:SortMemsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMemsCellFragment{}, SortKItem{}}(Var'Unds'1:SortMemsCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemsCellFragment(inj{MemsCellFragment,KItem}(MemsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemsCellFragment{}, SortKItem{}}(VarMemsCellFragment:SortMemsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMemsCellOpt{}, SortKItem{}}(Var'Unds'0:SortMemsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemsCellOpt(inj{MemsCellOpt,KItem}(MemsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemsCellOpt{}, SortKItem{}}(VarMemsCellOpt:SortMemsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMmaxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMmaxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMmaxCell{}, SortKItem{}}(Var'Unds'1:SortMmaxCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMmaxCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMmaxCell(inj{MmaxCell,KItem}(MmaxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMmaxCell{}, SortKItem{}}(VarMmaxCell:SortMmaxCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMmaxCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMmaxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMmaxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMmaxCellOpt{}, SortKItem{}}(Var'Unds'1:SortMmaxCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMmaxCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMmaxCellOpt(inj{MmaxCellOpt,KItem}(MmaxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMmaxCellOpt{}, SortKItem{}}(VarMmaxCellOpt:SortMmaxCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMmaxCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModIdxCell{}, SortKItem{}}(Var'Unds'1:SortModIdxCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModIdxCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModIdxCell(inj{ModIdxCell,KItem}(ModIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModIdxCell{}, SortKItem{}}(VarModIdxCell:SortModIdxCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModIdxCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModIdxCellOpt{}, SortKItem{}}(Var'Unds'1:SortModIdxCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModIdxCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModIdxCellOpt(inj{ModIdxCellOpt,KItem}(ModIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModIdxCellOpt{}, SortKItem{}}(VarModIdxCellOpt:SortModIdxCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModIdxCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleDecl(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleDecl{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleDecl{}, SortKItem{}}(Var'Unds'0:SortModuleDecl{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleDecl{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleDecl(inj{ModuleDecl,KItem}(ModuleDecl))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleDecl{}, SortKItem{}}(VarModuleDecl:SortModuleDecl{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleDecl{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleFileNameCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleFileNameCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleFileNameCell{}, SortKItem{}}(Var'Unds'1:SortModuleFileNameCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleFileNameCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleFileNameCell(inj{ModuleFileNameCell,KItem}(ModuleFileNameCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleFileNameCell{}, SortKItem{}}(VarModuleFileNameCell:SortModuleFileNameCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleFileNameCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleFileNameCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleFileNameCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleFileNameCellOpt{}, SortKItem{}}(Var'Unds'1:SortModuleFileNameCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleFileNameCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleFileNameCellOpt(inj{ModuleFileNameCellOpt,KItem}(ModuleFileNameCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleFileNameCellOpt{}, SortKItem{}}(VarModuleFileNameCellOpt:SortModuleFileNameCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleFileNameCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleIdCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleIdCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleIdCell{}, SortKItem{}}(Var'Unds'0:SortModuleIdCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleIdCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleIdCell(inj{ModuleIdCell,KItem}(ModuleIdCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleIdCell{}, SortKItem{}}(VarModuleIdCell:SortModuleIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleIdCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleIdCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleIdCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleIdCellOpt{}, SortKItem{}}(Var'Unds'1:SortModuleIdCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleIdCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleIdCellOpt(inj{ModuleIdCellOpt,KItem}(ModuleIdCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleIdCellOpt{}, SortKItem{}}(VarModuleIdCellOpt:SortModuleIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleIdCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleIdsCell{}, SortKItem{}}(Var'Unds'0:SortModuleIdsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleIdsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleIdsCell(inj{ModuleIdsCell,KItem}(ModuleIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleIdsCell{}, SortKItem{}}(VarModuleIdsCell:SortModuleIdsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleIdsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleIdsCellOpt{}, SortKItem{}}(Var'Unds'1:SortModuleIdsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleIdsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleIdsCellOpt(inj{ModuleIdsCellOpt,KItem}(ModuleIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleIdsCellOpt{}, SortKItem{}}(VarModuleIdsCellOpt:SortModuleIdsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleIdsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleInstCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleInstCell{}, SortKItem{}}(Var'Unds'1:SortModuleInstCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstCell(inj{ModuleInstCell,KItem}(ModuleInstCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleInstCell{}, SortKItem{}}(VarModuleInstCell:SortModuleInstCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleInstCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleInstCellFragment{}, SortKItem{}}(Var'Unds'0:SortModuleInstCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstCellFragment(inj{ModuleInstCellFragment,KItem}(ModuleInstCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleInstCellFragment{}, SortKItem{}}(VarModuleInstCellFragment:SortModuleInstCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleInstCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleInstCellMap{}, SortKItem{}}(Var'Unds'0:SortModuleInstCellMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCellMap{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstCellMap(inj{ModuleInstCellMap,KItem}(ModuleInstCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleInstCellMap{}, SortKItem{}}(VarModuleInstCellMap:SortModuleInstCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCellMap{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstancesCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleInstancesCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleInstancesCell{}, SortKItem{}}(Var'Unds'0:SortModuleInstancesCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstancesCell(inj{ModuleInstancesCell,KItem}(ModuleInstancesCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleInstancesCell{}, SortKItem{}}(VarModuleInstancesCell:SortModuleInstancesCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstancesCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleInstancesCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleInstancesCellFragment{}, SortKItem{}}(Var'Unds'0:SortModuleInstancesCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstancesCellFragment(inj{ModuleInstancesCellFragment,KItem}(ModuleInstancesCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleInstancesCellFragment{}, SortKItem{}}(VarModuleInstancesCellFragment:SortModuleInstancesCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstancesCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleInstancesCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleInstancesCellOpt{}, SortKItem{}}(Var'Unds'1:SortModuleInstancesCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstancesCellOpt(inj{ModuleInstancesCellOpt,KItem}(ModuleInstancesCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleInstancesCellOpt{}, SortKItem{}}(VarModuleInstancesCellOpt:SortModuleInstancesCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleMetadata(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleMetadata{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleMetadata{}, SortKItem{}}(Var'Unds'1:SortModuleMetadata{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleMetadata{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleMetadata(inj{ModuleMetadata,KItem}(ModuleMetadata))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleMetadata{}, SortKItem{}}(VarModuleMetadata:SortModuleMetadata{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleMetadata{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleMetadataCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleMetadataCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleMetadataCell{}, SortKItem{}}(Var'Unds'1:SortModuleMetadataCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleMetadataCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleMetadataCell(inj{ModuleMetadataCell,KItem}(ModuleMetadataCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleMetadataCell{}, SortKItem{}}(VarModuleMetadataCell:SortModuleMetadataCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleMetadataCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleMetadataCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleMetadataCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleMetadataCellFragment{}, SortKItem{}}(Var'Unds'1:SortModuleMetadataCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleMetadataCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleMetadataCellFragment(inj{ModuleMetadataCellFragment,KItem}(ModuleMetadataCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleMetadataCellFragment{}, SortKItem{}}(VarModuleMetadataCellFragment:SortModuleMetadataCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleMetadataCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleMetadataCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleMetadataCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleMetadataCellOpt{}, SortKItem{}}(Var'Unds'1:SortModuleMetadataCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleMetadataCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleMetadataCellOpt(inj{ModuleMetadataCellOpt,KItem}(ModuleMetadataCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleMetadataCellOpt{}, SortKItem{}}(VarModuleMetadataCellOpt:SortModuleMetadataCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleMetadataCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleRegistryCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleRegistryCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleRegistryCell{}, SortKItem{}}(Var'Unds'0:SortModuleRegistryCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleRegistryCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleRegistryCell(inj{ModuleRegistryCell,KItem}(ModuleRegistryCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleRegistryCell{}, SortKItem{}}(VarModuleRegistryCell:SortModuleRegistryCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleRegistryCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleRegistryCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleRegistryCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortModuleRegistryCellOpt{}, SortKItem{}}(Var'Unds'0:SortModuleRegistryCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleRegistryCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleRegistryCellOpt(inj{ModuleRegistryCellOpt,KItem}(ModuleRegistryCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleRegistryCellOpt{}, SortKItem{}}(VarModuleRegistryCellOpt:SortModuleRegistryCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleRegistryCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMsizeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMsizeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMsizeCell{}, SortKItem{}}(Var'Unds'0:SortMsizeCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMsizeCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMsizeCell(inj{MsizeCell,KItem}(MsizeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMsizeCell{}, SortKItem{}}(VarMsizeCell:SortMsizeCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMsizeCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMsizeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMsizeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMsizeCellOpt{}, SortKItem{}}(Var'Unds'1:SortMsizeCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMsizeCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMsizeCellOpt(inj{MsizeCellOpt,KItem}(MsizeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMsizeCellOpt{}, SortKItem{}}(VarMsizeCellOpt:SortMsizeCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMsizeCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMut(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMut{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMut{}, SortKItem{}}(Var'Unds'1:SortMut{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMut{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMut(inj{Mut,KItem}(Mut))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMut{}, SortKItem{}}(VarMut:SortMut{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMut{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextFuncAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextFuncAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextFuncAddrCell{}, SortKItem{}}(Var'Unds'1:SortNextFuncAddrCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncAddrCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextFuncAddrCell(inj{NextFuncAddrCell,KItem}(NextFuncAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextFuncAddrCell{}, SortKItem{}}(VarNextFuncAddrCell:SortNextFuncAddrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncAddrCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextFuncAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortNextFuncAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextFuncAddrCellOpt{}, SortKItem{}}(Var'Unds'0:SortNextFuncAddrCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncAddrCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextFuncAddrCellOpt(inj{NextFuncAddrCellOpt,KItem}(NextFuncAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextFuncAddrCellOpt{}, SortKItem{}}(VarNextFuncAddrCellOpt:SortNextFuncAddrCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncAddrCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextFuncIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextFuncIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextFuncIdxCell{}, SortKItem{}}(Var'Unds'1:SortNextFuncIdxCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncIdxCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextFuncIdxCell(inj{NextFuncIdxCell,KItem}(NextFuncIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextFuncIdxCell{}, SortKItem{}}(VarNextFuncIdxCell:SortNextFuncIdxCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncIdxCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextFuncIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortNextFuncIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextFuncIdxCellOpt{}, SortKItem{}}(Var'Unds'0:SortNextFuncIdxCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncIdxCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextFuncIdxCellOpt(inj{NextFuncIdxCellOpt,KItem}(NextFuncIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextFuncIdxCellOpt{}, SortKItem{}}(VarNextFuncIdxCellOpt:SortNextFuncIdxCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncIdxCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextGlobAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextGlobAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextGlobAddrCell{}, SortKItem{}}(Var'Unds'1:SortNextGlobAddrCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobAddrCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextGlobAddrCell(inj{NextGlobAddrCell,KItem}(NextGlobAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextGlobAddrCell{}, SortKItem{}}(VarNextGlobAddrCell:SortNextGlobAddrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobAddrCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextGlobAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortNextGlobAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextGlobAddrCellOpt{}, SortKItem{}}(Var'Unds'0:SortNextGlobAddrCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobAddrCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextGlobAddrCellOpt(inj{NextGlobAddrCellOpt,KItem}(NextGlobAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextGlobAddrCellOpt{}, SortKItem{}}(VarNextGlobAddrCellOpt:SortNextGlobAddrCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobAddrCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextGlobIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextGlobIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextGlobIdxCell{}, SortKItem{}}(Var'Unds'1:SortNextGlobIdxCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobIdxCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextGlobIdxCell(inj{NextGlobIdxCell,KItem}(NextGlobIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextGlobIdxCell{}, SortKItem{}}(VarNextGlobIdxCell:SortNextGlobIdxCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobIdxCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextGlobIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextGlobIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextGlobIdxCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextGlobIdxCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobIdxCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextGlobIdxCellOpt(inj{NextGlobIdxCellOpt,KItem}(NextGlobIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextGlobIdxCellOpt{}, SortKItem{}}(VarNextGlobIdxCellOpt:SortNextGlobIdxCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobIdxCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextMemAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextMemAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextMemAddrCell{}, SortKItem{}}(Var'Unds'1:SortNextMemAddrCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextMemAddrCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextMemAddrCell(inj{NextMemAddrCell,KItem}(NextMemAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextMemAddrCell{}, SortKItem{}}(VarNextMemAddrCell:SortNextMemAddrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextMemAddrCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextMemAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextMemAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextMemAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextMemAddrCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextMemAddrCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextMemAddrCellOpt(inj{NextMemAddrCellOpt,KItem}(NextMemAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextMemAddrCellOpt{}, SortKItem{}}(VarNextMemAddrCellOpt:SortNextMemAddrCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextMemAddrCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextModuleIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextModuleIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextModuleIdxCell{}, SortKItem{}}(Var'Unds'1:SortNextModuleIdxCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextModuleIdxCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextModuleIdxCell(inj{NextModuleIdxCell,KItem}(NextModuleIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextModuleIdxCell{}, SortKItem{}}(VarNextModuleIdxCell:SortNextModuleIdxCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextModuleIdxCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextModuleIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextModuleIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextModuleIdxCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextModuleIdxCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextModuleIdxCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextModuleIdxCellOpt(inj{NextModuleIdxCellOpt,KItem}(NextModuleIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextModuleIdxCellOpt{}, SortKItem{}}(VarNextModuleIdxCellOpt:SortNextModuleIdxCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextModuleIdxCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextTabAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextTabAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextTabAddrCell{}, SortKItem{}}(Var'Unds'1:SortNextTabAddrCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTabAddrCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextTabAddrCell(inj{NextTabAddrCell,KItem}(NextTabAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextTabAddrCell{}, SortKItem{}}(VarNextTabAddrCell:SortNextTabAddrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTabAddrCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextTabAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortNextTabAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextTabAddrCellOpt{}, SortKItem{}}(Var'Unds'0:SortNextTabAddrCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTabAddrCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextTabAddrCellOpt(inj{NextTabAddrCellOpt,KItem}(NextTabAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextTabAddrCellOpt{}, SortKItem{}}(VarNextTabAddrCellOpt:SortNextTabAddrCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTabAddrCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextTypeIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortNextTypeIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextTypeIdxCell{}, SortKItem{}}(Var'Unds'0:SortNextTypeIdxCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTypeIdxCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextTypeIdxCell(inj{NextTypeIdxCell,KItem}(NextTypeIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextTypeIdxCell{}, SortKItem{}}(VarNextTypeIdxCell:SortNextTypeIdxCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTypeIdxCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextTypeIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortNextTypeIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextTypeIdxCellOpt{}, SortKItem{}}(Var'Unds'0:SortNextTypeIdxCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTypeIdxCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextTypeIdxCellOpt(inj{NextTypeIdxCellOpt,KItem}(NextTypeIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextTypeIdxCellOpt{}, SortKItem{}}(VarNextTypeIdxCellOpt:SortNextTypeIdxCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTypeIdxCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNumber(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortNumber{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNumber{}, SortKItem{}}(Var'Unds'0:SortNumber{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNumber{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNumber(inj{Number,KItem}(Number))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNumber{}, SortKItem{}}(VarNumber:SortNumber{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNumber{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isOffset(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortOffset{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOffset{}, SortKItem{}}(Var'Unds'1:SortOffset{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOffset{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isOffset(inj{Offset,KItem}(Offset))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOffset{}, SortKItem{}}(VarOffset:SortOffset{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOffset{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isOffsetArg(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortOffsetArg{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOffsetArg{}, SortKItem{}}(Var'Unds'0:SortOffsetArg{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOffsetArg{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isOffsetArg(inj{OffsetArg,KItem}(OffsetArg))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOffsetArg{}, SortKItem{}}(VarOffsetArg:SortOffsetArg{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOffsetArg{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isOptionalId(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortOptionalId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOptionalId{}, SortKItem{}}(Var'Unds'1:SortOptionalId{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOptionalId{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isOptionalId(inj{OptionalId,KItem}(OptionalId))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOptionalId:SortOptionalId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOptionalId{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isOptionalInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortOptionalInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOptionalInt{}, SortKItem{}}(Var'Unds'1:SortOptionalInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOptionalInt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isOptionalInt(inj{OptionalInt,KItem}(OptionalInt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOptionalInt{}, SortKItem{}}(VarOptionalInt:SortOptionalInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOptionalInt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isOptionalString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortOptionalString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOptionalString{}, SortKItem{}}(Var'Unds'0:SortOptionalString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOptionalString{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isOptionalString(inj{OptionalString,KItem}(OptionalString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOptionalString{}, SortKItem{}}(VarOptionalString:SortOptionalString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOptionalString{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isPlainInstr(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortPlainInstr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Var'Unds'1:SortPlainInstr{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPlainInstr{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isPlainInstr(inj{PlainInstr,KItem}(PlainInstr))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortPlainInstr{}, SortKItem{}}(VarPlainInstr:SortPlainInstr{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPlainInstr{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortSet{}, SortKItem{}}(Var'Unds'0:SortSet{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSet{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSet(inj{Set,KItem}(Set))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSet{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isSignedness(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortSignedness{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortSignedness{}, SortKItem{}}(Var'Unds'0:SortSignedness{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSignedness{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSignedness(inj{Signedness,KItem}(Signedness))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSignedness{}, SortKItem{}}(VarSignedness:SortSignedness{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSignedness{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStartDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortStartDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStartDefn{}, SortKItem{}}(Var'Unds'1:SortStartDefn{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStartDefn{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStartDefn(inj{StartDefn,KItem}(StartDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStartDefn{}, SortKItem{}}(VarStartDefn:SortStartDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStartDefn{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStmt{}, SortKItem{}}(Var'Unds'0:SortStmt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStmt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStmt(inj{Stmt,KItem}(Stmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStmt{}, SortKItem{}}(VarStmt:SortStmt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStmt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStmts(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortStmts{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStmts{}, SortKItem{}}(Var'Unds'1:SortStmts{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStmts{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStmts(inj{Stmts,KItem}(Stmts))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStmts{}, SortKItem{}}(VarStmts:SortStmts{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStmts{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStoreOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortStoreOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStoreOp{}, SortKItem{}}(Var'Unds'1:SortStoreOp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStoreOp{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStoreOp(inj{StoreOp,KItem}(StoreOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreOp{}, SortKItem{}}(VarStoreOp:SortStoreOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStoreOp{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStoreOpM(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortStoreOpM{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStoreOpM{}, SortKItem{}}(Var'Unds'1:SortStoreOpM{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStoreOpM{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStoreOpM(inj{StoreOpM,KItem}(StoreOpM))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreOpM{}, SortKItem{}}(VarStoreOpM:SortStoreOpM{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStoreOpM{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'1:SortString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisString{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isString(inj{String,KItem}(String))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarString:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisString{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTAddrCell{}, SortKItem{}}(Var'Unds'0:SortTAddrCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTAddrCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTAddrCell(inj{TAddrCell,KItem}(TAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTAddrCell{}, SortKItem{}}(VarTAddrCell:SortTAddrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTAddrCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortTAddrCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTAddrCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTAddrCellOpt(inj{TAddrCellOpt,KItem}(TAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTAddrCellOpt{}, SortKItem{}}(VarTAddrCellOpt:SortTAddrCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTAddrCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabAddrsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTabAddrsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTabAddrsCell{}, SortKItem{}}(Var'Unds'1:SortTabAddrsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabAddrsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabAddrsCell(inj{TabAddrsCell,KItem}(TabAddrsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabAddrsCell{}, SortKItem{}}(VarTabAddrsCell:SortTabAddrsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabAddrsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabAddrsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTabAddrsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTabAddrsCellOpt{}, SortKItem{}}(Var'Unds'1:SortTabAddrsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabAddrsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabAddrsCellOpt(inj{TabAddrsCellOpt,KItem}(TabAddrsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabAddrsCellOpt{}, SortKItem{}}(VarTabAddrsCellOpt:SortTabAddrsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabAddrsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTabIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTabIdsCell{}, SortKItem{}}(Var'Unds'0:SortTabIdsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabIdsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabIdsCell(inj{TabIdsCell,KItem}(TabIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabIdsCell{}, SortKItem{}}(VarTabIdsCell:SortTabIdsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabIdsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTabIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTabIdsCellOpt{}, SortKItem{}}(Var'Unds'1:SortTabIdsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabIdsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabIdsCellOpt(inj{TabIdsCellOpt,KItem}(TabIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabIdsCellOpt{}, SortKItem{}}(VarTabIdsCellOpt:SortTabIdsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabIdsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabInstCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTabInstCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTabInstCell{}, SortKItem{}}(Var'Unds'1:SortTabInstCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabInstCell(inj{TabInstCell,KItem}(TabInstCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabInstCell{}, SortKItem{}}(VarTabInstCell:SortTabInstCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabInstCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTabInstCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTabInstCellFragment{}, SortKItem{}}(Var'Unds'1:SortTabInstCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabInstCellFragment(inj{TabInstCellFragment,KItem}(TabInstCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabInstCellFragment{}, SortKItem{}}(VarTabInstCellFragment:SortTabInstCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabInstCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTabInstCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTabInstCellMap{}, SortKItem{}}(Var'Unds'1:SortTabInstCellMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCellMap{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabInstCellMap(inj{TabInstCellMap,KItem}(TabInstCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabInstCellMap{}, SortKItem{}}(VarTabInstCellMap:SortTabInstCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCellMap{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTableDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTableDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTableDefn{}, SortKItem{}}(Var'Unds'0:SortTableDefn{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableDefn{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTableDefn(inj{TableDefn,KItem}(TableDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTableDefn{}, SortKItem{}}(VarTableDefn:SortTableDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableDefn{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTableElemType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTableElemType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTableElemType{}, SortKItem{}}(Var'Unds'1:SortTableElemType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableElemType{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTableElemType(inj{TableElemType,KItem}(TableElemType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTableElemType{}, SortKItem{}}(VarTableElemType:SortTableElemType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableElemType{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTableSpec(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTableSpec{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTableSpec{}, SortKItem{}}(Var'Unds'0:SortTableSpec{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableSpec{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTableSpec(inj{TableSpec,KItem}(TableSpec))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTableSpec{}, SortKItem{}}(VarTableSpec:SortTableSpec{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableSpec{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTableType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTableType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTableType{}, SortKItem{}}(Var'Unds'1:SortTableType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableType{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTableType(inj{TableType,KItem}(TableType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTableType{}, SortKItem{}}(VarTableType:SortTableType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableType{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTabsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTabsCell{}, SortKItem{}}(Var'Unds'1:SortTabsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabsCell(inj{TabsCell,KItem}(TabsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabsCell{}, SortKItem{}}(VarTabsCell:SortTabsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTabsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTabsCellFragment{}, SortKItem{}}(Var'Unds'1:SortTabsCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabsCellFragment(inj{TabsCellFragment,KItem}(TabsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabsCellFragment{}, SortKItem{}}(VarTabsCellFragment:SortTabsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTabsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTabsCellOpt{}, SortKItem{}}(Var'Unds'0:SortTabsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabsCellOpt(inj{TabsCellOpt,KItem}(TabsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabsCellOpt{}, SortKItem{}}(VarTabsCellOpt:SortTabsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTdataCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTdataCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTdataCell{}, SortKItem{}}(Var'Unds'1:SortTdataCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTdataCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTdataCell(inj{TdataCell,KItem}(TdataCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTdataCell{}, SortKItem{}}(VarTdataCell:SortTdataCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTdataCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTdataCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTdataCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTdataCellOpt{}, SortKItem{}}(Var'Unds'1:SortTdataCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTdataCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTdataCellOpt(inj{TdataCellOpt,KItem}(TdataCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTdataCellOpt{}, SortKItem{}}(VarTdataCellOpt:SortTdataCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTdataCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTestOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTestOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTestOp{}, SortKItem{}}(Var'Unds'1:SortTestOp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTestOp{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTestOp(inj{TestOp,KItem}(TestOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTestOp{}, SortKItem{}}(VarTestOp:SortTestOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTestOp{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTextFormatGlobalType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTextFormatGlobalType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTextFormatGlobalType{}, SortKItem{}}(Var'Unds'1:SortTextFormatGlobalType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTextFormatGlobalType{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTextFormatGlobalType(inj{TextFormatGlobalType,KItem}(TextFormatGlobalType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTextFormatGlobalType{}, SortKItem{}}(VarTextFormatGlobalType:SortTextFormatGlobalType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTextFormatGlobalType{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTextLimits(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTextLimits{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTextLimits{}, SortKItem{}}(Var'Unds'1:SortTextLimits{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTextLimits{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTextLimits(inj{TextLimits,KItem}(TextLimits))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTextLimits{}, SortKItem{}}(VarTextLimits:SortTextLimits{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTextLimits{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTmaxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTmaxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTmaxCell{}, SortKItem{}}(Var'Unds'1:SortTmaxCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTmaxCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTmaxCell(inj{TmaxCell,KItem}(TmaxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTmaxCell{}, SortKItem{}}(VarTmaxCell:SortTmaxCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTmaxCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTmaxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTmaxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTmaxCellOpt{}, SortKItem{}}(Var'Unds'0:SortTmaxCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTmaxCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTmaxCellOpt(inj{TmaxCellOpt,KItem}(TmaxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTmaxCellOpt{}, SortKItem{}}(VarTmaxCellOpt:SortTmaxCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTmaxCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTsizeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTsizeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTsizeCell{}, SortKItem{}}(Var'Unds'1:SortTsizeCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTsizeCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTsizeCell(inj{TsizeCell,KItem}(TsizeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTsizeCell{}, SortKItem{}}(VarTsizeCell:SortTsizeCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTsizeCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTsizeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTsizeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTsizeCellOpt{}, SortKItem{}}(Var'Unds'1:SortTsizeCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTsizeCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTsizeCellOpt(inj{TsizeCellOpt,KItem}(TsizeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTsizeCellOpt{}, SortKItem{}}(VarTsizeCellOpt:SortTsizeCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTsizeCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortType{}, SortKItem{}}(Var'Unds'1:SortType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisType{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isType(inj{Type,KItem}(Type))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortType{}, SortKItem{}}(VarType:SortType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisType{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeDecl(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTypeDecl{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypeDecl{}, SortKItem{}}(Var'Unds'0:SortTypeDecl{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDecl{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeDecl(inj{TypeDecl,KItem}(TypeDecl))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeDecl{}, SortKItem{}}(VarTypeDecl:SortTypeDecl{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDecl{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeDecls(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTypeDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypeDecls{}, SortKItem{}}(Var'Unds'1:SortTypeDecls{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDecls{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeDecls(inj{TypeDecls,KItem}(TypeDecls))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeDecls{}, SortKItem{}}(VarTypeDecls:SortTypeDecls{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDecls{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTypeDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypeDefn{}, SortKItem{}}(Var'Unds'0:SortTypeDefn{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDefn{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeDefn(inj{TypeDefn,KItem}(TypeDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeDefn{}, SortKItem{}}(VarTypeDefn:SortTypeDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDefn{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTypeIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypeIdsCell{}, SortKItem{}}(Var'Unds'0:SortTypeIdsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeIdsCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeIdsCell(inj{TypeIdsCell,KItem}(TypeIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeIdsCell{}, SortKItem{}}(VarTypeIdsCell:SortTypeIdsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeIdsCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTypeIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypeIdsCellOpt{}, SortKItem{}}(Var'Unds'0:SortTypeIdsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeIdsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeIdsCellOpt(inj{TypeIdsCellOpt,KItem}(TypeIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeIdsCellOpt{}, SortKItem{}}(VarTypeIdsCellOpt:SortTypeIdsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeIdsCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeKeyWord(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTypeKeyWord{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypeKeyWord{}, SortKItem{}}(Var'Unds'1:SortTypeKeyWord{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeKeyWord{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeKeyWord(inj{TypeKeyWord,KItem}(TypeKeyWord))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeKeyWord{}, SortKItem{}}(VarTypeKeyWord:SortTypeKeyWord{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeKeyWord{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeUse(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTypeUse{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypeUse{}, SortKItem{}}(Var'Unds'1:SortTypeUse{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeUse{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeUse(inj{TypeUse,KItem}(TypeUse))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeUse{}, SortKItem{}}(VarTypeUse:SortTypeUse{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeUse{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypesCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTypesCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypesCell{}, SortKItem{}}(Var'Unds'1:SortTypesCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypesCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypesCell(inj{TypesCell,KItem}(TypesCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypesCell{}, SortKItem{}}(VarTypesCell:SortTypesCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypesCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypesCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTypesCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypesCellOpt{}, SortKItem{}}(Var'Unds'1:SortTypesCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypesCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypesCellOpt(inj{TypesCellOpt,KItem}(TypesCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypesCellOpt{}, SortKItem{}}(VarTypesCellOpt:SortTypesCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypesCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypesInfo(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTypesInfo{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypesInfo{}, SortKItem{}}(Var'Unds'0:SortTypesInfo{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypesInfo{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypesInfo(inj{TypesInfo,KItem}(TypesInfo))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypesInfo{}, SortKItem{}}(VarTypesInfo:SortTypesInfo{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypesInfo{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isVal(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortVal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortVal{}, SortKItem{}}(Var'Unds'1:SortVal{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVal{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isVal(inj{Val,KItem}(Val))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVal{}, SortKItem{}}(VarVal:SortVal{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVal{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isValStack(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortValStack{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortValStack{}, SortKItem{}}(Var'Unds'1:SortValStack{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValStack{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isValStack(inj{ValStack,KItem}(ValStack))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortValStack{}, SortKItem{}}(VarValStack:SortValStack{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValStack{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isValType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortValType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortValType{}, SortKItem{}}(Var'Unds'0:SortValType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValType{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isValType(inj{ValType,KItem}(ValType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortValType{}, SortKItem{}}(VarValType:SortValType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValType{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isValTypes(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortValTypes{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortValTypes{}, SortKItem{}}(Var'Unds'1:SortValTypes{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValTypes{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isValTypes(inj{ValTypes,KItem}(ValTypes))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortValTypes{}, SortKItem{}}(VarValTypes:SortValTypes{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValTypes{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isValstackCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortValstackCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortValstackCell{}, SortKItem{}}(Var'Unds'0:SortValstackCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValstackCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isValstackCell(inj{ValstackCell,KItem}(ValstackCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortValstackCell{}, SortKItem{}}(VarValstackCell:SortValstackCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValstackCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isValstackCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortValstackCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortValstackCellOpt{}, SortKItem{}}(Var'Unds'0:SortValstackCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValstackCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isValstackCellOpt(inj{ValstackCellOpt,KItem}(ValstackCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortValstackCellOpt{}, SortKItem{}}(VarValstackCellOpt:SortValstackCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValstackCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isVecType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortVecType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortVecType{}, SortKItem{}}(Var'Unds'1:SortVecType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVecType{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isVecType(inj{VecType,KItem}(VecType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVecType{}, SortKItem{}}(VarVecType:SortVecType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVecType{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortWasmCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortWasmCell{}, SortKItem{}}(Var'Unds'1:SortWasmCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCell{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmCell(inj{WasmCell,KItem}(WasmCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortWasmCell{}, SortKItem{}}(VarWasmCell:SortWasmCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCell{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortWasmCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortWasmCellFragment{}, SortKItem{}}(Var'Unds'1:SortWasmCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmCellFragment(inj{WasmCellFragment,KItem}(WasmCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortWasmCellFragment{}, SortKItem{}}(VarWasmCellFragment:SortWasmCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCellFragment{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortWasmCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortWasmCellOpt{}, SortKItem{}}(Var'Unds'0:SortWasmCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmCellOpt(inj{WasmCellOpt,KItem}(WasmCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortWasmCellOpt{}, SortKItem{}}(VarWasmCellOpt:SortWasmCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCellOpt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortWasmInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortWasmInt{}, SortKItem{}}(Var'Unds'1:SortWasmInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmInt{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmInt(inj{WasmInt,KItem}(WasmInt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortWasmInt{}, SortKItem{}}(VarWasmInt:SortWasmInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmInt{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmIntToken(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortWasmIntToken{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortWasmIntToken{}, SortKItem{}}(Var'Unds'1:SortWasmIntToken{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmIntToken{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmIntToken(inj{WasmIntToken,KItem}(WasmIntToken))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortWasmIntToken{}, SortKItem{}}(VarWasmIntToken:SortWasmIntToken{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmIntToken{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortWasmString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortWasmString{}, SortKItem{}}(Var'Unds'1:SortWasmString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmString{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmString(inj{WasmString,KItem}(WasmString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortWasmString{}, SortKItem{}}(VarWasmString:SortWasmString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmString{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmStringToken(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortWasmStringToken{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortWasmStringToken{}, SortKItem{}}(Var'Unds'1:SortWasmStringToken{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmStringToken{}(X0:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmStringToken(inj{WasmStringToken,KItem}(WasmStringToken))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortWasmStringToken{}, SortKItem{}}(VarWasmStringToken:SortWasmStringToken{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmStringToken{}(X0:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `lengthValTypes(_)_WASM-DATA_Int_ValTypes`(`.List{"listValTypes"}_ValTypes`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b2b141cf3c8482f6590ee53589e5f05d8c33cafded30e0edffdc74e0b871590d), org.kframework.attributes.Location(Location(252,10,252,40)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValTypes{}, R} (
            X0:SortValTypes{},
            Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}()
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(X0:SortValTypes{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(252,10,252,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b2b141cf3c8482f6590ee53589e5f05d8c33cafded30e0edffdc74e0b871590d")]

// rule `lengthValTypes(_)_WASM-DATA_Int_ValTypes`(listValTypes(_V,VS))=>`_+Int_`(#token("1","Int"),`lengthValTypes(_)_WASM-DATA_Int_ValTypes`(VS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(21f84224447c747dc5d9171e7c55c8711a010092a9910a2103846eaf292b1af4), org.kframework.attributes.Location(Location(253,10,253,64)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortValTypes{}, R} (
            X0:SortValTypes{},
            LbllistValTypes{}(Var'Unds'V:SortValType{},VarVS:SortValTypes{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(X0:SortValTypes{}),
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),LbllengthValTypes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ValTypes{}(VarVS:SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(253,10,253,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("21f84224447c747dc5d9171e7c55c8711a010092a9910a2103846eaf292b1af4")]

// rule `locals2vectype(_)_WASM-TEXT_VecType_LocalDecls`(LDECLS)=>`#locals2vectype(_,_)_WASM-TEXT_VecType_LocalDecls_ValTypes`(LDECLS,`.List{"listValTypes"}_ValTypes`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7a23a33c8db791bd1b59e8763311370fc4eaa15094cf22d4a9e22f4badf88625), org.kframework.attributes.Location(Location(805,11,805,71)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortLocalDecls{}, R} (
            X0:SortLocalDecls{},
            VarLDECLS:SortLocalDecls{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbllocals2vectype'LParUndsRParUnds'WASM-TEXT'Unds'VecType'Unds'LocalDecls{}(X0:SortLocalDecls{}),
        Lbl'Hash'locals2vectype'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(VarLDECLS:SortLocalDecls{},Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(805,11,805,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7a23a33c8db791bd1b59e8763311370fc4eaa15094cf22d4a9e22f4badf88625")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I1 requires `_<=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6), org.kframework.attributes.Location(Location(1113,8,1113,57)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
        VarI1:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1113,8,1113,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I2 requires `_>=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3), org.kframework.attributes.Location(Location(1114,8,1114,57)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
        VarI2:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1114,8,1114,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3")]

// rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415), org.kframework.attributes.Location(Location(837,8,837,29)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblnotBool'Unds'{}(X0:SortBool{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(837,8,837,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415")]

// rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c), org.kframework.attributes.Location(Location(836,8,836,29)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        LblnotBool'Unds'{}(X0:SortBool{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(836,8,836,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c")]

// rule `project:#ti(_,_)_WASM-TEXT_TypesInfo_Map_Int:count`(`#ti(_,_)_WASM-TEXT_TypesInfo_Map_Int`(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTypesInfo{}, R} (
            X0:SortTypesInfo{},
            Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(VarK0:SortMap{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lblproject'ColnHash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int'Coln'count{}(X0:SortTypesInfo{}),
        VarK1:SortInt{}),
      \top{R}()))
  []

// rule `project:#ti(_,_)_WASM-TEXT_TypesInfo_Map_Int:t2i`(`#ti(_,_)_WASM-TEXT_TypesInfo_Map_Int`(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTypesInfo{}, R} (
            X0:SortTypesInfo{},
            Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(VarK0:SortMap{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMap{},R} (
        Lblproject'ColnHash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int'Coln't2i{}(X0:SortTypesInfo{}),
        VarK0:SortMap{}),
      \top{R}()))
  []

// rule `project:AlignArg`(inj{AlignArg,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortAlignArg{}, SortKItem{}}(VarK:SortAlignArg{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortAlignArg{},R} (
        Lblproject'Coln'AlignArg{}(X0:SortK{}),
        VarK:SortAlignArg{}),
      \top{R}()))
  [projection{}()]

// rule `project:Alloc`(inj{Alloc,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortAlloc{}, SortKItem{}}(VarK:SortAlloc{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortAlloc{},R} (
        Lblproject'Coln'Alloc{}(X0:SortK{}),
        VarK:SortAlloc{}),
      \top{R}()))
  [projection{}()]

// rule `project:AllocatedKind`(inj{AllocatedKind,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortAllocatedKind{}, SortKItem{}}(VarK:SortAllocatedKind{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortAllocatedKind{},R} (
        Lblproject'Coln'AllocatedKind{}(X0:SortK{}),
        VarK:SortAllocatedKind{}),
      \top{R}()))
  [projection{}()]

// rule `project:BlockInstr`(inj{BlockInstr,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlockInstr{}, SortKItem{}}(VarK:SortBlockInstr{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBlockInstr{},R} (
        Lblproject'Coln'BlockInstr{}(X0:SortK{}),
        VarK:SortBlockInstr{}),
      \top{R}()))
  [projection{}()]

// rule `project:BlockMetaData`(inj{BlockMetaData,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlockMetaData{}, SortKItem{}}(VarK:SortBlockMetaData{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBlockMetaData{},R} (
        Lblproject'Coln'BlockMetaData{}(X0:SortK{}),
        VarK:SortBlockMetaData{}),
      \top{R}()))
  [projection{}()]

// rule `project:Bool`(inj{Bool,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarK:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBool{},R} (
        Lblproject'Coln'Bool{}(X0:SortK{}),
        VarK:SortBool{}),
      \top{R}()))
  [projection{}()]

// rule `project:Bytes`(inj{Bytes,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBytes{}, SortKItem{}}(VarK:SortBytes{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBytes{},R} (
        Lblproject'Coln'Bytes{}(X0:SortK{}),
        VarK:SortBytes{}),
      \top{R}()))
  [projection{}()]

// rule `project:Context`(inj{Context,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortContext{}, SortKItem{}}(VarK:SortContext{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortContext{},R} (
        Lblproject'Coln'Context{}(X0:SortK{}),
        VarK:SortContext{}),
      \top{R}()))
  [projection{}()]

// rule `project:CurFrameCell`(inj{CurFrameCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurFrameCell{}, SortKItem{}}(VarK:SortCurFrameCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortCurFrameCell{},R} (
        Lblproject'Coln'CurFrameCell{}(X0:SortK{}),
        VarK:SortCurFrameCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:CurFrameCellFragment`(inj{CurFrameCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurFrameCellFragment{}, SortKItem{}}(VarK:SortCurFrameCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortCurFrameCellFragment{},R} (
        Lblproject'Coln'CurFrameCellFragment{}(X0:SortK{}),
        VarK:SortCurFrameCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:CurFrameCellOpt`(inj{CurFrameCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurFrameCellOpt{}, SortKItem{}}(VarK:SortCurFrameCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortCurFrameCellOpt{},R} (
        Lblproject'Coln'CurFrameCellOpt{}(X0:SortK{}),
        VarK:SortCurFrameCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:CurModIdxCell`(inj{CurModIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurModIdxCell{}, SortKItem{}}(VarK:SortCurModIdxCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortCurModIdxCell{},R} (
        Lblproject'Coln'CurModIdxCell{}(X0:SortK{}),
        VarK:SortCurModIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:CurModIdxCellOpt`(inj{CurModIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurModIdxCellOpt{}, SortKItem{}}(VarK:SortCurModIdxCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortCurModIdxCellOpt{},R} (
        Lblproject'Coln'CurModIdxCellOpt{}(X0:SortK{}),
        VarK:SortCurModIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:CvtOp`(inj{CvtOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCvtOp{}, SortKItem{}}(VarK:SortCvtOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortCvtOp{},R} (
        Lblproject'Coln'CvtOp{}(X0:SortK{}),
        VarK:SortCvtOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:Cvtf32Op`(inj{Cvtf32Op,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCvtf32Op{}, SortKItem{}}(VarK:SortCvtf32Op{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortCvtf32Op{},R} (
        Lblproject'Coln'Cvtf32Op{}(X0:SortK{}),
        VarK:SortCvtf32Op{}),
      \top{R}()))
  [projection{}()]

// rule `project:Cvtf64Op`(inj{Cvtf64Op,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCvtf64Op{}, SortKItem{}}(VarK:SortCvtf64Op{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortCvtf64Op{},R} (
        Lblproject'Coln'Cvtf64Op{}(X0:SortK{}),
        VarK:SortCvtf64Op{}),
      \top{R}()))
  [projection{}()]

// rule `project:Cvti32Op`(inj{Cvti32Op,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCvti32Op{}, SortKItem{}}(VarK:SortCvti32Op{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortCvti32Op{},R} (
        Lblproject'Coln'Cvti32Op{}(X0:SortK{}),
        VarK:SortCvti32Op{}),
      \top{R}()))
  [projection{}()]

// rule `project:Cvti64Op`(inj{Cvti64Op,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCvti64Op{}, SortKItem{}}(VarK:SortCvti64Op{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortCvti64Op{},R} (
        Lblproject'Coln'Cvti64Op{}(X0:SortK{}),
        VarK:SortCvti64Op{}),
      \top{R}()))
  [projection{}()]

// rule `project:DataDefn`(inj{DataDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortDataDefn{}, SortKItem{}}(VarK:SortDataDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDataDefn{},R} (
        Lblproject'Coln'DataDefn{}(X0:SortK{}),
        VarK:SortDataDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:DataString`(inj{DataString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortDataString{}, SortKItem{}}(VarK:SortDataString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDataString{},R} (
        Lblproject'Coln'DataString{}(X0:SortK{}),
        VarK:SortDataString{}),
      \top{R}()))
  [projection{}()]

// rule `project:Defn`(inj{Defn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortDefn{}, SortKItem{}}(VarK:SortDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDefn{},R} (
        Lblproject'Coln'Defn{}(X0:SortK{}),
        VarK:SortDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:Defns`(inj{Defns,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortDefns{}, SortKItem{}}(VarK:SortDefns{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'Defns{}(X0:SortK{}),
        VarK:SortDefns{}),
      \top{R}()))
  [projection{}()]

// rule `project:DeterministicMemoryGrowthCell`(inj{DeterministicMemoryGrowthCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortDeterministicMemoryGrowthCell{}, SortKItem{}}(VarK:SortDeterministicMemoryGrowthCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDeterministicMemoryGrowthCell{},R} (
        Lblproject'Coln'DeterministicMemoryGrowthCell{}(X0:SortK{}),
        VarK:SortDeterministicMemoryGrowthCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:DeterministicMemoryGrowthCellOpt`(inj{DeterministicMemoryGrowthCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}}(VarK:SortDeterministicMemoryGrowthCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDeterministicMemoryGrowthCellOpt{},R} (
        Lblproject'Coln'DeterministicMemoryGrowthCellOpt{}(X0:SortK{}),
        VarK:SortDeterministicMemoryGrowthCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ElemDefn`(inj{ElemDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortElemDefn{}, SortKItem{}}(VarK:SortElemDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortElemDefn{},R} (
        Lblproject'Coln'ElemDefn{}(X0:SortK{}),
        VarK:SortElemDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:ElemSegment`(inj{ElemSegment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortElemSegment{}, SortKItem{}}(VarK:SortElemSegment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortElemSegment{},R} (
        Lblproject'Coln'ElemSegment{}(X0:SortK{}),
        VarK:SortElemSegment{}),
      \top{R}()))
  [projection{}()]

// rule `project:EmptyStmt`(inj{EmptyStmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEmptyStmt{}, SortKItem{}}(VarK:SortEmptyStmt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortEmptyStmt{},R} (
        Lblproject'Coln'EmptyStmt{}(X0:SortK{}),
        VarK:SortEmptyStmt{}),
      \top{R}()))
  [projection{}()]

// rule `project:EmptyStmts`(inj{EmptyStmts,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEmptyStmts{}, SortKItem{}}(VarK:SortEmptyStmts{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortEmptyStmts{},R} (
        Lblproject'Coln'EmptyStmts{}(X0:SortK{}),
        VarK:SortEmptyStmts{}),
      \top{R}()))
  [projection{}()]

// rule `project:Endianness`(inj{Endianness,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEndianness{}, SortKItem{}}(VarK:SortEndianness{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortEndianness{},R} (
        Lblproject'Coln'Endianness{}(X0:SortK{}),
        VarK:SortEndianness{}),
      \top{R}()))
  [projection{}()]

// rule `project:ExportDefn`(inj{ExportDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExportDefn{}, SortKItem{}}(VarK:SortExportDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortExportDefn{},R} (
        Lblproject'Coln'ExportDefn{}(X0:SortK{}),
        VarK:SortExportDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:ExportsCell`(inj{ExportsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExportsCell{}, SortKItem{}}(VarK:SortExportsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortExportsCell{},R} (
        Lblproject'Coln'ExportsCell{}(X0:SortK{}),
        VarK:SortExportsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ExportsCellOpt`(inj{ExportsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExportsCellOpt{}, SortKItem{}}(VarK:SortExportsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortExportsCellOpt{},R} (
        Lblproject'Coln'ExportsCellOpt{}(X0:SortK{}),
        VarK:SortExportsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Externval`(inj{Externval,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExternval{}, SortKItem{}}(VarK:SortExternval{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortExternval{},R} (
        Lblproject'Coln'Externval{}(X0:SortK{}),
        VarK:SortExternval{}),
      \top{R}()))
  [projection{}()]

// rule `project:FAddrCell`(inj{FAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFAddrCell{}, SortKItem{}}(VarK:SortFAddrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFAddrCell{},R} (
        Lblproject'Coln'FAddrCell{}(X0:SortK{}),
        VarK:SortFAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FAddrCellOpt`(inj{FAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFAddrCellOpt{}, SortKItem{}}(VarK:SortFAddrCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFAddrCellOpt{},R} (
        Lblproject'Coln'FAddrCellOpt{}(X0:SortK{}),
        VarK:SortFAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FBinOp`(inj{FBinOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFBinOp{}, SortKItem{}}(VarK:SortFBinOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFBinOp{},R} (
        Lblproject'Coln'FBinOp{}(X0:SortK{}),
        VarK:SortFBinOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:FCodeCell`(inj{FCodeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFCodeCell{}, SortKItem{}}(VarK:SortFCodeCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFCodeCell{},R} (
        Lblproject'Coln'FCodeCell{}(X0:SortK{}),
        VarK:SortFCodeCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FCodeCellOpt`(inj{FCodeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFCodeCellOpt{}, SortKItem{}}(VarK:SortFCodeCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFCodeCellOpt{},R} (
        Lblproject'Coln'FCodeCellOpt{}(X0:SortK{}),
        VarK:SortFCodeCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FLocalCell`(inj{FLocalCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFLocalCell{}, SortKItem{}}(VarK:SortFLocalCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFLocalCell{},R} (
        Lblproject'Coln'FLocalCell{}(X0:SortK{}),
        VarK:SortFLocalCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FLocalCellOpt`(inj{FLocalCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFLocalCellOpt{}, SortKItem{}}(VarK:SortFLocalCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFLocalCellOpt{},R} (
        Lblproject'Coln'FLocalCellOpt{}(X0:SortK{}),
        VarK:SortFLocalCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FModInstCell`(inj{FModInstCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFModInstCell{}, SortKItem{}}(VarK:SortFModInstCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFModInstCell{},R} (
        Lblproject'Coln'FModInstCell{}(X0:SortK{}),
        VarK:SortFModInstCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FModInstCellOpt`(inj{FModInstCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFModInstCellOpt{}, SortKItem{}}(VarK:SortFModInstCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFModInstCellOpt{},R} (
        Lblproject'Coln'FModInstCellOpt{}(X0:SortK{}),
        VarK:SortFModInstCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FRelOp`(inj{FRelOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFRelOp{}, SortKItem{}}(VarK:SortFRelOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFRelOp{},R} (
        Lblproject'Coln'FRelOp{}(X0:SortK{}),
        VarK:SortFRelOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:FTypeCell`(inj{FTypeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFTypeCell{}, SortKItem{}}(VarK:SortFTypeCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFTypeCell{},R} (
        Lblproject'Coln'FTypeCell{}(X0:SortK{}),
        VarK:SortFTypeCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FTypeCellOpt`(inj{FTypeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFTypeCellOpt{}, SortKItem{}}(VarK:SortFTypeCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFTypeCellOpt{},R} (
        Lblproject'Coln'FTypeCellOpt{}(X0:SortK{}),
        VarK:SortFTypeCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FUnOp`(inj{FUnOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFUnOp{}, SortKItem{}}(VarK:SortFUnOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFUnOp{},R} (
        Lblproject'Coln'FUnOp{}(X0:SortK{}),
        VarK:SortFUnOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:FVal`(inj{FVal,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFVal{}, SortKItem{}}(VarK:SortFVal{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFVal{},R} (
        Lblproject'Coln'FVal{}(X0:SortK{}),
        VarK:SortFVal{}),
      \top{R}()))
  [projection{}()]

// rule `project:FValType`(inj{FValType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFValType{}, SortKItem{}}(VarK:SortFValType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFValType{},R} (
        Lblproject'Coln'FValType{}(X0:SortK{}),
        VarK:SortFValType{}),
      \top{R}()))
  [projection{}()]

// rule `project:Float`(inj{Float,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFloat{}, SortKItem{}}(VarK:SortFloat{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFloat{},R} (
        Lblproject'Coln'Float{}(X0:SortK{}),
        VarK:SortFloat{}),
      \top{R}()))
  [projection{}()]

// rule `project:FoldedInstr`(inj{FoldedInstr,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(VarK:SortFoldedInstr{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFoldedInstr{},R} (
        Lblproject'Coln'FoldedInstr{}(X0:SortK{}),
        VarK:SortFoldedInstr{}),
      \top{R}()))
  [projection{}()]

// rule `project:Frame`(inj{Frame,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFrame{}, SortKItem{}}(VarK:SortFrame{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFrame{},R} (
        Lblproject'Coln'Frame{}(X0:SortK{}),
        VarK:SortFrame{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncAddrsCell`(inj{FuncAddrsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncAddrsCell{}, SortKItem{}}(VarK:SortFuncAddrsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncAddrsCell{},R} (
        Lblproject'Coln'FuncAddrsCell{}(X0:SortK{}),
        VarK:SortFuncAddrsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncAddrsCellOpt`(inj{FuncAddrsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncAddrsCellOpt{}, SortKItem{}}(VarK:SortFuncAddrsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncAddrsCellOpt{},R} (
        Lblproject'Coln'FuncAddrsCellOpt{}(X0:SortK{}),
        VarK:SortFuncAddrsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncDefCell`(inj{FuncDefCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncDefCell{}, SortKItem{}}(VarK:SortFuncDefCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncDefCell{},R} (
        Lblproject'Coln'FuncDefCell{}(X0:SortK{}),
        VarK:SortFuncDefCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncDefCellFragment`(inj{FuncDefCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncDefCellFragment{}, SortKItem{}}(VarK:SortFuncDefCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncDefCellFragment{},R} (
        Lblproject'Coln'FuncDefCellFragment{}(X0:SortK{}),
        VarK:SortFuncDefCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncDefCellMap`(inj{FuncDefCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncDefCellMap{}, SortKItem{}}(VarK:SortFuncDefCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncDefCellMap{},R} (
        Lblproject'Coln'FuncDefCellMap{}(X0:SortK{}),
        VarK:SortFuncDefCellMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncDefn`(inj{FuncDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncDefn{}, SortKItem{}}(VarK:SortFuncDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncDefn{},R} (
        Lblproject'Coln'FuncDefn{}(X0:SortK{}),
        VarK:SortFuncDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncIdCell`(inj{FuncIdCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncIdCell{}, SortKItem{}}(VarK:SortFuncIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncIdCell{},R} (
        Lblproject'Coln'FuncIdCell{}(X0:SortK{}),
        VarK:SortFuncIdCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncIdCellOpt`(inj{FuncIdCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncIdCellOpt{}, SortKItem{}}(VarK:SortFuncIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncIdCellOpt{},R} (
        Lblproject'Coln'FuncIdCellOpt{}(X0:SortK{}),
        VarK:SortFuncIdCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncIdsCell`(inj{FuncIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncIdsCell{}, SortKItem{}}(VarK:SortFuncIdsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncIdsCell{},R} (
        Lblproject'Coln'FuncIdsCell{}(X0:SortK{}),
        VarK:SortFuncIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncIdsCellOpt`(inj{FuncIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncIdsCellOpt{}, SortKItem{}}(VarK:SortFuncIdsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncIdsCellOpt{},R} (
        Lblproject'Coln'FuncIdsCellOpt{}(X0:SortK{}),
        VarK:SortFuncIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncMetadata`(inj{FuncMetadata,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncMetadata{}, SortKItem{}}(VarK:SortFuncMetadata{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncMetadata{},R} (
        Lblproject'Coln'FuncMetadata{}(X0:SortK{}),
        VarK:SortFuncMetadata{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncMetadataCell`(inj{FuncMetadataCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncMetadataCell{}, SortKItem{}}(VarK:SortFuncMetadataCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncMetadataCell{},R} (
        Lblproject'Coln'FuncMetadataCell{}(X0:SortK{}),
        VarK:SortFuncMetadataCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncMetadataCellFragment`(inj{FuncMetadataCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncMetadataCellFragment{}, SortKItem{}}(VarK:SortFuncMetadataCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncMetadataCellFragment{},R} (
        Lblproject'Coln'FuncMetadataCellFragment{}(X0:SortK{}),
        VarK:SortFuncMetadataCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncMetadataCellOpt`(inj{FuncMetadataCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncMetadataCellOpt{}, SortKItem{}}(VarK:SortFuncMetadataCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncMetadataCellOpt{},R} (
        Lblproject'Coln'FuncMetadataCellOpt{}(X0:SortK{}),
        VarK:SortFuncMetadataCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncSpec`(inj{FuncSpec,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncSpec{}, SortKItem{}}(VarK:SortFuncSpec{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncSpec{},R} (
        Lblproject'Coln'FuncSpec{}(X0:SortK{}),
        VarK:SortFuncSpec{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncType`(inj{FuncType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncType{}, SortKItem{}}(VarK:SortFuncType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncType{},R} (
        Lblproject'Coln'FuncType{}(X0:SortK{}),
        VarK:SortFuncType{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncsCell`(inj{FuncsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncsCell{}, SortKItem{}}(VarK:SortFuncsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncsCell{},R} (
        Lblproject'Coln'FuncsCell{}(X0:SortK{}),
        VarK:SortFuncsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncsCellFragment`(inj{FuncsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncsCellFragment{}, SortKItem{}}(VarK:SortFuncsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncsCellFragment{},R} (
        Lblproject'Coln'FuncsCellFragment{}(X0:SortK{}),
        VarK:SortFuncsCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncsCellOpt`(inj{FuncsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFuncsCellOpt{}, SortKItem{}}(VarK:SortFuncsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncsCellOpt{},R} (
        Lblproject'Coln'FuncsCellOpt{}(X0:SortK{}),
        VarK:SortFuncsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GAddrCell`(inj{GAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGAddrCell{}, SortKItem{}}(VarK:SortGAddrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGAddrCell{},R} (
        Lblproject'Coln'GAddrCell{}(X0:SortK{}),
        VarK:SortGAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GAddrCellOpt`(inj{GAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGAddrCellOpt{}, SortKItem{}}(VarK:SortGAddrCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGAddrCellOpt{},R} (
        Lblproject'Coln'GAddrCellOpt{}(X0:SortK{}),
        VarK:SortGAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GMutCell`(inj{GMutCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGMutCell{}, SortKItem{}}(VarK:SortGMutCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGMutCell{},R} (
        Lblproject'Coln'GMutCell{}(X0:SortK{}),
        VarK:SortGMutCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GMutCellOpt`(inj{GMutCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGMutCellOpt{}, SortKItem{}}(VarK:SortGMutCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGMutCellOpt{},R} (
        Lblproject'Coln'GMutCellOpt{}(X0:SortK{}),
        VarK:SortGMutCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GValueCell`(inj{GValueCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGValueCell{}, SortKItem{}}(VarK:SortGValueCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGValueCell{},R} (
        Lblproject'Coln'GValueCell{}(X0:SortK{}),
        VarK:SortGValueCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GValueCellOpt`(inj{GValueCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGValueCellOpt{}, SortKItem{}}(VarK:SortGValueCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGValueCellOpt{},R} (
        Lblproject'Coln'GValueCellOpt{}(X0:SortK{}),
        VarK:SortGValueCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedCounterCell`(inj{GeneratedCounterCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarK:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGeneratedCounterCell{},R} (
        Lblproject'Coln'GeneratedCounterCell{}(X0:SortK{}),
        VarK:SortGeneratedCounterCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedCounterCellOpt`(inj{GeneratedCounterCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarK:SortGeneratedCounterCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGeneratedCounterCellOpt{},R} (
        Lblproject'Coln'GeneratedCounterCellOpt{}(X0:SortK{}),
        VarK:SortGeneratedCounterCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedTopCell`(inj{GeneratedTopCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarK:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGeneratedTopCell{},R} (
        Lblproject'Coln'GeneratedTopCell{}(X0:SortK{}),
        VarK:SortGeneratedTopCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedTopCellFragment`(inj{GeneratedTopCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarK:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGeneratedTopCellFragment{},R} (
        Lblproject'Coln'GeneratedTopCellFragment{}(X0:SortK{}),
        VarK:SortGeneratedTopCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobIdsCell`(inj{GlobIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobIdsCell{}, SortKItem{}}(VarK:SortGlobIdsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobIdsCell{},R} (
        Lblproject'Coln'GlobIdsCell{}(X0:SortK{}),
        VarK:SortGlobIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobIdsCellOpt`(inj{GlobIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobIdsCellOpt{}, SortKItem{}}(VarK:SortGlobIdsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobIdsCellOpt{},R} (
        Lblproject'Coln'GlobIdsCellOpt{}(X0:SortK{}),
        VarK:SortGlobIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalAddrsCell`(inj{GlobalAddrsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalAddrsCell{}, SortKItem{}}(VarK:SortGlobalAddrsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobalAddrsCell{},R} (
        Lblproject'Coln'GlobalAddrsCell{}(X0:SortK{}),
        VarK:SortGlobalAddrsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalAddrsCellOpt`(inj{GlobalAddrsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalAddrsCellOpt{}, SortKItem{}}(VarK:SortGlobalAddrsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobalAddrsCellOpt{},R} (
        Lblproject'Coln'GlobalAddrsCellOpt{}(X0:SortK{}),
        VarK:SortGlobalAddrsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalDefn`(inj{GlobalDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(VarK:SortGlobalDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobalDefn{},R} (
        Lblproject'Coln'GlobalDefn{}(X0:SortK{}),
        VarK:SortGlobalDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalInstCell`(inj{GlobalInstCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalInstCell{}, SortKItem{}}(VarK:SortGlobalInstCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobalInstCell{},R} (
        Lblproject'Coln'GlobalInstCell{}(X0:SortK{}),
        VarK:SortGlobalInstCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalInstCellFragment`(inj{GlobalInstCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalInstCellFragment{}, SortKItem{}}(VarK:SortGlobalInstCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobalInstCellFragment{},R} (
        Lblproject'Coln'GlobalInstCellFragment{}(X0:SortK{}),
        VarK:SortGlobalInstCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalInstCellMap`(inj{GlobalInstCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalInstCellMap{}, SortKItem{}}(VarK:SortGlobalInstCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobalInstCellMap{},R} (
        Lblproject'Coln'GlobalInstCellMap{}(X0:SortK{}),
        VarK:SortGlobalInstCellMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalSpec`(inj{GlobalSpec,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalSpec{}, SortKItem{}}(VarK:SortGlobalSpec{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobalSpec{},R} (
        Lblproject'Coln'GlobalSpec{}(X0:SortK{}),
        VarK:SortGlobalSpec{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalType`(inj{GlobalType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalType{}, SortKItem{}}(VarK:SortGlobalType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobalType{},R} (
        Lblproject'Coln'GlobalType{}(X0:SortK{}),
        VarK:SortGlobalType{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalsCell`(inj{GlobalsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalsCell{}, SortKItem{}}(VarK:SortGlobalsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobalsCell{},R} (
        Lblproject'Coln'GlobalsCell{}(X0:SortK{}),
        VarK:SortGlobalsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalsCellFragment`(inj{GlobalsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalsCellFragment{}, SortKItem{}}(VarK:SortGlobalsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobalsCellFragment{},R} (
        Lblproject'Coln'GlobalsCellFragment{}(X0:SortK{}),
        VarK:SortGlobalsCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalsCellOpt`(inj{GlobalsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGlobalsCellOpt{}, SortKItem{}}(VarK:SortGlobalsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobalsCellOpt{},R} (
        Lblproject'Coln'GlobalsCellOpt{}(X0:SortK{}),
        VarK:SortGlobalsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:IBinOp`(inj{IBinOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIBinOp{}, SortKItem{}}(VarK:SortIBinOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortIBinOp{},R} (
        Lblproject'Coln'IBinOp{}(X0:SortK{}),
        VarK:SortIBinOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:IRelOp`(inj{IRelOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIRelOp{}, SortKItem{}}(VarK:SortIRelOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortIRelOp{},R} (
        Lblproject'Coln'IRelOp{}(X0:SortK{}),
        VarK:SortIRelOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:IUnOp`(inj{IUnOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIUnOp{}, SortKItem{}}(VarK:SortIUnOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortIUnOp{},R} (
        Lblproject'Coln'IUnOp{}(X0:SortK{}),
        VarK:SortIUnOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:IVal`(inj{IVal,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIVal{}, SortKItem{}}(VarK:SortIVal{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortIVal{},R} (
        Lblproject'Coln'IVal{}(X0:SortK{}),
        VarK:SortIVal{}),
      \top{R}()))
  [projection{}()]

// rule `project:IValType`(inj{IValType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIValType{}, SortKItem{}}(VarK:SortIValType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortIValType{},R} (
        Lblproject'Coln'IValType{}(X0:SortK{}),
        VarK:SortIValType{}),
      \top{R}()))
  [projection{}()]

// rule `project:Identifier`(inj{Identifier,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdentifier{}, SortKItem{}}(VarK:SortIdentifier{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortIdentifier{},R} (
        Lblproject'Coln'Identifier{}(X0:SortK{}),
        VarK:SortIdentifier{}),
      \top{R}()))
  [projection{}()]

// rule `project:IdentifierToken`(inj{IdentifierToken,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdentifierToken{}, SortKItem{}}(VarK:SortIdentifierToken{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortIdentifierToken{},R} (
        Lblproject'Coln'IdentifierToken{}(X0:SortK{}),
        VarK:SortIdentifierToken{}),
      \top{R}()))
  [projection{}()]

// rule `project:ImportDefn`(inj{ImportDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortImportDefn{}, SortKItem{}}(VarK:SortImportDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortImportDefn{},R} (
        Lblproject'Coln'ImportDefn{}(X0:SortK{}),
        VarK:SortImportDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:ImportDesc`(inj{ImportDesc,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortImportDesc{}, SortKItem{}}(VarK:SortImportDesc{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortImportDesc{},R} (
        Lblproject'Coln'ImportDesc{}(X0:SortK{}),
        VarK:SortImportDesc{}),
      \top{R}()))
  [projection{}()]

// rule `project:Index`(inj{Index,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIndex{}, SortKItem{}}(VarK:SortIndex{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortIndex{},R} (
        Lblproject'Coln'Index{}(X0:SortK{}),
        VarK:SortIndex{}),
      \top{R}()))
  [projection{}()]

// rule `project:InlineExport`(inj{InlineExport,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInlineExport{}, SortKItem{}}(VarK:SortInlineExport{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInlineExport{},R} (
        Lblproject'Coln'InlineExport{}(X0:SortK{}),
        VarK:SortInlineExport{}),
      \top{R}()))
  [projection{}()]

// rule `project:InlineImport`(inj{InlineImport,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInlineImport{}, SortKItem{}}(VarK:SortInlineImport{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInlineImport{},R} (
        Lblproject'Coln'InlineImport{}(X0:SortK{}),
        VarK:SortInlineImport{}),
      \top{R}()))
  [projection{}()]

// rule `project:Instr`(inj{Instr,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInstr{}, SortKItem{}}(VarK:SortInstr{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInstr{},R} (
        Lblproject'Coln'Instr{}(X0:SortK{}),
        VarK:SortInstr{}),
      \top{R}()))
  [projection{}()]

// rule `project:Instrs`(inj{Instrs,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInstrs{}, SortKItem{}}(VarK:SortInstrs{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lblproject'Coln'Instrs{}(X0:SortK{}),
        VarK:SortInstrs{}),
      \top{R}()))
  [projection{}()]

// rule `project:InstrsCell`(inj{InstrsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInstrsCell{}, SortKItem{}}(VarK:SortInstrsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInstrsCell{},R} (
        Lblproject'Coln'InstrsCell{}(X0:SortK{}),
        VarK:SortInstrsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:InstrsCellOpt`(inj{InstrsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInstrsCellOpt{}, SortKItem{}}(VarK:SortInstrsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInstrsCellOpt{},R} (
        Lblproject'Coln'InstrsCellOpt{}(X0:SortK{}),
        VarK:SortInstrsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Int`(inj{Int,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarK:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lblproject'Coln'Int{}(X0:SortK{}),
        VarK:SortInt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Ints`(inj{Ints,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInts{}, SortKItem{}}(VarK:SortInts{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInts{},R} (
        Lblproject'Coln'Ints{}(X0:SortK{}),
        VarK:SortInts{}),
      \top{R}()))
  [projection{}()]

// rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortK{},R} (
        Lblproject'Coln'K{}(X0:SortK{}),
        VarK:SortK{}),
      \top{R}()))
  [projection{}()]

// rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarK:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortKItem{},R} (
        Lblproject'Coln'KItem{}(X0:SortK{}),
        VarK:SortKItem{}),
      \top{R}()))
  [projection{}()]

// rule `project:Label`(inj{Label,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLabel{}, SortKItem{}}(VarK:SortLabel{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortLabel{},R} (
        Lblproject'Coln'Label{}(X0:SortK{}),
        VarK:SortLabel{}),
      \top{R}()))
  [projection{}()]

// rule `project:Limits`(inj{Limits,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLimits{}, SortKItem{}}(VarK:SortLimits{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortLimits{},R} (
        Lblproject'Coln'Limits{}(X0:SortK{}),
        VarK:SortLimits{}),
      \top{R}()))
  [projection{}()]

// rule `project:List`(inj{List,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarK:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortList{},R} (
        Lblproject'Coln'List{}(X0:SortK{}),
        VarK:SortList{}),
      \top{R}()))
  [projection{}()]

// rule `project:LoadOp`(inj{LoadOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLoadOp{}, SortKItem{}}(VarK:SortLoadOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortLoadOp{},R} (
        Lblproject'Coln'LoadOp{}(X0:SortK{}),
        VarK:SortLoadOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:LoadOpM`(inj{LoadOpM,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLoadOpM{}, SortKItem{}}(VarK:SortLoadOpM{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortLoadOpM{},R} (
        Lblproject'Coln'LoadOpM{}(X0:SortK{}),
        VarK:SortLoadOpM{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalDecl`(inj{LocalDecl,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLocalDecl{}, SortKItem{}}(VarK:SortLocalDecl{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortLocalDecl{},R} (
        Lblproject'Coln'LocalDecl{}(X0:SortK{}),
        VarK:SortLocalDecl{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalDecls`(inj{LocalDecls,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLocalDecls{}, SortKItem{}}(VarK:SortLocalDecls{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortLocalDecls{},R} (
        Lblproject'Coln'LocalDecls{}(X0:SortK{}),
        VarK:SortLocalDecls{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalIdsCell`(inj{LocalIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLocalIdsCell{}, SortKItem{}}(VarK:SortLocalIdsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortLocalIdsCell{},R} (
        Lblproject'Coln'LocalIdsCell{}(X0:SortK{}),
        VarK:SortLocalIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalIdsCellOpt`(inj{LocalIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLocalIdsCellOpt{}, SortKItem{}}(VarK:SortLocalIdsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortLocalIdsCellOpt{},R} (
        Lblproject'Coln'LocalIdsCellOpt{}(X0:SortK{}),
        VarK:SortLocalIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalsCell`(inj{LocalsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLocalsCell{}, SortKItem{}}(VarK:SortLocalsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortLocalsCell{},R} (
        Lblproject'Coln'LocalsCell{}(X0:SortK{}),
        VarK:SortLocalsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalsCellOpt`(inj{LocalsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLocalsCellOpt{}, SortKItem{}}(VarK:SortLocalsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortLocalsCellOpt{},R} (
        Lblproject'Coln'LocalsCellOpt{}(X0:SortK{}),
        VarK:SortLocalsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MAddrCell`(inj{MAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMAddrCell{}, SortKItem{}}(VarK:SortMAddrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMAddrCell{},R} (
        Lblproject'Coln'MAddrCell{}(X0:SortK{}),
        VarK:SortMAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MAddrCellOpt`(inj{MAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMAddrCellOpt{}, SortKItem{}}(VarK:SortMAddrCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMAddrCellOpt{},R} (
        Lblproject'Coln'MAddrCellOpt{}(X0:SortK{}),
        VarK:SortMAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MainStoreCell`(inj{MainStoreCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMainStoreCell{}, SortKItem{}}(VarK:SortMainStoreCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMainStoreCell{},R} (
        Lblproject'Coln'MainStoreCell{}(X0:SortK{}),
        VarK:SortMainStoreCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MainStoreCellFragment`(inj{MainStoreCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMainStoreCellFragment{}, SortKItem{}}(VarK:SortMainStoreCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMainStoreCellFragment{},R} (
        Lblproject'Coln'MainStoreCellFragment{}(X0:SortK{}),
        VarK:SortMainStoreCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:MainStoreCellOpt`(inj{MainStoreCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMainStoreCellOpt{}, SortKItem{}}(VarK:SortMainStoreCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMainStoreCellOpt{},R} (
        Lblproject'Coln'MainStoreCellOpt{}(X0:SortK{}),
        VarK:SortMainStoreCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Map`(inj{Map,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarK:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMap{},R} (
        Lblproject'Coln'Map{}(X0:SortK{}),
        VarK:SortMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:MdataCell`(inj{MdataCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMdataCell{}, SortKItem{}}(VarK:SortMdataCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMdataCell{},R} (
        Lblproject'Coln'MdataCell{}(X0:SortK{}),
        VarK:SortMdataCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MdataCellOpt`(inj{MdataCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMdataCellOpt{}, SortKItem{}}(VarK:SortMdataCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMdataCellOpt{},R} (
        Lblproject'Coln'MdataCellOpt{}(X0:SortK{}),
        VarK:SortMdataCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemAddrsCell`(inj{MemAddrsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemAddrsCell{}, SortKItem{}}(VarK:SortMemAddrsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMemAddrsCell{},R} (
        Lblproject'Coln'MemAddrsCell{}(X0:SortK{}),
        VarK:SortMemAddrsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemAddrsCellOpt`(inj{MemAddrsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemAddrsCellOpt{}, SortKItem{}}(VarK:SortMemAddrsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMemAddrsCellOpt{},R} (
        Lblproject'Coln'MemAddrsCellOpt{}(X0:SortK{}),
        VarK:SortMemAddrsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemArg`(inj{MemArg,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemArg{}, SortKItem{}}(VarK:SortMemArg{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMemArg{},R} (
        Lblproject'Coln'MemArg{}(X0:SortK{}),
        VarK:SortMemArg{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemIdsCell`(inj{MemIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemIdsCell{}, SortKItem{}}(VarK:SortMemIdsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMemIdsCell{},R} (
        Lblproject'Coln'MemIdsCell{}(X0:SortK{}),
        VarK:SortMemIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemIdsCellOpt`(inj{MemIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemIdsCellOpt{}, SortKItem{}}(VarK:SortMemIdsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMemIdsCellOpt{},R} (
        Lblproject'Coln'MemIdsCellOpt{}(X0:SortK{}),
        VarK:SortMemIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemInstCell`(inj{MemInstCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemInstCell{}, SortKItem{}}(VarK:SortMemInstCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMemInstCell{},R} (
        Lblproject'Coln'MemInstCell{}(X0:SortK{}),
        VarK:SortMemInstCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemInstCellFragment`(inj{MemInstCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemInstCellFragment{}, SortKItem{}}(VarK:SortMemInstCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMemInstCellFragment{},R} (
        Lblproject'Coln'MemInstCellFragment{}(X0:SortK{}),
        VarK:SortMemInstCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemInstCellMap`(inj{MemInstCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemInstCellMap{}, SortKItem{}}(VarK:SortMemInstCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMemInstCellMap{},R} (
        Lblproject'Coln'MemInstCellMap{}(X0:SortK{}),
        VarK:SortMemInstCellMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemType`(inj{MemType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemType{}, SortKItem{}}(VarK:SortMemType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMemType{},R} (
        Lblproject'Coln'MemType{}(X0:SortK{}),
        VarK:SortMemType{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemoryDefn`(inj{MemoryDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(VarK:SortMemoryDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMemoryDefn{},R} (
        Lblproject'Coln'MemoryDefn{}(X0:SortK{}),
        VarK:SortMemoryDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemorySpec`(inj{MemorySpec,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemorySpec{}, SortKItem{}}(VarK:SortMemorySpec{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMemorySpec{},R} (
        Lblproject'Coln'MemorySpec{}(X0:SortK{}),
        VarK:SortMemorySpec{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemsCell`(inj{MemsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemsCell{}, SortKItem{}}(VarK:SortMemsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMemsCell{},R} (
        Lblproject'Coln'MemsCell{}(X0:SortK{}),
        VarK:SortMemsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemsCellFragment`(inj{MemsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemsCellFragment{}, SortKItem{}}(VarK:SortMemsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMemsCellFragment{},R} (
        Lblproject'Coln'MemsCellFragment{}(X0:SortK{}),
        VarK:SortMemsCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemsCellOpt`(inj{MemsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMemsCellOpt{}, SortKItem{}}(VarK:SortMemsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMemsCellOpt{},R} (
        Lblproject'Coln'MemsCellOpt{}(X0:SortK{}),
        VarK:SortMemsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MmaxCell`(inj{MmaxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMmaxCell{}, SortKItem{}}(VarK:SortMmaxCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMmaxCell{},R} (
        Lblproject'Coln'MmaxCell{}(X0:SortK{}),
        VarK:SortMmaxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MmaxCellOpt`(inj{MmaxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMmaxCellOpt{}, SortKItem{}}(VarK:SortMmaxCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMmaxCellOpt{},R} (
        Lblproject'Coln'MmaxCellOpt{}(X0:SortK{}),
        VarK:SortMmaxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModIdxCell`(inj{ModIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModIdxCell{}, SortKItem{}}(VarK:SortModIdxCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModIdxCell{},R} (
        Lblproject'Coln'ModIdxCell{}(X0:SortK{}),
        VarK:SortModIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModIdxCellOpt`(inj{ModIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModIdxCellOpt{}, SortKItem{}}(VarK:SortModIdxCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModIdxCellOpt{},R} (
        Lblproject'Coln'ModIdxCellOpt{}(X0:SortK{}),
        VarK:SortModIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleDecl`(inj{ModuleDecl,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleDecl{}, SortKItem{}}(VarK:SortModuleDecl{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lblproject'Coln'ModuleDecl{}(X0:SortK{}),
        VarK:SortModuleDecl{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleFileNameCell`(inj{ModuleFileNameCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleFileNameCell{}, SortKItem{}}(VarK:SortModuleFileNameCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleFileNameCell{},R} (
        Lblproject'Coln'ModuleFileNameCell{}(X0:SortK{}),
        VarK:SortModuleFileNameCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleFileNameCellOpt`(inj{ModuleFileNameCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleFileNameCellOpt{}, SortKItem{}}(VarK:SortModuleFileNameCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleFileNameCellOpt{},R} (
        Lblproject'Coln'ModuleFileNameCellOpt{}(X0:SortK{}),
        VarK:SortModuleFileNameCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleIdCell`(inj{ModuleIdCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleIdCell{}, SortKItem{}}(VarK:SortModuleIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleIdCell{},R} (
        Lblproject'Coln'ModuleIdCell{}(X0:SortK{}),
        VarK:SortModuleIdCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleIdCellOpt`(inj{ModuleIdCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleIdCellOpt{}, SortKItem{}}(VarK:SortModuleIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleIdCellOpt{},R} (
        Lblproject'Coln'ModuleIdCellOpt{}(X0:SortK{}),
        VarK:SortModuleIdCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleIdsCell`(inj{ModuleIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleIdsCell{}, SortKItem{}}(VarK:SortModuleIdsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleIdsCell{},R} (
        Lblproject'Coln'ModuleIdsCell{}(X0:SortK{}),
        VarK:SortModuleIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleIdsCellOpt`(inj{ModuleIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleIdsCellOpt{}, SortKItem{}}(VarK:SortModuleIdsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleIdsCellOpt{},R} (
        Lblproject'Coln'ModuleIdsCellOpt{}(X0:SortK{}),
        VarK:SortModuleIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstCell`(inj{ModuleInstCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleInstCell{}, SortKItem{}}(VarK:SortModuleInstCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleInstCell{},R} (
        Lblproject'Coln'ModuleInstCell{}(X0:SortK{}),
        VarK:SortModuleInstCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstCellFragment`(inj{ModuleInstCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleInstCellFragment{}, SortKItem{}}(VarK:SortModuleInstCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleInstCellFragment{},R} (
        Lblproject'Coln'ModuleInstCellFragment{}(X0:SortK{}),
        VarK:SortModuleInstCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstCellMap`(inj{ModuleInstCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleInstCellMap{}, SortKItem{}}(VarK:SortModuleInstCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleInstCellMap{},R} (
        Lblproject'Coln'ModuleInstCellMap{}(X0:SortK{}),
        VarK:SortModuleInstCellMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstancesCell`(inj{ModuleInstancesCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleInstancesCell{}, SortKItem{}}(VarK:SortModuleInstancesCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleInstancesCell{},R} (
        Lblproject'Coln'ModuleInstancesCell{}(X0:SortK{}),
        VarK:SortModuleInstancesCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstancesCellFragment`(inj{ModuleInstancesCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleInstancesCellFragment{}, SortKItem{}}(VarK:SortModuleInstancesCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleInstancesCellFragment{},R} (
        Lblproject'Coln'ModuleInstancesCellFragment{}(X0:SortK{}),
        VarK:SortModuleInstancesCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstancesCellOpt`(inj{ModuleInstancesCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleInstancesCellOpt{}, SortKItem{}}(VarK:SortModuleInstancesCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleInstancesCellOpt{},R} (
        Lblproject'Coln'ModuleInstancesCellOpt{}(X0:SortK{}),
        VarK:SortModuleInstancesCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleMetadata`(inj{ModuleMetadata,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleMetadata{}, SortKItem{}}(VarK:SortModuleMetadata{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleMetadata{},R} (
        Lblproject'Coln'ModuleMetadata{}(X0:SortK{}),
        VarK:SortModuleMetadata{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleMetadataCell`(inj{ModuleMetadataCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleMetadataCell{}, SortKItem{}}(VarK:SortModuleMetadataCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleMetadataCell{},R} (
        Lblproject'Coln'ModuleMetadataCell{}(X0:SortK{}),
        VarK:SortModuleMetadataCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleMetadataCellFragment`(inj{ModuleMetadataCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleMetadataCellFragment{}, SortKItem{}}(VarK:SortModuleMetadataCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleMetadataCellFragment{},R} (
        Lblproject'Coln'ModuleMetadataCellFragment{}(X0:SortK{}),
        VarK:SortModuleMetadataCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleMetadataCellOpt`(inj{ModuleMetadataCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleMetadataCellOpt{}, SortKItem{}}(VarK:SortModuleMetadataCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleMetadataCellOpt{},R} (
        Lblproject'Coln'ModuleMetadataCellOpt{}(X0:SortK{}),
        VarK:SortModuleMetadataCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleRegistryCell`(inj{ModuleRegistryCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleRegistryCell{}, SortKItem{}}(VarK:SortModuleRegistryCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleRegistryCell{},R} (
        Lblproject'Coln'ModuleRegistryCell{}(X0:SortK{}),
        VarK:SortModuleRegistryCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleRegistryCellOpt`(inj{ModuleRegistryCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortModuleRegistryCellOpt{}, SortKItem{}}(VarK:SortModuleRegistryCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleRegistryCellOpt{},R} (
        Lblproject'Coln'ModuleRegistryCellOpt{}(X0:SortK{}),
        VarK:SortModuleRegistryCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MsizeCell`(inj{MsizeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMsizeCell{}, SortKItem{}}(VarK:SortMsizeCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMsizeCell{},R} (
        Lblproject'Coln'MsizeCell{}(X0:SortK{}),
        VarK:SortMsizeCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MsizeCellOpt`(inj{MsizeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMsizeCellOpt{}, SortKItem{}}(VarK:SortMsizeCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMsizeCellOpt{},R} (
        Lblproject'Coln'MsizeCellOpt{}(X0:SortK{}),
        VarK:SortMsizeCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Mut`(inj{Mut,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMut{}, SortKItem{}}(VarK:SortMut{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMut{},R} (
        Lblproject'Coln'Mut{}(X0:SortK{}),
        VarK:SortMut{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextFuncAddrCell`(inj{NextFuncAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextFuncAddrCell{}, SortKItem{}}(VarK:SortNextFuncAddrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNextFuncAddrCell{},R} (
        Lblproject'Coln'NextFuncAddrCell{}(X0:SortK{}),
        VarK:SortNextFuncAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextFuncAddrCellOpt`(inj{NextFuncAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextFuncAddrCellOpt{}, SortKItem{}}(VarK:SortNextFuncAddrCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNextFuncAddrCellOpt{},R} (
        Lblproject'Coln'NextFuncAddrCellOpt{}(X0:SortK{}),
        VarK:SortNextFuncAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextFuncIdxCell`(inj{NextFuncIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextFuncIdxCell{}, SortKItem{}}(VarK:SortNextFuncIdxCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNextFuncIdxCell{},R} (
        Lblproject'Coln'NextFuncIdxCell{}(X0:SortK{}),
        VarK:SortNextFuncIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextFuncIdxCellOpt`(inj{NextFuncIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextFuncIdxCellOpt{}, SortKItem{}}(VarK:SortNextFuncIdxCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNextFuncIdxCellOpt{},R} (
        Lblproject'Coln'NextFuncIdxCellOpt{}(X0:SortK{}),
        VarK:SortNextFuncIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextGlobAddrCell`(inj{NextGlobAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextGlobAddrCell{}, SortKItem{}}(VarK:SortNextGlobAddrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNextGlobAddrCell{},R} (
        Lblproject'Coln'NextGlobAddrCell{}(X0:SortK{}),
        VarK:SortNextGlobAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextGlobAddrCellOpt`(inj{NextGlobAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextGlobAddrCellOpt{}, SortKItem{}}(VarK:SortNextGlobAddrCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNextGlobAddrCellOpt{},R} (
        Lblproject'Coln'NextGlobAddrCellOpt{}(X0:SortK{}),
        VarK:SortNextGlobAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextGlobIdxCell`(inj{NextGlobIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextGlobIdxCell{}, SortKItem{}}(VarK:SortNextGlobIdxCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNextGlobIdxCell{},R} (
        Lblproject'Coln'NextGlobIdxCell{}(X0:SortK{}),
        VarK:SortNextGlobIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextGlobIdxCellOpt`(inj{NextGlobIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextGlobIdxCellOpt{}, SortKItem{}}(VarK:SortNextGlobIdxCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNextGlobIdxCellOpt{},R} (
        Lblproject'Coln'NextGlobIdxCellOpt{}(X0:SortK{}),
        VarK:SortNextGlobIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextMemAddrCell`(inj{NextMemAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextMemAddrCell{}, SortKItem{}}(VarK:SortNextMemAddrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNextMemAddrCell{},R} (
        Lblproject'Coln'NextMemAddrCell{}(X0:SortK{}),
        VarK:SortNextMemAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextMemAddrCellOpt`(inj{NextMemAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextMemAddrCellOpt{}, SortKItem{}}(VarK:SortNextMemAddrCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNextMemAddrCellOpt{},R} (
        Lblproject'Coln'NextMemAddrCellOpt{}(X0:SortK{}),
        VarK:SortNextMemAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextModuleIdxCell`(inj{NextModuleIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextModuleIdxCell{}, SortKItem{}}(VarK:SortNextModuleIdxCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNextModuleIdxCell{},R} (
        Lblproject'Coln'NextModuleIdxCell{}(X0:SortK{}),
        VarK:SortNextModuleIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextModuleIdxCellOpt`(inj{NextModuleIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextModuleIdxCellOpt{}, SortKItem{}}(VarK:SortNextModuleIdxCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNextModuleIdxCellOpt{},R} (
        Lblproject'Coln'NextModuleIdxCellOpt{}(X0:SortK{}),
        VarK:SortNextModuleIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextTabAddrCell`(inj{NextTabAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextTabAddrCell{}, SortKItem{}}(VarK:SortNextTabAddrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNextTabAddrCell{},R} (
        Lblproject'Coln'NextTabAddrCell{}(X0:SortK{}),
        VarK:SortNextTabAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextTabAddrCellOpt`(inj{NextTabAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextTabAddrCellOpt{}, SortKItem{}}(VarK:SortNextTabAddrCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNextTabAddrCellOpt{},R} (
        Lblproject'Coln'NextTabAddrCellOpt{}(X0:SortK{}),
        VarK:SortNextTabAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextTypeIdxCell`(inj{NextTypeIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextTypeIdxCell{}, SortKItem{}}(VarK:SortNextTypeIdxCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNextTypeIdxCell{},R} (
        Lblproject'Coln'NextTypeIdxCell{}(X0:SortK{}),
        VarK:SortNextTypeIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextTypeIdxCellOpt`(inj{NextTypeIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextTypeIdxCellOpt{}, SortKItem{}}(VarK:SortNextTypeIdxCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNextTypeIdxCellOpt{},R} (
        Lblproject'Coln'NextTypeIdxCellOpt{}(X0:SortK{}),
        VarK:SortNextTypeIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Number`(inj{Number,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNumber{}, SortKItem{}}(VarK:SortNumber{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortNumber{},R} (
        Lblproject'Coln'Number{}(X0:SortK{}),
        VarK:SortNumber{}),
      \top{R}()))
  [projection{}()]

// rule `project:Offset`(inj{Offset,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOffset{}, SortKItem{}}(VarK:SortOffset{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortOffset{},R} (
        Lblproject'Coln'Offset{}(X0:SortK{}),
        VarK:SortOffset{}),
      \top{R}()))
  [projection{}()]

// rule `project:OffsetArg`(inj{OffsetArg,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOffsetArg{}, SortKItem{}}(VarK:SortOffsetArg{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortOffsetArg{},R} (
        Lblproject'Coln'OffsetArg{}(X0:SortK{}),
        VarK:SortOffsetArg{}),
      \top{R}()))
  [projection{}()]

// rule `project:OptionalId`(inj{OptionalId,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarK:SortOptionalId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortOptionalId{},R} (
        Lblproject'Coln'OptionalId{}(X0:SortK{}),
        VarK:SortOptionalId{}),
      \top{R}()))
  [projection{}()]

// rule `project:OptionalInt`(inj{OptionalInt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOptionalInt{}, SortKItem{}}(VarK:SortOptionalInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortOptionalInt{},R} (
        Lblproject'Coln'OptionalInt{}(X0:SortK{}),
        VarK:SortOptionalInt{}),
      \top{R}()))
  [projection{}()]

// rule `project:OptionalString`(inj{OptionalString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOptionalString{}, SortKItem{}}(VarK:SortOptionalString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortOptionalString{},R} (
        Lblproject'Coln'OptionalString{}(X0:SortK{}),
        VarK:SortOptionalString{}),
      \top{R}()))
  [projection{}()]

// rule `project:PlainInstr`(inj{PlainInstr,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortPlainInstr{}, SortKItem{}}(VarK:SortPlainInstr{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortPlainInstr{},R} (
        Lblproject'Coln'PlainInstr{}(X0:SortK{}),
        VarK:SortPlainInstr{}),
      \top{R}()))
  [projection{}()]

// rule `project:Set`(inj{Set,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarK:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortSet{},R} (
        Lblproject'Coln'Set{}(X0:SortK{}),
        VarK:SortSet{}),
      \top{R}()))
  [projection{}()]

// rule `project:Signedness`(inj{Signedness,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSignedness{}, SortKItem{}}(VarK:SortSignedness{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortSignedness{},R} (
        Lblproject'Coln'Signedness{}(X0:SortK{}),
        VarK:SortSignedness{}),
      \top{R}()))
  [projection{}()]

// rule `project:StartDefn`(inj{StartDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStartDefn{}, SortKItem{}}(VarK:SortStartDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortStartDefn{},R} (
        Lblproject'Coln'StartDefn{}(X0:SortK{}),
        VarK:SortStartDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:Stmt`(inj{Stmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStmt{}, SortKItem{}}(VarK:SortStmt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortStmt{},R} (
        Lblproject'Coln'Stmt{}(X0:SortK{}),
        VarK:SortStmt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Stmts`(inj{Stmts,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStmts{}, SortKItem{}}(VarK:SortStmts{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortStmts{},R} (
        Lblproject'Coln'Stmts{}(X0:SortK{}),
        VarK:SortStmts{}),
      \top{R}()))
  [projection{}()]

// rule `project:StoreOp`(inj{StoreOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreOp{}, SortKItem{}}(VarK:SortStoreOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortStoreOp{},R} (
        Lblproject'Coln'StoreOp{}(X0:SortK{}),
        VarK:SortStoreOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:StoreOpM`(inj{StoreOpM,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreOpM{}, SortKItem{}}(VarK:SortStoreOpM{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortStoreOpM{},R} (
        Lblproject'Coln'StoreOpM{}(X0:SortK{}),
        VarK:SortStoreOpM{}),
      \top{R}()))
  [projection{}()]

// rule `project:String`(inj{String,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarK:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortString{},R} (
        Lblproject'Coln'String{}(X0:SortK{}),
        VarK:SortString{}),
      \top{R}()))
  [projection{}()]

// rule `project:TAddrCell`(inj{TAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTAddrCell{}, SortKItem{}}(VarK:SortTAddrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTAddrCell{},R} (
        Lblproject'Coln'TAddrCell{}(X0:SortK{}),
        VarK:SortTAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TAddrCellOpt`(inj{TAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTAddrCellOpt{}, SortKItem{}}(VarK:SortTAddrCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTAddrCellOpt{},R} (
        Lblproject'Coln'TAddrCellOpt{}(X0:SortK{}),
        VarK:SortTAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabAddrsCell`(inj{TabAddrsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabAddrsCell{}, SortKItem{}}(VarK:SortTabAddrsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTabAddrsCell{},R} (
        Lblproject'Coln'TabAddrsCell{}(X0:SortK{}),
        VarK:SortTabAddrsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabAddrsCellOpt`(inj{TabAddrsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabAddrsCellOpt{}, SortKItem{}}(VarK:SortTabAddrsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTabAddrsCellOpt{},R} (
        Lblproject'Coln'TabAddrsCellOpt{}(X0:SortK{}),
        VarK:SortTabAddrsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabIdsCell`(inj{TabIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabIdsCell{}, SortKItem{}}(VarK:SortTabIdsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTabIdsCell{},R} (
        Lblproject'Coln'TabIdsCell{}(X0:SortK{}),
        VarK:SortTabIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabIdsCellOpt`(inj{TabIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabIdsCellOpt{}, SortKItem{}}(VarK:SortTabIdsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTabIdsCellOpt{},R} (
        Lblproject'Coln'TabIdsCellOpt{}(X0:SortK{}),
        VarK:SortTabIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabInstCell`(inj{TabInstCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabInstCell{}, SortKItem{}}(VarK:SortTabInstCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTabInstCell{},R} (
        Lblproject'Coln'TabInstCell{}(X0:SortK{}),
        VarK:SortTabInstCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabInstCellFragment`(inj{TabInstCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabInstCellFragment{}, SortKItem{}}(VarK:SortTabInstCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTabInstCellFragment{},R} (
        Lblproject'Coln'TabInstCellFragment{}(X0:SortK{}),
        VarK:SortTabInstCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabInstCellMap`(inj{TabInstCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabInstCellMap{}, SortKItem{}}(VarK:SortTabInstCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTabInstCellMap{},R} (
        Lblproject'Coln'TabInstCellMap{}(X0:SortK{}),
        VarK:SortTabInstCellMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:TableDefn`(inj{TableDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTableDefn{}, SortKItem{}}(VarK:SortTableDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTableDefn{},R} (
        Lblproject'Coln'TableDefn{}(X0:SortK{}),
        VarK:SortTableDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:TableElemType`(inj{TableElemType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTableElemType{}, SortKItem{}}(VarK:SortTableElemType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTableElemType{},R} (
        Lblproject'Coln'TableElemType{}(X0:SortK{}),
        VarK:SortTableElemType{}),
      \top{R}()))
  [projection{}()]

// rule `project:TableSpec`(inj{TableSpec,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTableSpec{}, SortKItem{}}(VarK:SortTableSpec{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTableSpec{},R} (
        Lblproject'Coln'TableSpec{}(X0:SortK{}),
        VarK:SortTableSpec{}),
      \top{R}()))
  [projection{}()]

// rule `project:TableType`(inj{TableType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTableType{}, SortKItem{}}(VarK:SortTableType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTableType{},R} (
        Lblproject'Coln'TableType{}(X0:SortK{}),
        VarK:SortTableType{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabsCell`(inj{TabsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabsCell{}, SortKItem{}}(VarK:SortTabsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTabsCell{},R} (
        Lblproject'Coln'TabsCell{}(X0:SortK{}),
        VarK:SortTabsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabsCellFragment`(inj{TabsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabsCellFragment{}, SortKItem{}}(VarK:SortTabsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTabsCellFragment{},R} (
        Lblproject'Coln'TabsCellFragment{}(X0:SortK{}),
        VarK:SortTabsCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabsCellOpt`(inj{TabsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTabsCellOpt{}, SortKItem{}}(VarK:SortTabsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTabsCellOpt{},R} (
        Lblproject'Coln'TabsCellOpt{}(X0:SortK{}),
        VarK:SortTabsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TdataCell`(inj{TdataCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTdataCell{}, SortKItem{}}(VarK:SortTdataCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTdataCell{},R} (
        Lblproject'Coln'TdataCell{}(X0:SortK{}),
        VarK:SortTdataCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TdataCellOpt`(inj{TdataCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTdataCellOpt{}, SortKItem{}}(VarK:SortTdataCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTdataCellOpt{},R} (
        Lblproject'Coln'TdataCellOpt{}(X0:SortK{}),
        VarK:SortTdataCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TestOp`(inj{TestOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTestOp{}, SortKItem{}}(VarK:SortTestOp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTestOp{},R} (
        Lblproject'Coln'TestOp{}(X0:SortK{}),
        VarK:SortTestOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:TextFormatGlobalType`(inj{TextFormatGlobalType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTextFormatGlobalType{}, SortKItem{}}(VarK:SortTextFormatGlobalType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTextFormatGlobalType{},R} (
        Lblproject'Coln'TextFormatGlobalType{}(X0:SortK{}),
        VarK:SortTextFormatGlobalType{}),
      \top{R}()))
  [projection{}()]

// rule `project:TextLimits`(inj{TextLimits,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTextLimits{}, SortKItem{}}(VarK:SortTextLimits{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTextLimits{},R} (
        Lblproject'Coln'TextLimits{}(X0:SortK{}),
        VarK:SortTextLimits{}),
      \top{R}()))
  [projection{}()]

// rule `project:TmaxCell`(inj{TmaxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTmaxCell{}, SortKItem{}}(VarK:SortTmaxCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTmaxCell{},R} (
        Lblproject'Coln'TmaxCell{}(X0:SortK{}),
        VarK:SortTmaxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TmaxCellOpt`(inj{TmaxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTmaxCellOpt{}, SortKItem{}}(VarK:SortTmaxCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTmaxCellOpt{},R} (
        Lblproject'Coln'TmaxCellOpt{}(X0:SortK{}),
        VarK:SortTmaxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TsizeCell`(inj{TsizeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTsizeCell{}, SortKItem{}}(VarK:SortTsizeCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTsizeCell{},R} (
        Lblproject'Coln'TsizeCell{}(X0:SortK{}),
        VarK:SortTsizeCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TsizeCellOpt`(inj{TsizeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTsizeCellOpt{}, SortKItem{}}(VarK:SortTsizeCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTsizeCellOpt{},R} (
        Lblproject'Coln'TsizeCellOpt{}(X0:SortK{}),
        VarK:SortTsizeCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Type`(inj{Type,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortType{}, SortKItem{}}(VarK:SortType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortType{},R} (
        Lblproject'Coln'Type{}(X0:SortK{}),
        VarK:SortType{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeDecl`(inj{TypeDecl,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeDecl{}, SortKItem{}}(VarK:SortTypeDecl{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTypeDecl{},R} (
        Lblproject'Coln'TypeDecl{}(X0:SortK{}),
        VarK:SortTypeDecl{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeDecls`(inj{TypeDecls,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeDecls{}, SortKItem{}}(VarK:SortTypeDecls{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTypeDecls{},R} (
        Lblproject'Coln'TypeDecls{}(X0:SortK{}),
        VarK:SortTypeDecls{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeDefn`(inj{TypeDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeDefn{}, SortKItem{}}(VarK:SortTypeDefn{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTypeDefn{},R} (
        Lblproject'Coln'TypeDefn{}(X0:SortK{}),
        VarK:SortTypeDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeIdsCell`(inj{TypeIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeIdsCell{}, SortKItem{}}(VarK:SortTypeIdsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTypeIdsCell{},R} (
        Lblproject'Coln'TypeIdsCell{}(X0:SortK{}),
        VarK:SortTypeIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeIdsCellOpt`(inj{TypeIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeIdsCellOpt{}, SortKItem{}}(VarK:SortTypeIdsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTypeIdsCellOpt{},R} (
        Lblproject'Coln'TypeIdsCellOpt{}(X0:SortK{}),
        VarK:SortTypeIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeKeyWord`(inj{TypeKeyWord,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeKeyWord{}, SortKItem{}}(VarK:SortTypeKeyWord{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTypeKeyWord{},R} (
        Lblproject'Coln'TypeKeyWord{}(X0:SortK{}),
        VarK:SortTypeKeyWord{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeUse`(inj{TypeUse,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypeUse{}, SortKItem{}}(VarK:SortTypeUse{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTypeUse{},R} (
        Lblproject'Coln'TypeUse{}(X0:SortK{}),
        VarK:SortTypeUse{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypesCell`(inj{TypesCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypesCell{}, SortKItem{}}(VarK:SortTypesCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTypesCell{},R} (
        Lblproject'Coln'TypesCell{}(X0:SortK{}),
        VarK:SortTypesCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypesCellOpt`(inj{TypesCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypesCellOpt{}, SortKItem{}}(VarK:SortTypesCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTypesCellOpt{},R} (
        Lblproject'Coln'TypesCellOpt{}(X0:SortK{}),
        VarK:SortTypesCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypesInfo`(inj{TypesInfo,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypesInfo{}, SortKItem{}}(VarK:SortTypesInfo{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTypesInfo{},R} (
        Lblproject'Coln'TypesInfo{}(X0:SortK{}),
        VarK:SortTypesInfo{}),
      \top{R}()))
  [projection{}()]

// rule `project:Val`(inj{Val,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVal{}, SortKItem{}}(VarK:SortVal{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortVal{},R} (
        Lblproject'Coln'Val{}(X0:SortK{}),
        VarK:SortVal{}),
      \top{R}()))
  [projection{}()]

// rule `project:ValStack`(inj{ValStack,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortValStack{}, SortKItem{}}(VarK:SortValStack{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortValStack{},R} (
        Lblproject'Coln'ValStack{}(X0:SortK{}),
        VarK:SortValStack{}),
      \top{R}()))
  [projection{}()]

// rule `project:ValType`(inj{ValType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortValType{}, SortKItem{}}(VarK:SortValType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortValType{},R} (
        Lblproject'Coln'ValType{}(X0:SortK{}),
        VarK:SortValType{}),
      \top{R}()))
  [projection{}()]

// rule `project:ValTypes`(inj{ValTypes,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortValTypes{}, SortKItem{}}(VarK:SortValTypes{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lblproject'Coln'ValTypes{}(X0:SortK{}),
        VarK:SortValTypes{}),
      \top{R}()))
  [projection{}()]

// rule `project:ValstackCell`(inj{ValstackCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortValstackCell{}, SortKItem{}}(VarK:SortValstackCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortValstackCell{},R} (
        Lblproject'Coln'ValstackCell{}(X0:SortK{}),
        VarK:SortValstackCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ValstackCellOpt`(inj{ValstackCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortValstackCellOpt{}, SortKItem{}}(VarK:SortValstackCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortValstackCellOpt{},R} (
        Lblproject'Coln'ValstackCellOpt{}(X0:SortK{}),
        VarK:SortValstackCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:VecType`(inj{VecType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVecType{}, SortKItem{}}(VarK:SortVecType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortVecType{},R} (
        Lblproject'Coln'VecType{}(X0:SortK{}),
        VarK:SortVecType{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmCell`(inj{WasmCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortWasmCell{}, SortKItem{}}(VarK:SortWasmCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortWasmCell{},R} (
        Lblproject'Coln'WasmCell{}(X0:SortK{}),
        VarK:SortWasmCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmCellFragment`(inj{WasmCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortWasmCellFragment{}, SortKItem{}}(VarK:SortWasmCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortWasmCellFragment{},R} (
        Lblproject'Coln'WasmCellFragment{}(X0:SortK{}),
        VarK:SortWasmCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmCellOpt`(inj{WasmCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortWasmCellOpt{}, SortKItem{}}(VarK:SortWasmCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortWasmCellOpt{},R} (
        Lblproject'Coln'WasmCellOpt{}(X0:SortK{}),
        VarK:SortWasmCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmInt`(inj{WasmInt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortWasmInt{}, SortKItem{}}(VarK:SortWasmInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortWasmInt{},R} (
        Lblproject'Coln'WasmInt{}(X0:SortK{}),
        VarK:SortWasmInt{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmIntToken`(inj{WasmIntToken,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortWasmIntToken{}, SortKItem{}}(VarK:SortWasmIntToken{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortWasmIntToken{},R} (
        Lblproject'Coln'WasmIntToken{}(X0:SortK{}),
        VarK:SortWasmIntToken{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmString`(inj{WasmString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortWasmString{}, SortKItem{}}(VarK:SortWasmString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortWasmString{},R} (
        Lblproject'Coln'WasmString{}(X0:SortK{}),
        VarK:SortWasmString{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmStringToken`(inj{WasmStringToken,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortWasmStringToken{}, SortKItem{}}(VarK:SortWasmStringToken{}),dotk{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortWasmStringToken{},R} (
        Lblproject'Coln'WasmStringToken{}(X0:SortK{}),
        VarK:SortWasmStringToken{}),
      \top{R}()))
  [projection{}()]

// rule `project:aDataDefn:data`(aDataDefn(K0,K1,K2))=>K2 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDataDefn{}, R} (
            X0:SortDataDefn{},
            LblaDataDefn{}(VarK0:SortInt{},VarK1:SortInstrs{},VarK2:SortBytes{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBytes{},R} (
        Lblproject'Coln'aDataDefn'Coln'data{}(X0:SortDataDefn{}),
        VarK2:SortBytes{}),
      \top{R}()))
  []

// rule `project:aDataDefn:index`(aDataDefn(K0,K1,K2))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDataDefn{}, R} (
            X0:SortDataDefn{},
            LblaDataDefn{}(VarK0:SortInt{},VarK1:SortInstrs{},VarK2:SortBytes{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lblproject'Coln'aDataDefn'Coln'index{}(X0:SortDataDefn{}),
        VarK0:SortInt{}),
      \top{R}()))
  []

// rule `project:aDataDefn:offset`(aDataDefn(K0,K1,K2))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDataDefn{}, R} (
            X0:SortDataDefn{},
            LblaDataDefn{}(VarK0:SortInt{},VarK1:SortInstrs{},VarK2:SortBytes{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lblproject'Coln'aDataDefn'Coln'offset{}(X0:SortDataDefn{}),
        VarK1:SortInstrs{}),
      \top{R}()))
  []

// rule `project:aElemDefn:elemSegment`(aElemDefn(K0,K1,K2))=>K2 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortElemDefn{}, R} (
            X0:SortElemDefn{},
            LblaElemDefn{}(VarK0:SortInt{},VarK1:SortInstrs{},VarK2:SortInts{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInts{},R} (
        Lblproject'Coln'aElemDefn'Coln'elemSegment{}(X0:SortElemDefn{}),
        VarK2:SortInts{}),
      \top{R}()))
  []

// rule `project:aElemDefn:index`(aElemDefn(K0,K1,K2))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortElemDefn{}, R} (
            X0:SortElemDefn{},
            LblaElemDefn{}(VarK0:SortInt{},VarK1:SortInstrs{},VarK2:SortInts{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lblproject'Coln'aElemDefn'Coln'index{}(X0:SortElemDefn{}),
        VarK0:SortInt{}),
      \top{R}()))
  []

// rule `project:aElemDefn:offset`(aElemDefn(K0,K1,K2))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortElemDefn{}, R} (
            X0:SortElemDefn{},
            LblaElemDefn{}(VarK0:SortInt{},VarK1:SortInstrs{},VarK2:SortInts{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lblproject'Coln'aElemDefn'Coln'offset{}(X0:SortElemDefn{}),
        VarK1:SortInstrs{}),
      \top{R}()))
  []

// rule `project:aExportDefn:index`(aExportDefn(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortExportDefn{}, R} (
            X0:SortExportDefn{},
            LblaExportDefn{}(VarK0:SortWasmString{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lblproject'Coln'aExportDefn'Coln'index{}(X0:SortExportDefn{}),
        VarK1:SortInt{}),
      \top{R}()))
  []

// rule `project:aExportDefn:name`(aExportDefn(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortExportDefn{}, R} (
            X0:SortExportDefn{},
            LblaExportDefn{}(VarK0:SortWasmString{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortWasmString{},R} (
        Lblproject'Coln'aExportDefn'Coln'name{}(X0:SortExportDefn{}),
        VarK0:SortWasmString{}),
      \top{R}()))
  []

// rule `project:aFuncDefn:body`(aFuncDefn(K0,K1,K2,K3))=>K2 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFuncDefn{}, R} (
            X0:SortFuncDefn{},
            LblaFuncDefn{}(VarK0:SortInt{},VarK1:SortVecType{},VarK2:SortInstrs{},VarK3:SortFuncMetadata{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lblproject'Coln'aFuncDefn'Coln'body{}(X0:SortFuncDefn{}),
        VarK2:SortInstrs{}),
      \top{R}()))
  []

// rule `project:aFuncDefn:locals`(aFuncDefn(K0,K1,K2,K3))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFuncDefn{}, R} (
            X0:SortFuncDefn{},
            LblaFuncDefn{}(VarK0:SortInt{},VarK1:SortVecType{},VarK2:SortInstrs{},VarK3:SortFuncMetadata{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortVecType{},R} (
        Lblproject'Coln'aFuncDefn'Coln'locals{}(X0:SortFuncDefn{}),
        VarK1:SortVecType{}),
      \top{R}()))
  []

// rule `project:aFuncDefn:metadata`(aFuncDefn(K0,K1,K2,K3))=>K3 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFuncDefn{}, R} (
            X0:SortFuncDefn{},
            LblaFuncDefn{}(VarK0:SortInt{},VarK1:SortVecType{},VarK2:SortInstrs{},VarK3:SortFuncMetadata{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncMetadata{},R} (
        Lblproject'Coln'aFuncDefn'Coln'metadata{}(X0:SortFuncDefn{}),
        VarK3:SortFuncMetadata{}),
      \top{R}()))
  []

// rule `project:aFuncDefn:type`(aFuncDefn(K0,K1,K2,K3))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFuncDefn{}, R} (
            X0:SortFuncDefn{},
            LblaFuncDefn{}(VarK0:SortInt{},VarK1:SortVecType{},VarK2:SortInstrs{},VarK3:SortFuncMetadata{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lblproject'Coln'aFuncDefn'Coln'type{}(X0:SortFuncDefn{}),
        VarK0:SortInt{}),
      \top{R}()))
  []

// rule `project:aFuncDesc:id`(aFuncDesc(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortImportDesc{}, R} (
            X0:SortImportDesc{},
            LblaFuncDesc{}(VarK0:SortOptionalId{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortOptionalId{},R} (
        Lblproject'Coln'aFuncDesc'Coln'id{}(X0:SortImportDesc{}),
        VarK0:SortOptionalId{}),
      \top{R}()))
  []

// rule `project:aFuncDesc:type`(aFuncDesc(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortImportDesc{}, R} (
            X0:SortImportDesc{},
            LblaFuncDesc{}(VarK0:SortOptionalId{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lblproject'Coln'aFuncDesc'Coln'type{}(X0:SortImportDesc{}),
        VarK1:SortInt{}),
      \top{R}()))
  []

// rule `project:aGlobalDefn:init`(aGlobalDefn(K0,K1,K2))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortGlobalDefn{}, R} (
            X0:SortGlobalDefn{},
            LblaGlobalDefn{}(VarK0:SortGlobalType{},VarK1:SortInstrs{},VarK2:SortOptionalId{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lblproject'Coln'aGlobalDefn'Coln'init{}(X0:SortGlobalDefn{}),
        VarK1:SortInstrs{}),
      \top{R}()))
  []

// rule `project:aGlobalDefn:metadata`(aGlobalDefn(K0,K1,K2))=>K2 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortGlobalDefn{}, R} (
            X0:SortGlobalDefn{},
            LblaGlobalDefn{}(VarK0:SortGlobalType{},VarK1:SortInstrs{},VarK2:SortOptionalId{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortOptionalId{},R} (
        Lblproject'Coln'aGlobalDefn'Coln'metadata{}(X0:SortGlobalDefn{}),
        VarK2:SortOptionalId{}),
      \top{R}()))
  []

// rule `project:aGlobalDefn:type`(aGlobalDefn(K0,K1,K2))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortGlobalDefn{}, R} (
            X0:SortGlobalDefn{},
            LblaGlobalDefn{}(VarK0:SortGlobalType{},VarK1:SortInstrs{},VarK2:SortOptionalId{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobalType{},R} (
        Lblproject'Coln'aGlobalDefn'Coln'type{}(X0:SortGlobalDefn{}),
        VarK0:SortGlobalType{}),
      \top{R}()))
  []

// rule `project:aGlobalDesc:id`(aGlobalDesc(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortImportDesc{}, R} (
            X0:SortImportDesc{},
            LblaGlobalDesc{}(VarK0:SortOptionalId{},VarK1:SortGlobalType{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortOptionalId{},R} (
        Lblproject'Coln'aGlobalDesc'Coln'id{}(X0:SortImportDesc{}),
        VarK0:SortOptionalId{}),
      \top{R}()))
  []

// rule `project:aGlobalDesc:type`(aGlobalDesc(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortImportDesc{}, R} (
            X0:SortImportDesc{},
            LblaGlobalDesc{}(VarK0:SortOptionalId{},VarK1:SortGlobalType{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortGlobalType{},R} (
        Lblproject'Coln'aGlobalDesc'Coln'type{}(X0:SortImportDesc{}),
        VarK1:SortGlobalType{}),
      \top{R}()))
  []

// rule `project:aIf:blockInfo`(aIf(K0,K1,K2,K3))=>K3 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstr{}, R} (
            X0:SortInstr{},
            LblaIf{}(VarK0:SortVecType{},VarK1:SortInstrs{},VarK2:SortInstrs{},VarK3:SortBlockMetaData{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortBlockMetaData{},R} (
        Lblproject'Coln'aIf'Coln'blockInfo{}(X0:SortInstr{}),
        VarK3:SortBlockMetaData{}),
      \top{R}()))
  []

// rule `project:aIf:else`(aIf(K0,K1,K2,K3))=>K2 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstr{}, R} (
            X0:SortInstr{},
            LblaIf{}(VarK0:SortVecType{},VarK1:SortInstrs{},VarK2:SortInstrs{},VarK3:SortBlockMetaData{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lblproject'Coln'aIf'Coln'else{}(X0:SortInstr{}),
        VarK2:SortInstrs{}),
      \top{R}()))
  []

// rule `project:aIf:then`(aIf(K0,K1,K2,K3))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstr{}, R} (
            X0:SortInstr{},
            LblaIf{}(VarK0:SortVecType{},VarK1:SortInstrs{},VarK2:SortInstrs{},VarK3:SortBlockMetaData{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lblproject'Coln'aIf'Coln'then{}(X0:SortInstr{}),
        VarK1:SortInstrs{}),
      \top{R}()))
  []

// rule `project:aImportDefn:mod`(aImportDefn(K0,K1,K2))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortImportDefn{}, R} (
            X0:SortImportDefn{},
            LblaImportDefn{}(VarK0:SortWasmString{},VarK1:SortWasmString{},VarK2:SortImportDesc{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortWasmString{},R} (
        Lblproject'Coln'aImportDefn'Coln'mod{}(X0:SortImportDefn{}),
        VarK0:SortWasmString{}),
      \top{R}()))
  []

// rule `project:aImportDefn:name`(aImportDefn(K0,K1,K2))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortImportDefn{}, R} (
            X0:SortImportDefn{},
            LblaImportDefn{}(VarK0:SortWasmString{},VarK1:SortWasmString{},VarK2:SortImportDesc{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortWasmString{},R} (
        Lblproject'Coln'aImportDefn'Coln'name{}(X0:SortImportDefn{}),
        VarK1:SortWasmString{}),
      \top{R}()))
  []

// rule `project:aLoad:offset`(aLoad(K0,K1,K2))=>K2 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstr{}, R} (
            X0:SortInstr{},
            LblaLoad{}(VarK0:SortValType{},VarK1:SortLoadOp{},VarK2:SortInt{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lblproject'Coln'aLoad'Coln'offset{}(X0:SortInstr{}),
        VarK2:SortInt{}),
      \top{R}()))
  []

// rule `project:aMemoryDefn:limits`(aMemoryDefn(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMemoryDefn{}, R} (
            X0:SortMemoryDefn{},
            LblaMemoryDefn{}(VarK0:SortLimits{},VarK1:SortOptionalId{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortLimits{},R} (
        Lblproject'Coln'aMemoryDefn'Coln'limits{}(X0:SortMemoryDefn{}),
        VarK0:SortLimits{}),
      \top{R}()))
  []

// rule `project:aMemoryDefn:metadata`(aMemoryDefn(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMemoryDefn{}, R} (
            X0:SortMemoryDefn{},
            LblaMemoryDefn{}(VarK0:SortLimits{},VarK1:SortOptionalId{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortOptionalId{},R} (
        Lblproject'Coln'aMemoryDefn'Coln'metadata{}(X0:SortMemoryDefn{}),
        VarK1:SortOptionalId{}),
      \top{R}()))
  []

// rule `project:aMemoryDesc:id`(aMemoryDesc(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortImportDesc{}, R} (
            X0:SortImportDesc{},
            LblaMemoryDesc{}(VarK0:SortOptionalId{},VarK1:SortLimits{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortOptionalId{},R} (
        Lblproject'Coln'aMemoryDesc'Coln'id{}(X0:SortImportDesc{}),
        VarK0:SortOptionalId{}),
      \top{R}()))
  []

// rule `project:aMemoryDesc:type`(aMemoryDesc(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortImportDesc{}, R} (
            X0:SortImportDesc{},
            LblaMemoryDesc{}(VarK0:SortOptionalId{},VarK1:SortLimits{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortLimits{},R} (
        Lblproject'Coln'aMemoryDesc'Coln'type{}(X0:SortImportDesc{}),
        VarK1:SortLimits{}),
      \top{R}()))
  []

// rule `project:aModuleDecl:data`(aModuleDecl(K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10))=>K6 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortModuleDecl{}, R} (
            X0:SortModuleDecl{},
            LblaModuleDecl{}(VarK0:SortDefns{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{},VarK8:SortDefns{},VarK9:SortDefns{},VarK10:SortModuleMetadata{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'aModuleDecl'Coln'data{}(X0:SortModuleDecl{}),
        VarK6:SortDefns{}),
      \top{R}()))
  []

// rule `project:aModuleDecl:elem`(aModuleDecl(K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10))=>K5 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortModuleDecl{}, R} (
            X0:SortModuleDecl{},
            LblaModuleDecl{}(VarK0:SortDefns{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{},VarK8:SortDefns{},VarK9:SortDefns{},VarK10:SortModuleMetadata{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'aModuleDecl'Coln'elem{}(X0:SortModuleDecl{}),
        VarK5:SortDefns{}),
      \top{R}()))
  []

// rule `project:aModuleDecl:exports`(aModuleDecl(K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10))=>K9 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortModuleDecl{}, R} (
            X0:SortModuleDecl{},
            LblaModuleDecl{}(VarK0:SortDefns{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{},VarK8:SortDefns{},VarK9:SortDefns{},VarK10:SortModuleMetadata{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'aModuleDecl'Coln'exports{}(X0:SortModuleDecl{}),
        VarK9:SortDefns{}),
      \top{R}()))
  []

// rule `project:aModuleDecl:funcs`(aModuleDecl(K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortModuleDecl{}, R} (
            X0:SortModuleDecl{},
            LblaModuleDecl{}(VarK0:SortDefns{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{},VarK8:SortDefns{},VarK9:SortDefns{},VarK10:SortModuleMetadata{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'aModuleDecl'Coln'funcs{}(X0:SortModuleDecl{}),
        VarK1:SortDefns{}),
      \top{R}()))
  []

// rule `project:aModuleDecl:globals`(aModuleDecl(K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10))=>K4 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortModuleDecl{}, R} (
            X0:SortModuleDecl{},
            LblaModuleDecl{}(VarK0:SortDefns{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{},VarK8:SortDefns{},VarK9:SortDefns{},VarK10:SortModuleMetadata{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'aModuleDecl'Coln'globals{}(X0:SortModuleDecl{}),
        VarK4:SortDefns{}),
      \top{R}()))
  []

// rule `project:aModuleDecl:importDefns`(aModuleDecl(K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10))=>K8 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortModuleDecl{}, R} (
            X0:SortModuleDecl{},
            LblaModuleDecl{}(VarK0:SortDefns{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{},VarK8:SortDefns{},VarK9:SortDefns{},VarK10:SortModuleMetadata{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'aModuleDecl'Coln'importDefns{}(X0:SortModuleDecl{}),
        VarK8:SortDefns{}),
      \top{R}()))
  []

// rule `project:aModuleDecl:mems`(aModuleDecl(K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10))=>K3 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortModuleDecl{}, R} (
            X0:SortModuleDecl{},
            LblaModuleDecl{}(VarK0:SortDefns{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{},VarK8:SortDefns{},VarK9:SortDefns{},VarK10:SortModuleMetadata{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'aModuleDecl'Coln'mems{}(X0:SortModuleDecl{}),
        VarK3:SortDefns{}),
      \top{R}()))
  []

// rule `project:aModuleDecl:metadata`(aModuleDecl(K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10))=>K10 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortModuleDecl{}, R} (
            X0:SortModuleDecl{},
            LblaModuleDecl{}(VarK0:SortDefns{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{},VarK8:SortDefns{},VarK9:SortDefns{},VarK10:SortModuleMetadata{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortModuleMetadata{},R} (
        Lblproject'Coln'aModuleDecl'Coln'metadata{}(X0:SortModuleDecl{}),
        VarK10:SortModuleMetadata{}),
      \top{R}()))
  []

// rule `project:aModuleDecl:start`(aModuleDecl(K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10))=>K7 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortModuleDecl{}, R} (
            X0:SortModuleDecl{},
            LblaModuleDecl{}(VarK0:SortDefns{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{},VarK8:SortDefns{},VarK9:SortDefns{},VarK10:SortModuleMetadata{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'aModuleDecl'Coln'start{}(X0:SortModuleDecl{}),
        VarK7:SortDefns{}),
      \top{R}()))
  []

// rule `project:aModuleDecl:tables`(aModuleDecl(K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10))=>K2 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortModuleDecl{}, R} (
            X0:SortModuleDecl{},
            LblaModuleDecl{}(VarK0:SortDefns{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{},VarK8:SortDefns{},VarK9:SortDefns{},VarK10:SortModuleMetadata{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'aModuleDecl'Coln'tables{}(X0:SortModuleDecl{}),
        VarK2:SortDefns{}),
      \top{R}()))
  []

// rule `project:aModuleDecl:types`(aModuleDecl(K0,K1,K2,K3,K4,K5,K6,K7,K8,K9,K10))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortModuleDecl{}, R} (
            X0:SortModuleDecl{},
            LblaModuleDecl{}(VarK0:SortDefns{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{},VarK8:SortDefns{},VarK9:SortDefns{},VarK10:SortModuleMetadata{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'aModuleDecl'Coln'types{}(X0:SortModuleDecl{}),
        VarK0:SortDefns{}),
      \top{R}()))
  []

// rule `project:aStore:offset`(aStore(K0,K1,K2))=>K2 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstr{}, R} (
            X0:SortInstr{},
            LblaStore{}(VarK0:SortValType{},VarK1:SortStoreOp{},VarK2:SortInt{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInt{},R} (
        Lblproject'Coln'aStore'Coln'offset{}(X0:SortInstr{}),
        VarK2:SortInt{}),
      \top{R}()))
  []

// rule `project:aTableDefn:limits`(aTableDefn(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTableDefn{}, R} (
            X0:SortTableDefn{},
            LblaTableDefn{}(VarK0:SortLimits{},VarK1:SortOptionalId{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortLimits{},R} (
        Lblproject'Coln'aTableDefn'Coln'limits{}(X0:SortTableDefn{}),
        VarK0:SortLimits{}),
      \top{R}()))
  []

// rule `project:aTableDefn:metadata`(aTableDefn(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTableDefn{}, R} (
            X0:SortTableDefn{},
            LblaTableDefn{}(VarK0:SortLimits{},VarK1:SortOptionalId{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortOptionalId{},R} (
        Lblproject'Coln'aTableDefn'Coln'metadata{}(X0:SortTableDefn{}),
        VarK1:SortOptionalId{}),
      \top{R}()))
  []

// rule `project:aTableDesc:id`(aTableDesc(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortImportDesc{}, R} (
            X0:SortImportDesc{},
            LblaTableDesc{}(VarK0:SortOptionalId{},VarK1:SortLimits{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortOptionalId{},R} (
        Lblproject'Coln'aTableDesc'Coln'id{}(X0:SortImportDesc{}),
        VarK0:SortOptionalId{}),
      \top{R}()))
  []

// rule `project:aTableDesc:type`(aTableDesc(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortImportDesc{}, R} (
            X0:SortImportDesc{},
            LblaTableDesc{}(VarK0:SortOptionalId{},VarK1:SortLimits{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortLimits{},R} (
        Lblproject'Coln'aTableDesc'Coln'type{}(X0:SortImportDesc{}),
        VarK1:SortLimits{}),
      \top{R}()))
  []

// rule `project:aTypeDefn:metadata`(aTypeDefn(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTypeDefn{}, R} (
            X0:SortTypeDefn{},
            LblaTypeDefn{}(VarK0:SortFuncType{},VarK1:SortOptionalId{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortOptionalId{},R} (
        Lblproject'Coln'aTypeDefn'Coln'metadata{}(X0:SortTypeDefn{}),
        VarK1:SortOptionalId{}),
      \top{R}()))
  []

// rule `project:aTypeDefn:type`(aTypeDefn(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTypeDefn{}, R} (
            X0:SortTypeDefn{},
            LblaTypeDefn{}(VarK0:SortFuncType{},VarK1:SortOptionalId{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFuncType{},R} (
        Lblproject'Coln'aTypeDefn'Coln'type{}(X0:SortTypeDefn{}),
        VarK0:SortFuncType{}),
      \top{R}()))
  []

// rule `project:ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map:funcIds`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(K0,K1,K2,K3))=>K2 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(VarK0:SortMap{},VarK1:SortMap{},VarK2:SortMap{},VarK3:SortMap{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMap{},R} (
        Lblproject'Coln'ctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map'Coln'funcIds{}(X0:SortContext{}),
        VarK2:SortMap{}),
      \top{R}()))
  []

// rule `project:ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map:globalIds`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(K0,K1,K2,K3))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(VarK0:SortMap{},VarK1:SortMap{},VarK2:SortMap{},VarK3:SortMap{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMap{},R} (
        Lblproject'Coln'ctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map'Coln'globalIds{}(X0:SortContext{}),
        VarK1:SortMap{}),
      \top{R}()))
  []

// rule `project:ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map:localIds`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(K0,K1,K2,K3))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(VarK0:SortMap{},VarK1:SortMap{},VarK2:SortMap{},VarK3:SortMap{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMap{},R} (
        Lblproject'Coln'ctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map'Coln'localIds{}(X0:SortContext{}),
        VarK0:SortMap{}),
      \top{R}()))
  []

// rule `project:ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map:typeIds`(`ctx(_,_,_,_)_WASM-TEXT_Context_Map_Map_Map_Map`(K0,K1,K2,K3))=>K3 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortContext{}, R} (
            X0:SortContext{},
            Lblctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map{}(VarK0:SortMap{},VarK1:SortMap{},VarK2:SortMap{},VarK3:SortMap{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMap{},R} (
        Lblproject'Coln'ctx'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Context'Unds'Map'Unds'Map'Unds'Map'Unds'Map'Coln'typeIds{}(X0:SortContext{}),
        VarK3:SortMap{}),
      \top{R}()))
  []

// rule `project:funcMeta:id`(funcMeta(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFuncMetadata{}, R} (
            X0:SortFuncMetadata{},
            LblfuncMeta{}(VarK0:SortOptionalId{},VarK1:SortMap{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortOptionalId{},R} (
        Lblproject'Coln'funcMeta'Coln'id{}(X0:SortFuncMetadata{}),
        VarK0:SortOptionalId{}),
      \top{R}()))
  []

// rule `project:funcMeta:localIds`(funcMeta(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFuncMetadata{}, R} (
            X0:SortFuncMetadata{},
            LblfuncMeta{}(VarK0:SortOptionalId{},VarK1:SortMap{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMap{},R} (
        Lblproject'Coln'funcMeta'Coln'localIds{}(X0:SortFuncMetadata{}),
        VarK1:SortMap{}),
      \top{R}()))
  []

// rule `project:moduleMeta:filename`(moduleMeta(K0,K1,K2))=>K2 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortModuleMetadata{}, R} (
            X0:SortModuleMetadata{},
            LblmoduleMeta{}(VarK0:SortOptionalId{},VarK1:SortMap{},VarK2:SortOptionalString{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortOptionalString{},R} (
        Lblproject'Coln'moduleMeta'Coln'filename{}(X0:SortModuleMetadata{}),
        VarK2:SortOptionalString{}),
      \top{R}()))
  []

// rule `project:moduleMeta:funcIds`(moduleMeta(K0,K1,K2))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortModuleMetadata{}, R} (
            X0:SortModuleMetadata{},
            LblmoduleMeta{}(VarK0:SortOptionalId{},VarK1:SortMap{},VarK2:SortOptionalString{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortMap{},R} (
        Lblproject'Coln'moduleMeta'Coln'funcIds{}(X0:SortModuleMetadata{}),
        VarK1:SortMap{}),
      \top{R}()))
  []

// rule `project:moduleMeta:id`(moduleMeta(K0,K1,K2))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortModuleMetadata{}, R} (
            X0:SortModuleMetadata{},
            LblmoduleMeta{}(VarK0:SortOptionalId{},VarK1:SortMap{},VarK2:SortOptionalString{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortOptionalId{},R} (
        Lblproject'Coln'moduleMeta'Coln'id{}(X0:SortModuleMetadata{}),
        VarK0:SortOptionalId{}),
      \top{R}()))
  []

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,Count)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToReplace,Replacement,`_-Int_`(Count,#token("1","Int")))) requires `_>Int_`(Count,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9), org.kframework.attributes.Location(Location(1570,8,1573,30)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarCount:SortInt{}
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortString{},R} (
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortString{},X3:SortInt{}),
        Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToReplace:SortString{},VarReplacement:SortString{},Lbl'Unds'-Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1570,8,1573,30)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9")]

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,_0,_1,#token("0","Int"))=>Source requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5), org.kframework.attributes.Location(Location(1574,8,1574,49)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            Var'Unds'0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            Var'Unds'1:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            \dv{SortInt{}}("0")
          ),
          \top{R} ()
        ))))),
    \and{R} (
      \equals{SortString{},R} (
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortString{},X3:SortInt{}),
        VarSource:SortString{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1574,8,1574,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5")]

// rule `replaceAll(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToReplace)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5), org.kframework.attributes.Location(Location(1575,8,1575,154)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1575,8,1575,154)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source))) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c), org.kframework.attributes.Location(Location(1563,8,1565,66)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
        Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1563,8,1565,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,_0)=>Source requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34), org.kframework.attributes.Location(Location(1566,8,1567,57)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            Var'Unds'0:SortString{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
        VarSource:SortString{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1566,8,1567,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`rfindString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205), org.kframework.attributes.Location(Location(1555,8,1555,182)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInt{},R} (
        LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
        LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1555,8,1555,182)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_0,#token("\"\"","String"),_1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6), org.kframework.attributes.Location(Location(1556,8,1556,33)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            Var'Unds'0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            \dv{SortString{}}("")
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'1:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInt{},R} (
        LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
        \dv{SortInt{}}("-1")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1556,8,1556,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6")]

// rule `sequenceDefns(_)_WASM_K_Defns`(`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(D,DS))=>inj{Defn,KItem}(D)~>`sequenceDefns(_)_WASM_K_Defns`(DS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b96f549b740f3ceff985d241c3bdf7a9fdfa05418058c981a019eb4ddc3b8336), org.kframework.attributes.Location(Location(282,10,282,57)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(VarD:SortDefn{},VarDS:SortDefns{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortK{},R} (
        LblsequenceDefns'LParUndsRParUnds'WASM'Unds'K'Unds'Defns{}(X0:SortDefns{}),
        kseq{}(inj{SortDefn{}, SortKItem{}}(VarD:SortDefn{}),LblsequenceDefns'LParUndsRParUnds'WASM'Unds'K'Unds'Defns{}(VarDS:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(282,10,282,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b96f549b740f3ceff985d241c3bdf7a9fdfa05418058c981a019eb4ddc3b8336")]

// rule `sequenceDefns(_)_WASM_K_Defns`(inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)))=>.K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d7152c4ef3f1cb10871683c6ca81f84d4a2870fdaf002b47d998d6134b3a23b9), org.kframework.attributes.Location(Location(281,10,281,36)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortK{},R} (
        LblsequenceDefns'LParUndsRParUnds'WASM'Unds'K'Unds'Defns{}(X0:SortDefns{}),
        dotk{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,10,281,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d7152c4ef3f1cb10871683c6ca81f84d4a2870fdaf002b47d998d6134b3a23b9")]

// rule `sequenceInstrs(_)_WASM_K_Instrs`(`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(I,IS))=>inj{Instr,KItem}(I)~>`sequenceInstrs(_)_WASM_K_Instrs`(IS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4749a3559dad2e00e213ab1d0f0174ce83679e2fba0aa0a3d9a18b823f478225), org.kframework.attributes.Location(Location(285,10,285,60)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(VarI:SortInstr{},VarIS:SortInstrs{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortK{},R} (
        LblsequenceInstrs'LParUndsRParUnds'WASM'Unds'K'Unds'Instrs{}(X0:SortInstrs{}),
        kseq{}(inj{SortInstr{}, SortKItem{}}(VarI:SortInstr{}),LblsequenceInstrs'LParUndsRParUnds'WASM'Unds'K'Unds'Instrs{}(VarIS:SortInstrs{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(285,10,285,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4749a3559dad2e00e213ab1d0f0174ce83679e2fba0aa0a3d9a18b823f478225")]

// rule `sequenceInstrs(_)_WASM_K_Instrs`(inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList)))=>.K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(839197869687c78476b5f30e7fd244fec3e531dd493cb136ed2dc91464e67721), org.kframework.attributes.Location(Location(284,10,284,38)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortK{},R} (
        LblsequenceInstrs'LParUndsRParUnds'WASM'Unds'K'Unds'Instrs{}(X0:SortInstrs{}),
        dotk{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,10,284,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("839197869687c78476b5f30e7fd244fec3e531dd493cb136ed2dc91464e67721")]

// rule `sequenceStmts(_)_WASM_K_Stmts`(`___WASM-COMMON-SYNTAX_Stmts_Stmt_Stmts`(S,SS))=>inj{Stmt,KItem}(S)~>`sequenceStmts(_)_WASM_K_Stmts`(SS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(318154a8d61cc8a42de450ee1e0fa8959092020d1168d2986f79081ee54a200a), org.kframework.attributes.Location(Location(279,10,279,57)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortStmts{}, R} (
            X0:SortStmts{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(VarS:SortStmt{},VarSS:SortStmts{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortK{},R} (
        LblsequenceStmts'LParUndsRParUnds'WASM'Unds'K'Unds'Stmts{}(X0:SortStmts{}),
        kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),LblsequenceStmts'LParUndsRParUnds'WASM'Unds'K'Unds'Stmts{}(VarSS:SortStmts{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(279,10,279,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("318154a8d61cc8a42de450ee1e0fa8959092020d1168d2986f79081ee54a200a")]

// rule `sequenceStmts(_)_WASM_K_Stmts`(inj{EmptyStmts,Stmts}(`.List{"listStmt"}_EmptyStmts`(.KList)))=>.K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4a7af8e7055bbcba4f9cc9e767d084b8ab4c093d458bf2ed4995ea647bf40177), org.kframework.attributes.Location(Location(278,10,278,36)), org.kframework.attributes.Source(Source(wasm-semantics/wasm.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortStmts{}, R} (
            X0:SortStmts{},
            inj{SortEmptyStmts{}, SortStmts{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortK{},R} (
        LblsequenceStmts'LParUndsRParUnds'WASM'Unds'K'Unds'Stmts{}(X0:SortStmts{}),
        dotk{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(278,10,278,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4a7af8e7055bbcba4f9cc9e767d084b8ab4c093d458bf2ed4995ea647bf40177")]

// rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))),`_<<Int_`(#token("1","Int"),LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f), org.kframework.attributes.Location(Location(1103,8,1103,164)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortInt{},R} (
        LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
        Lbl'Unds'-Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1103,8,1103,164)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f")]

// rule `sqrtFloat(_)_FLOAT_Float_Float`(F)=>`rootFloat(_,_)_FLOAT_Float_Float_Int`(F,#token("2","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fc1f1e41550433293802b49fcbf04130479a51083902539ae31df11f556b88fe), org.kframework.attributes.Location(Location(1334,8,1334,45)), org.kframework.attributes.Source(Source(/usr/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortFloat{}, R} (
            X0:SortFloat{},
            VarF:SortFloat{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFloat{},R} (
        LblsqrtFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(X0:SortFloat{}),
        LblrootFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Int{}(VarF:SortFloat{},\dv{SortInt{}}("2"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1334,8,1334,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("fc1f1e41550433293802b49fcbf04130479a51083902539ae31df11f556b88fe")]

// rule `structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_OptionalId`(DEFNS,OID)=>`#structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_ModuleDecl`(`#reverseDefns(_,_)_WASM-TEXT_Defns_Defns_Defns`(DEFNS,inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList))),`#emptyModule(_)_WASM_ModuleDecl_OptionalId`(OID)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(24b52a78f52f95bc02fb3a5597c4c57e9c1074048fdbd1feb89661f06ddac0d8), org.kframework.attributes.Location(Location(659,10,659,106)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            VarDEFNS:SortDefns{}
          ),\and{R} (
          \in{SortOptionalId{}, R} (
            X1:SortOptionalId{},
            VarOID:SortOptionalId{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        LblstructureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'OptionalId{}(X0:SortDefns{},X1:SortOptionalId{}),
        Lbl'Hash'structureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'Hash'reverseDefns'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Defns{}(VarDEFNS:SortDefns{},inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())),Lbl'Hash'emptyModule'LParUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId{}(VarOID:SortOptionalId{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(659,10,659,106)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("24b52a78f52f95bc02fb3a5597c4c57e9c1074048fdbd1feb89661f06ddac0d8")]

// rule `structureModules(_)_WASM-TEXT_Stmts_Stmts`(inj{EmptyStmts,Stmts}(`.List{"listStmt"}_EmptyStmts`(.KList)) #as _0)=>_0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(58e8549cdbfd49accac8405da12e049622927090317e686af874c9d217ee72bc), org.kframework.attributes.Location(Location(653,10,653,44)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortStmts{}, R} (
            X0:SortStmts{},
            \and{SortStmts{}}(inj{SortEmptyStmts{}, SortStmts{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'0:SortStmts{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortStmts{},R} (
        LblstructureModules'LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Stmts{}(X0:SortStmts{}),
        Var'Unds'0:SortStmts{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(653,10,653,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("58e8549cdbfd49accac8405da12e049622927090317e686af874c9d217ee72bc")]

// rule `structureModules(_)_WASM-TEXT_Stmts_Stmts`(`___WASM-COMMON-SYNTAX_Stmts_Stmt_Stmts`(S,SS))=>`___WASM-COMMON-SYNTAX_Stmts_Stmt_Stmts`(S,`structureModules(_)_WASM-TEXT_Stmts_Stmts`(SS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(05683eb7e2694a20247e7efb298e511fde3aaca660ec1cfc528ff0c872614f67), org.kframework.attributes.Location(Location(654,10,654,58)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortStmts{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortStmts{}, R} (
                  X0:SortStmts{},
                  \and{SortStmts{}}(inj{SortEmptyStmts{}, SortStmts{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'0:SortStmts{})
                ),
                \top{R} ()
              )
          )),
          \or{R} (
          \exists{R} (Var'Unds'3:SortOptionalId{},
          \exists{R} (Var'Unds'5:SortStmts{},
          \exists{R} (Var'Unds'4:SortDefns{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortStmts{}, R} (
                  X0:SortStmts{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(inj{SortModuleDecl{}, SortStmt{}}(Lbl'LPar'module'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(Var'Unds'3:SortOptionalId{},Var'Unds'4:SortDefns{})),Var'Unds'5:SortStmts{})
                ),
                \top{R} ()
              )
          )))),
          \bottom{R}()
        ))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortStmts{}, R} (
            X0:SortStmts{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(VarS:SortStmt{},VarSS:SortStmts{})
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortStmts{},R} (
        LblstructureModules'LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Stmts{}(X0:SortStmts{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(VarS:SortStmt{},LblstructureModules'LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Stmts{}(VarSS:SortStmts{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(654,10,654,58)"), owise{}(), UNIQUE'Unds'ID{}("05683eb7e2694a20247e7efb298e511fde3aaca660ec1cfc528ff0c872614f67")]

// rule `structureModules(_)_WASM-TEXT_Stmts_Stmts`(`___WASM-COMMON-SYNTAX_Stmts_Stmt_Stmts`(inj{ModuleDecl,Stmt}(`(module__)_WASM-TEXT-COMMON-SYNTAX_ModuleDecl_OptionalId_Defns`(OID,DS)),SS))=>`___WASM-COMMON-SYNTAX_Stmts_Stmt_Stmts`(inj{ModuleDecl,Stmt}(`structureModule(_,_)_WASM-TEXT_ModuleDecl_Defns_OptionalId`(DS,OID)),`structureModules(_)_WASM-TEXT_Stmts_Stmts`(SS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(13c91df9cbf08d75d31d09a2456e74f26fe27755394706f21ca2c2acacdab4a0), org.kframework.attributes.Location(Location(652,10,652,106)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortStmts{}, R} (
            X0:SortStmts{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(inj{SortModuleDecl{}, SortStmt{}}(Lbl'LPar'module'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(VarOID:SortOptionalId{},VarDS:SortDefns{})),VarSS:SortStmts{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortStmts{},R} (
        LblstructureModules'LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Stmts{}(X0:SortStmts{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(inj{SortModuleDecl{}, SortStmt{}}(LblstructureModule'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'ModuleDecl'Unds'Defns'Unds'OptionalId{}(VarDS:SortDefns{},VarOID:SortOptionalId{})),LblstructureModules'LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Stmts{}(VarSS:SortStmts{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(652,10,652,106)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("13c91df9cbf08d75d31d09a2456e74f26fe27755394706f21ca2c2acacdab4a0")]

// rule `t2aLimits(_)_WASM-TEXT_Limits_TextLimits`(`___WASM-TEXT-COMMON-SYNTAX_TextLimits_Int_Int`(MIN,MAX))=>limitsMinMax(MIN,MAX) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bc09e2efa3d7348aeae70550acbe88103354c416b65d2448d47d34054792b57c), org.kframework.attributes.Location(Location(828,10,828,57)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTextLimits{}, R} (
            X0:SortTextLimits{},
            Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'TextLimits'Unds'Int'Unds'Int{}(VarMIN:SortInt{},VarMAX:SortInt{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortLimits{},R} (
        Lblt2aLimits'LParUndsRParUnds'WASM-TEXT'Unds'Limits'Unds'TextLimits{}(X0:SortTextLimits{}),
        LbllimitsMinMax{}(VarMIN:SortInt{},VarMAX:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(828,10,828,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("bc09e2efa3d7348aeae70550acbe88103354c416b65d2448d47d34054792b57c")]

// rule `t2aLimits(_)_WASM-TEXT_Limits_TextLimits`(inj{Int,TextLimits}(MIN))=>limitsMin(MIN) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c48cf9aac817ac20d7c391df411d453253133d219c24131caadd3e1fdda5f287), org.kframework.attributes.Location(Location(827,10,827,47)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTextLimits{}, R} (
            X0:SortTextLimits{},
            inj{SortInt{}, SortTextLimits{}}(VarMIN:SortInt{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortLimits{},R} (
        Lblt2aLimits'LParUndsRParUnds'WASM-TEXT'Unds'Limits'Unds'TextLimits{}(X0:SortTextLimits{}),
        LbllimitsMin{}(VarMIN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(827,10,827,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c48cf9aac817ac20d7c391df411d453253133d219c24131caadd3e1fdda5f287")]

// rule `text2abstract(_)_WASM_Stmts_Stmts`(SS)=>`#t2aStmts<_>(_)_WASM-TEXT_Stmts_Context_Stmts`(`#freshCtx()_WASM-TEXT_Context`(.KList),`structureModules(_)_WASM-TEXT_Stmts_Stmts`(`unfoldStmts(_)_WASM-TEXT_Stmts_Stmts`(SS))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5e6cfefdb2ddb7fc09e7c7e35a991d345cdc7e87840ef13777e10f582f9653a1), org.kframework.attributes.Location(Location(734,10,734,94)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortDefns{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortStmts{}, R} (
                  X0:SortStmts{},
                  inj{SortDefns{}, SortStmts{}}(Var'Unds'0:SortDefns{})
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortStmts{}, R} (
            X0:SortStmts{},
            VarSS:SortStmts{}
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortStmts{},R} (
        Lbltext2abstract'LParUndsRParUnds'WASM'Unds'Stmts'Unds'Stmts{}(X0:SortStmts{}),
        Lbl'Hash't2aStmts'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Context'Unds'Stmts{}(Lbl'Hash'freshCtx'LParRParUnds'WASM-TEXT'Unds'Context{}(),LblstructureModules'LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Stmts{}(LblunfoldStmts'LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Stmts{}(VarSS:SortStmts{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(734,10,734,94)"), owise{}(), UNIQUE'Unds'ID{}("5e6cfefdb2ddb7fc09e7c7e35a991d345cdc7e87840ef13777e10f582f9653a1")]

// rule `text2abstract(_)_WASM_Stmts_Stmts`(inj{Defns,Stmts}(DS))=>`text2abstract(_)_WASM_Stmts_Stmts`(`___WASM-COMMON-SYNTAX_Stmts_Stmt_Stmts`(inj{ModuleDecl,Stmt}(`(module__)_WASM-TEXT-COMMON-SYNTAX_ModuleDecl_OptionalId_Defns`(`.Identifier`(.KList),DS)),inj{EmptyStmts,Stmts}(`.List{"listStmt"}_EmptyStmts`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8f461a2de25424190a903de32b83d292c82dcba0d36b698fa628987e2a2f2b67), org.kframework.attributes.Location(Location(733,10,733,72)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortStmts{}, R} (
            X0:SortStmts{},
            inj{SortDefns{}, SortStmts{}}(VarDS:SortDefns{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortStmts{},R} (
        Lbltext2abstract'LParUndsRParUnds'WASM'Unds'Stmts'Unds'Stmts{}(X0:SortStmts{}),
        Lbltext2abstract'LParUndsRParUnds'WASM'Unds'Stmts'Unds'Stmts{}(Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(inj{SortModuleDecl{}, SortStmt{}}(Lbl'LPar'module'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(Lbl'Stop'Identifier{}(),VarDS:SortDefns{})),inj{SortEmptyStmts{}, SortStmts{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(733,10,733,72)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8f461a2de25424190a903de32b83d292c82dcba0d36b698fa628987e2a2f2b67")]

// rule `truncFloat(_)_WASM-NUMERIC_Float_Float`(F)=>`ceilFloat(_)_FLOAT_Float_Float`(F) requires `signFloat(_)_FLOAT_Bool_Float`(F) ensures #token("true","Bool") [UNIQUE_ID(ba89a6fac26467de7c1d012cbee2ca94002d8aa95432bdbaed9ae1e0e8db4fda), org.kframework.attributes.Location(Location(160,10,160,74)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortFloat{}, R} (
            X0:SortFloat{},
            VarF:SortFloat{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFloat{},R} (
        LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(X0:SortFloat{}),
        LblceilFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(160,10,160,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("ba89a6fac26467de7c1d012cbee2ca94002d8aa95432bdbaed9ae1e0e8db4fda")]

// rule `truncFloat(_)_WASM-NUMERIC_Float_Float`(F)=>`floorFloat(_)_FLOAT_Float_Float`(F) requires `notBool_`(`signFloat(_)_FLOAT_Bool_Float`(F)) ensures #token("true","Bool") [UNIQUE_ID(4d0ca1cbf5cbe74889d93e297b8a59abc65c55f59d49dea2526db29753ff89d7), org.kframework.attributes.Location(Location(159,10,159,74)), org.kframework.attributes.Source(Source(wasm-semantics/numeric.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{})),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortFloat{}, R} (
            X0:SortFloat{},
            VarF:SortFloat{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortFloat{},R} (
        LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(X0:SortFloat{}),
        LblfloorFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(159,10,159,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/numeric.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("4d0ca1cbf5cbe74889d93e297b8a59abc65c55f59d49dea2526db29753ff89d7")]

// rule `typeUse2typeIdx(_,_)_WASM-TEXT_Int_TypeUse_Map`(`(type_)_WASM-COMMON-SYNTAX_TypeUse_Index`(inj{Identifier,Index}(ID)),TIDS)=>`project:Int`(`Map:lookup`(TIDS,inj{Identifier,KItem}(ID))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6fe22d97989d192532c9a4981a788296c146c957eba83d01fc6ceb58159d894c), org.kframework.attributes.Location(Location(799,10,799,81)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTypeUse{}, R} (
            X0:SortTypeUse{},
            Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{}))
          ),\and{R} (
          \in{SortMap{}, R} (
            X1:SortMap{},
            VarTIDS:SortMap{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        LbltypeUse2typeIdx'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Int'Unds'TypeUse'Unds'Map{}(X0:SortTypeUse{},X1:SortMap{}),
        Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarTIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(799,10,799,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6fe22d97989d192532c9a4981a788296c146c957eba83d01fc6ceb58159d894c")]

// rule `typeUse2typeIdx(_,_)_WASM-TEXT_Int_TypeUse_Map`(`(type_)_WASM-COMMON-SYNTAX_TypeUse_Index`(inj{Int,Index}(IDX)),_TIDS)=>IDX requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(968b70e05efccd6b162aaeb5f42f35ec4e10521650b8bf8d59f062d1260704fd), org.kframework.attributes.Location(Location(800,10,800,66)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTypeUse{}, R} (
            X0:SortTypeUse{},
            Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarIDX:SortInt{}))
          ),\and{R} (
          \in{SortMap{}, R} (
            X1:SortMap{},
            Var'Unds'TIDS:SortMap{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        LbltypeUse2typeIdx'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Int'Unds'TypeUse'Unds'Map{}(X0:SortTypeUse{},X1:SortMap{}),
        VarIDX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(800,10,800,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("968b70e05efccd6b162aaeb5f42f35ec4e10521650b8bf8d59f062d1260704fd")]

// rule `typeUse2typeIdx(_,_)_WASM-TEXT_Int_TypeUse_Map`(`(type_)__WASM-COMMON-SYNTAX_TypeUse_Index_TypeDecls`(IDX,_0),_TIDS)=>`typeUse2typeIdx(_,_)_WASM-TEXT_Int_TypeUse_Map`(`(type_)_WASM-COMMON-SYNTAX_TypeUse_Index`(IDX),_TIDS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e6b8cde37df450903c9f2d9141b068af6acdd142fa78df14e9e65167bf04fcf5), org.kframework.attributes.Location(Location(797,10,797,73)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTypeUse{}, R} (
            X0:SortTypeUse{},
            Lbl'LPar'type'UndsRParUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(VarIDX:SortIndex{},Var'Unds'0:SortTypeDecls{})
          ),\and{R} (
          \in{SortMap{}, R} (
            X1:SortMap{},
            Var'Unds'TIDS:SortMap{}
          ),
          \top{R} ()
        ))),
    \and{R} (
      \equals{SortInt{},R} (
        LbltypeUse2typeIdx'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Int'Unds'TypeUse'Unds'Map{}(X0:SortTypeUse{},X1:SortMap{}),
        LbltypeUse2typeIdx'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'Int'Unds'TypeUse'Unds'Map{}(Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(VarIDX:SortIndex{}),Var'Unds'TIDS:SortMap{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(797,10,797,73)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e6b8cde37df450903c9f2d9141b068af6acdd142fa78df14e9e65167bf04fcf5")]

// rule `types2indices(_)_WASM-TEXT_TypesInfo_Defns`(DS)=>`#types2indices(_,_)_WASM-TEXT_TypesInfo_Defns_TypesInfo`(DS,`#ti(_,_)_WASM-TEXT_TypesInfo_Map_Int`(`.Map`(.KList),#token("0","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a5f70ab8a992d66ab5ed886ff74c474650c29e57224b75d6ab3e8f6a8e0940ab), org.kframework.attributes.Location(Location(447,10,447,79)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            VarDS:SortDefns{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortTypesInfo{},R} (
        Lbltypes2indices'LParUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Defns{}(X0:SortDefns{}),
        Lbl'Hash'types2indices'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Defns'Unds'TypesInfo{}(VarDS:SortDefns{},Lbl'Hash'ti'LParUndsCommUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Map'Unds'Int{}(Lbl'Stop'Map{}(),\dv{SortInt{}}("0")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(447,10,447,79)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a5f70ab8a992d66ab5ed886ff74c474650c29e57224b75d6ab3e8f6a8e0940ab")]

// rule `unescape(_)_WASM-DATA_String_String`(S)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,#token("1","Int"),#token("\"\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d79b365ae692c40e102365a48c9ffc69bfbbfd1a84f79fd4cee5ac9d3750cf5), org.kframework.attributes.Location(Location(456,10,456,52)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'String{}(X0:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},\dv{SortInt{}}("1"),\dv{SortString{}}(""))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(456,10,456,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7d79b365ae692c40e102365a48c9ffc69bfbbfd1a84f79fd4cee5ac9d3750cf5")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>SB requires `_==Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("1","Int"))) ensures #token("true","Bool") [UNIQUE_ID(d0a4b9de242512df00da9cc8b12c65dbecb08dacc06403255722cfc74ad09910), org.kframework.attributes.Location(Location(457,10,457,94)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("1"))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarSB:SortString{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(X0:SortString{},X1:SortInt{},X2:SortString{}),
        VarSB:SortString{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(457,10,457,94)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("d0a4b9de242512df00da9cc8b12c65dbecb08dacc06403255722cfc74ad09910")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("1","Int")),`_+String__STRING-COMMON_String_String_String`(SB,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int"))))) requires `_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("1","Int"))),`_=/=K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(d2d71adac9c21981b0cf7947c5a63999291503ba7e48e509d4b6b79ea3f638aa), org.kframework.attributes.Location(Location(464,10,466,58)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("1"))),Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarSB:SortString{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(X0:SortString{},X1:SortInt{},X2:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(464,10,466,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("d2d71adac9c21981b0cf7947c5a63999291503ba7e48e509d4b6b79ea3f638aa")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING-COMMON_String_String_String`(SB,#token("\"'\"","String"))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"'\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(900dfc3051de47de1f8b7c423eed706f7f41cb6db50d544e406b99c6e6743f58), org.kframework.attributes.Location(Location(492,10,495,63)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("'")),dotk{}()))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarSB:SortString{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(X0:SortString{},X1:SortInt{},X2:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},\dv{SortString{}}("'")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(492,10,495,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("900dfc3051de47de1f8b7c423eed706f7f41cb6db50d544e406b99c6e6743f58")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING-COMMON_String_String_String`(SB,#token("\"\\\"\"","String"))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"\\\"\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(d16a1aa26fc62bae35d9cb8433d9594fdc956d1e793852ec62af482297172cf1), org.kframework.attributes.Location(Location(488,10,491,64)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\"")),dotk{}()))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarSB:SortString{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(X0:SortString{},X1:SortInt{},X2:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},\dv{SortString{}}("\"")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(488,10,491,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("d16a1aa26fc62bae35d9cb8433d9594fdc956d1e793852ec62af482297172cf1")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING-COMMON_String_String_String`(SB,#token("\"\\\\\"","String"))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(5f99aee1c7fc26b7bff499ada6e524664ca056b3dd5a06428f64510882d5444b), org.kframework.attributes.Location(Location(496,10,499,64)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarSB:SortString{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(X0:SortString{},X1:SortInt{},X2:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},\dv{SortString{}}("\\")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(496,10,499,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("5f99aee1c7fc26b7bff499ada6e524664ca056b3dd5a06428f64510882d5444b")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING-COMMON_String_String_String`(SB,#token("\"\\n\"","String"))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"n\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(5c214685d21bc6779dffcb6c50ff97644fbb6db1941dfc1439a82d0026fccc1c), org.kframework.attributes.Location(Location(480,10,483,63)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("n")),dotk{}()))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarSB:SortString{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(X0:SortString{},X1:SortInt{},X2:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},\dv{SortString{}}("\n")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(480,10,483,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("5c214685d21bc6779dffcb6c50ff97644fbb6db1941dfc1439a82d0026fccc1c")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING-COMMON_String_String_String`(SB,#token("\"\\r\"","String"))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"r\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(8bb114fee4a7fa794a5a7a4764089b9ed68256828380ecfdb71e3f4c08622056), org.kframework.attributes.Location(Location(484,10,487,63)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("r")),dotk{}()))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarSB:SortString{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(X0:SortString{},X1:SortInt{},X2:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},\dv{SortString{}}("\r")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(484,10,487,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("8bb114fee4a7fa794a5a7a4764089b9ed68256828380ecfdb71e3f4c08622056")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING-COMMON_String_String_String`(SB,#token("\"\\t\"","String"))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"t\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(7315bb5c9a90f933a6385a578ac02ea171f0378e4fe43ab5772d027c1ae029e4), org.kframework.attributes.Location(Location(476,10,479,63)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("t")),dotk{}()))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarSB:SortString{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(X0:SortString{},X1:SortInt{},X2:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},\dv{SortString{}}("\t")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(476,10,479,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("7315bb5c9a90f933a6385a578ac02ea171f0378e4fe43ab5772d027c1ae029e4")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("3","Int")),`_+String__STRING-COMMON_String_String_String`(SB,`chrChar(_)_STRING-COMMON_String_Int`(`String2Base(_,_)_STRING-COMMON_Int_String_Int`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("3","Int"))),#token("16","Int"))))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("3","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_=/=Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(#token("\"0123456789abcdefABCDEF\"","String"),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int"))),#token("0","Int")),#token("-1","Int"))) ensures #token("true","Bool") [UNIQUE_ID(7c0eea67418a2ca1e69aaf0188d71964e01b717dba8652ec72b4f4ab76304734), org.kframework.attributes.Location(Location(467,10,470,107)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("3"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsSlshEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(\dv{SortString{}}("0123456789abcdefABCDEF"),LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2"))),\dv{SortInt{}}("0")),\dv{SortInt{}}("-1"))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarSB:SortString{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(X0:SortString{},X1:SortInt{},X2:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("3")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("3"))),\dv{SortInt{}}("16")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(467,10,470,107)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("7c0eea67418a2ca1e69aaf0188d71964e01b717dba8652ec72b4f4ab76304734")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(`#idxCloseBracket(_,_)_WASM-DATA_Int_String_Int`(S,IDX),#token("1","Int")),`_+String__STRING-COMMON_String_String_String`(SB,`Bytes2String(_)_BYTES-HOOKED_String_Bytes`(`#encodeUTF8(_)_WASM-DATA_Bytes_Int`(`String2Base(_,_)_STRING-COMMON_Int_String_Int`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("3","Int")),`#idxCloseBracket(_,_)_WASM-DATA_Int_String_Int`(S,`_+Int_`(IDX,#token("3","Int")))),#token("16","Int")))))) requires `_andBool_`(`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"u\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(66e4adc22e35d289e532b022e82c9cd90cc3d5547faf26ce335d9e08be06c672), org.kframework.attributes.Location(Location(521,10,523,63)), org.kframework.attributes.Source(Source(wasm-semantics/data.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}())),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("u")),dotk{}()))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarSB:SortString{}
          ),
          \top{R} ()
        )))),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(X0:SortString{},X1:SortInt{},X2:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{}),\dv{SortInt{}}("1")),Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblBytes2String'LParUndsRParUnds'BYTES-HOOKED'Unds'String'Unds'Bytes{}(Lbl'Hash'encodeUTF8'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int{}(LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("3")),Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("3")))),\dv{SortInt{}}("16"))))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(521,10,523,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/data.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("66e4adc22e35d289e532b022e82c9cd90cc3d5547faf26ce335d9e08be06c672")]

// rule `unfoldDefns(_)_WASM-TEXT_Defns_Defns`(DS)=>`#unfoldDefns(_,_,_)_WASM-TEXT_Defns_Defns_Int_TypesInfo`(DS,#token("0","Int"),`types2indices(_)_WASM-TEXT_TypesInfo_Defns`(DS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d129fab46dbdb2e439383f39e1444304fd6f52e76e5498200d025358b14faff1), org.kframework.attributes.Location(Location(399,10,399,67)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortDefns{}, R} (
            X0:SortDefns{},
            VarDS:SortDefns{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortDefns{},R} (
        LblunfoldDefns'LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns{}(X0:SortDefns{}),
        Lbl'Hash'unfoldDefns'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns'Unds'Int'Unds'TypesInfo{}(VarDS:SortDefns{},\dv{SortInt{}}("0"),Lbltypes2indices'LParUndsRParUnds'WASM-TEXT'Unds'TypesInfo'Unds'Defns{}(VarDS:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(399,10,399,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d129fab46dbdb2e439383f39e1444304fd6f52e76e5498200d025358b14faff1")]

// rule `unfoldInstrs(_)_WASM-TEXT_Instrs_Instrs`(IS)=>`#unfoldInstrs(_,_,_)_WASM-TEXT_Instrs_Instrs_Int_Map`(IS,#token("0","Int"),`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1f13dbe75faef7360cedac6cc20b96b8a61cd564e08186ecb8968d54714e0f1d), org.kframework.attributes.Location(Location(561,11,561,57)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInstrs{}, R} (
            X0:SortInstrs{},
            VarIS:SortInstrs{}
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortInstrs{},R} (
        LblunfoldInstrs'LParUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs{}(X0:SortInstrs{}),
        Lbl'Hash'unfoldInstrs'LParUndsCommUndsCommUndsRParUnds'WASM-TEXT'Unds'Instrs'Unds'Instrs'Unds'Int'Unds'Map{}(VarIS:SortInstrs{},\dv{SortInt{}}("0"),Lbl'Stop'Map{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(561,11,561,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("1f13dbe75faef7360cedac6cc20b96b8a61cd564e08186ecb8968d54714e0f1d")]

// rule `unfoldStmts(_)_WASM-TEXT_Stmts_Stmts`(inj{EmptyStmts,Stmts}(`.List{"listStmt"}_EmptyStmts`(.KList)) #as _0)=>_0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7725228f91b54a3055642ec661723d20c4c2f700ed0c67488a457053daa58052), org.kframework.attributes.Location(Location(396,10,396,39)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortStmts{}, R} (
            X0:SortStmts{},
            \and{SortStmts{}}(inj{SortEmptyStmts{}, SortStmts{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'0:SortStmts{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortStmts{},R} (
        LblunfoldStmts'LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Stmts{}(X0:SortStmts{}),
        Var'Unds'0:SortStmts{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(396,10,396,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7725228f91b54a3055642ec661723d20c4c2f700ed0c67488a457053daa58052")]

// rule `unfoldStmts(_)_WASM-TEXT_Stmts_Stmts`(`___WASM-COMMON-SYNTAX_Stmts_Stmt_Stmts`(S,SS))=>`___WASM-COMMON-SYNTAX_Stmts_Stmt_Stmts`(S,`unfoldStmts(_)_WASM-TEXT_Stmts_Stmts`(SS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(26d3ff9893f09fc1c51abb2e0122577ffe0b4d0720a5cdf7d8b139819b912542), org.kframework.attributes.Location(Location(397,10,397,48)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortStmts{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortStmts{}, R} (
                  X0:SortStmts{},
                  \and{SortStmts{}}(inj{SortEmptyStmts{}, SortStmts{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}()),Var'Unds'0:SortStmts{})
                ),
                \top{R} ()
              )
          )),
          \or{R} (
          \exists{R} (Var'Unds'3:SortOptionalId{},
          \exists{R} (Var'Unds'5:SortStmts{},
          \exists{R} (Var'Unds'4:SortDefns{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortStmts{}, R} (
                  X0:SortStmts{},
                  Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(inj{SortModuleDecl{}, SortStmt{}}(Lbl'LPar'module'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(Var'Unds'3:SortOptionalId{},Var'Unds'4:SortDefns{})),Var'Unds'5:SortStmts{})
                ),
                \top{R} ()
              )
          )))),
          \bottom{R}()
        ))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortStmts{}, R} (
            X0:SortStmts{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(VarS:SortStmt{},VarSS:SortStmts{})
          ),
          \top{R} ()
        )
    )),
    \and{R} (
      \equals{SortStmts{},R} (
        LblunfoldStmts'LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Stmts{}(X0:SortStmts{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(VarS:SortStmt{},LblunfoldStmts'LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Stmts{}(VarSS:SortStmts{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(397,10,397,48)"), owise{}(), UNIQUE'Unds'ID{}("26d3ff9893f09fc1c51abb2e0122577ffe0b4d0720a5cdf7d8b139819b912542")]

// rule `unfoldStmts(_)_WASM-TEXT_Stmts_Stmts`(`___WASM-COMMON-SYNTAX_Stmts_Stmt_Stmts`(inj{ModuleDecl,Stmt}(`(module__)_WASM-TEXT-COMMON-SYNTAX_ModuleDecl_OptionalId_Defns`(OID,DS)),SS))=>`___WASM-COMMON-SYNTAX_Stmts_Stmt_Stmts`(inj{ModuleDecl,Stmt}(`(module__)_WASM-TEXT-COMMON-SYNTAX_ModuleDecl_OptionalId_Defns`(OID,`unfoldDefns(_)_WASM-TEXT_Defns_Defns`(DS))),`unfoldStmts(_)_WASM-TEXT_Stmts_Stmts`(SS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(32bdca46c41c42c186794815063c11d101fdd69e3c8ca583db69131190a109ea), org.kframework.attributes.Location(Location(395,10,395,103)), org.kframework.attributes.Source(Source(wasm-semantics/wasm-text.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortStmts{}, R} (
            X0:SortStmts{},
            Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(inj{SortModuleDecl{}, SortStmt{}}(Lbl'LPar'module'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(VarOID:SortOptionalId{},VarDS:SortDefns{})),VarSS:SortStmts{})
          ),
          \top{R} ()
        )),
    \and{R} (
      \equals{SortStmts{},R} (
        LblunfoldStmts'LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Stmts{}(X0:SortStmts{}),
        Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(inj{SortModuleDecl{}, SortStmt{}}(Lbl'LPar'module'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(VarOID:SortOptionalId{},LblunfoldDefns'LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Defns{}(VarDS:SortDefns{}))),LblunfoldStmts'LParUndsRParUnds'WASM-TEXT'Unds'Stmts'Unds'Stmts{}(VarSS:SortStmts{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(395,10,395,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/wasm-text.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("32bdca46c41c42c186794815063c11d101fdd69e3c8ca583db69131190a109ea")]

// rule #Ceil{FuncDefCellMap,#SortParam}(`_FuncDefCellMap_`(`FuncDefCellMapItem`(@K0,@K1),@Rest))=>#And{#SortParam}(#Equals{Bool,#SortParam}(`FuncDefCellMap:in_keys`(@K0,@Rest),#token("false","Bool")),#And{#SortParam}(#Top{#SortParam}(.KList),#Ceil{FuncDefCell,#SortParam}(@K1))) requires #token("true","Bool") ensures #token("true","Bool") [simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortFuncDefCellMap{}, Q0}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(@VarK0:SortFAddrCell{},@VarK1:SortFuncDefCell{}),@VarRest:SortFuncDefCellMap{})),
        \and{Q0}(\equals{SortBool{}, Q0}(LblFuncDefCellMap'Coln'in'Unds'keys{}(@VarK0:SortFAddrCell{},@VarRest:SortFuncDefCellMap{}),\dv{SortBool{}}("false")),\and{Q0}(\top{Q0}(),\ceil{SortFuncDefCell{}, Q0}(@VarK1:SortFuncDefCell{})))),
      \top{R}()))
  [simplification{}(""), sortParams{}("{Q0}")]

// rule #Ceil{GlobalInstCellMap,#SortParam}(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(@K0,@K1),@Rest))=>#And{#SortParam}(#Equals{Bool,#SortParam}(`GlobalInstCellMap:in_keys`(@K0,@Rest),#token("false","Bool")),#And{#SortParam}(#Top{#SortParam}(.KList),#Ceil{GlobalInstCell,#SortParam}(@K1))) requires #token("true","Bool") ensures #token("true","Bool") [simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortGlobalInstCellMap{}, Q0}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(@VarK0:SortGAddrCell{},@VarK1:SortGlobalInstCell{}),@VarRest:SortGlobalInstCellMap{})),
        \and{Q0}(\equals{SortBool{}, Q0}(LblGlobalInstCellMap'Coln'in'Unds'keys{}(@VarK0:SortGAddrCell{},@VarRest:SortGlobalInstCellMap{}),\dv{SortBool{}}("false")),\and{Q0}(\top{Q0}(),\ceil{SortGlobalInstCell{}, Q0}(@VarK1:SortGlobalInstCell{})))),
      \top{R}()))
  [simplification{}(""), sortParams{}("{Q0}")]

// rule #Ceil{MemInstCellMap,#SortParam}(`_MemInstCellMap_`(`MemInstCellMapItem`(@K0,@K1),@Rest))=>#And{#SortParam}(#Equals{Bool,#SortParam}(`MemInstCellMap:in_keys`(@K0,@Rest),#token("false","Bool")),#And{#SortParam}(#Top{#SortParam}(.KList),#Ceil{MemInstCell,#SortParam}(@K1))) requires #token("true","Bool") ensures #token("true","Bool") [simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortMemInstCellMap{}, Q0}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(@VarK0:SortMAddrCell{},@VarK1:SortMemInstCell{}),@VarRest:SortMemInstCellMap{})),
        \and{Q0}(\equals{SortBool{}, Q0}(LblMemInstCellMap'Coln'in'Unds'keys{}(@VarK0:SortMAddrCell{},@VarRest:SortMemInstCellMap{}),\dv{SortBool{}}("false")),\and{Q0}(\top{Q0}(),\ceil{SortMemInstCell{}, Q0}(@VarK1:SortMemInstCell{})))),
      \top{R}()))
  [simplification{}(""), sortParams{}("{Q0}")]

// rule #Ceil{ModuleInstCellMap,#SortParam}(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(@K0,@K1),@Rest))=>#And{#SortParam}(#Equals{Bool,#SortParam}(`ModuleInstCellMap:in_keys`(@K0,@Rest),#token("false","Bool")),#And{#SortParam}(#Top{#SortParam}(.KList),#Ceil{ModuleInstCell,#SortParam}(@K1))) requires #token("true","Bool") ensures #token("true","Bool") [simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortModuleInstCellMap{}, Q0}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(@VarK0:SortModIdxCell{},@VarK1:SortModuleInstCell{}),@VarRest:SortModuleInstCellMap{})),
        \and{Q0}(\equals{SortBool{}, Q0}(LblModuleInstCellMap'Coln'in'Unds'keys{}(@VarK0:SortModIdxCell{},@VarRest:SortModuleInstCellMap{}),\dv{SortBool{}}("false")),\and{Q0}(\top{Q0}(),\ceil{SortModuleInstCell{}, Q0}(@VarK1:SortModuleInstCell{})))),
      \top{R}()))
  [simplification{}(""), sortParams{}("{Q0}")]

// rule #Ceil{TabInstCellMap,#SortParam}(`_TabInstCellMap_`(`TabInstCellMapItem`(@K0,@K1),@Rest))=>#And{#SortParam}(#Equals{Bool,#SortParam}(`TabInstCellMap:in_keys`(@K0,@Rest),#token("false","Bool")),#And{#SortParam}(#Top{#SortParam}(.KList),#Ceil{TabInstCell,#SortParam}(@K1))) requires #token("true","Bool") ensures #token("true","Bool") [simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortTabInstCellMap{}, Q0}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(@VarK0:SortTAddrCell{},@VarK1:SortTabInstCell{}),@VarRest:SortTabInstCellMap{})),
        \and{Q0}(\equals{SortBool{}, Q0}(LblTabInstCellMap'Coln'in'Unds'keys{}(@VarK0:SortTAddrCell{},@VarRest:SortTabInstCellMap{}),\dv{SortBool{}}("false")),\and{Q0}(\top{Q0}(),\ceil{SortTabInstCell{}, Q0}(@VarK1:SortTabInstCell{})))),
      \top{R}()))
  [simplification{}(""), sortParams{}("{Q0}")]

// rule #Ceil{Map,#SortParam}(`_Map_`(`_|->_`(@K0,@K1),@Rest))=>#And{#SortParam}(#Equals{Bool,#SortParam}(`_in_keys(_)_MAP_Bool_KItem_Map`(@K0,@Rest),#token("false","Bool")),#And{#SortParam}(#Top{#SortParam}(.KList),#Ceil{KItem,#SortParam}(@K1))) requires #token("true","Bool") ensures #token("true","Bool") [simplification, sortParams({Q0})]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortMap{}, Q0}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(@VarK0:SortKItem{},@VarK1:SortKItem{}),@VarRest:SortMap{})),
        \and{Q0}(\equals{SortBool{}, Q0}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(@VarK0:SortKItem{},@VarRest:SortMap{}),\dv{SortBool{}}("false")),\and{Q0}(\top{Q0}(),\ceil{SortKItem{}, Q0}(@VarK1:SortKItem{})))),
      \top{R}()))
  [simplification{}(""), sortParams{}("{Q0}")]


// priority groups
endmodule [symbolic{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(8,1,343,9)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/kwasm-lemmas.md)")]
