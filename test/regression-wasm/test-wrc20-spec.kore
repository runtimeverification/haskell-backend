[org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/tests/proofs/wrc20-spec.k)")]
module WRC20-SPEC

// imports
import WRC20-LEMMAS []


// claims
// claim `<generatedTop>`(`<wasm>`(`<instrs>`(`sequenceDefns(_)_WASM_K_Defns`(`#t2aDefns<_>(_)_WASM-TEXT_Defns_Context_Defns`(`#freshCtx()_WASM-TEXT_Context`(.KList),`___WASM-COMMON-SYNTAX_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM-TEXT-COMMON-SYNTAX_FuncDefn_OptionalId_FuncSpec`(inj{IdentifierToken,OptionalId}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$i64.reverse_bytes\"","String"))),`____WASM-TEXT-COMMON-SYNTAX_FuncSpec_TypeUse_LocalDecls_Instrs`(`(type_)_WASM-COMMON-SYNTAX_TypeUse_Index`(inj{Int,Index}(#token("1","Int"))),`___WASM-TEXT-COMMON-SYNTAX_LocalDecls_LocalDecl_LocalDecls`(`local__WASM-TEXT-COMMON-SYNTAX_LocalDecl_ValTypes`(listValTypes(inj{IValType,ValType}(i64(.KList)),listValTypes(inj{IValType,ValType}(i64(.KList)),`.List{"listValTypes"}_ValTypes`(.KList)))),`.List{"___WASM-TEXT-COMMON-SYNTAX_LocalDecls_LocalDecl_LocalDecls"}_LocalDecls`(.KList)),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`block___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(`.Identifier`(.KList),`.List{"___WASM-COMMON-SYNTAX_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{BlockInstr,Instr}(`loop___end__WASM-TEXT-COMMON-SYNTAX_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(`.Identifier`(.KList),`.List{"___WASM-COMMON-SYNTAX_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIConst(i64(.KList),inj{Int,WasmInt}(#token("8","Int")))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIRelOp(i64(.KList),`intGe_u`(.KList))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br_if__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(#token("0","Int")))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIConst(i64(.KList),inj{Int,WasmInt}(#token("56","Int")))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIConst(i64(.KList),inj{Int,WasmInt}(#token("8","Int")))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIBinOp(i64(.KList),intMul(.KList))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIBinOp(i64(.KList),intSub(.KList))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIBinOp(i64(.KList),intShl(.KList))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIConst(i64(.KList),inj{Int,WasmInt}(#token("56","Int")))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIBinOp(i64(.KList),`intShr_u`(.KList))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIConst(i64(.KList),inj{Int,WasmInt}(#token("56","Int")))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIConst(i64(.KList),inj{Int,WasmInt}(#token("8","Int")))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIBinOp(i64(.KList),intMul(.KList))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIBinOp(i64(.KList),intSub(.KList))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIBinOp(i64(.KList),intShl(.KList))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(#token("2","Int")))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIBinOp(i64(.KList),intAdd(.KList))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.set__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(#token("2","Int")))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIConst(i64(.KList),inj{Int,WasmInt}(#token("1","Int")))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(aIBinOp(i64(.KList),intAdd(.KList))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.set__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(#token("0","Int")))),inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList))))))))))))))))))))))))))))),`.Identifier`(.KList))),inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList))),`.Identifier`(.KList))),`___WASM-COMMON-SYNTAX_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM-TEXT-COMMON-SYNTAX_PlainInstr_Index`(inj{Int,Index}(#token("2","Int")))),inj{EmptyStmts,Instrs}(`.List{"listStmt"}_EmptyStmts`(.KList))))))),inj{EmptyStmts,Defns}(`.List{"listStmt"}_EmptyStmts`(.KList)))))~>inj{PlainInstr,KItem}(aIConst(i32(.KList),inj{Int,WasmInt}(ADDR)))~>inj{PlainInstr,KItem}(aIConst(i32(.KList),inj{Int,WasmInt}(ADDR)))~>inj{Instr,KItem}(aLoad(inj{IValType,ValType}(i64(.KList)),loadOpLoad(.KList),#token("0","Int")))~>inj{Instr,KItem}(`(invoke_)_WASM_Instr_Int`(NEXTADDR))~>inj{Instr,KItem}(aStore(inj{IValType,ValType}(i64(.KList)),storeOpStore(.KList),#token("0","Int")))~>_DotVar2),_15,`<curFrame>`(_DotVar6,`<curModIdx>`(inj{Int,OptionalInt}(CUR))),_16,_17,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_6,`<types>`(`_|->_`(inj{Int,KItem}(#token("1","Int")),inj{FuncType,KItem}(aFuncType(aVecType(listValTypes(inj{IValType,ValType}(i64(.KList)),`.List{"listValTypes"}_ValTypes`(.KList))),aVecType(listValTypes(inj{IValType,ValType}(i64(.KList)),`.List{"listValTypes"}_ValTypes`(.KList))))))),_7,`<funcAddrs>`(_0),`<nextFuncIdx>`(NEXTFUNCIDX),_8,_9,_10,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(MEMADDR))),_11,_12,_13,_14)),_DotVar7)),_18,`<mainStore>`(`<funcs>`(`.FuncDefCellMap`(.KList)),`<nextFuncAddr>`(NEXTADDR),_1,_2,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(MEMADDR),`<memInst>`(`<mAddr>`(MEMADDR),_DotVar5,`<msize>`(SIZE),`<mdata>`(BM))),_DotVar4)),_3,_4,_5),_19),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),_15,`<curFrame>`(_DotVar6,`<curModIdx>`(inj{Int,OptionalInt}(CUR))),_16,_17,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_6,`<types>`(`_|->_`(inj{Int,KItem}(#token("1","Int")),inj{FuncType,KItem}(aFuncType(aVecType(listValTypes(inj{IValType,ValType}(i64(.KList)),`.List{"listValTypes"}_ValTypes`(.KList))),aVecType(listValTypes(inj{IValType,ValType}(i64(.KList)),`.List{"listValTypes"}_ValTypes`(.KList))))))),_7,`<funcAddrs>`(?_1),`<nextFuncIdx>`(`_+Int_`(NEXTFUNCIDX,#token("1","Int"))),_8,_9,_10,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(MEMADDR))),_11,_12,_13,_14)),_DotVar7)),_18,`<mainStore>`(`<funcs>`(?_2),`<nextFuncAddr>`(`_+Int_`(NEXTADDR,#token("1","Int"))),_1,_2,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(MEMADDR),`<memInst>`(`<mAddr>`(MEMADDR),_DotVar5,`<msize>`(SIZE),`<mdata>`(?BM'))),_DotVar4)),_3,_4,_5),_19),_DotVar0) requires `_andBool_`(`_<=Int_`(`_+Int_`(ADDR,`#numBytes(_)_WASM-DATA_Int_IValType`(i64(.KList))),`_*Int_`(SIZE,`#pageSize()_WASM_Int`(.KList))),`#inUnsignedRange(_,_)_KWASM-LEMMAS_Bool_IValType_Int`(i32(.KList),ADDR)) ensures `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_==Int_`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,`_+Int_`(ADDR,#token("0","Int")),#token("1","Int")),`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(?BM',`_+Int_`(ADDR,#token("7","Int")),#token("1","Int"))),`_==Int_`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,`_+Int_`(ADDR,#token("1","Int")),#token("1","Int")),`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(?BM',`_+Int_`(ADDR,#token("6","Int")),#token("1","Int")))),`_==Int_`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,`_+Int_`(ADDR,#token("2","Int")),#token("1","Int")),`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(?BM',`_+Int_`(ADDR,#token("5","Int")),#token("1","Int")))),`_==Int_`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,`_+Int_`(ADDR,#token("3","Int")),#token("1","Int")),`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(?BM',`_+Int_`(ADDR,#token("4","Int")),#token("1","Int")))),`_==Int_`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,`_+Int_`(ADDR,#token("4","Int")),#token("1","Int")),`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(?BM',`_+Int_`(ADDR,#token("3","Int")),#token("1","Int")))),`_==Int_`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,`_+Int_`(ADDR,#token("5","Int")),#token("1","Int")),`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(?BM',`_+Int_`(ADDR,#token("2","Int")),#token("1","Int")))),`_==Int_`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,`_+Int_`(ADDR,#token("6","Int")),#token("1","Int")),`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(?BM',`_+Int_`(ADDR,#token("1","Int")),#token("1","Int")))),`_==Int_`(`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(BM,`_+Int_`(ADDR,#token("7","Int")),#token("1","Int")),`#getRange(_,_,_)_WASM-DATA_Int_Bytes_Int_Int`(?BM',`_+Int_`(ADDR,#token("0","Int")),#token("1","Int")))) [org.kframework.attributes.Location(Location(10,11,46,84)), org.kframework.attributes.Source(Source(wasm-semantics/tests/proofs/wrc20-spec.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool "ensures" Bool [klabel(#ruleRequiresEnsures), symbol])]
  claim{} \implies{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(Lbli64{}())),Lbl'UndsStar'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),Lbl'Hash'inUnsignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(Lbli32{}(),VarADDR:SortInt{})),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(append{}(LblsequenceDefns'LParUndsRParUnds'WASM'Unds'K'Unds'Defns{}(Lbl'Hash't2aDefns'-LT-Unds-GT-LParUndsRParUnds'WASM-TEXT'Unds'Defns'Unds'Context'Unds'Defns{}(Lbl'Hash'freshCtx'LParRParUnds'WASM-TEXT'Unds'Context{}(),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortFuncDefn{}, SortDefn{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(inj{SortIdentifierToken{}, SortOptionalId{}}(LblString2Identifier'LParUndsRParUnds'WASM-TEXT'Unds'IdentifierToken'Unds'String{}(\dv{SortString{}}("$i64.reverse_bytes"))),Lbl'UndsUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(Lbl'LPar'type'UndsRParUnds'WASM-COMMON-SYNTAX'Unds'TypeUse'Unds'Index{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("1"))),Lbl'UndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Lbllocal'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecl'Unds'ValTypes{}(LbllistValTypes{}(inj{SortIValType{}, SortValType{}}(Lbli64{}()),LbllistValTypes{}(inj{SortIValType{}, SortValType{}}(Lbli64{}()),Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}()))),Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}()),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Lbl'Stop'Identifier{}(),Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}(),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortBlockInstr{}, SortInstr{}}(Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Lbl'Stop'Identifier{}(),Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-COMMON-SYNTAX'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}(),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("1")))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIConst{}(Lbli64{}(),inj{SortInt{}, SortWasmInt{}}(\dv{SortInt{}}("8")))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIRelOp{}(Lbli64{}(),LblintGe'Unds'u{}())),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lblbr'Unds'if'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("1")))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("0")))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIConst{}(Lbli64{}(),inj{SortInt{}, SortWasmInt{}}(\dv{SortInt{}}("56")))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("1")))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIConst{}(Lbli64{}(),inj{SortInt{}, SortWasmInt{}}(\dv{SortInt{}}("8")))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIBinOp{}(Lbli64{}(),LblintMul{}())),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIBinOp{}(Lbli64{}(),LblintSub{}())),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIBinOp{}(Lbli64{}(),LblintShl{}())),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIConst{}(Lbli64{}(),inj{SortInt{}, SortWasmInt{}}(\dv{SortInt{}}("56")))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIBinOp{}(Lbli64{}(),LblintShr'Unds'u{}())),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIConst{}(Lbli64{}(),inj{SortInt{}, SortWasmInt{}}(\dv{SortInt{}}("56")))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIConst{}(Lbli64{}(),inj{SortInt{}, SortWasmInt{}}(\dv{SortInt{}}("8")))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("1")))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIBinOp{}(Lbli64{}(),LblintMul{}())),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIBinOp{}(Lbli64{}(),LblintSub{}())),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIBinOp{}(Lbli64{}(),LblintShl{}())),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("2")))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIBinOp{}(Lbli64{}(),LblintAdd{}())),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("2")))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("1")))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIConst{}(Lbli64{}(),inj{SortInt{}, SortWasmInt{}}(\dv{SortInt{}}("1")))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(LblaIBinOp{}(Lbli64{}(),LblintAdd{}())),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'set'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("1")))),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lblbr'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("0")))),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())))))))))))))))))))))))))))),Lbl'Stop'Identifier{}())),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())),Lbl'Stop'Identifier{}())),Lbl'UndsUndsUnds'WASM-COMMON-SYNTAX'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortPlainInstr{}, SortInstr{}}(Lbllocal'Stop'get'UndsUnds'WASM-TEXT-COMMON-SYNTAX'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("2")))),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())))))),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuot'listStmt'QuotRBraUnds'EmptyStmts{}())))),kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaIConst{}(Lbli32{}(),inj{SortInt{}, SortWasmInt{}}(VarADDR:SortInt{}))),kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaIConst{}(Lbli32{}(),inj{SortInt{}, SortWasmInt{}}(VarADDR:SortInt{}))),kseq{}(inj{SortInstr{}, SortKItem{}}(LblaLoad{}(inj{SortIValType{}, SortValType{}}(Lbli64{}()),LblloadOpLoad{}(),\dv{SortInt{}}("0"))),kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(VarNEXTADDR:SortInt{})),kseq{}(inj{SortInstr{}, SortKItem{}}(LblaStore{}(inj{SortIValType{}, SortValType{}}(Lbli64{}()),LblstoreOpStore{}(),\dv{SortInt{}}("0"))),Var'Unds'DotVar2:SortK{}))))))),Var'Unds'15:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'6:SortExportsCell{},Lbl'-LT-'types'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("1")),inj{SortFuncType{}, SortKItem{}}(LblaFuncType{}(LblaVecType{}(LbllistValTypes{}(inj{SortIValType{}, SortValType{}}(Lbli64{}()),Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}())),LblaVecType{}(LbllistValTypes{}(inj{SortIValType{}, SortValType{}}(Lbli64{}()),Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}())))))),Var'Unds'7:SortNextTypeIdxCell{},Lbl'-LT-'funcAddrs'-GT-'{}(Var'Unds'0:SortMap{}),Lbl'-LT-'nextFuncIdx'-GT-'{}(VarNEXTFUNCIDX:SortInt{}),Var'Unds'8:SortTabIdsCell{},Var'Unds'9:SortTabAddrsCell{},Var'Unds'10:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarMEMADDR:SortInt{}))),Var'Unds'11:SortGlobIdsCell{},Var'Unds'12:SortGlobalAddrsCell{},Var'Unds'13:SortNextGlobIdxCell{},Var'Unds'14:SortModuleMetadataCell{})),Var'Unds'DotVar7:SortModuleInstCellMap{})),Var'Unds'18:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Stop'FuncDefCellMap{}()),Lbl'-LT-'nextFuncAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Var'Unds'1:SortTabsCell{},Var'Unds'2:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarMEMADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarMEMADDR:SortInt{}),Var'Unds'DotVar5:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Lbl'-LT-'mdata'-GT-'{}(VarBM:SortBytes{}))),Var'Unds'DotVar4:SortMemInstCellMap{})),Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'19:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})), weakAlwaysFinally{SortGeneratedTopCell{}} (
       \exists{SortGeneratedTopCell{}} (Var'QuesUnds'1:SortMap{},  \exists{SortGeneratedTopCell{}} (Var'Ques'BM'Apos':SortBytes{},  \exists{SortGeneratedTopCell{}} (Var'QuesUnds'2:SortFuncDefCellMap{}, 
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("0")),\dv{SortInt{}}("1")),Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Var'Ques'BM'Apos':SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("7")),\dv{SortInt{}}("1"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("1")),\dv{SortInt{}}("1")),Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Var'Ques'BM'Apos':SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("6")),\dv{SortInt{}}("1")))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("2")),\dv{SortInt{}}("1")),Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Var'Ques'BM'Apos':SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("5")),\dv{SortInt{}}("1")))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("3")),\dv{SortInt{}}("1")),Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Var'Ques'BM'Apos':SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("4")),\dv{SortInt{}}("1")))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("4")),\dv{SortInt{}}("1")),Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Var'Ques'BM'Apos':SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("3")),\dv{SortInt{}}("1")))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("5")),\dv{SortInt{}}("1")),Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Var'Ques'BM'Apos':SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("2")),\dv{SortInt{}}("1")))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("6")),\dv{SortInt{}}("1")),Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Var'Ques'BM'Apos':SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("1")),\dv{SortInt{}}("1")))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(VarBM:SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("7")),\dv{SortInt{}}("1")),Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bytes'Unds'Int'Unds'Int{}(Var'Ques'BM'Apos':SortBytes{},Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},\dv{SortInt{}}("0")),\dv{SortInt{}}("1")))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'15:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'DotVar6:SortLocalsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{}))),Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'6:SortExportsCell{},Lbl'-LT-'types'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("1")),inj{SortFuncType{}, SortKItem{}}(LblaFuncType{}(LblaVecType{}(LbllistValTypes{}(inj{SortIValType{}, SortValType{}}(Lbli64{}()),Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}())),LblaVecType{}(LbllistValTypes{}(inj{SortIValType{}, SortValType{}}(Lbli64{}()),Lbl'Stop'List'LBraQuot'listValTypes'QuotRBraUnds'ValTypes{}())))))),Var'Unds'7:SortNextTypeIdxCell{},Lbl'-LT-'funcAddrs'-GT-'{}(Var'QuesUnds'1:SortMap{}),Lbl'-LT-'nextFuncIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTFUNCIDX:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'8:SortTabIdsCell{},Var'Unds'9:SortTabAddrsCell{},Var'Unds'10:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarMEMADDR:SortInt{}))),Var'Unds'11:SortGlobIdsCell{},Var'Unds'12:SortGlobalAddrsCell{},Var'Unds'13:SortNextGlobIdxCell{},Var'Unds'14:SortModuleMetadataCell{})),Var'Unds'DotVar7:SortModuleInstCellMap{})),Var'Unds'18:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Var'QuesUnds'2:SortFuncDefCellMap{}),Lbl'-LT-'nextFuncAddr'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTADDR:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'1:SortTabsCell{},Var'Unds'2:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarMEMADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarMEMADDR:SortInt{}),Var'Unds'DotVar5:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Lbl'-LT-'mdata'-GT-'{}(Var'Ques'BM'Apos':SortBytes{}))),Var'Unds'DotVar4:SortMemInstCellMap{})),Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'19:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})))))))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(10,11,46,84)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/tests/proofs/wrc20-spec.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}()]

endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(5,1,48,9)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/tests/proofs/wrc20-spec.k)")]
