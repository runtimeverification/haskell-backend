[org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/tests/proofs/simple-arithmetic-spec.k)")]
module SIMPLE-ARITHMETIC-SPEC

// imports
import KWASM-LEMMAS []


// claims
// claim `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aIConst(ITYPE,inj{Int,WasmInt}(X)))~>_DotVar2),`<valstack>`(S),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_+Int_`(X,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE)))),S)),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires `_andBool_`(`_<=Int_`(`#minSigned(_)_KWASM-LEMMAS_Int_IValType`(ITYPE),X),`_<Int_`(X,#token("0","Int"))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(10,11,12,63)), org.kframework.attributes.Source(Source(wasm-semantics/tests/proofs/simple-arithmetic-spec.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  claim{} \implies{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'Hash'minSigned'LParUndsRParUnds'KWASM-LEMMAS'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),VarX:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarX:SortInt{},\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaIConst{}(VarITYPE:SortIValType{},inj{SortInt{}, SortWasmInt{}}(VarX:SortInt{}))),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarS:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})), weakAlwaysFinally{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))),VarS:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}))))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(10,11,12,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/tests/proofs/simple-arithmetic-spec.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}()]

// claim `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aIConst(ITYPE,inj{Int,WasmInt}(X)))~>_DotVar2),`<valstack>`(S),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,X)),S)),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires `#inUnsignedRange(_,_)_KWASM-LEMMAS_Bool_IValType_Int`(ITYPE,X) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(6,11,8,43)), org.kframework.attributes.Source(Source(wasm-semantics/tests/proofs/simple-arithmetic-spec.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  claim{} \implies{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Hash'inUnsignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarX:SortInt{}),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaIConst{}(VarITYPE:SortIValType{},inj{SortInt{}, SortWasmInt{}}(VarX:SortInt{}))),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarS:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})), weakAlwaysFinally{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarX:SortInt{})),VarS:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}))))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(6,11,8,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/tests/proofs/simple-arithmetic-spec.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}()]

// claim `<generatedTop>`(`<wasm>`(`<instrs>`(inj{PlainInstr,KItem}(aIConst(ITYPE,inj{Int,WasmInt}(X)))~>inj{PlainInstr,KItem}(aIConst(ITYPE,inj{Int,WasmInt}(Y)))~>inj{PlainInstr,KItem}(aIBinOp(ITYPE,intAdd(.KList)))~>_DotVar2),`<valstack>`(S),_0,_1,_2,_3,_4,_5,_6),_DotVar0)=>`<generatedTop>`(`<wasm>`(`<instrs>`(_DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_+Int_`(X,Y))),S)),_0,_1,_2,_3,_4,_5,_6),_DotVar0) requires `_andBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),X),`_<=Int_`(#token("0","Int"),Y)),`_<Int_`(`_+Int_`(X,Y),`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [org.kframework.attributes.Location(Location(14,11,17,44)), org.kframework.attributes.Source(Source(wasm-semantics/tests/proofs/simple-arithmetic-spec.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  claim{} \implies{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarX:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarY:SortInt{})),Lbl'Unds-LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},VarY:SortInt{}),Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaIConst{}(VarITYPE:SortIValType{},inj{SortInt{}, SortWasmInt{}}(VarX:SortInt{}))),kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaIConst{}(VarITYPE:SortIValType{},inj{SortInt{}, SortWasmInt{}}(VarY:SortInt{}))),kseq{}(inj{SortPlainInstr{}, SortKItem{}}(LblaIBinOp{}(VarITYPE:SortIValType{},LblintAdd{}())),Var'Unds'DotVar2:SortK{})))),Lbl'-LT-'valstack'-GT-'{}(VarS:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{})), weakAlwaysFinally{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'instrs'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},VarY:SortInt{}))),VarS:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}))))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,11,17,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/tests/proofs/simple-arithmetic-spec.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}()]

endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(3,1,18,9)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(wasm-semantics/tests/proofs/simple-arithmetic-spec.k)")]
