kore-exec: [191335] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ RuleVarX:SortInt{}
        )
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [194889] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ RuleVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* D Sfa */ \top{_}()
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ RuleVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [200565] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ RuleVarX:SortInt{}
        )
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [202710] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ RuleVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Spa */
            \equals{SortGeneratedCounterCell{}, _}(
                /* T Fn D Sfa */
                RuleVar'Unds'DotVar0:SortGeneratedCounterCell{},
                /* T Fn D Sfa */
                Lbl'-LT-'generatedCounter'-GT-'{}(
                    /* Created: Kore.Rewrite.Rule.Expand.maybeNewVariable */
                    /* T Fn D Sfa */
                    RuleVar'Unds'DotVar1:SortInt{}
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ RuleVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [209093] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ RuleVarX:SortInt{}
        )
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [211356] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ RuleVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Spc */
            \and{_}(
                /* Sfc */
                \ceil{SortS{}, _}(
                    /* Fn Sfc */
                    Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                        /* T Fn D Sfa */ RuleVarX:SortInt{}
                    )
                ),
                /* Spa */
                \equals{SortGeneratedCounterCell{}, _}(
                    /* T Fn D Sfa */
                    RuleVar'Unds'DotVar0:SortGeneratedCounterCell{},
                    /* T Fn D Sfa */
                    Lbl'-LT-'generatedCounter'-GT-'{}(
                        /* Created: Kore.Rewrite.Rule.Expand.maybeNewVariable */
                        /* T Fn D Sfa */
                        RuleVar'Unds'DotVar1:SortInt{}
                    )
                )
            )
        TermLike replacements:
        Predicate replacements:
            Key:
              /* Spa */
              \equals{SortGeneratedCounterCell{}, _}(
                  /* T Fn D Sfa */
                  RuleVar'Unds'DotVar0:SortGeneratedCounterCell{},
                  /* T Fn D Sfa */
                  Lbl'-LT-'generatedCounter'-GT-'{}(
                      /* Created: Kore.Rewrite.Rule.Expand.maybeNewVariable */
                      /* T Fn D Sfa */
                      RuleVar'Unds'DotVar1:SortInt{}
                  )
              )
            Value:
              /* D Sfa */ \top{_}()
            Key:
              /* Sfc */
              \ceil{SortS{}, _}(
                  /* Fn Sfc */
                  Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                      /* T Fn D Sfa */ RuleVarX:SortInt{}
                  )
              )
            Value:
              /* D Sfa */ \top{_}()
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ RuleVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [220296] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ RuleVarX:SortInt{}
        )
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [222376] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ RuleVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* D Sfa */ \top{_}()
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ RuleVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [227900] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while simplifying the claim
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [230257] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* D Sfa */ \top{_}()
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
        /* Fn Spa */
        /* Inj: */ inj{SortS{}, SortKItem{}}(
            /* Fn Spa */
            Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{}
            )
        )
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while simplifying the claim
kore-exec: [235962] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while simplifying the claim
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [238376] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Sfc */
            \ceil{SortS{}, _}(
                /* Fn Sfc */
                Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                    /* T Fn D Sfa */ ConfigVarX:SortInt{}
                )
            )
        TermLike replacements:
        Predicate replacements:
            Key:
              /* Sfc */
              \ceil{SortS{}, _}(
                  /* Fn Sfc */
                  Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                      /* T Fn D Sfa */ ConfigVarX:SortInt{}
                  )
              )
            Value:
              /* D Sfa */ \top{_}()
        Assumed to be defined:
        /* Fn Spa */
        /* Inj: */ inj{SortS{}, SortKItem{}}(
            /* Fn Spa */
            Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{}
            )
        )
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while simplifying the claim
kore-exec: [246232] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [248495] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* D Sfa */ \top{_}()
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [253953] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [256380] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Sfc */
            \not{_}(
                /* Sfc */
                \equals{SortS{}, _}(
                    /* T Fn D Sfa Cl */ Lbla'Unds'SIMPLIFICATION'Unds'S{}(),
                    /* Fn Sfc */
                    Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{}
                    )
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [262765] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [265085] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Sfc */
            \ceil{SortS{}, _}(
                /* Fn Sfc */
                Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                    /* T Fn D Sfa */ ConfigVarX:SortInt{}
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [270526] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [273200] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Spu */
            \and{_}(
                /* Sfc */
                \ceil{SortS{}, _}(
                    /* Fn Sfc */
                    Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{}
                    )
                ),
                /* Spc */
                \not{_}(
                    /* Sfc */
                    \equals{SortS{}, _}(
                        /* T Fn D Sfa Cl */ Lbla'Unds'SIMPLIFICATION'Unds'S{}(),
                        /* Fn Sfc */
                        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                            /* T Fn D Sfa */ ConfigVarX:SortInt{}
                        )
                    )
                )
            )
        TermLike replacements:
        Predicate replacements:
            Key:
              /* Sfc */
              \ceil{SortS{}, _}(
                  /* Fn Sfc */
                  Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                      /* T Fn D Sfa */ ConfigVarX:SortInt{}
                  )
              )
            Value:
              /* D Sfa */ \top{_}()
            Key:
              /* Sfc */
              \equals{SortS{}, _}(
                  /* T Fn D Sfa Cl */ Lbla'Unds'SIMPLIFICATION'Unds'S{}(),
                  /* Fn Sfc */
                  Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                      /* T Fn D Sfa */ ConfigVarX:SortInt{}
                  )
              )
            Value:
              /* Fn Sfa */ \bottom{_}()
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [282243] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [284432] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* D Sfa */ \top{_}()
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [289425] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [292185] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Spc */
            \not{_}(
                /* Sfc */
                \equals{SortS{}, _}(
                    /* T Fn D Sfa Cl */ Lbla'Unds'SIMPLIFICATION'Unds'S{}(),
                    /* Fn Sfc */
                    Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{}
                    )
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [298026] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [300704] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Sfc */
            \ceil{SortS{}, _}(
                /* Fn Sfc */
                Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                    /* T Fn D Sfa */ ConfigVarX:SortInt{}
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [306360] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [308580] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* D Sfa */ \top{_}()
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [313513] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [315819] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Spc */
            \not{_}(
                /* Sfc */
                \equals{SortS{}, _}(
                    /* T Fn D Sfa Cl */ Lbla'Unds'SIMPLIFICATION'Unds'S{}(),
                    /* Fn Sfc */
                    Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{}
                    )
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [321643] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [324315] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Sfc */
            \ceil{SortS{}, _}(
                /* Fn Sfc */
                Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                    /* T Fn D Sfa */ ConfigVarX:SortInt{}
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [329887] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [332087] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* D Sfa */ \top{_}()
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [336984] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [339520] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Spc */
            \not{_}(
                /* Sfc */
                \equals{SortS{}, _}(
                    /* T Fn D Sfa Cl */ Lbla'Unds'SIMPLIFICATION'Unds'S{}(),
                    /* Fn Sfc */
                    Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{}
                    )
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [345421] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [348022] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Sfc */
            \ceil{SortS{}, _}(
                /* Fn Sfc */
                Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                    /* T Fn D Sfa */ ConfigVarX:SortInt{}
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [354131] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [356395] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* D Sfa */ \top{_}()
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [361560] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [363839] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Spc */
            \not{_}(
                /* Sfc */
                \equals{SortS{}, _}(
                    /* T Fn D Sfa Cl */ Lbla'Unds'SIMPLIFICATION'Unds'S{}(),
                    /* Fn Sfc */
                    Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{}
                    )
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [369624] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [371862] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Sfc */
            \ceil{SortS{}, _}(
                /* Fn Sfc */
                Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                    /* T Fn D Sfa */ ConfigVarX:SortInt{}
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [377842] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [380201] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Spu */
            \and{_}(
                /* Sfc */
                \ceil{SortS{}, _}(
                    /* Fn Sfc */
                    Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{}
                    )
                ),
                /* Spc */
                \not{_}(
                    /* Sfc */
                    \equals{SortS{}, _}(
                        /* T Fn D Sfa Cl */ Lbla'Unds'SIMPLIFICATION'Unds'S{}(),
                        /* Fn Sfc */
                        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                            /* T Fn D Sfa */ ConfigVarX:SortInt{}
                        )
                    )
                )
            )
        TermLike replacements:
        Predicate replacements:
            Key:
              /* Sfc */
              \ceil{SortS{}, _}(
                  /* Fn Sfc */
                  Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                      /* T Fn D Sfa */ ConfigVarX:SortInt{}
                  )
              )
            Value:
              /* D Sfa */ \top{_}()
            Key:
              /* Sfc */
              \equals{SortS{}, _}(
                  /* T Fn D Sfa Cl */ Lbla'Unds'SIMPLIFICATION'Unds'S{}(),
                  /* Fn Sfc */
                  Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                      /* T Fn D Sfa */ ConfigVarX:SortInt{}
                  )
              )
            Value:
              /* Fn Sfa */ \bottom{_}()
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [389001] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [391254] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* D Sfa */ \top{_}()
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [396146] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [398575] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Spc */
            \not{_}(
                /* Sfc */
                \equals{SortS{}, _}(
                    /* T Fn D Sfa Cl */ Lbla'Unds'SIMPLIFICATION'Unds'S{}(),
                    /* Fn Sfc */
                    Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{}
                    )
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [404334] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [406691] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Sfc */
            \ceil{SortS{}, _}(
                /* Fn Sfc */
                Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                    /* T Fn D Sfa */ ConfigVarX:SortInt{}
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [412531] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [414786] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* D Sfa */ \top{_}()
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [419692] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [421969] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Spc */
            \not{_}(
                /* Sfc */
                \equals{SortS{}, _}(
                    /* T Fn D Sfa Cl */ Lbla'Unds'SIMPLIFICATION'Unds'S{}(),
                    /* Fn Sfc */
                    Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{}
                    )
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [427797] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [429999] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Sfc */
            \ceil{SortS{}, _}(
                /* Fn Sfc */
                Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                    /* T Fn D Sfa */ ConfigVarX:SortInt{}
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [435446] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [437558] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* D Sfa */ \top{_}()
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [442404] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [444636] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Spc */
            \not{_}(
                /* Sfc */
                \equals{SortS{}, _}(
                    /* T Fn D Sfa Cl */ Lbla'Unds'SIMPLIFICATION'Unds'S{}(),
                    /* Fn Sfc */
                    Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{}
                    )
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [450325] Debug (DebugAttemptEquation):
    applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55 to term:
        /* Fn Spa */
        Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
            /* T Fn D Sfa */ ConfigVarX:SortInt{}
        )
Context:
    (InfoReachability) while checking the implication
        (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
kore-exec: [452579] Debug (DebugAttemptEquation):
    equation is not applicable:
    Could not infer the equation requirement:
        /* Spa */
        \equals{SortBool{}, _}(
            /* T Fn D Spa */
            Lbl'Unds-GT-'Int'Unds'{}(
                /* T Fn D Sfa */ ConfigVarX:SortInt{},
                /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
            ),
            /* T Fn D Sfa Cl */ \dv{SortBool{}}("true")
        )
    and the matching requirement:
        /* D Sfa */ \top{_}()
    from the side condition:
        Assumed true condition:
            /* Sfc */
            \ceil{SortS{}, _}(
                /* Fn Sfc */
                Lblf'LParUndsRParUnds'SIMPLIFICATION'Unds'S'Unds'Int{}(
                    /* T Fn D Sfa */ ConfigVarX:SortInt{}
                )
            )
        TermLike replacements:
        Predicate replacements:
        Assumed to be defined:
    The negated implication is:
        \and(
            /* term: */
            /* D Sfa */ \top{_}(),
        \and(
            /* predicate: */
            /* Sfa */
            \not{_}(
                /* Sfa */
                \equals{SortBool{}, _}(
                    /* T Fn D Sfa Cl */ \dv{SortBool{}}("true"),
                    /* T Fn D Sfa */
                    Lbl'Unds-GT-'Int'Unds'{}(
                        /* T Fn D Sfa */ ConfigVarX:SortInt{},
                        /* T Fn D Sfa Cl */ \dv{SortInt{}}("0")
                    )
                )
            ),
            /* substitution: */
            \top()
        ))
Context:
    (DebugAttemptEquation) while applying equation (label:  SIMPLIFICATION.f.positive ) at /home/alexey/Projects/RV/haskell-backend/test/simplification/simplification.k:9:24-9:55
        (InfoReachability) while checking the implication
kore-exec: [458566] Warning (WarnStuckClaimState):
    The configuration's term unifies with the destination's term, but the implication check between the conditions has failed. Location: /home/alexey/Projects/RV/haskell-backend/test/simplification/a-spec.k:7:11-7:33
Context:
    (InfoReachability) while checking the implication
[Warning] Compiler: Variable 'X' defined but not used. Prefix variable name
with underscore if this is intentional.
	Source(/home/alexey/Projects/RV/haskell-backend/test/simplification/a-spec.k)
	Location(7,17,7,18)
	7 |	    claim <k> f(X:Int) => a </k>
	  .	                ^
[Error] Prover: backend terminated because the configuration cannot be
rewritten further. See output for more details.
