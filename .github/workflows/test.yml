name: "Test"
on:
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  nix-build:
    name: 'Nix / Unit Tests'
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: ubuntu-20.04
            os: ubuntu-20.04
          - runner: macos-12
            os: macos-12
          - runner: MacM1
            os: self-macos-12
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2.3.4
        with:
          # Check out pull request HEAD instead of merge commit.
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: recursive

      - name: 'Upgrade bash'
        if: ${{ contains(matrix.os, 'macos') }}
        run: brew install bash

      # Do the Following only on Public Runners; Mac Runner is pre-installed with build tools
      - name: 'Install Nix'
        if: ${{ !startsWith(matrix.os, 'self') }}
        uses: cachix/install-nix-action@v15
        with:
          # Keep nix at <=2.7 https://github.com/NixOS/nix/issues/6572
          # but >= 2.4 due to ZSTD compression done by cachix >=1.1 https://blog.cachix.org/posts/2022-12-19-zstd-compression/
          install_url: https://releases.nixos.org/nix/nix-2.7.0/install
          extra_nix_config: |
            substituters = http://cache.nixos.org https://cache.iog.io
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=

      - name: 'Install Cachix'
        if: ${{ !startsWith(matrix.os, 'self') }}
        uses: cachix/cachix-action@v10
        with:
          name: k-framework
          authToken: '${{ secrets.CACHIX_PUBLIC_TOKEN }}'

      - name: Build
        run: nix-build -A kore

      - name: Check shell
        run: nix develop --print-build-logs --command stack --version

      - name: Run unit tests
        run: nix-build -A project.kore.checks

  nix-integration:
    name: 'Nix / Integration'
    runs-on: ubuntu-20.04
    needs: nix-build
    steps:
      - name: Check out code
        uses: actions/checkout@v2.3.4
        with:
          # Check out pull request HEAD instead of merge commit.
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: recursive

      - name: Install Nix
        uses: cachix/install-nix-action@v14.1
        with:
          extra_nix_config: |
            substituters = http://cache.nixos.org https://hydra.iohk.io
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
          # Keep nix at <=2.7 https://github.com/NixOS/nix/issues/6572
          # but >= 2.4 due to ZSTD compression done by cachix >=1.1 https://blog.cachix.org/posts/2022-12-19-zstd-compression/
          install_url: https://releases.nixos.org/nix/nix-2.7.0/install

      - name: Install Cachix
        uses: cachix/cachix-action@v10
        with:
          name: k-framework
          skipPush: true

      - name: Run integration tests
        run: nix-build test.nix

  cabal:
    name: 'Cabal / Unit Tests'
    runs-on: ubuntu-20.04
    env:
      ghc_version: "9.2.5"
    steps:
      - name: Install prerequisites
        run: |
          sudo apt install --yes z3

      - uses: actions/checkout@v2.3.4
        with:
          # Check out pull request HEAD instead of merge commit.
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: recursive

      - name: Cache Cabal package database and store
        uses: actions/cache@v2
        with:
          path: |
            ~/.cabal/packages
            ~/.cabal/store
          key: cabal-1-${{ runner.os }}-ghc-${{ env.ghc_version }}-${{ hashFiles('cabal.project') }}
          restore-keys: |
            cabal-1-${{ runner.os }}-ghc-${{ env.ghc_version }}-
            cabal-1-${{ runner.os }}-ghc-
            cabal-1-

      - uses: haskell/actions/setup@v1
        id: setup-haskell-cabal
        with:
          ghc-version: ${{ env.ghc_version }}
          cabal-version: "3.6"

      - name: Run unit tests
        run: cabal v2-test --enable-tests --test-show-details=direct all

      - name: Configure with profiling
        run: cabal v2-configure --enable-profiling -f-threaded

  stack:
    name: 'Stack / Unit Tests'
    runs-on: ubuntu-20.04
    steps:
      - name: Install prerequisites
        run: |
          sudo apt install --yes z3

      - uses: actions/checkout@v2.3.4
        with:
          # Check out pull request HEAD instead of merge commit.
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: recursive

      - name: Cache Stack root
        uses: actions/cache@v2
        with:
          path: ~/.stack
          key: stack-1-${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}
          restore-keys: |
            stack-1-${{ runner.os }}-
            stack-1-

      - uses: haskell/actions/setup@v1
        id: setup-haskell-stack
        with:
          enable-stack: true
          stack-no-global: true
          stack-setup-ghc: true

      - name: Build dependencies
        run: |
          stack build --test --only-dependencies
          if [ -n "$(git status --porcelain)" ]; then
            git diff
            exit 1
          fi

      - name: Run unit tests
        run: stack test --pedantic

  stack-haddock:
    name: 'Stack / Haddock check'
    runs-on: ubuntu-20.04
    steps:
      - name: Install prerequisites
        run: |
          sudo apt install --yes z3

      - uses: actions/checkout@v2.3.4
        with:
          # Check out pull request HEAD instead of merge commit.
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: recursive

      - name: Cache Stack root
        uses: actions/cache@v2
        with:
          path: ~/.stack
          key: stack-haddock-${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}
          restore-keys: |
            stack-haddock-${{ runner.os }}-
            stack-haddock-

      - uses: haskell/actions/setup@v1
        id: setup-haskell-stack
        with:
          enable-stack: true
          stack-no-global: true
          stack-setup-ghc: true

      - name: Build documentation
        run: |
          stack haddock --fast
  hlint:
    name: 'HLint'
    runs-on: ubuntu-20.04
    env:
      hlint_version: "3.4.1"
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          # Check out pull request HEAD instead of merge commit.
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: recursive

      - name: Download hlint
        run: curl -sSL https://github.com/ndmitchell/hlint/releases/download/v${{ env.hlint_version }}/hlint-${{ env.hlint_version }}-x86_64-linux.tar.gz | tar xvz

      - name: Run hlint
        run: hlint-${{ env.hlint_version }}/hlint kore -j

  performance:
    needs: [nix-build]
    name: 'Performance'
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2.3.4
        with:
          # Check out pull request HEAD instead of merge commit.
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: recursive

      - name: Install Nix
        uses: cachix/install-nix-action@v14.1
        with:
          extra_nix_config: |
            substituters = http://cache.nixos.org https://hydra.iohk.io
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
          # Keep nix at <=2.7 https://github.com/NixOS/nix/issues/6572
          # but >= 2.4 due to ZSTD compression done by cachix >=1.1 https://blog.cachix.org/posts/2022-12-19-zstd-compression/
          install_url: https://releases.nixos.org/nix/nix-2.7.0/install

      - name: Install Cachix
        uses: cachix/cachix-action@v10
        with:
          name: k-framework
          authToken: '${{ secrets.CACHIX_PUBLIC_TOKEN }}'
          skipPush: true

      - name: Collect performance statistics
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./scripts/test-statistics.sh ./. \
            test/regression-evm \
            test/regression-wasm \
            > pull-request.json
          git fetch origin
          git worktree add kore-master master
          ./scripts/test-statistics.sh ./kore-master \
            test/regression-evm \
            test/regression-wasm \
            > master.json
          ./scripts/join-statistics.sh master.json pull-request.json \
            | ./scripts/format-statistics.sh \
            > comment.md
          if [[ $(sed -E -e '1,2d ; /.*\| (0|-?0.0[0-4][0-9]*) \| (0|-?0.0[0-4][0-9]*) \|$/d' comment.md | wc -l) -ne 0 ]]; then\
            gh pr comment ${{ github.event.pull_request.number }} -F comment.md; \
          else \
            echo "Produced statistics are boring, just printing them right here:"; \
            cat comment.md; \
          fi
