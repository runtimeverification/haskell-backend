name: 'Update'
on:
  push:
    branches-ignore:
      - 'master'
  pull_request:
jobs:
  nix:
    name: 'Nix'
    runs-on: ubuntu-20.04
    steps:
      - id: config
        run: |
          ref=${{ github.ref }}
          if [ "${{ github.event_name }}" == 'pull_request' ]; then
            ref="${{ github.event.pull_request.head.sha }}"
          fi
          ref="${ref#refs/heads/}"
          echo "::set-output name=ref::$ref"

          git config --global user.name github-actions
          git config --global user.email github-actions@github.com

      - name: Check out code
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ steps.config.outputs.ref }}
          submodules: recursive
          token: ${{ secrets.JENKINS_GITHUB_PAT }}

      - name: 'Install Nix'
        uses: cachix/install-nix-action@v15
        with:
          extra_nix_config: |
            substituters = http://cache.nixos.org https://cache.iog.io
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
          # Keep nix at <=2.7 https://github.com/NixOS/nix/issues/6572
          # but >= 2.4 due to ZSTD compression done by cachix >=1.1 https://blog.cachix.org/posts/2022-12-19-zstd-compression/
          install_url: https://releases.nixos.org/nix/nix-2.7.0/install

      - name: 'Install Cachix'
        uses: cachix/cachix-action@v10
        with:
          name: k-framework
          authToken: '${{ secrets.CACHIX_PUBLIC_TOKEN }}'


      - name: Materialize
        run: nix run .#update-cabal

      - name: Update branch
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: |
          if [[ $GITHUB_EVENT_NAME == 'push' ]]; then
            if git status -s -b | grep -q '^##.*(no branch)$'; then
              echo 2>&1 "Error: Git is in detached HEAD state"
              exit 1
            fi
          fi

          if [ -n "$(git status --porcelain 'nix/')" ]; then
            if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
              echo 2>&1 "Error: found modified files"
              git diff
              exit 1
            elif [[ $GITHUB_EVENT_NAME == 'push' ]]; then
              git add 'nix/'
              git commit -m 'Materialize Nix expressions'
              git push
            else
              echo 2>&1 "Error: event not supported: $GITHUB_EVENT_NAME"
              exit 1
            fi
          fi

  fourmolu:
    name: 'Style'
    runs-on: ubuntu-20.04
    steps:
      - id: config
        run: |
          ref=${{ github.ref }}
          if [ "${{ github.event_name }}" == 'pull_request' ]; then
            ref="${{ github.event.pull_request.head.sha }}"
          fi
          ref="${ref#refs/heads/}"
          echo "::set-output name=ref::$ref"

          git config --global user.name github-actions
          git config --global user.email github-actions@github.com

      - name: Check out code
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ steps.config.outputs.ref }}
          submodules: recursive
          token: ${{ secrets.JENKINS_GITHUB_PAT }}

      - name: 'Install Nix'
        uses: cachix/install-nix-action@v15
        with:
          extra_nix_config: |
            substituters = http://cache.nixos.org https://cache.iog.io
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=

      - name: 'Install Cachix'
        uses: cachix/cachix-action@v10
        with:
          name: k-framework
          authToken: '${{ secrets.CACHIX_PUBLIC_TOKEN }}'

      - name: Format
        run: |
          nix run .#remove-import-groups
          nix run .#format

      - name: Update branch
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: |
          if [[ $GITHUB_EVENT_NAME == 'push' ]]; then
            if git status -s -b | grep -q '^##.*(no branch)$'; then
              echo 2>&1 "Error: Git is in detached HEAD state"
              exit 1
            fi
          fi

          if [ -n "$(git status --porcelain '*.hs')" ]; then
            if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
              echo 2>&1 "Error: found modified files"
              git diff
              exit 1
            elif [[ $GITHUB_EVENT_NAME == 'push' ]]; then
              git add '*.hs'
              git commit -m 'Format with fourmolu'
              git push
            else
              echo 2>&1 "Error: event not supported: $GITHUB_EVENT_NAME"
              exit 1
            fi
          fi
